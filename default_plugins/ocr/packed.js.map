{"version":3,"sources":["node_modules/@paddlejs/paddlejs-core/lib/index.js","node_modules/@paddlejs/paddlejs-backend-webgl/lib/index.js","node_modules/js-clipper/clipper.js","node_modules/number-precision/build/index.es.js","node_modules/process/browser.js","node_modules/path-browserify/index.js","node_modules/base64-js/index.js","node_modules/ieee754/index.js","node_modules/isarray/index.js","node_modules/node-libs-browser/node_modules/buffer/index.js","node_modules/safe-buffer/index.js","node_modules/randombytes/browser.js","node_modules/inherits/inherits_browser.js","node_modules/events/events.js","node_modules/process-nextick-args/index.js","node_modules/readable-stream/lib/internal/streams/stream-browser.js","node_modules/core-util-is/lib/util.js","node_modules/readable-stream/lib/internal/streams/BufferList.js","node_modules/readable-stream/lib/internal/streams/destroy.js","node_modules/util-deprecate/browser.js","node_modules/readable-stream/lib/_stream_writable.js","node_modules/readable-stream/lib/_stream_duplex.js","node_modules/string_decoder/lib/string_decoder.js","node_modules/readable-stream/lib/_stream_readable.js","node_modules/readable-stream/lib/_stream_transform.js","node_modules/readable-stream/lib/_stream_passthrough.js","node_modules/readable-stream/readable-browser.js","node_modules/readable-stream/writable-browser.js","node_modules/readable-stream/duplex-browser.js","node_modules/readable-stream/transform.js","node_modules/readable-stream/passthrough.js","node_modules/stream-browserify/index.js","node_modules/hash-base/index.js","node_modules/md5.js/index.js","node_modules/ripemd160/index.js","node_modules/sha.js/hash.js","node_modules/sha.js/sha.js","node_modules/sha.js/sha1.js","node_modules/sha.js/sha256.js","node_modules/sha.js/sha224.js","node_modules/sha.js/sha512.js","node_modules/sha.js/sha384.js","node_modules/sha.js/index.js","node_modules/cipher-base/index.js","node_modules/create-hash/browser.js","node_modules/create-hmac/legacy.js","node_modules/create-hash/md5.js","node_modules/create-hmac/browser.js","node_modules/browserify-sign/browser/algorithms.json","node_modules/browserify-sign/algos.js","node_modules/pbkdf2/lib/precondition.js","node_modules/pbkdf2/lib/default-encoding.js","node_modules/pbkdf2/lib/to-buffer.js","node_modules/pbkdf2/lib/sync-browser.js","node_modules/pbkdf2/lib/async.js","node_modules/pbkdf2/browser.js","node_modules/des.js/lib/des/utils.js","node_modules/minimalistic-assert/index.js","node_modules/des.js/lib/des/cipher.js","node_modules/des.js/lib/des/des.js","node_modules/des.js/lib/des/cbc.js","node_modules/des.js/lib/des/ede.js","node_modules/des.js/lib/des.js","node_modules/browserify-des/index.js","node_modules/browserify-aes/modes/ecb.js","node_modules/buffer-xor/index.js","node_modules/browserify-aes/modes/cbc.js","node_modules/browserify-aes/modes/cfb.js","node_modules/browserify-aes/modes/cfb8.js","node_modules/browserify-aes/modes/cfb1.js","node_modules/browserify-aes/modes/ofb.js","node_modules/browserify-aes/incr32.js","node_modules/browserify-aes/modes/ctr.js","node_modules/browserify-aes/modes/list.json","node_modules/browserify-aes/modes/index.js","node_modules/browserify-aes/aes.js","node_modules/browserify-aes/ghash.js","node_modules/browserify-aes/authCipher.js","node_modules/browserify-aes/streamCipher.js","node_modules/evp_bytestokey/index.js","node_modules/browserify-aes/encrypter.js","node_modules/browserify-aes/decrypter.js","node_modules/browserify-aes/browser.js","node_modules/browserify-des/modes.js","node_modules/browserify-cipher/browser.js","node_modules/diffie-hellman/node_modules/bn.js/lib/bn.js","node_modules/miller-rabin/node_modules/bn.js/lib/bn.js","node_modules/brorand/index.js","node_modules/miller-rabin/lib/mr.js","node_modules/diffie-hellman/lib/generatePrime.js","node_modules/diffie-hellman/lib/primes.json","node_modules/diffie-hellman/lib/dh.js","node_modules/diffie-hellman/browser.js","node_modules/browserify-sign/node_modules/safe-buffer/index.js","node_modules/bn.js/lib/bn.js","node_modules/browserify-rsa/index.js","node_modules/elliptic/package.json","node_modules/elliptic/node_modules/bn.js/lib/bn.js","node_modules/minimalistic-crypto-utils/lib/utils.js","node_modules/elliptic/lib/elliptic/utils.js","node_modules/elliptic/lib/elliptic/curve/base.js","node_modules/elliptic/lib/elliptic/curve/short.js","node_modules/elliptic/lib/elliptic/curve/mont.js","node_modules/elliptic/lib/elliptic/curve/edwards.js","node_modules/elliptic/lib/elliptic/curve/index.js","node_modules/hash.js/lib/hash/utils.js","node_modules/hash.js/lib/hash/common.js","node_modules/hash.js/lib/hash/sha/common.js","node_modules/hash.js/lib/hash/sha/1.js","node_modules/hash.js/lib/hash/sha/256.js","node_modules/hash.js/lib/hash/sha/224.js","node_modules/hash.js/lib/hash/sha/512.js","node_modules/hash.js/lib/hash/sha/384.js","node_modules/hash.js/lib/hash/sha.js","node_modules/hash.js/lib/hash/ripemd.js","node_modules/hash.js/lib/hash/hmac.js","node_modules/hash.js/lib/hash.js","node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js","node_modules/elliptic/lib/elliptic/curves.js","node_modules/hmac-drbg/lib/hmac-drbg.js","node_modules/elliptic/lib/elliptic/ec/key.js","node_modules/elliptic/lib/elliptic/ec/signature.js","node_modules/elliptic/lib/elliptic/ec/index.js","node_modules/elliptic/lib/elliptic/eddsa/key.js","node_modules/elliptic/lib/elliptic/eddsa/signature.js","node_modules/elliptic/lib/elliptic/eddsa/index.js","node_modules/elliptic/lib/elliptic.js","node_modules/asn1.js/node_modules/bn.js/lib/bn.js","node_modules/vm-browserify/index.js","node_modules/asn1.js/lib/asn1/api.js","node_modules/asn1.js/lib/asn1/base/reporter.js","node_modules/asn1.js/lib/asn1/base/buffer.js","node_modules/asn1.js/lib/asn1/base/node.js","node_modules/asn1.js/lib/asn1/base/index.js","node_modules/asn1.js/lib/asn1/constants/der.js","node_modules/asn1.js/lib/asn1/constants/index.js","node_modules/asn1.js/lib/asn1/decoders/der.js","node_modules/asn1.js/lib/asn1/decoders/pem.js","node_modules/asn1.js/lib/asn1/decoders/index.js","node_modules/asn1.js/lib/asn1/encoders/der.js","node_modules/asn1.js/lib/asn1/encoders/pem.js","node_modules/asn1.js/lib/asn1/encoders/index.js","node_modules/asn1.js/lib/asn1.js","node_modules/parse-asn1/certificate.js","node_modules/parse-asn1/asn1.js","node_modules/parse-asn1/aesid.json","node_modules/parse-asn1/node_modules/safe-buffer/index.js","node_modules/parse-asn1/fixProc.js","node_modules/parse-asn1/index.js","node_modules/browserify-sign/browser/curves.json","node_modules/browserify-sign/browser/sign.js","node_modules/browserify-sign/browser/verify.js","node_modules/browserify-sign/browser/index.js","node_modules/create-ecdh/node_modules/bn.js/lib/bn.js","node_modules/create-ecdh/browser.js","node_modules/public-encrypt/mgf.js","node_modules/public-encrypt/xor.js","node_modules/public-encrypt/node_modules/bn.js/lib/bn.js","node_modules/public-encrypt/withPublic.js","node_modules/public-encrypt/publicEncrypt.js","node_modules/public-encrypt/privateDecrypt.js","node_modules/public-encrypt/browser.js","node_modules/randomfill/browser.js","node_modules/crypto-browserify/index.js","node_modules/d3-polygon/src/area.js","node_modules/d3-polygon/src/centroid.js","node_modules/d3-polygon/src/cross.js","node_modules/d3-polygon/src/hull.js","node_modules/d3-polygon/src/contains.js","node_modules/d3-polygon/src/length.js","node_modules/d3-polygon/src/index.js","node_modules/@paddle-js-models/ocr/lib/index.esm.js","paddleocr.js"],"names":["strip","num","precision","parseFloat","Number","toPrecision","digitLength","eSplit","toString","split","len","length","float2Fixed","indexOf","replace","dLen","Math","pow","checkBoundary","_boundaryCheckingState","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","console","warn","createOperation","operation","nums","_i","arguments","first","slice","reduce","prev","next","times","exports","num1","num2","num1Changed","num2Changed","baseNum","leftValue","plus","max","minus","divide","round","decimal","base","result","abs","enableBoundaryChecking","flag","index","_default","default","cachedSetTimeout","cachedClearTimeout","process","module","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","e","call","runClearTimeout","marker","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","concat","drainQueue","timeout","run","Item","array","noop","nextTick","args","Array","i","push","prototype","apply","title","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","ReflectOwnKeys","R","Reflect","ReflectApply","target","receiver","Function","ProcessEmitWarning","warning","ownKeys","Object","getOwnPropertySymbols","getOwnPropertyNames","NumberIsNaN","isNaN","value","EventEmitter","init","_events","undefined","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","listener","TypeError","_getMaxListeners","that","_addListener","type","prepend","m","events","existing","create","newListener","unshift","warned","w","String","emitter","count","onceWrapper","fired","wrapFn","_onceWrap","state","wrapped","bind","_listeners","unwrap","evlistener","unwrapListeners","arrayClone","listenerCount","arr","n","copy","spliceOne","list","pop","ret","Promise","resolve","reject","errorListener","err","resolver","eventTargetAgnosticAddListener","addErrorHandlerIfEventEmitter","handler","flags","addEventListener","wrapListener","arg","removeEventListener","defineProperty","enumerable","get","set","RangeError","getPrototypeOf","setMaxListeners","getMaxListeners","doError","error","er","message","context","position","originalListener","shift","key","keys","rawListeners","eventNames","pna","require","WriteReq","chunk","encoding","cb","callback","CorkedRequest","_this","entry","finish","onCorkedFinish","Writable","Duplex","asyncWrite","WritableState","util","inherits","internalUtil","deprecate","Stream","Buffer","OurUint8Array","global","window","self","Uint8Array","_uint8ArrayToBuffer","from","_isUint8Array","obj","isBuffer","realHasInstance","destroyImpl","nop","options","stream","isDuplex","objectMode","writableObjectMode","hwm","highWaterMark","writableHwm","writableHighWaterMark","defaultHwm","floor","finalCalled","needDrain","ending","ended","finished","destroyed","noDecode","decodeStrings","defaultEncoding","writing","corked","sync","bufferProcessing","onwrite","writecb","writelen","bufferedRequest","lastBufferedRequest","pendingcb","prefinished","errorEmitted","bufferedRequestCount","corkedRequestsFree","_writableState","writable","write","_write","writev","_writev","destroy","_destroy","final","_final","writeAfterEnd","validChunk","valid","decodeChunk","writeOrBuffer","isBuf","newChunk","last","doWrite","onwriteError","finishMaybe","onwriteStateUpdate","needFinish","clearBuffer","afterWrite","onwriteDrain","l","buffer","holder","allBuffers","callFinal","prefinish","need","endWritable","corkReq","getBuffer","current","out","_","Symbol","hasInstance","object","pipe","cork","uncork","setDefaultEncoding","toLowerCase","end","_undestroy","undestroy","Transform","throwIfNotStringOrBuffer","val","prefix","HashBase","blockSize","_block","allocUnsafe","_blockSize","_blockOffset","_length","_finalized","_transform","update","_flush","digest","data","block","offset","_update","j","carry","_digest","fill","sha224WithRSAEncryption","sign","hash","id","sha256WithRSAEncryption","sha384WithRSAEncryption","sha512WithRSAEncryption","sha256","sha224","sha384","sha512","DSA","ripemd160WithRSA","md5WithRSAEncryption","MAX_ALLOC","iterations","keylen","browser","pVersionMajor","parseInt","thing","ArrayBuffer","isView","md5","RIPEMD160","sha","checkParameters","toBuffer","ZEROS","alloc","sizes","sha1","rmd160","ripemd160","Hmac","alg","saltLen","getDigest","blocksize","ipad","opad","ipad1","ipad2","size","pbkdf2","password","salt","hmac","DK","block1","destPos","hLen","ceil","writeUInt32BE","T","U","k","ZERO_BUF","subtle","crypto","toBrowser","checks","checkNative","algo","importKey","deriveBits","prom","browserPbkdf2","then","catch","getNextTick","queueMicrotask","setImmediate","res","resolvePromise","promise","resp","pbkdf2Sync","asn","Time","define","choice","utcTime","utctime","generalTime","gentime","AttributeTypeValue","seq","objid","any","AlgorithmIdentifier","optional","SubjectPublicKeyInfo","use","bitstr","RelativeDistinguishedName","setof","RDNSequence","seqof","Name","rdnSequence","Validity","Extension","bool","def","octstr","TBSCertificate","explicit","implicit","X509Certificate","asn1","certificate","RSAPrivateKey","RSAPublicKey","null_","PublicKey","PrivateKeyInfo","PrivateKey","EncryptedPrivateKeyInfo","EncryptedPrivateKey","DSAPrivateKey","DSAparam","ECParameters","namedCurve","ECPrivateKey","signature","findProc","startRegex","fullRegex","evp","ciphers","okey","decrypted","match","suite","iv","cipherText","cipherKey","cipher","createDecipheriv","match2","tag","aesid","fixProc","compat","decrypt","algorithm","kde","kdeparams","iters","join","subjectPrivateKey","parseKeys","passphrase","subtype","ndata","stripped","decode","tbsCertificate","subjectPublicKeyInfo","subjectPublicKey","params","pub_key","curve","privateKey","priv_key","parameters","createHmac","crt","EC","ec","BN","curves","RSA_PKCS1_PADDING","hashType","signType","priv","ecSign","dsaSign","padding","modulus","byteLength","pad","curveId","keyFromPrivate","toDER","x","p","q","g","r","H","bits2int","mod","s","kv","getKey","makeR","makeKey","invm","imul","add","mul","cmpn","toArray","zeros","hlen","hbits","bits2octets","v","obits","bits","bitLength","ishrn","t","cmp","toRed","mont","redPow","fromRed","verify","sig","pub","ecVerify","dsaVerify","padNum","red","publicExponent","min","pubkey","y","unpacked","checkValue","montp","b","createHash","algorithms","Sign","_hashType","_hash","_tag","_signType","Verify","createSign","createVerify","forEach","done","enc","sigBuffer","oldBrowser","safeBuffer","randombytes","kBufferMaxLength","kMaxLength","msCrypto","kMaxUint32","assertOffset","assertSize","randomFill","buf","actualFill","ourBuf","uint","getRandomValues","randomFillSync","polygon","a","area","c","_cross","_interopRequireDefault","__esModule","lexicographicOrder","computeUpperHullIndexes","points","indexes","cross","sortedPoints","flippedPoints","sort","upperIndexes","lowerIndexes","skipLeft","skipRight","hull","point","x1","y1","x0","y0","inside","xa","ya","xb","yb","perimeter","hypot","_area","_centroid","_hull","_contains","_paddlejsCore","_jsClipper","_numberPrecision","_path","_fs","_crypto","d3Polygon","_interopRequireWildcard","_getRequireWildcardCache","WeakMap","has","__proto__","getOwnPropertyDescriptor","u","hasOwnProperty","_regeneratorRuntime","Op","hasOwn","$Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","configurable","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","Context","_invoke","method","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","fn","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","values","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","invoke","__await","unwrapped","return","info","resultName","nextLoc","pushTryEntry","locs","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","awrap","async","iter","reverse","skipTempReset","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","_classCallCheck","instance","Constructor","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","_defineProperty","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","isArray","_arrayLikeToArray","o","minLen","test","arr2","commonjsGlobal","globalThis","createCommonjsModule","opencv_ocr","root","factory","_scriptDir","cv","document","currentScript","src","__filename","readyPromiseResolve","readyPromiseReject","Module","moduleOverrides","ENVIRONMENT_IS_SHELL","thisProgram","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","ENVIRONMENT_IS_NODE","importScripts","node","read_","readAsync","readBinary","nodeFS","nodePath","scriptDirectory","path","dirname","__dirname","filename","binary","tryParseAsDataURI","fs","assert","ex","ExitStatus","abort","read","f","intArrayToString","readbuffer","scriptArgs","print","log","printErr","location","href","substr","lastIndexOf","url","xhr","XMLHttpRequest","open","send","responseText","responseType","response","onload","onerror","status","wasmBinary","wasmMemory","STACK_ALIGN","WebAssembly","wasmTable","Table","ABORT","condition","text","UTF8Decoder","TextDecoder","UTF8ArrayToString","heap","idx","maxBytesToRead","endIdx","endPtr","subarray","str","u0","u1","u2","fromCharCode","ch","UTF8ToString","ptr","HEAPU8","stringToUTF8Array","outIdx","maxBytesToWrite","startIdx","charCodeAt","stringToUTF8","outPtr","lengthBytesUTF8","HEAP8","HEAP16","HEAPU16","HEAP32","HEAPU32","HEAPF32","HEAPF64","UTF16Decoder","UTF16ToString","maxIdx","codeUnit","stringToUTF16","startPtr","numCharsToWrite","lengthBytesUTF16","UTF32ToString","utf32","stringToUTF32","lengthBytesUTF32","updateGlobalBufferAndViews","Int8Array","Int16Array","Int32Array","Uint16Array","Uint32Array","Float32Array","Float64Array","DYNAMICTOP_PTR","INITIAL_INITIAL_MEMORY","callRuntimeCallbacks","callbacks","func","Memory","__ATPRERUN__","__ATINIT__","__ATMAIN__","__ATPOSTRUN__","runtimeInitialized","Math_abs","Math_ceil","Math_floor","Math_min","runDependencies","dependenciesFulfilled","addRunDependency","removeRunDependency","what","RuntimeError","hasPrefix","startsWith","dataURIPrefix","isDataURI","fileURIPrefix","isFileURI","tempDouble","tempI64","_emscripten_get_now","wasmBinaryFile","getBinary","_emscripten_set_main_loop_timing","mode","Browser","mainLoop","timingMode","timingValue","scheduler","timeUntilNextTick","tickStartTime","runner","requestAnimationFrame","setImmediates","event","stopPropagation","postMessage","___wasm_call_ctors","dateNow","performance","now","currentlyRunningMainloop","currentFrameNumber","pause","resume","fps","simulateInfiniteLoop","noSetTiming","browserIterationFunc","thisMainLoopId","start","Date","blocker","remainingBlockers","remaining","counted","updateStatus","runIter","SDL","audio","queueNewAudioData","_emscripten_set_main_loop","expected","expectedBlockers","stack","isFullscreen","pointerLock","moduleContextCreatedCallbacks","workers","initted","Blob","hasBlobConstructor","BlobBuilder","MozBlobBuilder","WebKitBlobBuilder","URLObject","URL","webkitURL","noImageDecoding","imagePlugin","byteArray","getMimetype","warnOnce","shown","bb","append","getBlob","createObjectURL","img","Image","canvas","createElement","width","height","getContext","drawImage","revokeObjectURL","audioPlugin","noAudioDecoding","fail","Audio","BASE","leftchar","leftbits","curr","PAD","encode64","safeSetTimeout","requestPointerLock","exitPointerLock","pointerLockChange","ev","preventDefault","createContext","useWebGL","setInModule","webGLContextAttributes","ctx","contextHandle","contextAttributes","antialias","alpha","majorVersion","attribute","GL","GLctx","makeContextCurrent","destroyContext","fullscreenHandlersInstalled","lockPointer","resizeCanvas","requestFullscreen","fullscreenChange","canvasContainer","parentNode","exitFullscreen","setFullscreenCanvasSize","updateCanvasDimensions","insertBefore","removeChild","setWindowedCanvasSize","appendChild","Element","nextRAF","fakeRequestAnimationFrame","delay","RAF","safeCallback","allowAsyncCallbacks","queuedAsyncCallbacks","pauseAsyncCallbacks","resumeAsyncCallbacks","safeRequestAnimationFrame","safeSetInterval","setInterval","getUserMedia","navigator","getMovementX","getMovementY","getMouseWheelDelta","delta","detail","wheelDelta","deltaY","deltaMode","mouseX","mouseY","mouseMovementX","mouseMovementY","touches","lastTouches","calculateMouseEvent","rect","getBoundingClientRect","cw","scrollX","pageXOffset","scrollY","pageYOffset","touch","adjustedX","pageX","left","adjustedY","pageY","top","coords","identifier","asyncLoad","noRunDep","dep","arrayBuffer","resizeListeners","updateResizeListeners","setCanvasSize","noUpdates","windowedWidth","windowedHeight","screen","wNative","hNative","widthNative","heightNative","h","factor","style","removeProperty","setProperty","wgetRequests","nextWgetRequestHandle","getNextWgetRequestHandle","demangleAll","demangle","recursionGuard","__cxa_demangle_func","stackTop","stackSave","stackAlloc","_free","stackRestore","stackTrace","js","jsStackTrace","__ZSt18uncaught_exceptionv","uncaught_exceptions","setErrNo","___errno_location","PATH","splitPath","exec","normalizeArray","parts","allowAboveRoot","up","splice","normalize","isAbsolute","trailingSlash","filter","basename","lastSlash","extname","paths","join2","PATH_FS","resolvedPath","resolvedAbsolute","FS","relative","to","trim","fromParts","toParts","samePartsLength","outputParts","TTY","ttys","shutdown","register","dev","ops","input","output","registerDevice","stream_ops","tty","rdev","ErrnoError","seekable","close","flush","pos","get_char","bytesRead","timestamp","put_char","default_tty_ops","readSync","stdin","fd","prompt","readline","intArrayFromString","default_tty1_ops","MEMFS","ops_table","mount","createNode","parent","isBlkdev","isFIFO","getattr","node_ops","setattr","lookup","mknod","rename","unlink","rmdir","readdir","symlink","llseek","file","allocate","mmap","msync","link","readlink","chrdev","chrdev_stream_ops","isDir","contents","isFile","usedBytes","isLink","isChrdev","getFileDataAsRegularArray","getFileDataAsTypedArray","expandFileStorage","newCapacity","prevCapacity","oldContents","resizeFileStorage","newSize","attr","ino","nlink","uid","gid","atime","mtime","ctime","blksize","blocks","genericErrors","old_node","new_dir","new_name","new_node","lookupNode","entries","newname","oldpath","canOwn","whence","address","prot","allocated","mmapAlloc","byteOffset","mmapFlags","mounts","devices","streams","nextInode","nameTable","currentPath","initialized","ignorePermissions","trackingDelegate","tracking","openFlags","READ","WRITE","filesystems","syncFSRequests","handleFSError","errno","lookupPath","opts","defaults","follow_mount","recurse_count","current_path","islast","isMountpoint","mounted","follow","getPath","isRoot","mountpoint","hashName","parentid","hashAddNode","name_next","hashRemoveNode","errCode","mayLookup","nodeName","FSNode","destroyNode","isSocket","flagModes","modeStringToFlags","flagsToPermissionString","perms","nodePermissions","mayCreate","mayDelete","isdir","mayOpen","MAX_OPEN_FDS","nextfd","fd_start","fd_end","getStream","createStream","FSStream","isRead","isWrite","isAppend","newStream","closeStream","device","getDevice","major","minor","makedev","ma","mi","getMounts","check","syncfs","populate","completed","doCallback","errored","pseudo","mountRoot","unmount","mkdir","mkdirTree","dirs","d","mkdev","newpath","old_path","new_path","old_dir","old_dirname","new_dirname","old_name","stat","dontFollow","lstat","chmod","lchmod","fchmod","chown","lchown","fchown","truncate","ftruncate","utime","created","ungotten","readFiles","trackingFlags","isClosed","getdents","seeking","bytesWritten","munmap","ioctl","cmd","readFile","writeFile","actualNumBytes","createDefaultDirectories","createDefaultDevices","random_device","randomBuffer","crypto_module","crypto$1","createDevice","createSpecialDirectories","createStandardStreams","ensureErrnoError","setErrno","code","staticInit","quit","fflush","getMode","canRead","canWrite","joinPath","forceRelative","absolutePath","standardizePath","findObject","dontResolveLastLink","analyzePath","exists","parentExists","parentPath","parentObject","createFolder","createPath","part","createFile","properties","createDataFile","createLink","forceLoadFile","isDevice","isFolder","success","createLazyFile","LazyUint8Array","lengthKnown","chunks","chunkOffset","chunkSize","chunkNum","getter","setDataGetter","cacheLength","header","datalength","getResponseHeader","hasByteServing","usesGzip","lazyArray","setRequestHeader","overrideMimeType","doXHR","_chunkSize","defineProperties","createPreloadedFile","dontCreateFile","preFinish","fullname","processData","handled","plugin","indexedDB","mozIndexedDB","webkitIndexedDB","msIndexedDB","DB_NAME","pathname","DB_VERSION","DB_STORE_NAME","saveFilesToDB","openRequest","onupgradeneeded","createObjectStore","onsuccess","transaction","files","objectStore","ok","total","putRequest","put","loadFilesFromDB","db","getRequest","alignedSize","alignMemory","_malloc","SYSCALLS","mappings","DEFAULT_POLLMASK","calculateAt","dirfd","dirstream","doStat","getTime","doMsync","addr","doMkdir","doMknod","doReadlink","bufsize","endChar","doAccess","amode","doDup","suggestFD","suggest","doReadv","iov","iovcnt","doWritev","varargs","getStr","getStreamFromFD","get64","low","high","tupleRegistrations","runDestructors","destructors","del","simpleReadValueFromPointer","pointer","awaitingDependencies","registeredTypes","typeDependencies","char_0","char_9","makeLegalFunctionName","createNamedFunction","body","extendError","baseErrorType","errorName","errorClass","InternalError","throwInternalError","whenDependentTypesAreResolved","myTypes","dependentTypes","getTypeConverters","onComplete","typeConverters","myTypeConverters","registerType","unregisteredTypes","registered","dt","structRegistrations","getShiftFromSize","embind_charCodes","readLatin1String","BindingError","throwBindingError","rawType","registeredInstance","ignoreDuplicateRegistrations","ClassHandle_isAliasOf","other","ClassHandle","leftClass","$$","ptrType","registeredClass","rightClass","right","baseClass","upcast","throwInstanceAlreadyDeleted","finalizationGroup","detachFinalizer","releaseClassHandle","smartPtr","smartPtrType","rawDestructor","runDestructor","attachFinalizer","FinalizationGroup","unregister","ClassHandle_clone","preservePointerOnDelete","clone","deleteScheduled","ClassHandle_delete","ClassHandle_isDeleted","delayFunction","deletionQueue","flushPendingDeletes","ClassHandle_deleteLater","registeredPointers","ensureOverloadTable","proto","methodName","humanName","overloadTable","prevFunc","argCount","exposePublicSymbol","numArguments","RegisteredClass","instancePrototype","getActualType","downcast","pureVirtualFunctions","upcastPointer","ptrClass","desiredClass","constNoSmartPtrRawPointerToWireType","isReference","_embind_repr","handleClass","genericPointerToWireType","isSmartPointer","rawConstructor","isConst","sharingPolicy","clonedHandle","rawShare","__emval_register","nonConstNoSmartPtrRawPointerToWireType","RegisteredPointer_getPointee","rawGetPointee","RegisteredPointer_destructor","RegisteredPointer_deleteObject","getInheritedInstanceCount","registeredInstances","getLiveInheritedInstances","rv","setDelayFunction","getInheritedInstance","class_","getBasestPointer","makeClassHandle","RegisteredPointer_fromWireType","rawPointer","getPointee","destructor","makeDefaultHandle","pointeeType","toType","actualType","registeredPointerRecord","constPointerType","pointerType","dp","downcastPointer","RegisteredPointer","destructorFunction","replacePublicSymbol","embind__requireFunction","rawFunction","fp","dynCall","makeDynCaller","UnboundTypeError","getTypeName","___getTypeName","throwUnboundTypeError","types","unboundTypes","seen","visit","map","new_","argumentList","dummy","craftInvokerFunction","argTypes","classType","cppInvokerFunc","cppTargetFunc","isClassMethodFunc","needsDestructorStack","returns","argsList","argsListWired","invokerFnBody","dtorStack","args1","args2","paramName","heap32VectorToArray","firstElement","validateThis","this_","emval_free_list","emval_handle_array","__emval_decref","refcount","count_emval_handles","get_first_emval","floatReadValueFromPointer","integerReadValueFromPointer","signed","emval_symbols","getStringOrSymbol","symbol","emval_methodCallers","requireHandle","requireRegisteredType","impl","_emscripten_get_now_is_monotonic","emscripten_realloc_buffer","grow","ENV","getEnvStrings","strings","languages","__isLeapYear","year","__arraySum","sum","__MONTH_DAYS_LEAP","__MONTH_DAYS_REGULAR","__addDays","date","days","newDate","leap","getFullYear","currentMonth","getMonth","daysInCurrentMonth","getDate","setDate","setMonth","setFullYear","_strftime","maxsize","format","tm","tm_zone","tm_sec","tm_min","tm_hour","tm_mday","tm_mon","tm_year","tm_wday","tm_yday","tm_isdst","tm_gmtoff","pattern","EXPANSION_RULES_1","rule","RegExp","WEEKDAYS","MONTHS","leadingSomething","digits","character","leadingNulls","compareByDay","date1","date2","sgn","compare","getFirstWeekStartDate","janFourth","getDay","getWeekBasedYear","thisDate","janFourthThisYear","janFourthNextYear","firstWeekStartThisYear","firstWeekStartNextYear","EXPANSION_RULES_2","substring","twelveHour","janFirst","firstSunday","endDate","februaryFirstUntilEndMonth","daysDifference","firstMonday","ahead","bytes","stringy","dontAddNull","u8array","numBytesWritten","chr","codes","embind_init_charCodes","decodeBase64","atob","chr1","chr2","chr3","enc2","enc3","enc4","keyStr","decoded","intArrayFromBase64","asmLibraryArg","a0","a1","malloc","syscallMunmap","rawTupleType","reg","elements","elementsLength","elementTypes","elt","getterReturnType","setterArgumentType","getterContext","setter","setterContext","structType","fieldRecords","fields","field","fieldTypes","fieldName","trueValue","falseValue","wt","rawPointerType","rawConstPointerType","baseClassRawType","getActualTypeSignature","upcastSignature","downcastSignature","destructorSignature","legalFunctionName","basePrototype","constructor_body","referenceConverter","pointerConverter","constPointerConverter","rawClassType","rawArgTypesAddr","invokerSignature","rawInvoker","rawArgTypes","unboundTypesHandler","invokerArgsArray","invoker","isPureVirtual","className","memberFunction","getterSignature","setterSignature","desc","primitiveType","minRange","maxRange","fromWireType","bitshift","isUnsignedType","dataTypeIndex","TA","decodeMemoryView","stdStringIsUTF8","decodeStartPtr","currentBytePtr","stringSegment","valueIsOfTypeString","Uint8ClampedArray","charCode","charSize","decodeString","encodeString","getHeap","lengthBytesUTF","HEAP","constructorSignature","isVoid","caller","__emval_lookupTypes","retType","signatureName","functionBody","invokerFunction","clk_id","tp","dest","copyWithin","requestedSize","oldSize","multiple","cutDown","overGrownHeapSize","__environ","environ_buf","bufSize","string","writeAsciiToMemory","penviron_count","penviron_buf_size","pnum","offset_low","offset_high","newOffset","$i","receiveInstance","receiveInstantiatedSource","instantiateArrayBuffer","fetch","credentials","instantiate","reason","instantiateStreaming","instantiateAsync","createWasm","calledRun","doRun","postRun","preRun","dynamicAlloc","runCaller","Point","RotatedRect","center","angle","Scalar","v0","v1","v2","v3","imageSource","getElementById","HTMLImageElement","HTMLCanvasElement","imgData","getImageData","matFromImageData","canvasSource","mat","Mat","depth","scale","CV_8S","CV_32S","CV_16S","convertTo","CV_8U","CV_8UC1","cvtColor","COLOR_GRAY2RGBA","CV_8UC3","COLOR_RGB2RGBA","CV_8UC4","ImageData","cols","rows","clearRect","putImageData","delete","videoSource","video","HTMLVideoElement","frame","rotatedRectPoints","boundingRect","rotatedRectBoundingRect","boundingRect2f","rotatedRectBoundingRect2f","all","minVal","maxVal","minLoc","maxLoc","radius","maxCount","epsilon","CV_8UC2","CV_8SC1","CV_8SC2","CV_8SC3","CV_8SC4","data8S","CV_16U","CV_16UC1","CV_16UC2","CV_16UC3","CV_16UC4","data16U","CV_16SC1","CV_16SC2","CV_16SC3","CV_16SC4","data16S","CV_32SC1","CV_32SC2","CV_32SC3","CV_32SC4","data32S","CV_32F","CV_32FC1","CV_32FC2","CV_32FC3","CV_32FC4","data32F","CV_64F","CV_64FC1","CV_64FC2","CV_64FC3","CV_64FC4","data64F","imageData","flatten","item","_int","clip","DBPostprocess","shape","thresh","box_thresh","unclip_ratio","max_candidates","min_size","pred","segmentation","_this2","matFromArray","contours","MatVector","hierarchy","findContours","RETR_LIST","CHAIN_APPROX_SIMPLE","num_contours","boxes","scores","contour","minBox","get_mini_boxes","side","score","box_score_fast","box","unclip","boxMap","resultObj","index_1","index_2","index_3","index_4","bounding_box","minAreaRect","boxPoints","bitmap","_box","JSON","parse","stringify","xmin","xmax","ymin","ymax","mask","point_data","flat","pts","push_back","color","fillPoly","sliceArr","mean","_ref","distance","polygonArea","polygonLength","tmpArr","X","Y","clipper","ClipperOffset","AddPath","JoinType","jtRound","EndType","etClosedPolygon","expanded","Execute","expandedArr","recPostprocess","preds","ocr_character","preds_idx","preds_prob","tmpMax","tmpIdx","text_index","text_prob","is_remove_duplicate","ignored_tokens","get_ignored_tokens","char_list","conf_list","defaultPostConfig","DEFAULTDETSHAPE","RECWIDTH","RECHEIGHT","canvas_det","canvas_rec","detectRunner","recRunner","initCanvas","bottom","zIndex","opacity","_init","_callee","detCustomModel","recCustomModel","detectInit","recInit","_args","_context","Runner","modelPath","std","bgr","webglFeedProcess","feedShape","fw","fh","detect","_x","_detect","_callee2","image","Config","DETSHAPE","targetWidth","targetHeight","sw","sh","shapeList","outsDict","postResult","_args2","_context2","fillStyle","fillRect","naturalHeight","naturalWidth","predict","outputBox","drawBox","beginPath","strokeStyle","lineWidth","moveTo","lineTo","closePath","stroke","restore","recognize","_x2","_x3","_recognize","_callee3","detConfig","text_list","tmp_box","ratio","width_num","text_list_tmp","recResult","_output","_recResult","_text","_args3","_context3","sorted_boxes","get_rotate_crop_image","resize_norm_img_splice","outputResult","num_boxes","tmp","img_crop_width","linalg_norm","img_crop_height","pts_std","srcTri","dstTri","M","getPerspectiveTransform","imread","dst","dsize","Size","warpPerspective","INTER_CUBIC","BORDER_REPLICATE","dst_rot","dst_img_height","matSize","dsize_rot","_M","getRotationMatrix2D","warpAffine","dst_resize","dsize_resize","resize","INTER_AREA","imshow","sqrt","origin_width","origin_height","ocr"],"mappings":";A+Hs3GA,A0BAA,AxDAA,AXAA,A4Dp3GA,AWo3GA,I9BAA,A0BAA,AxDAA,AXAA,A4Dp3GA,AWo3GA,E9BAA,A0BAA,AxDAA,AXAA,A4Dp3GA,AWo3GA,Q9BAA,A0BAA,AxDAA,AXAA,A4Dp3GA,AWo3GA,U9BAA,A0BAA,AxDAA,AXAA,A4Dn3GA,AWm3GA,EXn3GA,EAAA,InBHA,A0BAA,AxDAA,AXAA,AuEAA,GXMA,MnBNA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,CXMA,EnBLA,A0BAA,AxDAA,AXAA,A4DKA,AWLA,EXKA,GACA,IAAA,InBHA,A0BAA,AxDAA,AXAA,A4DGA,AWHA,KXGA,EACA,EnBJA,A0BAA,AxDAA,AXAA,A4DIA,AWJA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,CXIA,CnBJA,A0BAA,AxDAA,AXAA,AuEAA,CXIA,EnBHA,A0BAA,AxDAA,AXAA,AuEAA,CXcA,GnBdA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,IXcA,EnBdA,A0BAA,AxDAA,AXAA,A4DcA,AWdA,EXcA,EnBdA,A0BAA,AxDAA,AXAA,A4DcA,AWdA,GXeA,GnBfA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,CXeA,EAAA,EAAA,EAAA,GATA,EAAA,MAAA,EnBDA,A0BAA,AxDAA,AXAA,A4DCA,AWDA,OXCA,EnBDA,A0BAA,AxDAA,AXAA,A4DCA,AWDA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,IXAA,EAAA,CnBAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,OXAA,MnBCA,A0BAA,AxDAA,AXAA,AuEAA,CXDA,CnBCA,A0BAA,AxDAA,AXAA,AuEAA,OXDA,GnBCA,A0BAA,AxDAA,AXAA,A4DEA,AWFA,E9BAA,A0BAA,AxDAA,AXAA,A4DEA,AWFA,EXEA,QnBDA,A0BAA,AxDAA,AXAA,AuEAA,CXEA,CnBFA,A0BAA,AxDAA,AXAA,AuEAA,OXEA,GnBFA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,A4DEA,AWFA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,CXQA,CnBRA,A0BAA,AxDAA,AXAA,AuEAA,CXQA,SnBRA,A0BAA,AxDAA,AXAA,AuEAA,CXQA,OAAA,InBRA,A0BAA,AxDAA,AXAA,AuEAA,E9BKA,A0BAA,AxDAA,AXAA,AuEAA,CXGA,EAAA,MnBHA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,CXMA,CnBNA,A0BAA,AxDAA,AXAA,AuEAA,CXMA,EnBLA,A0BAA,AxDAA,AXAA,A4DKA,AWLA,G9BAA,A0BAA,AxDAA,AXAA,A4DOA,AWPA,E9BAA,A0BAA,AxDAA,AXAA,A4DOA,AWPA,K9BAA,A0BAA,AxDAA,AXAA,A4DOA,AWPA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,MXMA,CnBNA,A0BAA,AxDAA,AXAA,AuEAA,CXMA,CnBHA,A0BAA,AxDAA,AXAA,AuEAA,CXGA,GACA,CnBJA,A0BAA,AxDAA,AXAA,AuEAA,EXIA,OnBJA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,GXGA,EACA,CnBJA,A0BAA,AxDAA,AXAA,AuEAA,K9BCA,A0BAA,AxDAA,AXAA,A4DGA,AWHA,IXGA,CnBHA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BGA,A0BAA,AxDAA,AXAA,A4DAA,AWAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BEA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,CXDA,EnBCA,A0BAA,AxDAA,AXAA,AuEAA,KXDA,EnBCA,A0BAA,AxDAA,AXAA,A4DDA,AWCA,EXDA,EnBEA,A0BAA,AxDAA,AXAA,A4DFA,AWEA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,A4DAA,AWAA,E9BAA,A0BAA,AxDAA,AXAA,A4DAA,AWAA,I9BGA,A0BAA,AxDAA,AXAA,AuEAA,EXHA,GnBGA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,A4DHA,AWGA,EXHA,CnBGA,A0BAA,AxDAA,AXAA,AuEAA,CXHA,CnBGA,A0BAA,AxDAA,AXAA,AuEAA,EXFA,CnBEA,A0BAA,AxDAA,AXAA,AuEAA,EXFA,CnBEA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BYA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BTA,A0BAA,AxDAA,AXAA,A4DLA,AWKA,EXJA,MAAA,IAAA,KnBIA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,CXLA,OnBKA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,IXTA,IAAA,CnBSA,A0BAA,AxDAA,AXAA,AuEAA,CXTA,EnBYA,A0BAA,AxDAA,AXAA,A4DZA,AWYA,GXFA,CnBIA,A0BAA,AxDAA,AXAA,AuEAA,E9BDA,A0BAA,AxDAA,AXAA,AuEAA,SXZA,IAAA,EACA,KnBWA,A0BAA,AxDAA,AXAA,AuEAA,YXXA,CnBWA,A0BAA,AxDAA,AXAA,AuEAA,CXVA,EAAA,CnBUA,A0BAA,AxDAA,AXAA,AuEAA,IXVA,EAAA,CnBUA,A0BAA,AxDAA,AXAA,AuEAA,EXRA,EAAA,GnBSA,A0BAA,AxDAA,AXAA,AuEAA,EXTA,GAGA,EnBMA,A0BAA,AxDAA,AXAA,A4DNA,AWMA,KXNA,EnBQA,A0BAA,AxDAA,AXAA,AuEAA,CXNA,GAGA,EAAA,EnBGA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,A4DHA,AWGA,O9BEA,A0BAA,AxDAA,AXAA,AuEAA,EXLA,GACA,CnBIA,A0BAA,AxDAA,AXAA,AuEAA,EXJA,EnBoIA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,EXpIA,CnBqIA,A0BAA,AxDAA,AXAA,AuEAA,CXpIA,GnBoIA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,CXpIA,CnBoIA,A0BAA,AxDAA,AXAA,AuEAA,GXpIA,QnBoIA,A0BAA,AxDAA,AXAA,AuEAA,EXpIA,CnBsIA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,A4DvIA,AWuIA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,A4DvIA,AWuIA,EXvIA,EnBwIA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,A4DrIA,AWqIA,EXrIA,CnBwIA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BIA,A0BAA,AxDAA,AXAA,AuEAA,OX5IA,EnB4IA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,CX5IA,EnB6IA,A0BAA,AxDAA,AXAA,AuEAA,CX5IA,GnB4IA,A0BAA,AxDAA,AXAA,A4D5IA,AW4IA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BIA,A0BAA,AxDAA,AXAA,AuEAA,O9BHA,A0BAA,AxDAA,AXAA,AuEAA,CX7IA,CnB6IA,A0BAA,AxDAA,AXAA,AuEAA,CX5IA,EnB4IA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,A4D7IA,AW6IA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,CX7IA,CnB6IA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,CX7IA,EnB+IA,A0BAA,AxDAA,AXAA,AuEAA,E9B8CA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,I9BFA,A0BAA,AxDAA,AXAA,AuEAA,CX5LA,GnB4LA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,A4D7LA,AW6LA,E9BAA,A0BAA,AxDAA,AXAA,A4D7LA,AW6LA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,A4D7LA,AW6LA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,C9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,W9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BIA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BIA,A0BAA,AxDAA,AXAA,AuEAA,E9BGA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BnNA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,a9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BIA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,iB9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,Y9BAA,A0BAA,AxDAA,AXAA,AuEAA,W9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,iB9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,Y9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,iB9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,W9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BGA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BFA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,W9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BEA,A0BAA,AxDAA,AXAA,AuEAA,K9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BEA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,W9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,W9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BMA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,Y9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,C9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,kB9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,C9BCA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BEA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,kB9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,C9BCA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,W9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,W9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,iB9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BGA,A0BAA,AxDAA,AXAA,AuEAA,O9BFA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,C9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BGA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BGA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,U9BGA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BIA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9ByBA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BIA,A0BAA,AxDAA,AXAA,AuEAA,I9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BHA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BGA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BKA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BKA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9B2BA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,W9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,C9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BGA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BOA,A0BAA,AxDAA,AXAA,AuEAA,I9BLA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BIA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,C9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BGA,A0BAA,AxDAA,AXAA,AuEAA,I9BFA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BGA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BIA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,W9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BEA,A0BAA,AxDAA,AXAA,AuEAA,O9BDA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BIA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,W9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BEA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,a9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,W9BKA,A0BAA,AxDAA,AXAA,AuEAA,O9BHA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,M9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,W9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BiCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,C9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BCA,A0BAA,AxDAA,AXAA,AuEAA,M9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BCA,A0BAA,AxDAA,AXAA,AuEAA,Q9BCA,A0BAA,AxDAA,AXAA,AuEAA,S9BCA,A0BAA,AxDAA,AXAA,AuEAA,U9BCA,A0BAA,AxDAA,AXAA,AuEAA,W9BCA,A0BAA,AxDAA,AXAA,AuEAA,Y9BCA,A0BAA,AxDAA,AXAA,AuEAA,a9BCA,A0BAA,AxDAA,AXAA,AuEAA,c9BCA,A0BAA,AxDAA,AXAA,AuEAA,e9BCA,A0BAA,AxDAA,AXAA,AuEAA,gB9BCA,A0BAA,AxDAA,AXAA,AuEAA,iB9BCA,A0BAA,AxDAA,AXAA,AuEAA,kB9BCA,A0BAA,AxDAA,AXAA,AuEAA,mB9BCA,A0BAA,AxDAA,AXAA,AuEAA,oB9BCA,A0BAA,AxDAA,AXAA,AuEAA,qB9BCA,A0BAA,AxDAA,AXAA,AuEAA,sB9BCA,A0BAA,AxDAA,AXAA,AuEAA,uB9BCA,A0BAA,AxDAA,AXAA,AuEAA,wB9BCA,A0BAA,AxDAA,AXAA,AuEAA,yB9BCA,A0BAA,AxDAA,AXAA,AuEAA,0B9BCA,A0BAA,AxDAA,AXAA,AuEAA,2B9BCA,A0BAA,AxDAA,AXAA,AuEAA,6B9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,C9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,C9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BCA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BCA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BCA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BCA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BsjBA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BGA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,C9BMA,A0BAA,AxDAA,AXAA,AuEAA,I9BHA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,C9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BIA,A0BAA,AxDAA,AXAA,AuEAA,I9BDA,A0BAA,AxDAA,AXAA,AuEAA,G9BFA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BQA,A0BAA,AxDAA,AXAA,AuEAA,O9BNA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BzlBA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BIA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BHA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BGA,A0BAA,AxDAA,AXAA,AuEAA,M9BJA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BIA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,C9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,I9BFA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,C9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BDA,A0BAA,AxDAA,AXAA,AuEAA,K9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,W9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BMA,A0BAA,AxDAA,AXAA,AuEAA,I9BHA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BKA,A0BAA,AxDAA,AXAA,AuEAA,O9BHA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,W9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BGA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,C9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,C9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BMA,A0BAA,AxDAA,AXAA,AuEAA,G9BLA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BEA,A0BAA,AxDAA,AXAA,AuEAA,S9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BFA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BQA,A0BAA,AxDAA,AXAA,AuEAA,I9BHA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,W9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BKA,A0BAA,AxDAA,AXAA,AuEAA,O9BHA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,W9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BGA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,oC9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,W9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BSA,A0BAA,AxDAA,AXAA,AuEAA,O9BRA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,iB9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,8C9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,W9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,O9BDA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,Y9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,Y9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,Y9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,a9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,yC9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,+B9BEA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BHA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BYA,A0BAA,AxDAA,AXAA,AuEAA,C9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BGA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BrBA,A0BAA,AxDAA,AXAA,AuEAA,C9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BGA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BeA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,W9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,W9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BiBA,A0BAA,AxDAA,AXAA,AuEAA,O9BhBA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BIA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BoBA,A0BAA,AxDAA,AXAA,AuEAA,O9BnBA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BIA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,W9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,W9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BiBA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,W9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BGA,A0BAA,AxDAA,AXAA,AuEAA,I9BDA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,C9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BEA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,W9BAA,A0BAA,AxDAA,AXAA,AuEAA,W9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,Y9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BEA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,W9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BIA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,W9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,W9BKA,A0BAA,AxDAA,AXAA,AuEAA,O9BJA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,W9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,M9BIA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BGA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,O9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,W9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BIA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BIA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BDA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,K9BGA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BKA,A0BAA,AxDAA,AXAA,AuEAA,O9BFA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BEA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,O9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,W9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BIA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BIA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BGA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BMA,A0BAA,AxDAA,AXAA,AuEAA,O9BFA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BEA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,O9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,W9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BIA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BIA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,iB9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BIA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BSA,A0BAA,AxDAA,AXAA,AuEAA,O9BLA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BIA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BIA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,iB9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BUA,A0BAA,AxDAA,AXAA,AuEAA,O9BRA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BIA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BkBA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BfA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BIA,A0BAA,AxDAA,AXAA,AuEAA,O9BHA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,Y9BGA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BIA,A0BAA,AxDAA,AXAA,AuEAA,O9BHA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,Y9BKA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BIA,A0BAA,AxDAA,AXAA,AuEAA,I9BDA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BIA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,c9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BIA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BIA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BIA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,C9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,O9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,Y9BGA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BIA,A0BAA,AxDAA,AXAA,AuEAA,O9BHA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,Y9BIA,A0BAA,AxDAA,AXAA,AuEAA,I9BWA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BXA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BIA,A0BAA,AxDAA,AXAA,AuEAA,O9BHA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BKA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BIA,A0BAA,AxDAA,AXAA,AuEAA,I9BDA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BIA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BUA,A0BAA,AxDAA,AXAA,AuEAA,O9BNA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BIA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9B+CA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BIA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BNA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BIA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BMA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BJA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BIA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BFA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BFA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BKA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BJA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BIA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BFA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BFA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BKA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BJA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BIA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BFA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BFA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BKA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BJA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BIA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BFA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BFA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BKA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BJA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BIA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BFA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BFA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BKA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BJA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BIA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BFA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BFA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BKA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BJA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BIA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BFA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BFA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BKA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BJA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BIA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BFA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BFA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BKA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BJA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BIA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BFA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BFA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BKA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BJA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BIA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BFA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BFA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BKA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BJA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BIA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BFA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BFA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BKA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BJA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BIA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BFA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BFA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BKA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BJA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BIA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BFA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BFA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BKA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BJA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BIA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BFA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BFA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BKA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BJA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BIA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BFA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BFA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BKA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BJA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BIA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BFA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BFA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BKA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BJA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BIA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BFA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BFA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BKA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BJA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BIA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BFA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BFA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BMA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BJA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BIA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BFA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9B0BA,A0BAA,AxDAA,AXAA,AuEAA,O9BzBA,A0BAA,AxDAA,AXAA,AuEAA,I9BFA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BiDA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,O9BDA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BsBA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BvEA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BiDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BWA,A0BAA,AxDAA,AXAA,AuEAA,O9BVA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BrDA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BIA,A0BAA,AxDAA,AXAA,AuEAA,I9BFA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,C9BGA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BGA,A0BAA,AxDAA,AXAA,AuEAA,I9BFA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,C9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BGA,A0BAA,AxDAA,AXAA,AuEAA,G9BFA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BIA,A0BAA,AxDAA,AXAA,AuEAA,I9BFA,A0BAA,AxDAA,AXAA,AuEAA,G9BHA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BGA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BQA,A0BAA,AxDAA,AXAA,AuEAA,O9BNA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BgBA,A0BAA,AxDAA,AXAA,AuEAA,C9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BcA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,I9BFA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,W9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BIA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BGA,A0BAA,AxDAA,AXAA,AuEAA,I9BDA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BGA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BKA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BIA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BMA,A0BAA,AxDAA,AXAA,AuEAA,I9BLA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BIA,A0BAA,AxDAA,AXAA,AuEAA,I9BHA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,C9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BGA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BOA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,Y9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BGA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,C9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BIA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,a9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BDA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,C9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BIA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,W9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BDA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BIA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BDA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BGA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,Y9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,W9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,W9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,C9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BUA,A0BAA,AxDAA,AXAA,AuEAA,O9BPA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,a9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BIA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BEA,A0BAA,AxDAA,AXAA,AuEAA,O9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BIA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BEA,A0BAA,AxDAA,AXAA,AuEAA,O9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BIA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,iB9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BIA,A0BAA,AxDAA,AXAA,AuEAA,I9BDA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,C9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BQA,A0BAA,AxDAA,AXAA,AuEAA,O9BLA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BGA,A0BAA,AxDAA,AXAA,AuEAA,M9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BIA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,W9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BIA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,W9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BIA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BxxCA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,I9BFA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,a9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,C9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BGA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9B8wCA,A0BAA,AxDAA,AXAA,AuEAA,C9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BIA,A0BAA,AxDAA,AXAA,AuEAA,I9BDA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BIA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BIA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BIA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,iB9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BHA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,W9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BGA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,C9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,C9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BGA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BIA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,C9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BGA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BGA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,O9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BMA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,iB9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BDA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BGA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,W9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BMA,A0BAA,AxDAA,AXAA,AuEAA,G9BJA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,C9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BGA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BDA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BGA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BGA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,C9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BaA,A0BAA,AxDAA,AXAA,AuEAA,O9BTA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,O9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BIA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BIA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BIA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,iB9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BGA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BGA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BIA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,iB9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BIA,A0BAA,AxDAA,AXAA,AuEAA,G9BFA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,2C9BEA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BQA,A0BAA,AxDAA,AXAA,AuEAA,G9BLA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BEA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,C9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,W9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BGA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BIA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BIA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,O9BFA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,iB9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BGA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,M9BIA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BGA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BKA,A0BAA,AxDAA,AXAA,AuEAA,O9BFA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,M9BIA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,G9BFA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,iB9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BIA,A0BAA,AxDAA,AXAA,AuEAA,O9BHA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BKA,A0BAA,AxDAA,AXAA,AuEAA,G9BFA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BGA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BIA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,W9BGA,A0BAA,AxDAA,AXAA,AuEAA,O9BFA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,M9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,W9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,a9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BIA,A0BAA,AxDAA,AXAA,AuEAA,E9BLA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BGA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,C9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BDA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BGA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BKA,A0BAA,AxDAA,AXAA,AuEAA,I9BFA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BIA,A0BAA,AxDAA,AXAA,AuEAA,O9BFA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,K9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,W9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BIA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BGA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BIA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,a9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,W9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BIA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,C9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BOA,A0BAA,AxDAA,AXAA,AuEAA,I9BHA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,a9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,a9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,W9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BaA,A0BAA,AxDAA,AXAA,AuEAA,O9BVA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BGA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,C9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BQA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,O9BFA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BEA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BCA,A0BAA,AxDAA,AXAA,AuEAA,C9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BKA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BGA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BIA,A0BAA,AxDAA,AXAA,AuEAA,C9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BIA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BGA,A0BAA,AxDAA,AXAA,AuEAA,C9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BIA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,W9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BIA,A0BAA,AxDAA,AXAA,AuEAA,C9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BOA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,C9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BKA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BCA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,C9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BIA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,C9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BIA,A0BAA,AxDAA,AXAA,AuEAA,C9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BIA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BlFA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BsFA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BIA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BIA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BGA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BIA,A0BAA,AxDAA,AXAA,AuEAA,I9BHA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BGA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BIA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BGA,A0BAA,AxDAA,AXAA,AuEAA,I9BDA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,C9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BGA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BDA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BaA,A0BAA,AxDAA,AXAA,AuEAA,I9BTA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BMA,A0BAA,AxDAA,AXAA,AuEAA,I9BHA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,C9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,W9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BIA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,W9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BIA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BIA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,C9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BOA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BDA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BQA,A0BAA,AxDAA,AXAA,AuEAA,I9BLA,A0BAA,AxDAA,AXAA,AuEAA,I9BuCA,A0BAA,AxDAA,AXAA,AuEAA,E9BvCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,C9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BIA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BIA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BeA,A0BAA,AxDAA,AXAA,AuEAA,O9BTA,A0BAA,AxDAA,AXAA,AuEAA,E9BDA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BGA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,C9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,C9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,M9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BIA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,W9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,W9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BIA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BIA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,iB9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BGA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BGA,A0BAA,AxDAA,AXAA,AuEAA,O9BFA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BKA,A0BAA,AxDAA,AXAA,AuEAA,I9BDA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,C9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BMA,A0BAA,AxDAA,AXAA,AuEAA,O9BJA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BEA,A0BAA,AxDAA,AXAA,AuEAA,M9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,W9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BOA,A0BAA,AxDAA,AXAA,AuEAA,E9BPA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,W9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BKA,A0BAA,AxDAA,AXAA,AuEAA,G9BHA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BGA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BCA,A0BAA,AxDAA,AXAA,AuEAA,C9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,qB9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BOA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BIA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BGA,A0BAA,AxDAA,AXAA,AuEAA,I9BDA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,C9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,C9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,O9BEA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BOA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,O9BFA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,yC9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,iC9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,W9BEA,A0BAA,AxDAA,AXAA,AuEAA,O9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,wD9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,Y9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,O9BDA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,M9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,O9BDA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,yC9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,O9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,sC9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,O9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,uC9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,O9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,sC9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,O9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,uC9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,O9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,sC9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,O9BFA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,sC9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,O9BFA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,sC9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,W9BGA,A0BAA,AxDAA,AXAA,AuEAA,O9BFA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,sC9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,W9BGA,A0BAA,AxDAA,AXAA,AuEAA,O9BFA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,uC9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BIA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,W9BGA,A0BAA,AxDAA,AXAA,AuEAA,O9BFA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,uC9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,W9BGA,A0BAA,AxDAA,AXAA,AuEAA,O9BFA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,uC9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BIA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,W9BGA,A0BAA,AxDAA,AXAA,AuEAA,O9BFA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,sC9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,O9BFA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,qB9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BIA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,C9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BIA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,Y9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BiDA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BCA,A0BAA,AxDAA,AXAA,AuEAA,2E9B+DA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BCA,A0BAA,AxDAA,AXAA,AuEAA,kE9BIA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BCA,A0BAA,AxDAA,AXAA,AuEAA,yD9BIA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BCA,A0BAA,AxDAA,AXAA,AuEAA,Q9BCA,A0BAA,AxDAA,AXAA,AuEAA,uE9B8CA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,iB9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,C9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,kC9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BkOA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,Y9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BGA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9B5aA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,W9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BEA,A0BAA,AxDAA,AXAA,AuEAA,O9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BGA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BGA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,G9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BCA,A0BAA,AxDAA,AXAA,AuEAA,kB9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BgBA,A0BAA,AxDAA,AXAA,AuEAA,O9BfA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BIA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BSA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BKA,A0BAA,AxDAA,AXAA,AuEAA,I9BHA,A0BAA,AxDAA,AXAA,AuEAA,I9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BIA,A0BAA,AxDAA,AXAA,AuEAA,G9BFA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BGA,A0BAA,AxDAA,AXAA,AuEAA,O9BFA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BKA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,I9BFA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BhBA,A0BAA,AxDAA,AXAA,AuEAA,Q9BgBA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,C9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BpBA,A0BAA,AxDAA,AXAA,AuEAA,Q9BoBA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BIA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BIA,A0BAA,AxDAA,AXAA,AuEAA,I9BDA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,C9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BUA,A0BAA,AxDAA,AXAA,AuEAA,O9BNA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BGA,A0BAA,AxDAA,AXAA,AuEAA,G9BSA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BQA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BSA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,I9BDA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,C9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BKA,A0BAA,AxDAA,AXAA,AuEAA,O9BHA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BIA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BCA,A0BAA,AxDAA,AXAA,AuEAA,C9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,W9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BGA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,iB9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BFA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BMA,A0BAA,AxDAA,AXAA,AuEAA,O9BFA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BkBA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,iC9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,oC9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,iC9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,oC9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BGA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BIA,A0BAA,AxDAA,AXAA,AuEAA,O9BHA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BIA,A0BAA,AxDAA,AXAA,AuEAA,O9BHA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BIA,A0BAA,AxDAA,AXAA,AuEAA,O9BHA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BIA,A0BAA,AxDAA,AXAA,AuEAA,O9BHA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,O9BDA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,O9BDA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,O9BDA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BIA,A0BAA,AxDAA,AXAA,AuEAA,G9BHA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,C9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BQA,A0BAA,AxDAA,AXAA,AuEAA,I9BFA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BIA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,Y9BGA,A0BAA,AxDAA,AXAA,AuEAA,I9BFA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BOA,A0BAA,AxDAA,AXAA,AuEAA,I9BJA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,C9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BDA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BGA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BEA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BIA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,Y9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BKA,A0BAA,AxDAA,AXAA,AuEAA,I9BJA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,C9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BDA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,C9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BGA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BKA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9B9BA,A0BAA,AxDAA,AXAA,AuEAA,M9B+BA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BXA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BaA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,Y9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BEA,A0BAA,AxDAA,AXAA,AuEAA,O9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BOA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BmBA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BEA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,Y9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BEA,A0BAA,AxDAA,AXAA,AuEAA,O9BDA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BGA,A0BAA,AxDAA,AXAA,AuEAA,O9BFA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BGA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BQA,A0BAA,AxDAA,AXAA,AuEAA,O9BNA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BEA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,M9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BOA,A0BAA,AxDAA,AXAA,AuEAA,O9BNA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BCA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BGA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,S9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BGA,A0BAA,AxDAA,AXAA,AuEAA,O9BDA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,E9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,G9BAA,A0BAA,AxDAA,AXAA,AuEAA,I9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BAA,A0BAA,AxDAA,AXAA,AuEAA,K9BCA,A0BAA,AxDAA,AXAA,AuEAA,U9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9Bn3GA,A0BAA,AxDAA,AXAA,AuEAA,C9Bq3GA,A0BAA,AxDAA,AXAA,AuEAA,oB9BAA,A0BAA,AxDAA,AXAA,AuEAA,Q9BAA,A0BAA,AxDAA,AXAA,AuEAA,O9BAA,A0BAA,AxDAA,AXAA,AuEAA;A7Jr3GA,IAAA,GAAA,SAAA,EAAA,GAAA,iBAAA,SAAA,iBAAA,OAAA,OAAA,QAAA,IAAA,mBAAA,GAAA,EAAA,IAAA,EAAA,GAAA,GAAA,iBAAA,QAAA,QAAA,SAAA,KAAA,EAAA,SAAA,EAAA,UAAA,GAAA,EAAA,SAAA,KAAA,KAAA,CAAA,KAAA,WAAA,MAAA,MAAA,IAAA,EAAA,CAAA,IAAA,CAAA,EAAA,KAAA,aAAA,IAAA,EAAA,WAAA,GAAA,oBAAA,KAAA,OAAA,KAAA,GAAA,oBAAA,OAAA,OAAA,OAAA,QAAA,IAAA,EAAA,OAAA,EAAA,MAAA,IAAA,MAAA,kCAAA,GAAA,EAAA,QAAA,EAAA,EAAA,MAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,KAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,QAAA,EAAA,QAAA,EAAA,SAAA,EAAA,UAAA,IAAA,CAAA,EAAA,EAAA,KAAA,aAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,CAAA,gBAAA,IAAA,GAAA,OAAA,IAAA,GAAA,YAAA,IAAA,EAAA,UAAA,IAAA,EAAA,IAAA,IAAA,EAAA,WAAA,IAAA,EAAA,gBAAA,KAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,QAAA,GAAA,IAAA,EAAA,gBAAA,GAAA,GAAA,OAAA,KAAA,GAAA,QAAA,SAAA,GAAA,EAAA,EAAA,GAAA,OAAA,WAAA,IAAA,IAAA,IAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,CAAA,cAAA,IAAA,EAAA,eAAA,IAAA,EAAA,aAAA,IAAA,EAAA,mBAAA,IAAA,EAAA,wBAAA,IAAA,EAAA,aAAA,IAAA,IAAA,IAAA,EAAA,GAAA,SAAA,IAAA,IAAA,EAAA,GAAA,oBAAA,OAAA,EAAA,YAAA,QAAA,IAAA,EAAA,EAAA,EAAA,EAAA,MAAA,CAAA,GAAA,oBAAA,KAAA,MAAA,IAAA,MAAA,kgBAAA,MAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,KAAA,OAAA,IAAA,EAAA,KAAA,GAAA,aAAA,EAAA,KAAA,GAAA,UAAA,IAAA,IAAA,KAAA,EAAA,KAAA,EAAA,KAAA,GAAA,aAAA,EAAA,KAAA,GAAA,KAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,CAAA,WAAA,IAAA,EAAA,UAAA,IAAA,EAAA,YAAA,IAAA,EAAA,eAAA,IAAA,IAAA,MAAA,EAAA,EAAA,MAAA,IAAA,WAAA,SAAA,IAAA,KAAA,IAAA,GAAA,OAAA,EAAA,UAAA,IAAA,SAAA,EAAA,GAAA,KAAA,IAAA,GAAA,GAAA,EAAA,UAAA,IAAA,SAAA,GAAA,OAAA,KAAA,IAAA,IAAA,EAAA,KAAA,IAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,IAAA,IAAA,EAAA,UAAA,SAAA,EAAA,GAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,KAAA,IAAA,MAAA,GAAA,EAAA,IAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,MAAA,IAAA,MAAA,GAAA,EAAA,IAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,KAAA,EAAA,EAAA,QAAA,EAAA,EAAA,MAAA,aAAA,EAAA,EAAA,IAAA,EAAA,SAAA,GAAA,EAAA,MAAA,KAAA,EAAA,GAAA,GAAA,EAAA,EAAA,MAAA,EAAA,GAAA,KAAA,WAAA,EAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA,MAAA,EAAA,KAAA,WAAA,GAAA,EAAA,EAAA,GAAA,MAAA,EAAA,GAAA,OAAA,EAAA,IAAA,KAAA,GAAA,IAAA,IAAA,OAAA,EAAA,CAAA,KAAA,EAAA,GAAA,MAAA,EAAA,GAAA,OAAA,EAAA,IAAA,mBAAA,SAAA,EAAA,OAAA,UAAA,WAAA,OAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,SAAA,GAAA,OAAA,SAAA,GAAA,GAAA,EAAA,MAAA,IAAA,UAAA,mCAAA,KAAA,GAAA,IAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,OAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,SAAA,EAAA,KAAA,GAAA,GAAA,EAAA,SAAA,EAAA,EAAA,KAAA,EAAA,EAAA,KAAA,KAAA,OAAA,EAAA,OAAA,EAAA,EAAA,IAAA,EAAA,CAAA,EAAA,EAAA,GAAA,EAAA,QAAA,EAAA,IAAA,KAAA,EAAA,KAAA,EAAA,EAAA,EAAA,MAAA,KAAA,EAAA,OAAA,EAAA,QAAA,CAAA,MAAA,EAAA,GAAA,MAAA,GAAA,KAAA,EAAA,EAAA,QAAA,EAAA,EAAA,GAAA,EAAA,CAAA,GAAA,SAAA,KAAA,EAAA,EAAA,EAAA,IAAA,MAAA,EAAA,KAAA,MAAA,SAAA,QAAA,MAAA,GAAA,EAAA,EAAA,MAAA,OAAA,GAAA,EAAA,EAAA,OAAA,KAAA,IAAA,EAAA,IAAA,IAAA,EAAA,IAAA,CAAA,EAAA,EAAA,SAAA,GAAA,IAAA,EAAA,MAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAA,IAAA,CAAA,EAAA,MAAA,EAAA,GAAA,MAAA,GAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,GAAA,CAAA,EAAA,MAAA,EAAA,GAAA,EAAA,EAAA,MAAA,GAAA,GAAA,EAAA,MAAA,EAAA,GAAA,CAAA,EAAA,MAAA,EAAA,GAAA,EAAA,IAAA,KAAA,GAAA,MAAA,EAAA,IAAA,EAAA,IAAA,MAAA,EAAA,KAAA,MAAA,SAAA,EAAA,EAAA,KAAA,EAAA,GAAA,MAAA,GAAA,EAAA,CAAA,EAAA,GAAA,EAAA,EAAA,QAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,MAAA,EAAA,GAAA,MAAA,CAAA,MAAA,EAAA,GAAA,EAAA,QAAA,EAAA,MAAA,GAAA,CAAA,CAAA,EAAA,OAAA,MAAA,EAAA,WAAA,SAAA,EAAA,GAAA,KAAA,QAAA,CAAA,IAAA,GAAA,KAAA,IAAA,KAAA,eAAA,EAAA,KAAA,SAAA,EAAA,KAAA,SAAA,SAAA,KAAA,OAAA,CAAA,KAAA,SAAA,KAAA,QAAA,EAAA,KAAA,aAAA,EAAA,KAAA,UAAA,WAAA,MAAA,IAAA,MAAA,gCAAA,IAAA,EAAA,EAAA,EAAA,aAAA,GAAA,EAAA,SAAA,SAAA,CAAA,IAAA,EAAA,EAAA,YAAA,KAAA,EAAA,EAAA,EAAA,OAAA,EAAA,GAAA,EAAA,EAAA,OAAA,OAAA,MAAA,EAAA,OAAA,EAAA,OAAA,KAAA,EAAA,EAAA,KAAA,KAAA,YAAA,IAAA,EAAA,QAAA,QAAA,KAAA,QAAA,CAAA,IAAA,KAAA,YAAA,MAAA,EAAA,OAAA,GAAA,GAAA,EAAA,IAAA,EAAA,EAAA,KAAA,GAAA,KAAA,OAAA,SAAA,EAAA,IAAA,YAAA,OAAA,EAAA,UAAA,KAAA,WAAA,OAAA,EAAA,UAAA,OAAA,EAAA,WAAA,IAAA,EAAA,OAAA,EAAA,KAAA,SAAA,GAAA,OAAA,EAAA,OAAA,KAAA,EAAA,MAAA,CAAA,EAAA,KAAA,cAAA,KAAA,EAAA,OAAA,EAAA,EAAA,OAAA,KAAA,gBAAA,EAAA,UAAA,EAAA,SAAA,EAAA,KAAA,SAAA,KAAA,cAAA,EAAA,SAAA,EAAA,KAAA,cAAA,WAAA,KAAA,SAAA,CAAA,EAAA,GAAA,CAAA,EAAA,KAAA,cAAA,KAAA,SAAA,GAAA,OAAA,EAAA,kBAAA,EAAA,KAAA,MAAA,CAAA,EAAA,GAAA,KAAA,EAAA,EAAA,OAAA,EAAA,MAAA,EAAA,KAAA,EAAA,MAAA,CAAA,EAAA,SAAA,EAAA,UAAA,cAAA,SAAA,GAAA,OAAA,EAAA,UAAA,OAAA,EAAA,WAAA,OAAA,EAAA,KAAA,SAAA,GAAA,OAAA,EAAA,OAAA,KAAA,EAAA,OAAA,EAAA,IAAA,SAAA,CAAA,EAAA,EAAA,IAAA,QAAA,CAAA,EAAA,CAAA,KAAA,iBAAA,CAAA,EAAA,GAAA,KAAA,EAAA,MAAA,CAAA,EAAA,EAAA,QAAA,KAAA,EAAA,MAAA,CAAA,EAAA,KAAA,MAAA,GAAA,KAAA,SAAA,GAAA,OAAA,EAAA,uBAAA,EAAA,UAAA,UAAA,SAAA,GAAA,OAAA,KAAA,MAAA,GAAA,KAAA,SAAA,GAAA,OAAA,EAAA,UAAA,EAAA,UAAA,YAAA,SAAA,GAAA,MAAA,SAAA,EAAA,QAAA,EAAA,UAAA,YAAA,WAAA,OAAA,EAAA,UAAA,OAAA,EAAA,WAAA,IAAA,EAAA,EAAA,EAAA,OAAA,EAAA,KAAA,SAAA,GAAA,IAAA,EAAA,KAAA,SAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,IAAA,EAAA,KAAA,KAAA,cAAA,KAAA,QAAA,IAAA,KAAA,YAAA,KAAA,MAAA,CAAA,EAAA,QAAA,IAAA,GAAA,KAAA,SAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,QAAA,SAAA,GAAA,EAAA,IAAA,aAAA,GAAA,EAAA,KAAA,GAAA,GAAA,EAAA,SAAA,IAAA,EAAA,IAAA,aAAA,GAAA,EAAA,EAAA,OAAA,EAAA,QAAA,SAAA,GAAA,EAAA,QAAA,SAAA,GAAA,EAAA,GAAA,EAAA,GAAA,MAAA,UAAA,EAAA,kBAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,MAAA,QAAA,GAAA,EAAA,OAAA,OAAA,GAAA,EAAA,EAAA,SAAA,GAAA,EAAA,EAAA,MAAA,OAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,cAAA,EAAA,KAAA,EAAA,MAAA,EAAA,EAAA,GAAA,GAAA,MAAA,EAAA,UAAA,MAAA,SAAA,EAAA,GAAA,GAAA,EAAA,IAAA,SAAA,OAAA,EAAA,IAAA,QAAA,CAAA,EAAA,GAAA,IAAA,IAAA,GAAA,GAAA,KAAA,QAAA,QAAA,MAAA,EAAA,IAAA,KAAA,OAAA,EAAA,KAAA,QAAA,SAAA,OAAA,KAAA,UAAA,KAAA,OAAA,KAAA,YAAA,KAAA,eAAA,EAAA,KAAA,OAAA,MAAA,KAAA,QAAA,KAAA,UAAA,EAAA,CAAA,OAAA,EAAA,QAAA,KAAA,EAAA,UAAA,eAAA,SAAA,GAAA,IAAA,EAAA,EAAA,KAAA,OAAA,IAAA,QAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,aAAA,EAAA,SAAA,MAAA,GAAA,EAAA,OAAA,EAAA,UAAA,WAAA,WAAA,IAAA,EAAA,KAAA,EAAA,KAAA,OAAA,EAAA,KAAA,QAAA,IAAA,KAAA,QAAA,KAAA,EAAA,KAAA,MAAA,UAAA,EAAA,OAAA,EAAA,IAAA,QAAA,SAAA,EAAA,GAAA,EAAA,MAAA,EAAA,GAAA,KAAA,SAAA,GAAA,OAAA,EAAA,IAAA,SAAA,EAAA,EAAA,aAAA,EAAA,OAAA,KAAA,MAAA,GAAA,EAAA,SAAA,KAAA,SAAA,GAAA,OAAA,EAAA,KAAA,KAAA,SAAA,GAAA,OAAA,EAAA,QAAA,GAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,GAAA,SAAA,GAAA,EAAA,YAAA,cAAA,EAAA,YAAA,cAAA,CAAA,IAAA,EAAA,KAAA,SAAA,GAAA,EAAA,UAAA,MAAA,EAAA,UAAA,MAAA,EAAA,UAAA,MAAA,EAAA,UAAA,MAAA,EAAA,UAAA,MAAA,EAAA,UAAA,MAAA,EAAA,UAAA,MAAA,EAAA,UAAA,MAAA,EAAA,UAAA,MAAA,CAAA,IAAA,EAAA,KAAA,SAAA,GAAA,EAAA,UAAA,KAAA,EAAA,WAAA,MAAA,EAAA,UAAA,KAAA,EAAA,WAAA,MAAA,EAAA,UAAA,KAAA,EAAA,WAAA,MAAA,EAAA,UAAA,KAAA,EAAA,WAAA,MAAA,EAAA,UAAA,KAAA,EAAA,WAAA,MAAA,EAAA,UAAA,KAAA,EAAA,WAAA,MAAA,EAAA,UAAA,KAAA,EAAA,WAAA,MAAA,EAAA,UAAA,KAAA,EAAA,WAAA,MAAA,CAAA,IAAA,EAAA,KAAA,SAAA,GAAA,EAAA,aAAA,SAAA,EAAA,eAAA,WAAA,EAAA,cAAA,gBAAA,CAAA,IAAA,EAAA,KAAA,IAAA,EAAA,CAAA,WAAA,CAAA,IAAA,IAAA,QAAA,GAAA,gBAAA,MAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,KAAA,EAAA,EAAA,OAAA,EAAA,EAAA,KAAA,EAAA,EAAA,SAAA,EAAA,EAAA,gBAAA,EAAA,EAAA,eAAA,EAAA,EAAA,UAAA,OAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,QAAA,IAAA,EAAA,EAAA,WAAA,IAAA,KAAA,EAAA,WAAA,IAAA,GAAA,CAAA,KAAA,EAAA,KAAA,EAAA,OAAA,EAAA,KAAA,EAAA,SAAA,EAAA,gBAAA,EAAA,eAAA,EAAA,UAAA,IAAA,EAAA,EAAA,UAAA,GAAA,IAAA,EAAA,IAAA,EAAA,cAAA,EAAA,YAAA,cAAA,MAAA,EAAA,WAAA,SAAA,EAAA,EAAA,GAAA,KAAA,GAAA,GAAA,KAAA,KAAA,GAAA,KAAA,OAAA,GAAA,KAAA,QAAA,GAAA,KAAA,MAAA,GAAA,KAAA,SAAA,GAAA,KAAA,KAAA,GAAA,KAAA,OAAA,KAAA,KAAA,UAAA,EAAA,KAAA,WAAA,EAAA,YAAA,KAAA,QAAA,KAAA,IAAA,EAAA,EAAA,OAAA,EAAA,EAAA,QAAA,EAAA,EAAA,MAAA,OAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,SAAA,OAAA,IAAA,GAAA,EAAA,EAAA,EAAA,WAAA,OAAA,IAAA,EAAA,EAAA,YAAA,EAAA,EAAA,EAAA,QAAA,OAAA,IAAA,EAAA,KAAA,EAAA,KAAA,GAAA,EAAA,MAAA,IAAA,KAAA,IAAA,EAAA,KAAA,OAAA,EAAA,KAAA,QAAA,EAAA,KAAA,MAAA,EAAA,KAAA,SAAA,EAAA,cAAA,GAAA,KAAA,QAAA,EAAA,KAAA,KAAA,EAAA,KAAA,SAAA,EAAA,KAAA,WAAA,EAAA,KAAA,KAAA,GAAA,KAAA,OAAA,KAAA,OAAA,OAAA,eAAA,EAAA,UAAA,aAAA,CAAA,IAAA,WAAA,IAAA,EAAA,KAAA,EAAA,GAAA,OAAA,OAAA,KAAA,KAAA,QAAA,QAAA,SAAA,GAAA,EAAA,KAAA,EAAA,OAAA,GAAA,MAAA,GAAA,YAAA,EAAA,cAAA,IAAA,OAAA,eAAA,EAAA,UAAA,cAAA,CAAA,IAAA,WAAA,OAAA,KAAA,QAAA,QAAA,KAAA,QAAA,KAAA,KAAA,QAAA,GAAA,YAAA,EAAA,cAAA,IAAA,EAAA,UAAA,QAAA,SAAA,GAAA,EAAA,gBAAA,WAAA,KAAA,OAAA,IAAA,EAAA,GAAA,EAAA,SAAA,GAAA,KAAA,KAAA,GAAA,IAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,CAAA,UAAA,cAAA,OAAA,SAAA,EAAA,GAAA,EAAA,UAAA,IAAA,SAAA,EAAA,GAAA,IAAA,IAAA,KAAA,EAAA,OAAA,UAAA,eAAA,KAAA,EAAA,KAAA,EAAA,GAAA,EAAA,MAAA,EAAA,IAAA,SAAA,EAAA,GAAA,SAAA,IAAA,KAAA,YAAA,EAAA,EAAA,EAAA,GAAA,EAAA,UAAA,OAAA,EAAA,OAAA,OAAA,IAAA,EAAA,UAAA,EAAA,UAAA,IAAA,KAAA,EAAA,CAAA,OAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,MAAA,QAAA,EAAA,EAAA,OAAA,MAAA,GAAA,EAAA,EAAA,OAAA,OAAA,GAAA,GAAA,UAAA,EAAA,OAAA,EAAA,IAAA,EAAA,EAAA,EAAA,GAAA,MAAA,EAAA,EAAA,EAAA,GAAA,MAAA,OAAA,EAAA,KAAA,SAAA,GAAA,OAAA,EAAA,KAAA,EAAA,EAAA,OAAA,EAAA,GAAA,GAAA,GAAA,IAAA,EAAA,QAAA,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,GAAA,IAAA,MAAA,EAAA,SAAA,GAAA,SAAA,IAAA,OAAA,EAAA,KAAA,KAAA,mBAAA,KAAA,OAAA,EAAA,EAAA,GAAA,EAAA,UAAA,UAAA,WAAA,IAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,EAAA,GAAA,UAAA,GAAA,GAAA,UAAA,EAAA,SAAA,EAAA,IAAA,sBAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,qBAAA,EAAA,KAAA,SAAA,EAAA,KAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,CAAA,IAAA,EAAA,EAAA,OAAA,EAAA,EAAA,QAAA,EAAA,EAAA,MAAA,GAAA,EAAA,EAAA,OAAA,EAAA,OAAA,GAAA,EAAA,IAAA,GAAA,EAAA,SAAA,GAAA,MAAA,CAAA,KAAA,oBAAA,MAAA,GAAA,OAAA,CAAA,MAAA,CAAA,EAAA,YAAA,QAAA,CAAA,OAAA,CAAA,EAAA,cAAA,CAAA,CAAA,UAAA,EAAA,WAAA,EAAA,YAAA,EAAA,EAAA,OAAA,EAAA,KAAA,IAAA,EAAA,EAAA,IAAA,SAAA,EAAA,GAAA,OAAA,KAAA,EAAA,QAAA,QAAA,SAAA,GAAA,EAAA,OAAA,GAAA,CAAA,EAAA,OAAA,GAAA,aAAA,OAAA,KAAA,EAAA,SAAA,QAAA,SAAA,GAAA,EAAA,QAAA,GAAA,CAAA,EAAA,QAAA,GAAA,aAAA,EAAA,KAAA,EAAA,KAAA,WAAA,EAAA,GAAA,EAAA,KAAA,MAAA,IAAA,KAAA,IAAA,EAAA,OAAA,EAAA,UAAA,EAAA,CAAA,EAAA,GAAA,IAAA,EAAA,SAAA,GAAA,MAAA,CAAA,KAAA,oBAAA,MAAA,GAAA,OAAA,CAAA,MAAA,CAAA,EAAA,YAAA,QAAA,CAAA,OAAA,CAAA,EAAA,cAAA,CAAA,CAAA,UAAA,EAAA,UAAA,WAAA,IAAA,EAAA,EAAA,OAAA,EAAA,EAAA,KAAA,IAAA,EAAA,EAAA,OAAA,EAAA,CAAA,GAAA,IAAA,EAAA,WAAA,IAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,CAAA,UAAA,cAAA,OAAA,SAAA,EAAA,GAAA,EAAA,UAAA,IAAA,SAAA,EAAA,GAAA,IAAA,IAAA,KAAA,EAAA,OAAA,UAAA,eAAA,KAAA,EAAA,KAAA,EAAA,GAAA,EAAA,MAAA,EAAA,IAAA,OAAA,SAAA,EAAA,GAAA,SAAA,IAAA,KAAA,YAAA,EAAA,EAAA,EAAA,GAAA,EAAA,UAAA,OAAA,EAAA,OAAA,OAAA,IAAA,EAAA,UAAA,EAAA,UAAA,IAAA,IAAA,GAAA,MAAA,EAAA,SAAA,GAAA,SAAA,IAAA,OAAA,EAAA,KAAA,KAAA,kBAAA,KAAA,OAAA,EAAA,EAAA,GAAA,EAAA,UAAA,UAAA,WAAA,IAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,EAAA,GAAA,UAAA,GAAA,IAAA,EAAA,EAAA,GAAA,GAAA,CAAA,SAAA,UAAA,KAAA,aAAA,aAAA,SAAA,SAAA,EAAA,MAAA,CAAA,IAAA,EAAA,EAAA,OAAA,IAAA,eAAA,EAAA,MAAA,eAAA,EAAA,OAAA,EAAA,WAAA,OAAA,EAAA,EAAA,WAAA,QAAA,SAAA,EAAA,GAAA,EAAA,cAAA,GAAA,CAAA,SAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,MAAA,GAAA,SAAA,EAAA,IAAA,WAAA,EAAA,OAAA,IAAA,EAAA,QAAA,SAAA,EAAA,GAAA,EAAA,UAAA,EAAA,EAAA,IAAA,EAAA,KAAA,CAAA,YAAA,EAAA,SAAA,EAAA,WAAA,CAAA,GAAA,EAAA,OAAA,EAAA,MAAA,MAAA,wDAAA,GAAA,EAAA,OAAA,EAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,CAAA,GAAA,IAAA,EAAA,EAAA,CAAA,IAAA,IAAA,EAAA,EAAA,CAAA,GAAA,EAAA,MAAA,QAAA,IAAA,EAAA,EAAA,CAAA,SAAA,EAAA,CAAA,GAAA,IAAA,EAAA,WAAA,IAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,CAAA,UAAA,cAAA,OAAA,SAAA,EAAA,GAAA,EAAA,UAAA,IAAA,SAAA,EAAA,GAAA,IAAA,IAAA,KAAA,EAAA,OAAA,UAAA,eAAA,KAAA,EAAA,KAAA,EAAA,GAAA,EAAA,MAAA,EAAA,IAAA,OAAA,SAAA,EAAA,GAAA,SAAA,IAAA,KAAA,YAAA,EAAA,EAAA,EAAA,GAAA,EAAA,UAAA,OAAA,EAAA,OAAA,OAAA,IAAA,EAAA,UAAA,EAAA,UAAA,IAAA,IAAA,GAAA,EAAA,WAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,IAAA,GAAA,UAAA,GAAA,OAAA,IAAA,EAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IAAA,IAAA,IAAA,EAAA,UAAA,GAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,GAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,GAAA,OAAA,EAAA,EAAA,MAAA,GAAA,SAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAAA,OAAA,EAAA,GAAA,EAAA,CAAA,KAAA,EAAA,EAAA,OAAA,GAAA,OAAA,MAAA,GAAA,MAAA,EAAA,SAAA,GAAA,SAAA,IAAA,OAAA,EAAA,KAAA,KAAA,YAAA,KAAA,OAAA,EAAA,EAAA,GAAA,EAAA,UAAA,UAAA,WAAA,IAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,EAAA,GAAA,UAAA,GAAA,IAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,GAAA,WAAA,EAAA,OAAA,QAAA,EAAA,EAAA,cAAA,IAAA,OAAA,EAAA,EAAA,MAAA,EAAA,OAAA,EAAA,QAAA,GAAA,CAAA,IAAA,EAAA,EAAA,MAAA,EAAA,EAAA,OAAA,EAAA,EAAA,QAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,KAAA,MAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,IAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,MAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,OAAA,EAAA,IAAA,IAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,MAAA,EAAA,GAAA,OAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,GAAA,EAAA,OAAA,EAAA,EAAA,EAAA,MAAA,EAAA,MAAA,IAAA,EAAA,EAAA,MAAA,GAAA,EAAA,IAAA,EAAA,CAAA,IAAA,CAAA,EAAA,OAAA,EAAA,KAAA,CAAA,MAAA,EAAA,OAAA,CAAA,EAAA,GAAA,QAAA,EAAA,KAAA,WAAA,EAAA,KAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,QAAA,IAAA,CAAA,GAAA,EAAA,OAAA,MAAA,EAAA,EAAA,CAAA,EAAA,GAAA,IAAA,EAAA,EAAA,MAAA,EAAA,CAAA,GAAA,IAAA,EAAA,WAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,IAAA,GAAA,UAAA,GAAA,OAAA,IAAA,EAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IAAA,IAAA,IAAA,EAAA,UAAA,GAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,GAAA,SAAA,EAAA,GAAA,GAAA,EAAA,OAAA,EAAA,CAAA,IAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,EAAA,KAAA,GAAA,OAAA,EAAA,OAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,OAAA,IAAA,aAAA,GAAA,SAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,MAAA,EAAA,EAAA,GAAA,UAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,OAAA,EAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,GAAA,EAAA,EAAA,KAAA,EAAA,MAAA,EAAA,EAAA,IAAA,OAAA,EAAA,IAAA,EAAA,WAAA,IAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,CAAA,UAAA,cAAA,OAAA,SAAA,EAAA,GAAA,EAAA,UAAA,IAAA,SAAA,EAAA,GAAA,IAAA,IAAA,KAAA,EAAA,OAAA,UAAA,eAAA,KAAA,EAAA,KAAA,EAAA,GAAA,EAAA,MAAA,EAAA,IAAA,OAAA,SAAA,EAAA,GAAA,SAAA,IAAA,KAAA,YAAA,EAAA,EAAA,EAAA,GAAA,EAAA,UAAA,OAAA,EAAA,OAAA,OAAA,IAAA,EAAA,UAAA,EAAA,UAAA,IAAA,IAAA,GAAA,EAAA,aAAA,MAAA,EAAA,SAAA,GAAA,SAAA,IAAA,OAAA,EAAA,KAAA,KAAA,YAAA,KAAA,OAAA,EAAA,EAAA,GAAA,EAAA,UAAA,UAAA,WAAA,IAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,EAAA,GAAA,UAAA,GAAA,GAAA,EAAA,IAAA,sBAAA,IAAA,EAAA,IAAA,gBAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,KAAA,SAAA,GAAA,MAAA,UAAA,EAAA,OAAA,EAAA,EAAA,OAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,OAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,CAAA,MAAA,GAAA,OAAA,CAAA,EAAA,CAAA,IAAA,QAAA,CAAA,EAAA,CAAA,IAAA,KAAA,YAAA,EAAA,EAAA,EAAA,EAAA,KAAA,KAAA,EAAA,EAAA,GAAA,EAAA,CAAA,KAAA,EAAA,MAAA,CAAA,EAAA,EAAA,EAAA,GAAA,aAAA,GAAA,EAAA,OAAA,EAAA,CAAA,GAAA,EAAA,MAAA,aAAA,CAAA,EAAA,EAAA,EAAA,GAAA,EAAA,KAAA,GAAA,EAAA,EAAA,CAAA,MAAA,EAAA,CAAA,GAAA,IAAA,EAAA,WAAA,IAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,CAAA,UAAA,cAAA,OAAA,SAAA,EAAA,GAAA,EAAA,UAAA,IAAA,SAAA,EAAA,GAAA,IAAA,IAAA,KAAA,EAAA,OAAA,UAAA,eAAA,KAAA,EAAA,KAAA,EAAA,GAAA,EAAA,MAAA,EAAA,IAAA,OAAA,SAAA,EAAA,GAAA,SAAA,IAAA,KAAA,YAAA,EAAA,EAAA,EAAA,GAAA,EAAA,UAAA,OAAA,EAAA,OAAA,OAAA,IAAA,EAAA,UAAA,EAAA,UAAA,IAAA,IAAA,GAAA,EAAA,oBAAA,EAAA,aAAA,MAAA,EAAA,SAAA,GAAA,SAAA,IAAA,OAAA,EAAA,KAAA,KAAA,gBAAA,KAAA,OAAA,EAAA,EAAA,GAAA,EAAA,UAAA,UAAA,WAAA,IAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,EAAA,GAAA,UAAA,GAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,kBAAA,EAAA,IAAA,sBAAA,CAAA,IAAA,EAAA,EAAA,KAAA,OAAA,IAAA,EAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,IAAA,OAAA,IAAA,EAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,MAAA,OAAA,IAAA,EAAA,CAAA,EAAA,GAAA,EAAA,EAAA,EAAA,IAAA,OAAA,IAAA,EAAA,CAAA,EAAA,GAAA,EAAA,EAAA,EAAA,UAAA,EAAA,EAAA,EAAA,SAAA,EAAA,EAAA,MAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,OAAA,GAAA,GAAA,EAAA,KAAA,EAAA,EAAA,MAAA,CAAA,EAAA,EAAA,EAAA,GAAA,EAAA,IAAA,EAAA,aAAA,SAAA,EAAA,KAAA,IAAA,EAAA,OAAA,OAAA,GAAA,GAAA,EAAA,KAAA,EAAA,EAAA,MAAA,CAAA,EAAA,EAAA,EAAA,GAAA,EAAA,IAAA,EAAA,aAAA,SAAA,EAAA,KAAA,EAAA,EAAA,CAAA,EAAA,IAAA,IAAA,EAAA,EAAA,KAAA,SAAA,GAAA,IAAA,EAAA,EAAA,OAAA,OAAA,OAAA,KAAA,GAAA,KAAA,SAAA,GAAA,MAAA,UAAA,EAAA,GAAA,OAAA,OAAA,OAAA,KAAA,GAAA,QAAA,SAAA,GAAA,UAAA,EAAA,GAAA,KAAA,EAAA,GAAA,GAAA,KAAA,IAAA,EAAA,CAAA,MAAA,CAAA,KAAA,EAAA,IAAA,GAAA,OAAA,CAAA,EAAA,CAAA,IAAA,QAAA,CAAA,EAAA,CAAA,IAAA,KAAA,YAAA,EAAA,CAAA,MAAA,CAAA,KAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,GAAA,OAAA,CAAA,EAAA,CAAA,UAAA,QAAA,CAAA,EAAA,CAAA,IAAA,KAAA,UAAA,QAAA,CAAA,QAAA,CAAA,KAAA,EAAA,WAAA,MAAA,CAAA,EAAA,IAAA,MAAA,CAAA,KAAA,EAAA,WAAA,MAAA,CAAA,EAAA,IAAA,aAAA,CAAA,KAAA,EAAA,UAAA,MAAA,IAAA,UAAA,GAAA,EAAA,OAAA,EAAA,EAAA,GAAA,EAAA,OAAA,EAAA,EAAA,KAAA,EAAA,CAAA,GAAA,EAAA,CAAA,cAAA,CAAA,IAAA,EAAA,IAAA,EAAA,IAAA,GAAA,WAAA,CAAA,IAAA,EAAA,IAAA,GAAA,eAAA,IAAA,IAAA,EAAA,EAAA,WAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,IAAA,GAAA,UAAA,GAAA,OAAA,IAAA,EAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IAAA,IAAA,IAAA,EAAA,UAAA,GAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,IAAA,IAAA,SAAA,GAAA,EAAA,cAAA,gBAAA,EAAA,WAAA,aAAA,EAAA,eAAA,iBAAA,CAAA,IAAA,EAAA,KAAA,MAAA,EAAA,WAAA,SAAA,EAAA,EAAA,GAAA,KAAA,UAAA,GAAA,KAAA,IAAA,GAAA,KAAA,KAAA,GAAA,KAAA,OAAA,GAAA,KAAA,KAAA,EAAA,aAAA,KAAA,QAAA,KAAA,KAAA,IAAA,EAAA,IAAA,KAAA,KAAA,EAAA,KAAA,KAAA,KAAA,EAAA,MAAA,KAAA,KAAA,KAAA,QAAA,EAAA,QAAA,KAAA,OAAA,EAAA,EAAA,YAAA,KAAA,OAAA,UAAA,EAAA,WAAA,OAAA,EAAA,UAAA,YAAA,WAAA,OAAA,KAAA,gBAAA,KAAA,eAAA,KAAA,aAAA,KAAA,iBAAA,KAAA,WAAA,EAAA,UAAA,cAAA,WAAA,IAAA,EAAA,KAAA,EAAA,EAAA,cAAA,EAAA,KAAA,QAAA,EAAA,gBAAA,QAAA,SAAA,GAAA,EAAA,UAAA,EAAA,IAAA,EAAA,KAAA,EAAA,WAAA,EAAA,UAAA,WAAA,SAAA,EAAA,GAAA,IAAA,EAAA,KAAA,EAAA,EAAA,WAAA,EAAA,KAAA,QAAA,EAAA,aAAA,QAAA,SAAA,GAAA,EAAA,UAAA,EAAA,EAAA,KAAA,MAAA,EAAA,UAAA,eAAA,WAAA,IAAA,EAAA,KAAA,EAAA,EAAA,eAAA,EAAA,KAAA,QAAA,EAAA,iBAAA,QAAA,SAAA,GAAA,EAAA,UAAA,EAAA,UAAA,EAAA,KAAA,EAAA,SAAA,EAAA,UAAA,aAAA,WAAA,IAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,KAAA,IAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,OAAA,EAAA,KAAA,IAAA,GAAA,EAAA,IAAA,EAAA,EAAA,GAAA,KAAA,WAAA,EAAA,GAAA,EAAA,KAAA,GAAA,KAAA,UAAA,GAAA,EAAA,UAAA,WAAA,WAAA,IAAA,IAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,SAAA,GAAA,IAAA,IAAA,EAAA,EAAA,UAAA,GAAA,EAAA,EAAA,EAAA,EAAA,YAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,YAAA,GAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,WAAA,OAAA,EAAA,EAAA,WAAA,QAAA,SAAA,IAAA,IAAA,EAAA,IAAA,EAAA,OAAA,EAAA,GAAA,EAAA,WAAA,QAAA,EAAA,KAAA,EAAA,EAAA,EAAA,KAAA,UAAA,OAAA,IAAA,EAAA,GAAA,KAAA,SAAA,KAAA,UAAA,EAAA,IAAA,EAAA,UAAA,SAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,GAAA,EAAA,KAAA,EAAA,IAAA,IAAA,IAAA,EAAA,EAAA,MAAA,GAAA,EAAA,KAAA,EAAA,EAAA,GAAA,EAAA,OAAA,GAAA,CAAA,MAAA,IAAA,EAAA,EAAA,EAAA,KAAA,KAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,YAAA,OAAA,IAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,GAAA,WAAA,OAAA,IAAA,GAAA,EAAA,GAAA,WAAA,KAAA,EAAA,YAAA,KAAA,EAAA,EAAA,EAAA,GAAA,OAAA,IAAA,EAAA,EAAA,EAAA,GAAA,MAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,GAAA,MAAA,EAAA,OAAA,EAAA,GAAA,IAAA,SAAA,EAAA,UAAA,gBAAA,WAAA,OAAA,KAAA,UAAA,KAAA,SAAA,GAAA,MAAA,SAAA,EAAA,QAAA,EAAA,UAAA,iBAAA,WAAA,OAAA,KAAA,UAAA,KAAA,SAAA,GAAA,MAAA,UAAA,EAAA,QAAA,EAAA,UAAA,gBAAA,SAAA,GAAA,OAAA,KAAA,UAAA,KAAA,SAAA,GAAA,OAAA,EAAA,KAAA,KAAA,EAAA,GAAA,GAAA,WAAA,SAAA,EAAA,GAAA,KAAA,KAAA,GAAA,KAAA,UAAA,EAAA,KAAA,KAAA,GAAA,KAAA,SAAA,GAAA,KAAA,MAAA,EAAA,KAAA,MAAA,GAAA,KAAA,uBAAA,EAAA,KAAA,cAAA,GAAA,KAAA,WAAA,EAAA,KAAA,KAAA,KAAA,KAAA,aAAA,EAAA,KAAA,WAAA,UAAA,KAAA,WAAA,GAAA,KAAA,QAAA,EAAA,KAAA,QAAA,EAAA,IAAA,EAAA,EAAA,SAAA,OAAA,IAAA,GAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,QAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,YAAA,OAAA,IAAA,GAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,WAAA,EAAA,EAAA,WAAA,OAAA,IAAA,EAAA,UAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,KAAA,EAAA,EAAA,QAAA,OAAA,IAAA,EAAA,EAAA,EAAA,KAAA,KAAA,EAAA,KAAA,SAAA,EAAA,KAAA,KAAA,EAAA,KAAA,QAAA,EAAA,KAAA,QAAA,EAAA,KAAA,YAAA,EAAA,KAAA,WAAA,EAAA,KAAA,SAAA,EAAA,KAAA,WAAA,EAAA,KAAA,uBAAA,EAAA,OAAA,KAAA,MAAA,EAAA,GAAA,KAAA,MAAA,KAAA,MAAA,OAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,UAAA,GAAA,EAAA,SAAA,KAAA,KAAA,SAAA,EAAA,EAAA,EAAA,GAAA,GAAA,SAAA,EAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,CAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,KAAA,OAAA,IAAA,aAAA,GAAA,OAAA,IAAA,aAAA,GAAA,CAAA,EAAA,KAAA,WAAA,KAAA,MAAA,KAAA,UAAA,EAAA,KAAA,MAAA,OAAA,OAAA,eAAA,EAAA,UAAA,gBAAA,CAAA,IAAA,WAAA,IAAA,EAAA,KAAA,cAAA,OAAA,OAAA,KAAA,cAAA,EAAA,IAAA,GAAA,YAAA,EAAA,cAAA,IAAA,OAAA,eAAA,EAAA,UAAA,iBAAA,CAAA,IAAA,WAAA,IAAA,EAAA,KAAA,cAAA,OAAA,OAAA,KAAA,cAAA,EAAA,IAAA,GAAA,YAAA,EAAA,cAAA,IAAA,OAAA,eAAA,EAAA,UAAA,cAAA,CAAA,IAAA,WAAA,IAAA,EAAA,KAAA,MAAA,OAAA,OAAA,KAAA,MAAA,EAAA,IAAA,YAAA,EAAA,cAAA,IAAA,OAAA,eAAA,EAAA,UAAA,eAAA,CAAA,IAAA,WAAA,IAAA,EAAA,KAAA,MAAA,OAAA,OAAA,KAAA,MAAA,EAAA,IAAA,YAAA,EAAA,cAAA,IAAA,OAAA,eAAA,EAAA,UAAA,UAAA,CAAA,IAAA,WAAA,IAAA,EAAA,KAAA,MAAA,OAAA,OAAA,KAAA,MAAA,EAAA,IAAA,YAAA,EAAA,cAAA,IAAA,OAAA,eAAA,EAAA,UAAA,eAAA,CAAA,IAAA,WAAA,OAAA,KAAA,MAAA,QAAA,GAAA,YAAA,EAAA,cAAA,IAAA,OAAA,eAAA,EAAA,UAAA,2BAAA,CAAA,IAAA,WAAA,OAAA,KAAA,wBAAA,GAAA,YAAA,EAAA,cAAA,IAAA,OAAA,eAAA,EAAA,UAAA,cAAA,CAAA,IAAA,WAAA,OAAA,KAAA,OAAA,YAAA,EAAA,cAAA,IAAA,OAAA,eAAA,EAAA,UAAA,gBAAA,CAAA,IAAA,WAAA,IAAA,IAAA,EAAA,GAAA,EAAA,KAAA,MAAA,OAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,KAAA,MAAA,MAAA,EAAA,GAAA,OAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,KAAA,GAAA,OAAA,EAAA,KAAA,GAAA,GAAA,YAAA,EAAA,cAAA,IAAA,EAAA,GAAA,GAAA,CAAA,cAAA,WAAA,IAAA,IAAA,KAAA,KAAA,eAAA,GAAA,OAAA,UAAA,eAAA,KAAA,KAAA,eAAA,IAAA,aAAA,EAAA,CAAA,IAAA,EAAA,KAAA,eAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,YAAA,IAAA,GAAA,IAAA,IAAA,KAAA,eAAA,GAAA,GAAA,MAAA,YAAA,WAAA,KAAA,eAAA,UAAA,IAAA,KAAA,eAAA,MAAA,QAAA,IAAA,KAAA,eAAA,MAAA,IAAA,IAAA,KAAA,eAAA,MAAA,KAAA,KAAA,eAAA,UAAA,EAAA,KAAA,eAAA,gBAAA,IAAA,gBAAA,WAAA,IAAA,EAAA,EAAA,KAAA,cAAA,OAAA,GAAA,QAAA,EAAA,MAAA,OAAA,EAAA,EAAA,aAAA,IAAA,OAAA,EAAA,EAAA,SAAA,EAAA,EAAA,GAAA,KAAA,eAAA,iBAAA,KAAA,eAAA,MAAA,CAAA,EAAA,MAAA,EAAA,GAAA,EAAA,MAAA,EAAA,MAAA,UAAA,WAAA,IAAA,EAAA,KAAA,eAAA,SAAA,KAAA,cAAA,QAAA,GAAA,KAAA,KAAA,QAAA,SAAA,IAAA,KAAA,MAAA,cAAA,WAAA,WAAA,KAAA,eAAA,KAAA,SAAA,OAAA,SAAA,EAAA,GAAA,OAAA,OAAA,OAAA,EAAA,IAAA,KAAA,qBAAA,WAAA,IAAA,KAAA,WAAA,CAAA,IAAA,EAAA,KAAA,eAAA,OAAA,EAAA,KAAA,cAAA,OAAA,GAAA,qBAAA,KAAA,OAAA,KAAA,KAAA,UAAA,EAAA,CAAA,IAAA,EAAA,EAAA,MAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,IAAA,GAAA,IAAA,IAAA,KAAA,MAAA,iBAAA,mBAAA,WAAA,IAAA,EAAA,KAAA,cAAA,OAAA,MAAA,GAAA,KAAA,eAAA,oBAAA,EAAA,KAAA,MAAA,EAAA,GAAA,KAAA,eAAA,sBAAA,EAAA,GAAA,YAAA,WAAA,IAAA,EAAA,KAAA,cAAA,KAAA,GAAA,GAAA,KAAA,WAAA,CAAA,EAAA,QAAA,EAAA,IAAA,EAAA,EAAA,MAAA,EAAA,CAAA,EAAA,EAAA,OAAA,GAAA,EAAA,EAAA,GAAA,EAAA,MAAA,IAAA,cAAA,WAAA,IAAA,EAAA,KAAA,eAAA,EAAA,EAAA,SAAA,EAAA,EAAA,aAAA,GAAA,QAAA,IAAA,KAAA,MAAA,kBAAA,MAAA,WAAA,IAAA,EAAA,QAAA,KAAA,eAAA,aAAA,EAAA,EAAA,KAAA,eAAA,aAAA,EAAA,IAAA,IAAA,KAAA,MAAA,SAAA,aAAA,WAAA,KAAA,eAAA,YAAA,MAAA,KAAA,eAAA,gBAAA,SAAA,aAAA,WAAA,KAAA,eAAA,YAAA,KAAA,eAAA,UAAA,KAAA,eAAA,gBAAA,SAAA,mBAAA,WAAA,KAAA,eAAA,YAAA,KAAA,eAAA,OAAA,GAAA,KAAA,eAAA,WAAA,KAAA,eAAA,QAAA,GAAA,KAAA,eAAA,gBAAA,eAAA,iBAAA,WAAA,KAAA,eAAA,YAAA,KAAA,eAAA,MAAA,KAAA,eAAA,gBAAA,YAAA,KAAA,KAAA,QAAA,WAAA,WAAA,KAAA,eAAA,YAAA,KAAA,eAAA,QAAA,EAAA,KAAA,eAAA,gBAAA,WAAA,KAAA,KAAA,OAAA,eAAA,WAAA,KAAA,eAAA,gBAAA,WAAA,YAAA,WAAA,KAAA,eAAA,gBAAA,QAAA,YAAA,WAAA,KAAA,eAAA,gBAAA,aAAA,WAAA,WAAA,KAAA,eAAA,gBAAA,OAAA,aAAA,WAAA,IAAA,EAAA,KAAA,eAAA,MAAA,KAAA,eAAA,iBAAA,IAAA,EAAA,EAAA,EAAA,KAAA,eAAA,WAAA,KAAA,eAAA,MAAA,EAAA,IAAA,EAAA,KAAA,eAAA,iBAAA,KAAA,eAAA,gBAAA,QAAA,IAAA,EAAA,QAAA,kBAAA,cAAA,WAAA,IAAA,EAAA,KAAA,KAAA,QAAA,0BAAA,IAAA,KAAA,eAAA,OAAA,OAAA,CAAA,gBAAA,QAAA,YAAA,MAAA,WAAA,MAAA,WAAA,GAAA,KAAA,gBAAA,eAAA,IAAA,KAAA,eAAA,YAAA,KAAA,eAAA,MAAA,KAAA,eAAA,gBAAA,cAAA,cAAA,WAAA,IAAA,EAAA,KAAA,cAAA,OAAA,MAAA,OAAA,EAAA,KAAA,eAAA,KAAA,EAAA,EAAA,OAAA,GAAA,EAAA,EAAA,IAAA,GAAA,EAAA,EAAA,IAAA,SAAA,GAAA,OAAA,EAAA,IAAA,OAAA,SAAA,GAAA,OAAA,GAAA,KAAA,QAAA,EAAA,EAAA,MAAA,MAAA,2DAAA,GAAA,IAAA,IAAA,EAAA,IAAA,MAAA,GAAA,KAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,IAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,IAAA,EAAA,KAAA,eAAA,SAAA,EAAA,KAAA,eAAA,UAAA,GAAA,aAAA,WAAA,IAAA,IAAA,EAAA,KAAA,cAAA,OAAA,MAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,KAAA,eAAA,MAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,GAAA,EAAA,GAAA,KAAA,eAAA,cAAA,EAAA,OAAA,KAAA,eAAA,aAAA,EAAA,KAAA,eAAA,WAAA,EAAA,GAAA,KAAA,eAAA,IAAA,EAAA,IAAA,KAAA,eAAA,MAAA,KAAA,eAAA,IAAA,OAAA,OAAA,KAAA,eAAA,OAAA,SAAA,GAAA,MAAA,QAAA,EAAA,aAAA,QAAA,GAAA,SAAA,EAAA,IAAA,WAAA,CAAA,KAAA,eAAA,YAAA,EAAA,IAAA,EAAA,KAAA,cAAA,QAAA,GAAA,EAAA,CAAA,IAAA,EAAA,EAAA,EAAA,OAAA,KAAA,eAAA,YAAA,EAAA,GAAA,IAAA,EAAA,KAAA,cAAA,SAAA,GAAA,EAAA,CAAA,IAAA,EAAA,EAAA,EAAA,OAAA,KAAA,eAAA,WAAA,EAAA,GAAA,IAAA,EAAA,KAAA,cAAA,OAAA,GAAA,EAAA,CAAA,KAAA,eAAA,YAAA,EAAA,IAAA,EAAA,EAAA,EAAA,OAAA,KAAA,eAAA,WAAA,EAAA,MAAA,uBAAA,WAAA,IAAA,EAAA,KAAA,cAAA,OAAA,MAAA,EAAA,KAAA,cAAA,QAAA,MAAA,OAAA,IAAA,KAAA,eAAA,MAAA,EAAA,KAAA,eAAA,KAAA,KAAA,eAAA,WAAA,EAAA,OAAA,EAAA,KAAA,EAAA,IAAA,KAAA,eAAA,KAAA,EAAA,KAAA,eAAA,WAAA,KAAA,IAAA,IAAA,EAAA,EAAA,OAAA,EAAA,QAAA,KAAA,eAAA,KAAA,EAAA,EAAA,KAAA,yBAAA,WAAA,IAAA,IAAA,EAAA,KAAA,eAAA,EAAA,EAAA,WAAA,EAAA,CAAA,IAAA,IAAA,IAAA,KAAA,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,QAAA,IAAA,IAAA,KAAA,eAAA,WAAA,EAAA,KAAA,MAAA,aAAA,WAAA,IAAA,EAAA,OAAA,OAAA,KAAA,eAAA,KAAA,SAAA,GAAA,OAAA,EAAA,MAAA,OAAA,IAAA,GAAA,EAAA,CAAA,IAAA,EAAA,EAAA,EAAA,OAAA,EAAA,MAAA,CAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,QAAA,WAAA,IAAA,EAAA,KAAA,cAAA,OAAA,EAAA,KAAA,cAAA,QAAA,EAAA,KAAA,cAAA,IAAA,GAAA,EAAA,MAAA,OAAA,EAAA,MAAA,OAAA,CAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,MAAA,OAAA,GAAA,IAAA,EAAA,MAAA,OAAA,CAAA,IAAA,EAAA,SAAA,EAAA,QAAA,IAAA,IAAA,EAAA,SAAA,IAAA,IAAA,EAAA,IAAA,IAAA,EAAA,EAAA,OAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,OAAA,IAAA,EAAA,OAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,EAAA,EAAA,IAAA,CAAA,EAAA,MAAA,EAAA,OAAA,EAAA,MAAA,IAAA,aAAA,WAAA,IAAA,EAAA,KAAA,KAAA,QAAA,0BAAA,IAAA,KAAA,KAAA,yBAAA,eAAA,IAAA,KAAA,eAAA,QAAA,KAAA,eAAA,YAAA,KAAA,eAAA,OAAA,KAAA,eAAA,gBAAA,eAAA,IAAA,GAAA,WAAA,OAAA,GAAA,OAAA,QAAA,SAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,IAAA,IAAA,IAAA,KAAA,EAAA,UAAA,GAAA,OAAA,UAAA,eAAA,KAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAAA,OAAA,IAAA,MAAA,KAAA,YAAA,MAAA,GAAA,WAAA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,KAAA,KAAA,GAAA,KAAA,YAAA,EAAA,KAAA,eAAA,GAAA,KAAA,SAAA,GAAA,KAAA,QAAA,KAAA,KAAA,aAAA,GAAA,KAAA,cAAA,GAAA,KAAA,WAAA,GAAA,KAAA,OAAA,EAAA,KAAA,QAAA,GAAA,KAAA,WAAA,EAAA,KAAA,WAAA,EAAA,YAAA,KAAA,cAAA,GAAA,KAAA,WAAA,GAAA,IAAA,EAAA,EAAA,KAAA,EAAA,EAAA,OAAA,EAAA,EAAA,QAAA,EAAA,EAAA,MAAA,EAAA,EAAA,SAAA,EAAA,EAAA,WAAA,OAAA,IAAA,EAAA,EAAA,YAAA,EAAA,EAAA,EAAA,QAAA,OAAA,IAAA,EAAA,KAAA,EAAA,KAAA,UAAA,EAAA,KAAA,SAAA,EAAA,SAAA,KAAA,KAAA,EAAA,KAAA,WAAA,EAAA,KAAA,WAAA,EAAA,KAAA,WAAA,EAAA,YAAA,GAAA,KAAA,OAAA,EAAA,KAAA,UAAA,EAAA,KAAA,QAAA,EAAA,KAAA,kBAAA,GAAA,KAAA,oBAAA,EAAA,EAAA,EAAA,MAAA,KAAA,cAAA,IAAA,EAAA,KAAA,oBAAA,KAAA,aAAA,GAAA,OAAA,EAAA,UAAA,kBAAA,SAAA,GAAA,IAAA,IAAA,KAAA,EAAA,GAAA,OAAA,UAAA,eAAA,KAAA,EAAA,GAAA,CAAA,IAAA,EAAA,EAAA,GAAA,KAAA,eAAA,GAAA,IAAA,EAAA,UAAA,oBAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,KAAA,OAAA,KAAA,GAAA,QAAA,SAAA,GAAA,EAAA,GAAA,QAAA,SAAA,EAAA,GAAA,EAAA,GAAA,GAAA,EAAA,aAAA,EAAA,OAAA,OAAA,KAAA,GAAA,QAAA,SAAA,GAAA,EAAA,GAAA,CAAA,EAAA,aAAA,EAAA,GAAA,GAAA,MAAA,IAAA,EAAA,SAAA,GAAA,GAAA,OAAA,UAAA,eAAA,KAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,mBAAA,EAAA,UAAA,GAAA,EAAA,QAAA,SAAA,EAAA,GAAA,EAAA,WAAA,EAAA,EAAA,cAAA,EAAA,IAAA,GAAA,GAAA,GAAA,GAAA,GAAA,CAAA,WAAA,EAAA,QAAA,MAAA,MAAA,GAAA,QAAA,MAAA,KAAA,EAAA,KAAA,IAAA,IAAA,KAAA,EAAA,EAAA,GAAA,IAAA,IAAA,KAAA,EAAA,GAAA,OAAA,UAAA,eAAA,KAAA,EAAA,GAAA,CAAA,IAAA,EAAA,EAAA,GAAA,OAAA,EAAA,EAAA,GAAA,CAAA,IAAA,EAAA,KAAA,mBAAA,EAAA,SAAA,GAAA,EAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,KAAA,cAAA,GAAA,GAAA,GAAA,GAAA,GAAA,CAAA,WAAA,OAAA,EAAA,UAAA,mBAAA,SAAA,EAAA,GAAA,MAAA,UAAA,EAAA,CAAA,MAAA,SAAA,EAAA,SAAA,EAAA,UAAA,EAAA,UAAA,EAAA,gBAAA,EAAA,cAAA,CAAA,OAAA,MAAA,EAAA,MAAA,IAAA,MAAA,MAAA,QAAA,KAAA,OAAA,KAAA,OAAA,SAAA,WAAA,KAAA,MAAA,MAAA,MAAA,UAAA,OAAA,EAAA,gBAAA,EAAA,UAAA,aAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,QAAA,WAAA,KAAA,OAAA,GAAA,EAAA,SAAA,WAAA,SAAA,EAAA,GAAA,IAAA,EAAA,IAAA,EAAA,MAAA,OAAA,EAAA,CAAA,GAAA,EAAA,OAAA,EAAA,MAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,OAAA,OAAA,GAAA,GAAA,GAAA,EAAA,KAAA,EAAA,EAAA,QAAA,EAAA,EAAA,GAAA,EAAA,CAAA,IAAA,EAAA,EAAA,EAAA,EAAA,QAAA,EAAA,EAAA,MAAA,CAAA,EAAA,EAAA,EAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,GAAA,EAAA,UAAA,aAAA,SAAA,GAAA,IAAA,EAAA,KAAA,EAAA,KAAA,KAAA,EAAA,EAAA,QAAA,IAAA,EAAA,EAAA,EAAA,WAAA,IAAA,GAAA,IAAA,IAAA,GAAA,SAAA,EAAA,IAAA,WAAA,MAAA,IAAA,MAAA,qBAAA,GAAA,IAAA,EAAA,KAAA,aAAA,KAAA,QAAA,KAAA,cAAA,IAAA,SAAA,EAAA,GAAA,OAAA,EAAA,gBAAA,cAAA,CAAA,GAAA,EAAA,UAAA,EAAA,aAAA,EAAA,aAAA,EAAA,GAAA,QAAA,EAAA,UAAA,EAAA,cAAA,MAAA,GAAA,QAAA,MAAA,KAAA,EAAA,UAAA,0BAAA,WAAA,IAAA,EAAA,KAAA,IAAA,KAAA,KAAA,QAAA,2BAAA,EAAA,KAAA,KAAA,yBAAA,KAAA,KAAA,QAAA,0BAAA,IAAA,KAAA,KAAA,cAAA,IAAA,EAAA,EAAA,QAAA,IAAA,KAAA,MAAA,EAAA,WAAA,IAAA,IAAA,EAAA,WAAA,IAAA,GAAA,WAAA,IAAA,QAAA,SAAA,GAAA,IAAA,GAAA,GAAA,KAAA,GAAA,MAAA,GAAA,QAAA,MAAA,MAAA,MAAA,GAAA,QAAA,MAAA,KAAA,EAAA,UAAA,YAAA,WAAA,IAAA,EAAA,KAAA,KAAA,4BAAA,IAAA,EAAA,OAAA,OAAA,KAAA,eAAA,EAAA,QAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,WAAA,EAAA,IAAA,GAAA,CAAA,KAAA,EAAA,UAAA,IAAA,EAAA,KAAA,KAAA,EAAA,MAAA,EAAA,MAAA,KAAA,EAAA,MAAA,KAAA,YAAA,EAAA,cAAA,EAAA,WAAA,EAAA,YAAA,UAAA,SAAA,EAAA,YAAA,EAAA,SAAA,EAAA,QAAA,EAAA,SAAA,QAAA,EAAA,EAAA,uBAAA,IAAA,OAAA,EAAA,EAAA,SAAA,WAAA,EAAA,WAAA,QAAA,EAAA,SAAA,IAAA,QAAA,EAAA,EAAA,cAAA,KAAA,GAAA,EAAA,aAAA,KAAA,GAAA,EAAA,MAAA,EAAA,MAAA,EAAA,MAAA,EAAA,QAAA,KAAA,cAAA,KAAA,KAAA,WAAA,GAAA,EAAA,UAAA,kBAAA,WAAA,IAAA,EAAA,KAAA,EAAA,GAAA,OAAA,KAAA,cAAA,QAAA,WAAA,IAAA,EAAA,KAAA,MAAA,KAAA,UAAA,EAAA,iBAAA,EAAA,KAAA,KAAA,GAAA,EAAA,GAAA,IAAA,GAAA,WAAA,OAAA,GAAA,OAAA,QAAA,SAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,IAAA,IAAA,IAAA,KAAA,EAAA,UAAA,GAAA,OAAA,UAAA,eAAA,KAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAAA,OAAA,IAAA,MAAA,KAAA,YAAA,MAAA,GAAA,WAAA,SAAA,IAAA,KAAA,cAAA,GAAA,KAAA,YAAA,OAAA,KAAA,KAAA,CAAA,EAAA,EAAA,GAAA,KAAA,IAAA,CAAA,EAAA,EAAA,GAAA,KAAA,KAAA,EAAA,KAAA,WAAA,EAAA,KAAA,YAAA,EAAA,KAAA,UAAA,GAAA,KAAA,aAAA,EAAA,IAAA,aAAA,SAAA,cAAA,UAAA,KAAA,cAAA,KAAA,aAAA,WAAA,MAAA,OAAA,EAAA,UAAA,QAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,KAAA,EAAA,EAAA,KAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,UAAA,OAAA,IAAA,GAAA,EAAA,EAAA,EAAA,MAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,CAAA,YAAA,GAAA,KAAA,YAAA,KAAA,GAAA,KAAA,KAAA,IAAA,GAAA,KAAA,IAAA,IAAA,GAAA,KAAA,IAAA,UAAA,EAAA,MAAA,EAAA,WAAA,CAAA,MAAA,EAAA,OAAA,GAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,OAAA,KAAA,WAAA,EAAA,IAAA,IAAA,EAAA,UAAA,WAAA,SAAA,EAAA,GAAA,IAAA,EAAA,GAAA,EAAA,CAAA,YAAA,EAAA,YAAA,GAAA,EAAA,GAAA,EAAA,OAAA,EAAA,WAAA,MAAA,QAAA,EAAA,WAAA,QAAA,EAAA,EAAA,EAAA,EAAA,MAAA,EAAA,OAAA,EAAA,OAAA,IAAA,KAAA,aAAA,aAAA,aAAA,kBAAA,aAAA,kBAAA,aAAA,mBAAA,MAAA,CAAA,CAAA,KAAA,EAAA,MAAA,EAAA,OAAA,EAAA,YAAA,KAAA,QAAA,aAAA,IAAA,KAAA,WAAA,EAAA,cAAA,EAAA,MAAA,KAAA,YAAA,EAAA,eAAA,EAAA,OAAA,IAAA,EAAA,EAAA,IAAA,uBAAA,EAAA,iBAAA,OAAA,KAAA,gBAAA,EAAA,EAAA,KAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,CAAA,MAAA,KAAA,EAAA,KAAA,aAAA,GAAA,EAAA,CAAA,CAAA,KAAA,EAAA,aAAA,KAAA,EAAA,MAAA,MAAA,CAAA,EAAA,EAAA,EAAA,QAAA,EAAA,QAAA,KAAA,QAAA,aAAA,IAAA,CAAA,CAAA,KAAA,EAAA,KAAA,gBAAA,EAAA,GAAA,MAAA,EAAA,aAAA,EAAA,MAAA,KAAA,QAAA,aAAA,KAAA,EAAA,UAAA,gBAAA,SAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,KAAA,EAAA,EAAA,IAAA,EAAA,EAAA,YAAA,EAAA,EAAA,IAAA,EAAA,EAAA,cAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,MAAA,EAAA,EAAA,IAAA,aAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,CAAA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,GAAA,KAAA,EAAA,GAAA,KAAA,IAAA,EAAA,IAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,IAAA,OAAA,EAAA,EAAA,CAAA,EAAA,EAAA,EAAA,KAAA,EAAA,UAAA,gBAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,GAAA,GAAA,EAAA,EAAA,UAAA,OAAA,IAAA,GAAA,EAAA,EAAA,EAAA,MAAA,OAAA,IAAA,GAAA,EAAA,EAAA,EAAA,MAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,QAAA,EAAA,EAAA,KAAA,WAAA,EAAA,EAAA,EAAA,KAAA,YAAA,EAAA,EAAA,EAAA,KAAA,WAAA,EAAA,EAAA,EAAA,KAAA,YAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,CAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,MAAA,IAAA,MAAA,uCAAA,KAAA,WAAA,KAAA,aAAA,EAAA,EAAA,EAAA,KAAA,MAAA,EAAA,KAAA,WAAA,KAAA,eAAA,EAAA,EAAA,EAAA,KAAA,MAAA,EAAA,KAAA,YAAA,KAAA,aAAA,KAAA,aAAA,MAAA,EAAA,EAAA,KAAA,aAAA,OAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,OAAA,IAAA,EAAA,EAAA,KAAA,YAAA,KAAA,YAAA,EAAA,GAAA,EAAA,KAAA,MAAA,EAAA,EAAA,GAAA,EAAA,KAAA,OAAA,EAAA,GAAA,KAAA,EAAA,KAAA,MAAA,EAAA,KAAA,WAAA,KAAA,aAAA,EAAA,KAAA,OAAA,EAAA,GAAA,IAAA,GAAA,EAAA,KAAA,MAAA,EAAA,EAAA,GAAA,EAAA,KAAA,OAAA,EAAA,GAAA,KAAA,EAAA,KAAA,MAAA,EAAA,KAAA,YAAA,KAAA,YAAA,EAAA,KAAA,OAAA,EAAA,GAAA,KAAA,KAAA,aAAA,MAAA,EAAA,OAAA,EAAA,KAAA,aAAA,OAAA,EAAA,QAAA,EAAA,KAAA,cAAA,UAAA,EAAA,YAAA,KAAA,cAAA,SAAA,EAAA,EAAA,KAAA,aAAA,MAAA,KAAA,aAAA,QAAA,KAAA,cAAA,UAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,UAAA,aAAA,SAAA,GAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,OAAA,EAAA,EAAA,QAAA,OAAA,KAAA,cAAA,aAAA,EAAA,EAAA,EAAA,IAAA,EAAA,UAAA,MAAA,SAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,KAAA,MAAA,EAAA,EAAA,GAAA,EAAA,KAAA,MAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,IAAA,GAAA,WAAA,OAAA,GAAA,OAAA,QAAA,SAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,IAAA,IAAA,IAAA,KAAA,EAAA,UAAA,GAAA,OAAA,UAAA,eeAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,GAAA,OAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,OAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,MAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,KAAA,GAAA,EAAA,QAAA,GAAA,EAAA,QAAA,MAAA,GAAA,IAAA,IAAA,EAAA,EAAA,UAAA,OAAA,IAAA,EAAA,IAAA,EAAA,EAAA,EAAA,QAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,WAAA,OAAA,IAAA,EAAA,IAAA,EAAA,EAAA,EAAA,iBAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,cAAA,OAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,gBAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,GAAA,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,EAAA,OAAA,CAAA,IAAA,EAAA,EAAA,QAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,KAAA,GAAA,GAAA,GAAA,GAAA,CAAA,IAAA,EAAA,MAAA,KAAA,EAAA,QAAA,CAAA,IAAA,EAAA,EAAA,QAAA,EAAA,EAAA,EAAA,GAAA,IAAA,IAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,GAAA,GAAA,EAAA,EAAA,GAAA,KAAA,EAAA,CAAA,GAAA,EAAA,MAAA,GAAA,EAAA,KAAA,GAAA,GAAA,GAAA,GAAA,CAAA,IAAA,EAAA,MAAA,KAAA,GAAA,EAAA,GAAA,EAAA,KAAA,GAAA,GAAA,EAAA,EAAA,OAAA,KAAA,IAAA,EAAA,EAAA,KAAA,SAAA,EAAA,GAAA,OAAA,EAAA,MAAA,EAAA,QAAA,MAAA,EAAA,GAAA,KAAA,SAAA,EAAA,GAAA,OAAA,EAAA,MAAA,EAAA,QAAA,IAAA,SAAA,GAAA,OAAA,WAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,IAAA,GAAA,UAAA,GAAA,OAAA,IAAA,EAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IAAA,IAAA,IAAA,EAAA,UAAA,GAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,MAAA,EAAA,OAAA,EAAA,OAAA,OAAA,GAAA,EAAA,OAAA,EAAA,KAAA,IAAA,GAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,IAAA,IAAA,EAAA,UAAA,SAAA,EAAA,GAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,KAAA,IAAA,MAAA,GAAA,EAAA,IAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,MAAA,IAAA,MAAA,GAAA,EAAA,IAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,KAAA,EAAA,EAAA,QAAA,EAAA,EAAA,MAAA,aAAA,EAAA,EAAA,IAAA,EAAA,SAAA,GAAA,EAAA,MAAA,KAAA,EAAA,GAAA,GAAA,EAAA,EAAA,MAAA,EAAA,GAAA,KAAA,WAAA,GAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA,MAAA,EAAA,KAAA,WAAA,GAAA,EAAA,EAAA,GAAA,MAAA,EAAA,GAAA,OAAA,EAAA,IAAA,KAAA,GAAA,IAAA,IAAA,OAAA,EAAA,CAAA,KAAA,EAAA,GAAA,MAAA,EAAA,GAAA,OAAA,EAAA,IAAA,mBAAA,SAAA,EAAA,OAAA,UAAA,WAAA,OAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,SAAA,GAAA,OAAA,SAAA,GAAA,GAAA,EAAA,MAAA,IAAA,UAAA,mCAAA,KAAA,GAAA,IAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,OAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,SAAA,EAAA,KAAA,GAAA,GAAA,EAAA,SAAA,EAAA,EAAA,KAAA,EAAA,EAAA,KAAA,KAAA,OAAA,EAAA,OAAA,EAAA,EAAA,IAAA,EAAA,CAAA,EAAA,EAAA,GAAA,EAAA,QAAA,EAAA,IAAA,KAAA,EAAA,KAAA,EAAA,EAAA,EAAA,MAAA,KAAA,EAAA,OAAA,EAAA,QAAA,CAAA,MAAA,EAAA,GAAA,MAAA,GAAA,KAAA,EAAA,EAAA,QAAA,EAAA,EAAA,GAAA,EAAA,CAAA,GAAA,SAAA,KAAA,EAAA,EAAA,EAAA,IAAA,MAAA,EAAA,KAAA,MAAA,SAAA,QAAA,MAAA,GAAA,EAAA,EAAA,MAAA,OAAA,GAAA,EAAA,EAAA,OAAA,KAAA,IAAA,EAAA,IAAA,IAAA,EAAA,IAAA,CAAA,EAAA,EAAA,SAAA,GAAA,IAAA,EAAA,MAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAA,IAAA,CAAA,EAAA,MAAA,EAAA,GAAA,MAAA,GAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,GAAA,CAAA,EAAA,MAAA,EAAA,GAAA,EAAA,EAAA,MAAA,GAAA,GAAA,EAAA,MAAA,EAAA,GAAA,CAAA,EAAA,MAAA,EAAA,GAAA,EAAA,IAAA,KAAA,GAAA,MAAA,EAAA,IAAA,EAAA,IAAA,MAAA,EAAA,KAAA,MAAA,SAAA,EAAA,EAAA,KAAA,EAAA,GAAA,MAAA,GAAA,EAAA,CAAA,EAAA,GAAA,EAAA,EAAA,QAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,MAAA,EAAA,GAAA,MAAA,CAAA,MAAA,EAAA,GAAA,EAAA,QAAA,EAAA,MAAA,GAAA,CAAA,CAAA,EAAA,OAAA,MAAA,GAAA,WAAA,SAAA,EAAA,GAAA,KAAA,aAAA,GAAA,KAAA,UAAA,EAAA,KAAA,MAAA,GAAA,KAAA,UAAA,GAAA,KAAA,YAAA,EAAA,KAAA,MAAA,EAAA,KAAA,eAAA,GAAA,KAAA,eAAA,KAAA,KAAA,aAAA,EAAA,KAAA,UAAA,GAAA,KAAA,aAAA,OAAA,OAAA,GAAA,GAAA,KAAA,iBAAA,IAAA,EAAA,aAAA,EAAA,YAAA,KAAA,UAAA,EAAA,WAAA,KAAA,MAAA,WAAA,KAAA,UAAA,GAAA,EAAA,IAAA,KAAA,KAAA,SAAA,EAAA,IAAA,cAAA,KAAA,eAAA,IAAA,IAAA,OAAA,EAAA,UAAA,KAAA,WAAA,OAAA,GAAA,UAAA,OAAA,EAAA,WAAA,IAAA,EAAA,OAAA,GAAA,KAAA,SAAA,GAAA,OAAA,EAAA,OAAA,KAAA,EAAA,OAAA,EAAA,iBAAA,KAAA,YAAA,EAAA,SAAA,EAAA,IAAA,WAAA,CAAA,EAAA,GAAA,CAAA,EAAA,QAAA,IAAA,CAAA,KAAA,OAAA,EAAA,gBAAA,YAAA,QAAA,MAAA,mCAAA,CAAA,IAAA,KAAA,EAAA,OAAA,EAAA,OAAA,CAAA,EAAA,GAAA,KAAA,EAAA,MAAA,CAAA,EAAA,EAAA,gBAAA,QAAA,KAAA,EAAA,OAAA,EAAA,OAAA,CAAA,EAAA,KAAA,QAAA,KAAA,EAAA,EAAA,OAAA,EAAA,MAAA,EAAA,KAAA,EAAA,OAAA,KAAA,cAAA,KAAA,WAAA,KAAA,YAAA,SAAA,EAAA,IAAA,WAAA,CAAA,EAAA,IAAA,KAAA,MAAA,OAAA,OAAA,KAAA,MAAA,KAAA,cAAA,EAAA,KAAA,MAAA,CAAA,EAAA,EAAA,gBAAA,SAAA,KAAA,MAAA,KAAA,aAAA,KAAA,EAAA,OAAA,EAAA,MAAA,EAAA,OAAA,CAAA,EAAA,IAAA,KAAA,EAAA,OAAA,KAAA,YAAA,CAAA,EAAA,KAAA,WAAA,CAAA,EAAA,GAAA,KAAA,EAAA,MAAA,CAAA,EAAA,EAAA,QAAA,KAAA,EAAA,MAAA,CAAA,SAAA,EAAA,UAAA,KAAA,WAAA,OAAA,GAAA,UAAA,OAAA,EAAA,WAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,GAAA,KAAA,SAAA,GAAA,OAAA,EAAA,OAAA,KAAA,EAAA,OAAA,EAAA,KAAA,aAAA,EAAA,EAAA,UAAA,EAAA,EAAA,SAAA,OAAA,IAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAA,KAAA,CAAA,EAAA,EAAA,SAAA,CAAA,EAAA,GAAA,KAAA,EAAA,OAAA,EAAA,MAAA,EAAA,OAAA,CAAA,EAAA,GAAA,KAAA,GAAA,MAAA,OAAA,EAAA,EAAA,SAAA,MAAA,OAAA,EAAA,EAAA,UAAA,EAAA,EAAA,MAAA,EAAA,EAAA,OAAA,EAAA,kBAAA,EAAA,KAAA,GAAA,KAAA,MAAA,GAAA,EAAA,MAAA,EAAA,KAAA,EAAA,MAAA,CAAA,SAAA,EAAA,UAAA,SAAA,WAAA,KAAA,eAAA,IAAA,EAAA,KAAA,MAAA,KAAA,cAAA,KAAA,UAAA,KAAA,eAAA,eAAA,EAAA,UAAA,UAAA,WAAA,IAAA,EAAA,KAAA,EAAA,EAAA,KAAA,UAAA,QAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,KAAA,GAAA,SAAA,GAAA,UAAA,EAAA,CAAA,IAAA,IAAA,EAAA,IAAA,EAAA,UAAA,OAAA,EAAA,EAAA,IAAA,GAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,WAAA,EAAA,OAAA,KAAA,EAAA,KAAA,QAAA,EAAA,UAAA,QAAA,WAAA,OAAA,GAAA,UAAA,OAAA,EAAA,WAAA,IAAA,EAAA,OAAA,GAAA,KAAA,SAAA,GAAA,OAAA,EAAA,OAAA,KAAA,EAAA,MAAA,CAAA,EAAA,KAAA,oBAAA,KAAA,EAAA,OAAA,EAAA,OAAA,CAAA,EAAA,KAAA,WAAA,KAAA,EAAA,OAAA,EAAA,EAAA,OAAA,KAAA,YAAA,EAAA,CAAA,EAAA,SAAA,EAAA,UAAA,iBAAA,WAAA,OAAA,GAAA,UAAA,OAAA,EAAA,WAAA,OAAA,GAAA,KAAA,SAAA,GAAA,OAAA,EAAA,OAAA,KAAA,EAAA,OAAA,IAAA,KAAA,UAAA,OAAA,CAAA,EAAA,IAAA,QAAA,KAAA,oDAAA,CAAA,EAAA,KAAA,SAAA,KAAA,EAAA,EAAA,OAAA,KAAA,cAAA,KAAA,WAAA,KAAA,YAAA,KAAA,YAAA,EAAA,EAAA,MAAA,EAAA,KAAA,EAAA,MAAA,CAAA,SAAA,EAAA,UAAA,QAAA,SAAA,EAAA,GAAA,OAAA,GAAA,UAAA,OAAA,EAAA,WAAA,IAAA,EAAA,EAAA,EAAA,OAAA,GAAA,KAAA,SAAA,GAAA,OAAA,EAAA,OAAA,KAAA,EAAA,OAAA,KAAA,WAAA,KAAA,eAAA,CAAA,IAAA,EAAA,GAAA,EAAA,KAAA,aAAA,iBAAA,CAAA,GAAA,KAAA,eAAA,QAAA,EAAA,KAAA,aAAA,KAAA,WAAA,EAAA,GAAA,SAAA,EAAA,IAAA,WAAA,CAAA,EAAA,GAAA,CAAA,EAAA,EAAA,gBAAA,QAAA,EAAA,GAAA,KAAA,KAAA,MAAA,SAAA,KAAA,EAAA,OAAA,EAAA,OAAA,CAAA,EAAA,KAAA,QAAA,KAAA,EAAA,OAAA,EAAA,EAAA,OAAA,EAAA,KAAA,YAAA,GAAA,CAAA,EAAA,GAAA,KAAA,EAAA,OAAA,KAAA,eAAA,GAAA,CAAA,EAAA,KAAA,WAAA,KAAA,EAAA,EAAA,EAAA,OAAA,EAAA,MAAA,EAAA,KAAA,EAAA,OAAA,KAAA,YAAA,EAAA,CAAA,EAAA,EAAA,EAAA,GAAA,SAAA,EAAA,UAAA,gBAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,GAAA,UAAA,OAAA,EAAA,WAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,GAAA,KAAA,SAAA,GAAA,OAAA,EAAA,OAAA,KAAA,EAAA,OAAA,EAAA,KAAA,UAAA,EAAA,EAAA,GAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,MAAA,QAAA,IAAA,QAAA,EAAA,EAAA,UAAA,IAAA,OAAA,EAAA,EAAA,QAAA,EAAA,EAAA,GAAA,gBAAA,eAAA,EAAA,GAAA,KAAA,IAAA,aAAA,IAAA,EAAA,GAAA,EAAA,CAAA,CAAA,KAAA,IAAA,aAAA,GAAA,MAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,KAAA,QAAA,aAAA,KAAA,GAAA,EAAA,GAAA,MAAA,EAAA,EAAA,OAAA,EAAA,EAAA,KAAA,EAAA,CAAA,CAAA,KAAA,IAAA,aAAA,GAAA,MAAA,GAAA,CAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,KAAA,QAAA,aAAA,KAAA,EAAA,GAAA,SAAA,EAAA,IAAA,WAAA,CAAA,EAAA,GAAA,CAAA,EAAA,EAAA,gBAAA,QAAA,EAAA,GAAA,KAAA,KAAA,MAAA,QAAA,KAAA,EAAA,OAAA,EAAA,OAAA,CAAA,EAAA,KAAA,QAAA,KAAA,EAAA,OAAA,EAAA,EAAA,OAAA,EAAA,KAAA,YAAA,GAAA,CAAA,EAAA,GAAA,KAAA,EAAA,OAAA,KAAA,eAAA,GAAA,CAAA,EAAA,KAAA,WAAA,KAAA,EAAA,EAAA,EAAA,OAAA,EAAA,MAAA,EAAA,KAAA,EAAA,OAAA,KAAA,YAAA,EAAA,CAAA,EAAA,EAAA,EAAA,GAAA,SAAA,EAAA,UAAA,YAAA,WAAA,IAAA,EAAA,EAAA,KAAA,aAAA,EAAA,EAAA,KAAA,EAAA,EAAA,UAAA,EAAA,EAAA,iBAAA,KAAA,UAAA,KAAA,MAAA,WAAA,EAAA,IAAA,EAAA,EAAA,KAAA,UAAA,EAAA,EAAA,GAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,KAAA,MAAA,KAAA,GAAA,IAAA,EAAA,cAAA,CAAA,IAAA,EAAA,KAAA,MAAA,KAAA,KAAA,MAAA,IAAA,KAAA,QAAA,EAAA,KAAA,MAAA,IAAA,GAAA,cAAA,IAAA,OAAA,EAAA,EAAA,GAAA,EAAA,OAAA,IAAA,EAAA,EAAA,IAAA,SAAA,GAAA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,MAAA,UAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,OAAA,IAAA,EAAA,EAAA,EAAA,OAAA,EAAA,KAAA,IAAA,aAAA,EAAA,EAAA,EAAA,GAAA,SAAA,CAAA,IAAA,EAAA,SAAA,EAAA,IAAA,YAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,SAAA,IAAA,EAAA,CAAA,KAAA,QAAA,MAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,OAAA,OAAA,EAAA,EAAA,CAAA,KAAA,IAAA,aAAA,EAAA,EAAA,GAAA,KAAA,GAAA,aAAA,IAAA,EAAA,EAAA,IAAA,EAAA,UAAA,eAAA,SAAA,GAAA,IAAA,EAAA,EAAA,GAAA,EAAA,KAAA,UAAA,KAAA,SAAA,GAAA,OAAA,EAAA,OAAA,EAAA,OAAA,aAAA,KAAA,SAAA,GAAA,OAAA,EAAA,SAAA,SAAA,YAAA,OAAA,EAAA,EAAA,OAAA,aAAA,KAAA,SAAA,GAAA,OAAA,EAAA,SAAA,SAAA,YAAA,EAAA,KAAA,EAAA,KAAA,IAAA,EAAA,KAAA,aAAA,EAAA,EAAA,iBAAA,OAAA,IAAA,GAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,GAAA,EAAA,GAAA,GAAA,EAAA,IAAA,sBAAA,CAAA,IAAA,EAAA,EAAA,OAAA,CAAA,EAAA,EAAA,EAAA,OAAA,EAAA,OAAA,EAAA,IAAA,WAAA,EAAA,MAAA,IAAA,GAAA,EAAA,OAAA,EAAA,SAAA,EAAA,KAAA,CAAA,IAAA,EAAA,EAAA,cAAA,EAAA,MAAA,EAAA,CAAA,EAAA,EAAA,EAAA,eAAA,EAAA,OAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,KAAA,EAAA,MAAA,EAAA,IAAA,EAAA,EAAA,OAAA,EAAA,IAAA,GAAA,GAAA,EAAA,KAAA,EAAA,EAAA,aAAA,CAAA,GAAA,IAAA,EAAA,EAAA,OAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,cAAA,GAAA,MAAA,OAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,KAAA,eAAA,MAAA,EAAA,EAAA,EAAA,GAAA,EAAA,QAAA,QAAA,MAAA,EAAA,EAAA,QAAA,aAAA,OAAA,IAAA,EAAA,UAAA,QAAA,WAAA,OAAA,GAAA,UAAA,OAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,GAAA,KAAA,SAAA,GAAA,OAAA,EAAA,OAAA,KAAA,EAAA,OAAA,EAAA,KAAA,eAAA,kBAAA,KAAA,UAAA,GAAA,CAAA,EAAA,KAAA,QAAA,KAAA,EAAA,OAAA,EAAA,EAAA,OAAA,CAAA,EAAA,KAAA,YAAA,UAAA,EAAA,UAAA,YAAA,SAAA,GAAA,IAAA,EAAA,SAAA,EAAA,IAAA,WAAA,GAAA,EAAA,IAAA,SAAA,OAAA,EAAA,IAAA,EAAA,EAAA,EAAA,KAAA,MAAA,EAAA,EAAA,aAAA,EAAA,EAAA,QAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,IAAA,SAAA,EAAA,GAAA,IAAA,EAAA,OAAA,EAAA,IAAA,EAAA,MAAA,EAAA,GAAA,QAAA,CAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IAAA,SAAA,GAAA,IAAA,EAAA,EAAA,EAAA,MAAA,OAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,EAAA,MAAA,EAAA,EAAA,GAAA,OAAA,GAAA,GAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,GAAA,GAAA,GAAA,EAAA,OAAA,IAAA,IAAA,EAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,KAAA,EAAA,EAAA,MAAA,EAAA,EAAA,OAAA,EAAA,GAAA,GAAA,IAAA,EAAA,MAAA,CAAA,WAAA,GAAA,IAAA,EAAA,WAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,IAAA,GAAA,UAAA,GAAA,OAAA,IAAA,EAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IAAA,IAAA,IAAA,EAAA,UAAA,GAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,CAAA,GAAA,EAAA,OAAA,KAAA,GAAA,IAAA,SAAA,GAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,KAAA,EAAA,EAAA,MAAA,EAAA,EAAA,OAAA,SAAA,GAAA,OAAA,EAAA,KAAA,OAAA,GAAA,EAAA,IAAA,EAAA,GAAA,GAAA,CAAA,KAAA,EAAA,SAAA,EAAA,KAAA,EAAA,GAAA,GAAA,MAAA,IAAA,QAAA,MAAA,OAAA,EAAA,OAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,MAAA,OAAA,GAAA,EAAA,UAAA,UAAA,SAAA,GAAA,IAAA,EAAA,GAAA,UAAA,EAAA,KAAA,GAAA,SAAA,EAAA,MAAA,EAAA,QAAA,KAAA,YAAA,EAAA,IAAA,WAAA,QAAA,EAAA,EAAA,cAAA,IAAA,OAAA,EAAA,EAAA,gBAAA,EAAA,OAAA,cAAA,EAAA,OAAA,cAAA,OAAA,IAAA,EAAA,OAAA,cAAA,EAAA,OAAA,cAAA,OAAA,GAAA,WAAA,KAAA,UAAA,KAAA,EAAA,IAAA,MAAA,WAAA,EAAA,IAAA,cAAA,QAAA,KAAA,EAAA,OAAA,KAAA,IAAA,EAAA,OAAA,OAAA,kBAAA,GAAA,EAAA,KAAA,CAAA,IAAA,EAAA,EAAA,KAAA,EAAA,KAAA,eAAA,gBAAA,GAAA,KAAA,UAAA,KAAA,EAAA,UAAA,KAAA,WAAA,OAAA,GAAA,UAAA,OAAA,EAAA,WAAA,IAAA,EAAA,EAAA,EAAA,OAAA,GAAA,KAAA,SAAA,GAAA,OAAA,EAAA,OAAA,KAAA,EAAA,OAAA,EAAA,KAAA,eAAA,mBAAA,EAAA,EAAA,KAAA,MAAA,KAAA,EAAA,OAAA,EAAA,IAAA,EAAA,CAAA,KAAA,EAAA,KAAA,MAAA,EAAA,MAAA,cAAA,EAAA,MAAA,MAAA,KAAA,MAAA,OAAA,CAAA,EAAA,EAAA,gBAAA,KAAA,IAAA,KAAA,EAAA,MAAA,CAAA,EAAA,EAAA,cAAA,EAAA,UAAA,YAAA,WAAA,KAAA,UAAA,GAAA,EAAA,GAAA,GAAA,cAAA,IAAA,QAAA,EAAA,GAAA,SAAA,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,EAAA,GAAA,QAAA,IAAA,EAAA,EAAA,GAAA,CAAA,QAAA,IAAA,OAAA,EAAA,GAAA,EAAA,EAAA,QAAA,GAAA,EAAA,QAAA,OAAA,EAAA,EAAA,EAAA,EAAA,KAAA,IAAA,IAAA,KAAA,EAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,IAAA,OAAA,eAAA,EAAA,EAAA,CAAA,YAAA,EAAA,IAAA,EAAA,OAAA,EAAA,EAAA,WAAA,GAAA,iBAAA,WAAA,OAAA,WAAA,IAAA,OAAA,MAAA,IAAA,SAAA,cAAA,GAAA,MAAA,GAAA,GAAA,iBAAA,OAAA,OAAA,QAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAA,OAAA,UAAA,eAAA,KAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,oBAAA,QAAA,OAAA,aAAA,OAAA,eAAA,EAAA,OAAA,YAAA,CAAA,MAAA,WAAA,OAAA,eAAA,EAAA,aAAA,CAAA,OAAA,MAAA,EAAA,MAAA;;;ACAA,IAAA,GAAA,SAAA,EAAA,GAAA,iBAAA,SAAA,iBAAA,OAAA,OAAA,QAAA,IAAA,mBAAA,GAAA,EAAA,IAAA,EAAA,GAAA,GAAA,iBAAA,QAAA,QAAA,SAAA,KAAA,EAAA,SAAA,EAAA,UAAA,GAAA,EAAA,SAAA,aAAA,KAAA,CAAA,KAAA,WAAA,MAAA,MAAA,aAAA,IAAA,EAAA,CAAA,IAAA,CAAA,EAAA,EAAA,KAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,CAAA,SAAA,IAAA,EAAA,WAAA,IAAA,GAAA,IAAA,IAAA,GAAA,YAAA,IAAA,IAAA,IAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,CAAA,YAAA,IAAA,IAAA,IAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,CAAA,SAAA,IAAA,EAAA,YAAA,IAAA,EAAA,UAAA,IAAA,EAAA,SAAA,IAAA,EAAA,MAAA,IAAA,EAAA,MAAA,IAAA,EAAA,MAAA,IAAA,EAAA,eAAA,IAAA,EAAA,QAAA,IAAA,EAAA,KAAA,IAAA,EAAA,UAAA,IAAA,EAAA,uBAAA,IAAA,IAAA,IAAA,EAAA,GAAA,SAAA,IAAA,IAAA,EAAA,GAAA,oBAAA,OAAA,EAAA,YAAA,QAAA,IAAA,EAAA,EAAA,EAAA,EAAA,MAAA,CAAA,GAAA,oBAAA,KAAA,MAAA,IAAA,MAAA,kCAAA,EAAA,KAAA,OAAA,EAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,IAAA,OAAA,EAAA,KAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,CAAA,wBAAA,KAAA,SAAA,GAAA,MAAA,yCAAA,EAAA,2BAAA,EAAA,iBAAA,eAAA,IAAA,EAAA,2BAAA,IAAA,EAAA,sBAAA,KAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,YAAA,EAAA,EAAA,aAAA,EAAA,EAAA,QAAA,EAAA,EAAA,cAAA,MAAA,qCAAA,EAAA,2DAAA,EAAA,EAAA,EAAA,UAAA,EAAA,EAAA,UAAA,EAAA,+KAAA,EAAA,yCAAA,EAAA,+CAAA,EAAA,uEAAA,EAAA,oDAAA,EAAA,eAAA,kEAAA,6BAAA,KAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,QAAA,EAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,EAAA,eAAA,EAAA,EAAA,YAAA,MAAA,2CAAA,EAAA,2DAAA,EAAA,EAAA,EAAA,UAAA,EAAA,EAAA,UAAA,EAAA,+KAAA,EAAA,yCAAA,EAAA,+CAAA,EAAA,uEAAA,EAAA,oDAAA,EAAA,gEAAA,sBAAA,KAAA,SAAA,EAAA,GAAA,MAAA,oCAAA,EAAA,4DAAA,EAAA,cAAA,kCAAA,EAAA,eAAA,0CAAA,IAAA,EAAA,CAAA,WAAA,CAAA,IAAA,IAAA,QAAA,GAAA,gBAAA,MAAA,EAAA,EAAA,UAAA,GAAA,IAAA,EAAA,IAAA,EAAA,cAAA,EAAA,YAAA,cAAA,MAAA,EAAA,EAAA,MAAA,IAAA,WAAA,SAAA,IAAA,KAAA,IAAA,GAAA,OAAA,EAAA,UAAA,IAAA,SAAA,EAAA,GAAA,KAAA,IAAA,GAAA,GAAA,EAAA,UAAA,IAAA,SAAA,GAAA,OAAA,KAAA,IAAA,IAAA,EAAA,KAAA,IAAA,EAAA,EAAA,EAAA,EAAA,SAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,OAAA,EAAA,WAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,IAAA,GAAA,UAAA,GAAA,OAAA,IAAA,EAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IAAA,IAAA,IAAA,EAAA,UAAA,GAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,CAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,OAAA,EAAA,GAAA,EAAA,KAAA,EAAA,OAAA,SAAA,EAAA,GAAA,OAAA,EAAA,KAAA,IAAA,OAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,IAAA,EAAA,OAAA,MAAA,SAAA,EAAA,YAAA,EAAA,GAAA,KAAA,IAAA,IAAA,EAAA,EAAA,OAAA,EAAA,gBAAA,EAAA,IAAA,EAAA,SAAA,EAAA,UAAA,EAAA,EAAA,EAAA,EAAA,IAAA,GAAA,SAAA,EAAA,GAAA,KAAA,OAAA,EAAA,MAAA,GAAA,GAAA,KAAA,SAAA,EAAA,EAAA,EAAA,GAAA,GAAA,IAAA,EAAA,OAAA,MAAA,GAAA,GAAA,IAAA,EAAA,IAAA,gBAAA,OAAA,EAAA,OAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,QAAA,EAAA,IAAA,EAAA,QAAA,EAAA,OAAA,IAAA,EAAA,EAAA,OAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,iBAAA,EAAA,IAAA,EAAA,OAAA,EAAA,IAAA,EAAA,MAAA,IAAA,MAAA,aAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA,eAAA,EAAA,SAAA,SAAA,EAAA,EAAA,EAAA,GAAA,GAAA,IAAA,EAAA,OAAA,MAAA,GAAA,IAAA,EAAA,EAAA,OAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,IAAA,EAAA,iBAAA,EAAA,UAAA,EAAA,kCAAA,EAAA,kCAAA,EAAA,oBAAA,mCAAA,EAAA,kCAAA,EAAA,sBAAA,IAAA,MAAA,SAAA,EAAA,2BAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA,iCAAA,IAAA,EAAA,IAAA,gBAAA,EAAA,qBAAA,GAAA,sCAAA,SAAA,GAAA,EAAA,UAAA,KAAA,EAAA,WAAA,MAAA,EAAA,UAAA,KAAA,EAAA,WAAA,MAAA,EAAA,UAAA,KAAA,EAAA,WAAA,MAAA,EAAA,UAAA,KAAA,EAAA,WAAA,MAAA,EAAA,UAAA,KAAA,EAAA,WAAA,MAAA,EAAA,UAAA,KAAA,EAAA,WAAA,MAAA,EAAA,UAAA,KAAA,EAAA,WAAA,MAAA,EAAA,UAAA,KAAA,EAAA,WAAA,MAAA,CAAA,IAAA,EAAA,KAAA,SAAA,GAAA,EAAA,SAAA,MAAA,EAAA,WAAA,QAAA,CAAA,IAAA,EAAA,KAAA,SAAA,GAAA,EAAA,EAAA,UAAA,GAAA,YAAA,EAAA,EAAA,UAAA,GAAA,YAAA,CAAA,IAAA,EAAA,KAAA,SAAA,GAAA,EAAA,EAAA,WAAA,OAAA,aAAA,EAAA,EAAA,WAAA,OAAA,aAAA,EAAA,EAAA,WAAA,OAAA,aAAA,EAAA,EAAA,SAAA,OAAA,WAAA,EAAA,EAAA,SAAA,OAAA,WAAA,EAAA,EAAA,SAAA,OAAA,WAAA,EAAA,EAAA,KAAA,OAAA,OAAA,EAAA,EAAA,UAAA,OAAA,YAAA,EAAA,EAAA,UAAA,OAAA,YAAA,EAAA,EAAA,UAAA,OAAA,YAAA,EAAA,EAAA,WAAA,OAAA,aAAA,EAAA,EAAA,WAAA,OAAA,aAAA,EAAA,EAAA,WAAA,OAAA,aAAA,EAAA,EAAA,WAAA,OAAA,aAAA,EAAA,EAAA,aAAA,OAAA,eAAA,EAAA,EAAA,MAAA,MAAA,QAAA,EAAA,EAAA,IAAA,MAAA,MAAA,CAAA,IAAA,EAAA,KAAA,IAAA,EAAA,EAAA,SAAA,EAAA,EAAA,GAAA,KAAA,KAAA,EAAA,KAAA,KAAA,EAAA,KAAA,SAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,KAAA,KAAA,EAAA,KAAA,KAAA,EAAA,KAAA,SAAA,GAAA,EAAA,WAAA,SAAA,KAAA,OAAA,EAAA,gBAAA,WAAA,OAAA,EAAA,IAAA,iBAAA,EAAA,aAAA,WAAA,OAAA,EAAA,IAAA,WAAA,UAAA,SAAA,cAAA,WAAA,EAAA,gBAAA,SAAA,GAAA,EAAA,IAAA,eAAA,IAAA,EAAA,yBAAA,SAAA,GAAA,OAAA,KAAA,GAAA,EAAA,GAAA,EAAA,yBAAA,WAAA,OAAA,KAAA,GAAA,KAAA,GAAA,KAAA,+BAAA,EAAA,4BAAA,WAAA,GAAA,KAAA,GAAA,OAAA,KAAA,GAAA,IAAA,EAAA,KAAA,eAAA,IAAA,EAAA,OAAA,KAAA,EAAA,kBAAA,EAAA,iBAAA,mBAAA,SAAA,GAAA,MAAA,EAAA,iBAAA,MAAA,4BAAA,GAAA,IAAA,EAAA,EAAA,WAAA,SAAA,KAAA,kBAAA,OAAA,EAAA,EAAA,IAAA,eAAA,IAAA,EAAA,IAAA,eAAA,GAAA,EAAA,EAAA,WAAA,QAAA,KAAA,mBAAA,EAAA,WAAA,qBAAA,KAAA,mBAAA,GAAA,EAAA,YAAA,SAAA,GAAA,QAAA,IAAA,sBAAA,EAAA,UAAA,EAAA,QAAA,QAAA,IAAA,yBAAA,EAAA,UAAA,EAAA,YAAA,QAAA,IAAA,0BAAA,EAAA,UAAA,EAAA,aAAA,QAAA,IAAA,uBAAA,EAAA,UAAA,EAAA,SAAA,QAAA,IAAA,kCAAA,EAAA,UAAA,EAAA,sBAAA,QAAA,IAAA,sCAAA,EAAA,UAAA,EAAA,2BAAA,QAAA,IAAA,+BAAA,EAAA,UAAA,EAAA,kBAAA,QAAA,IAAA,4BAAA,EAAA,UAAA,EAAA,eAAA,QAAA,IAAA,4BAAA,EAAA,UAAA,EAAA,gBAAA,EAAA,eAAA,SAAA,GAAA,QAAA,IAAA,cAAA,EAAA,aAAA,EAAA,WAAA,QAAA,IAAA,aAAA,EAAA,aAAA,EAAA,UAAA,QAAA,IAAA,YAAA,EAAA,aAAA,EAAA,SAAA,QAAA,IAAA,kBAAA,EAAA,aAAA,EAAA,4BAAA,EAAA,sBAAA,SAAA,GAAA,QAAA,IAAA,sCAAA,EAAA,aAAA,EAAA,mCAAA,QAAA,IAAA,6BAAA,EAAA,aAAA,EAAA,0BAAA,QAAA,IAAA,sBAAA,EAAA,aAAA,EAAA,mBAAA,QAAA,IAAA,+BAAA,EAAA,aAAA,EAAA,6BAAA,EAAA,wBAAA,SAAA,GAAA,IAAA,EAAA,EAAA,aAAA,sBAAA,OAAA,GAAA,EAAA,eAAA,EAAA,aAAA,SAAA,GAAA,IAAA,EAAA,EAAA,WAAA,OAAA,IAAA,IAAA,QAAA,IAAA,mBAAA,IAAA,IAAA,EAAA,gBAAA,SAAA,GAAA,EAAA,WAAA,EAAA,EAAA,EAAA,GAAA,EAAA,WAAA,GAAA,EAAA,OAAA,EAAA,YAAA,EAAA,OAAA,EAAA,WAAA,EAAA,OAAA,EAAA,eAAA,EAAA,YAAA,SAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,EAAA,WAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,KAAA,aAAA,EAAA,GAAA,OAAA,KAAA,cAAA,EAAA,EAAA,GAAA,GAAA,EAAA,aAAA,SAAA,EAAA,GAAA,IAAA,EAAA,GAAA,QAAA,EAAA,IAAA,EAAA,UAAA,EAAA,aAAA,EAAA,eAAA,EAAA,aAAA,EAAA,kBAAA,MAAA,IAAA,MAAA,oBAAA,OAAA,GAAA,EAAA,cAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,aAAA,EAAA,GAAA,EAAA,cAAA,IAAA,IAAA,EAAA,mBAAA,EAAA,EAAA,kBAAA,QAAA,MAAA,EAAA,iBAAA,IAAA,EAAA,aAAA,IAAA,IAAA,EAAA,cAAA,SAAA,GAAA,IAAA,EAAA,EAAA,gBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,MAAA,qBAAA,OAAA,GAAA,EAAA,YAAA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,YAAA,IAAA,IAAA,EAAA,WAAA,IAAA,IAAA,EAAA,MAAA,EAAA,aAAA,EAAA,GAAA,EAAA,aAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,GAAA,EAAA,YAAA,IAAA,IAAA,EAAA,oBAAA,EAAA,EAAA,cAAA,QAAA,MAAA,EAAA,kBAAA,IAAA,EAAA,aAAA,GAAA,EAAA,aAAA,GAAA,EAAA,cAAA,IAAA,IAAA,EAAA,gBAAA,IAAA,IAAA,EAAA,oBAAA,EAAA,EAAA,kBAAA,QAAA,MAAA,EAAA,kBAAA,IAAA,EAAA,aAAA,GAAA,EAAA,aAAA,GAAA,EAAA,cAAA,IAAA,IAAA,OAAA,GAAA,EAAA,EAAA,IAAA,KAAA,EAAA,wBAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,oBAAA,EAAA,EAAA,mBAAA,EAAA,EAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,gBAAA,EAAA,GAAA,IAAA,EAAA,EAAA,MAAA,IAAA,EAAA,EAAA,KAAA,EAAA,KAAA,EAAA,kBAAA,EAAA,EAAA,UAAA,EAAA,yBAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,oBAAA,EAAA,EAAA,iBAAA,EAAA,EAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,iBAAA,EAAA,GAAA,GAAA,EAAA,CAAA,IAAA,EAAA,EAAA,mBAAA,EAAA,EAAA,MAAA,OAAA,IAAA,EAAA,EAAA,MAAA,IAAA,EAAA,EAAA,KAAA,EAAA,KAAA,OAAA,EAAA,aAAA,SAAA,GAAA,IAAA,EAAA,EAAA,eAAA,GAAA,OAAA,EAAA,MAAA,IAAA,MAAA,oBAAA,OAAA,GAAA,EAAA,mBAAA,SAAA,GAAA,IAAA,EAAA,IAAA,WAAA,EAAA,mBAAA,EAAA,oBAAA,GAAA,OAAA,EAAA,WAAA,EAAA,EAAA,EAAA,mBAAA,EAAA,oBAAA,EAAA,KAAA,EAAA,cAAA,GAAA,GAAA,EAAA,gBAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,KAAA,EAAA,UAAA,EAAA,UAAA,EAAA,GAAA,MAAA,KAAA,EAAA,WAAA,EAAA,WAAA,EAAA,GAAA,MAAA,KAAA,EAAA,UAAA,EAAA,UAAA,EAAA,GAAA,MAAA,KAAA,EAAA,WAAA,EAAA,WAAA,EAAA,GAAA,MAAA,KAAA,EAAA,UAAA,EAAA,UAAA,EAAA,EAAA,GAAA,EAAA,IAAA,MAAA,KAAA,EAAA,WAAA,EAAA,WAAA,EAAA,GAAA,MAAA,KAAA,EAAA,UAAA,EAAA,UAAA,EAAA,EAAA,GAAA,EAAA,IAAA,MAAA,KAAA,EAAA,WAAA,EAAA,WAAA,EAAA,GAAA,MAAA,KAAA,EAAA,UAAA,EAAA,UAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,IAAA,MAAA,KAAA,EAAA,WAAA,EAAA,WAAA,EAAA,GAAA,MAAA,KAAA,EAAA,UAAA,EAAA,UAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,IAAA,MAAA,KAAA,EAAA,WAAA,EAAA,WAAA,EAAA,GAAA,MAAA,KAAA,EAAA,UAAA,EAAA,UAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,IAAA,MAAA,KAAA,EAAA,WAAA,EAAA,WAAA,EAAA,GAAA,MAAA,KAAA,EAAA,UAAA,EAAA,UAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,IAAA,MAAA,KAAA,EAAA,WAAA,EAAA,WAAA,EAAA,GAAA,MAAA,QAAA,QAAA,MAAA,IAAA,EAAA,6BAAA,EAAA,8BAAA,SAAA,EAAA,GAAA,IAAA,EAAA,GAAA,KAAA,EAAA,EAAA,MAAA,OAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,cAAA,CAAA,EAAA,EAAA,EAAA,OAAA,CAAA,IAAA,EAAA,WAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,IAAA,GAAA,UAAA,GAAA,OAAA,IAAA,EAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IAAA,IAAA,IAAA,EAAA,UAAA,GAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,CAAA,GAAA,KAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,CAAA,IAAA,EAAA,CAAA,EAAA,GAAA,KAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,OAAA,EAAA,KAAA,EAAA,GAAA,EAAA,GAAA,GAAA,IAAA,OAAA,EAAA,CAAA,EAAA,KAAA,KAAA,EAAA,IAAA,GAAA,EAAA,EAAA,EAAA,EAAA,KAAA,KAAA,EAAA,GAAA,EAAA,IAAA,UAAA,QAAA,MAAA,OAAA,EAAA,CAAA,EAAA,IAAA,EAAA,GAAA,EAAA,EAAA,MAAA,IAAA,MAAA,2BAAA,EAAA,IAAA,EAAA,uDAAA,EAAA,IAAA,EAAA,MAAA,EAAA,cAAA,CAAA,EAAA,KAAA,EAAA,iBAAA,CAAA,OAAA,EAAA,WAAA,EAAA,oBAAA,EAAA,uBAAA,EAAA,OAAA,EAAA,SAAA,EAAA,8BAAA,EAAA,gBAAA,oBAAA,EAAA,GAAA,KAAA,EAAA,IAAA,SAAA,GAAA,EAAA,EAAA,UAAA,GAAA,YAAA,EAAA,EAAA,mBAAA,GAAA,qBAAA,EAAA,EAAA,iBAAA,GAAA,mBAAA,CAAA,IAAA,EAAA,KAAA,IAAA,EAAA,WAAA,SAAA,KAAA,OAAA,EAAA,iBAAA,SAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,OAAA,IAAA,EAAA,IAAA,iBAAA,EAAA,EAAA,aAAA,0BAAA,EAAA,EAAA,WAAA,EAAA,EAAA,KAAA,EAAA,EAAA,QAAA,EAAA,EAAA,KAAA,EAAA,EAAA,QAAA,EAAA,EAAA,IAAA,EAAA,EAAA,UAAA,EAAA,EAAA,KAAA,EAAA,EAAA,KAAA,EAAA,EAAA,KAAA,EAAA,EAAA,KAAA,EAAA,EAAA,KAAA,EAAA,EAAA,KAAA,EAAA,EAAA,aAAA,qBAAA,EAAA,EAAA,aAAA,0BAAA,eAAA,EAAA,KAAA,8BAAA,EAAA,GAAA,EAAA,KAAA,sCAAA,EAAA,EAAA,IAAA,CAAA,aAAA,EAAA,iBAAA,EAAA,eAAA,EAAA,qBAAA,EAAA,wBAAA,EAAA,8BAAA,EAAA,cAAA,EAAA,uBAAA,EAAA,wBAAA,EAAA,gCAAA,IAAA,EAAA,sCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,EAAA,GAAA,IAAA,GAAA,GAAA,MAAA,EAAA,aAAA,qBAAA,OAAA,OAAA,GAAA,MAAA,EAAA,aAAA,2BAAA,MAAA,EAAA,aAAA,+BAAA,OAAA,EAAA,IAAA,EAAA,EAAA,oBAAA,EAAA,EAAA,gBAAA,EAAA,YAAA,EAAA,WAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA,QAAA,EAAA,KAAA,EAAA,WAAA,EAAA,WAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,MAAA,EAAA,aAAA,0BAAA,eAAA,MAAA,EAAA,gBAAA,EAAA,YAAA,GAAA,EAAA,qBAAA,EAAA,YAAA,EAAA,kBAAA,EAAA,WAAA,EAAA,GAAA,IAAA,EAAA,EAAA,uBAAA,EAAA,eAAA,EAAA,qBAAA,EAAA,WAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,EAAA,MAAA,IAAA,aAAA,IAAA,IAAA,EAAA,EAAA,aAAA,EAAA,SAAA,OAAA,GAAA,GAAA,EAAA,8BAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,gBAAA,EAAA,YAAA,EAAA,WAAA,GAAA,EAAA,WAAA,EAAA,WAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,EAAA,MAAA,MAAA,IAAA,EAAA,EAAA,oBAAA,EAAA,gBAAA,EAAA,YAAA,GAAA,EAAA,qBAAA,EAAA,YAAA,EAAA,kBAAA,EAAA,WAAA,EAAA,GAAA,IAAA,EAAA,EAAA,uBAAA,EAAA,eAAA,EAAA,qBAAA,OAAA,EAAA,YAAA,EAAA,WAAA,MAAA,EAAA,gBAAA,EAAA,YAAA,MAAA,EAAA,cAAA,GAAA,EAAA,kBAAA,GAAA,GAAA,EAAA,oBAAA,SAAA,EAAA,EAAA,EAAA,GAAA,EAAA,cAAA,EAAA,WAAA,EAAA,mBAAA,EAAA,SAAA,EAAA,cAAA,EAAA,WAAA,EAAA,mBAAA,EAAA,SAAA,EAAA,cAAA,EAAA,WAAA,EAAA,eAAA,EAAA,eAAA,EAAA,cAAA,EAAA,WAAA,EAAA,eAAA,EAAA,eAAA,IAAA,EAAA,EAAA,cAAA,EAAA,EAAA,eAAA,EAAA,EAAA,KAAA,EAAA,EAAA,KAAA,EAAA,EAAA,KAAA,EAAA,EAAA,MAAA,EAAA,EAAA,GAAA,aAAA,YAAA,aAAA,kBAAA,EAAA,EAAA,kBAAA,CAAA,KAAA,aAAA,cAAA,aAAA,OAAA,YAAA,EAAA,WAAA,EAAA,WAAA,EAAA,EAAA,KAAA,EAAA,KAAA,EAAA,cAAA,GAAA,GAAA,IAAA,EAAA,IAAA,gBAAA,CAAA,IAAA,EAAA,EAAA,IAAA,kCAAA,EAAA,EAAA,EAAA,EAAA,8BAAA,EAAA,qBAAA,EAAA,EAAA,wBAAA,EAAA,eAAA,EAAA,EAAA,EAAA,KAAA,EAAA,kBAAA,CAAA,IAAA,IAAA,EAAA,IAAA,aAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,EAAA,EAAA,GAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,WAAA,EAAA,WAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,iBAAA,SAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,WAAA,EAAA,EAAA,cAAA,EAAA,EAAA,eAAA,EAAA,EAAA,gBAAA,EAAA,YAAA,EAAA,WAAA,GAAA,EAAA,cAAA,EAAA,WAAA,EAAA,mBAAA,WAAA,EAAA,EAAA,OAAA,EAAA,SAAA,EAAA,cAAA,EAAA,WAAA,EAAA,mBAAA,WAAA,EAAA,EAAA,OAAA,EAAA,SAAA,EAAA,cAAA,EAAA,WAAA,EAAA,eAAA,EAAA,eAAA,EAAA,cAAA,EAAA,WAAA,EAAA,eAAA,EAAA,eAAA,IAAA,EAAA,EAAA,IAAA,kCAAA,EAAA,EAAA,EAAA,8BAAA,EAAA,qBAAA,EAAA,IAAA,EAAA,IAAA,gBAAA,EAAA,EAAA,WAAA,EAAA,MAAA,EAAA,wBAAA,EAAA,MAAA,EAAA,iBAAA,EAAA,EAAA,EAAA,gCAAA,EAAA,EAAA,cAAA,KAAA,OAAA,EAAA,WAAA,EAAA,WAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,MAAA,EAAA,YAAA,EAAA,WAAA,MAAA,GAAA,EAAA,GAAA,EAAA,CAAA,kRAAA,+NAAA,EAAA,IAAA,aAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,CAAA,eAAA,2BAAA,cAAA,eAAA,gBAAA,iBAAA,WAAA,WAAA,UAAA,cAAA,iBAAA,EAAA,CAAA,MAAA,CAAA,cAAA,cAAA,KAAA,CAAA,cAAA,SAAA,IAAA,MAAA,UAAA,EAAA,IAAA,iBAAA,2PAAA,4GAAA,UAAA,EAAA,IAAA,sBAAA,sIAAA,yGAAA,yJAAA,MAAA,EAAA,0mBAAA,IAAA,EAAA,iJAAA,EAAA,6HAAA,EAAA,2GAAA,EAAA,mGAAA,EAAA,8GAAA,EAAA,iHAAA,EAAA,iKAAA,EAAA,2FAAA,EAAA,uGAAA,EAAA,8EAAA,EAAA,mGAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,cAAA,EAAA,EAAA,aAAA,GAAA,IAAA,EAAA,MAAA,gDAAA,EAAA,+CAAA,EAAA,GAAA,8BAAA,IAAA,IAAA,EAAA,OAAA,EAAA,IAAA,EAAA,KAAA,MAAA,IAAA,EAAA,gBAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IAAA,GAAA,+BAAA,EAAA,EAAA,GAAA,uBAAA,EAAA,sBAAA,EAAA,GAAA,eAAA,MAAA,aAAA,EAAA,aAAA,EAAA,MAAA,EAAA,cAAA,EAAA,+BAAA,EAAA,0BAAA,EAAA,kBAAA,EAAA,qCAAA,SAAA,EAAA,GAAA,MAAA,6BAAA,EAAA,IAAA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,KAAA,EAAA,EAAA,SAAA,EAAA,EAAA,gBAAA,OAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,eAAA,IAAA,IAAA,EAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,GAAA,EAAA,OAAA,OAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,KAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,SAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAA,EAAA,KAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,OAAA,KAAA,GAAA,EAAA,EAAA,OAAA,IAAA,IAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,OAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,KAAA,OAAA,EAAA,kBAAA,EAAA,gBAAA,EAAA,iBAAA,EAAA,QAAA,EAAA,CAAA,cAAA,EAAA,SAAA,EAAA,gBAAA,EAAA,iBAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,cAAA,EAAA,EAAA,SAAA,EAAA,EAAA,gBAAA,EAAA,IAAA,EAAA,IAAA,gBAAA,iQAAA,0NAAA,EAAA,SAAA,GAAA,IAAA,EAAA,EAAA,wBAAA,EAAA,EAAA,UAAA,EAAA,EAAA,gCAAA,OAAA,IAAA,EAAA,IAAA,gBAAA,sZAAA,IAAA,SAAA,EAAA,+bAAA,IAAA,SAAA,IAAA,EAAA,+VAAA,IAAA,qzCAAA,kpBAAA,IAAA,+HAAA,CAAA,GAAA,EAAA,SAAA,GAAA,IAAA,EAAA,GAAA,EAAA,GAAA,GAAA,EAAA,SAAA,IAAA,IAAA,KAAA,EAAA,SAAA,CAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,GAAA,IAAA,QAAA,IAAA,EAAA,EAAA,SAAA,MAAA,iBAAA,OAAA,KAAA,EAAA,EAAA,SAAA,MAAA,OAAA,EAAA,EAAA,EAAA,EAAA,SAAA,MAAA,MAAA,GAAA,IAAA,QAAA,IAAA,IAAA,EAAA,kBAAA,MAAA,IAAA,OAAA,EAAA,QAAA,MAAA,IAAA,QAAA,EAAA,EAAA,SAAA,GAAA,UAAA,MAAA,IAAA,eAAA,EAAA,cAAA,EAAA,EAAA,SAAA,GAAA,OAAA,GAAA,EAAA,EAAA,SAAA,GAAA,QAAA,GAAA,MAAA,IAAA,YAAA,EAAA,EAAA,SAAA,GAAA,MAAA,MAAA,IAAA,MAAA,EAAA,WAAA,EAAA,EAAA,SAAA,GAAA,QAAA,EAAA,MAAA,IAAA,OAAA,EAAA,YAAA,MAAA,IAAA,MAAA,EAAA,WAAA,GAAA,eAAA,EAAA,CAAA,IAAA,OAAA,IAAA,EAAA,SAAA,WAAA,OAAA,EAAA,SAAA,WAAA,OAAA,EAAA,OAAA,IAAA,EAAA,SAAA,WAAA,MAAA,EAAA,SAAA,WAAA,MAAA,EAAA,GAAA,wCAAA,EAAA,mBAAA,IAAA,EAAA,SAAA,WAAA,UAAA,EAAA,SAAA,WAAA,UAAA,GAAA,cAAA,EAAA,SAAA,YAAA,EAAA,GAAA,0BAAA,uBAAA,EAAA,SAAA,QAAA,wBAAA,qDAAA,EAAA,SAAA,QAAA,aAAA,0BAAA,GAAA,EAAA,GAAA,GAAA,SAAA,EAAA,eAAA,EAAA,YAAA,EAAA,OAAA,MAAA,aAAA,EAAA,yFAAA,EAAA,6CAAA,CAAA,GAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,MAAA,GAAA,IAAA,EAAA,OAAA,OAAA,GAAA,GAAA,EAAA,SAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,OAAA,SAAA,GAAA,MAAA,QAAA,EAAA,OAAA,EAAA,EAAA,QAAA,EAAA,QAAA,SAAA,GAAA,IAAA,EAAA,EAAA,KAAA,EAAA,GAAA,EAAA,GAAA,OAAA,GAAA,EAAA,GAAA,WAAA,EAAA,QAAA,CAAA,EAAA,GAAA,IAAA,IAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,OAAA,KAAA,GAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,CAAA,GAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,IAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,MAAA,GAAA,QAAA,MAAA,MAAA,MAAA,SAAA,EAAA,SAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,GAAA,OAAA,IAAA,EAAA,GAAA,kCAAA,EAAA,UAAA,EAAA,SAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,MAAA,2DAAA,EAAA,cAAA,YAAA,EAAA,eAAA,uBAAA,GAAA,EAAA,GAAA,aAAA,EAAA,EAAA,YAAA,iKAAA,EAAA,cAAA,uCAAA,EAAA,EAAA,EAAA,EAAA,SAAA,0CAAA,EAAA,QAAA,EAAA,EAAA,GAAA,0CAAA,EAAA,OAAA,EAAA,sCAAA,EAAA,gEAAA,CAAA,EAAA,KAAA,EAAA,EAAA,IAAA,EAAA,iBAAA,EAAA,iBAAA,EAAA,iBAAA,SAAA,GAAA,IAAA,EAAA,MAAA,GAAA,IAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,KAAA,GAAA,EAAA,IAAA,OAAA,EAAA,GAAA,kBAAA,EAAA,EAAA,GAAA,IAAA,iBAAA,EAAA,iBAAA,EAAA,iBAAA,EAAA,iBAAA,EAAA,EAAA,GAAA,aAAA,EAAA,IAAA,EAAA,IAAA,gBAAA,YAAA,UAAA,EAAA,EAAA,QAAA,iBAAA,GAAA,MAAA,GAAA,QAAA,MAAA,IAAA,EAAA,MAAA,GAAA,OAAA,EAAA,MAAA,EAAA,WAAA,SAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,KAAA,QAAA,EAAA,IAAA,KAAA,QAAA,KAAA,WAAA,EAAA,EAAA,YAAA,KAAA,MAAA,GAAA,EAAA,MAAA,IAAA,EAAA,KAAA,QAAA,EAAA,gBAAA,EAAA,aAAA,EAAA,KAAA,SAAA,EAAA,aAAA,EAAA,KAAA,SAAA,EAAA,YAAA,GAAA,MAAA,GAAA,MAAA,IAAA,MAAA,IAAA,OAAA,EAAA,UAAA,WAAA,SAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,UAAA,IAAA,EAAA,EAAA,WAAA,EAAA,EAAA,cAAA,EAAA,gBAAA,GAAA,WAAA,GAAA,KAAA,QAAA,EAAA,KAAA,aAAA,GAAA,EAAA,EAAA,aAAA,GAAA,WAAA,IAAA,KAAA,QAAA,GAAA,EAAA,aAAA,EAAA,GAAA,EAAA,cAAA,IAAA,EAAA,mBAAA,EAAA,EAAA,gBAAA,MAAA,IAAA,MAAA,YAAA,EAAA,iBAAA,IAAA,OAAA,GAAA,EAAA,UAAA,WAAA,SAAA,EAAA,EAAA,GAAA,EAAA,WAAA,KAAA,SAAA,GAAA,KAAA,gBAAA,EAAA,IAAA,EAAA,UAAA,gBAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,kBAAA,KAAA,QAAA,YAAA,EAAA,wBAAA,GAAA,EAAA,WAAA,EAAA,aAAA,GAAA,EAAA,oBAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IAAA,EAAA,QAAA,WAAA,EAAA,GAAA,IAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,CAAA,UAAA,cAAA,OAAA,SAAA,EAAA,GAAA,EAAA,UAAA,IAAA,SAAA,EAAA,GAAA,IAAA,IAAA,KAAA,EAAA,OAAA,UAAA,eAAA,KAAA,EAAA,KAAA,EAAA,GAAA,EAAA,MAAA,EAAA,IAAA,SAAA,EAAA,GAAA,SAAA,IAAA,KAAA,YAAA,EAAA,EAAA,EAAA,GAAA,EAAA,UAAA,OAAA,EAAA,OAAA,OAAA,IAAA,EAAA,UAAA,EAAA,UAAA,IAAA,KAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,IAAA,IAAA,EAAA,UAAA,SAAA,EAAA,GAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,KAAA,IAAA,MAAA,GAAA,EAAA,IAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,MAAA,IAAA,MAAA,GAAA,EAAA,IAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,KAAA,EAAA,EAAA,QAAA,EAAA,EAAA,MAAA,aAAA,EAAA,EAAA,IAAA,EAAA,SAAA,GAAA,EAAA,MAAA,KAAA,EAAA,GAAA,GAAA,EAAA,EAAA,MAAA,EAAA,GAAA,KAAA,WAAA,EAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA,MAAA,EAAA,KAAA,WAAA,GAAA,EAAA,EAAA,GAAA,MAAA,EAAA,GAAA,OAAA,EAAA,IAAA,KAAA,GAAA,IAAA,IAAA,OAAA,EAAA,CAAA,KAAA,EAAA,GAAA,MAAA,EAAA,GAAA,OAAA,EAAA,IAAA,mBAAA,SAAA,EAAA,OAAA,UAAA,WAAA,OAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,SAAA,GAAA,OAAA,SAAA,GAAA,GAAA,EAAA,MAAA,IAAA,UAAA,mCAAA,KAAA,GAAA,IAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,OAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,SAAA,EAAA,KAAA,GAAA,GAAA,EAAA,SAAA,EAAA,EAAA,KAAA,EAAA,EAAA,KAAA,KAAA,OAAA,EAAA,OAAA,EAAA,EAAA,IAAA,EAAA,CAAA,EAAA,EAAA,GAAA,EAAA,QAAA,EAAA,IAAA,KAAA,EAAA,KAAA,EAAA,EAAA,EAAA,MAAA,KAAA,EAAA,OAAA,EAAA,QAAA,CAAA,MAAA,EAAA,GAAA,MAAA,GAAA,KAAA,EAAA,EAAA,QAAA,EAAA,EAAA,GAAA,EAAA,CAAA,GAAA,SAAA,KAAA,EAAA,EAAA,EAAA,IAAA,MAAA,EAAA,KAAA,MAAA,SAAA,QAAA,MAAA,GAAA,EAAA,EAAA,MAAA,OAAA,GAAA,EAAA,EAAA,OAAA,KAAA,IAAA,EAAA,IAAA,IAAA,EAAA,IAAA,CAAA,EAAA,EAAA,SAAA,GAAA,IAAA,EAAA,MAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAA,IAAA,CAAA,EAAA,MAAA,EAAA,GAAA,MAAA,GAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,GAAA,CAAA,EAAA,MAAA,EAAA,GAAA,EAAA,EAAA,MAAA,GAAA,GAAA,EAAA,MAAA,EAAA,GAAA,CAAA,EAAA,MAAA,EAAA,GAAA,EAAA,IAAA,KAAA,GAAA,MAAA,EAAA,IAAA,EAAA,IAAA,MAAA,EAAA,KAAA,MAAA,SAAA,EAAA,EAAA,KAAA,EAAA,GAAA,MAAA,GAAA,EAAA,CAAA,EAAA,GAAA,EAAA,EAAA,QAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,MAAA,EAAA,GAAA,MAAA,CAAA,MAAA,EAAA,GAAA,EAAA,QAAA,EAAA,MAAA,GAAA,CAAA,CAAA,EAAA,OAAA,MAAA,EAAA,SAAA,GAAA,SAAA,IAAA,IAAA,EAAA,EAAA,KAAA,OAAA,KAAA,OAAA,EAAA,cAAA,GAAA,EAAA,iBAAA,GAAA,EAAA,YAAA,GAAA,EAAA,UAAA,GAAA,EAAA,eAAA,KAAA,EAAA,gBAAA,EAAA,EAAA,iBAAA,EAAA,EAAA,kBAAA,EAAA,EAAA,mBAAA,EAAA,EAAA,QAAA,EAAA,EAAA,YAAA,EAAA,EAAA,OAAA,EAAA,EAAA,GAAA,EAAA,UAAA,KAAA,WAAA,OAAA,EAAA,UAAA,OAAA,EAAA,WAAA,IAAA,EAAA,OAAA,EAAA,KAAA,SAAA,GAAA,OAAA,EAAA,KAAA,GAAA,EAAA,8BAAA,KAAA,IAAA,KAAA,UAAA,EAAA,kBAAA,KAAA,YAAA,EAAA,iBAAA,GAAA,KAAA,iBAAA,EAAA,IAAA,qBAAA,EAAA,aAAA,EAAA,kBAAA,EAAA,QAAA,EAAA,YAAA,EAAA,QAAA,EAAA,cAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,QAAA,EAAA,qBAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,OAAA,EAAA,cAAA,EAAA,OAAA,EAAA,WAAA,EAAA,SAAA,EAAA,MAAA,KAAA,aAAA,EAAA,eAAA,EAAA,WAAA,EAAA,aAAA,KAAA,cAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,aAAA,KAAA,QAAA,EAAA,WAAA,EAAA,EAAA,UAAA,EAAA,KAAA,UAAA,IAAA,KAAA,YAAA,EAAA,oBAAA,EAAA,gBAAA,EAAA,YAAA,KAAA,aAAA,KAAA,IAAA,EAAA,eAAA,CAAA,IAAA,CAAA,QAAA,EAAA,UAAA,cAAA,SAAA,GAAA,IAAA,EAAA,KAAA,EAAA,EAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,aAAA,EAAA,EAAA,aAAA,EAAA,EAAA,QAAA,EAAA,EAAA,UAAA,EAAA,KAAA,IAAA,IAAA,EAAA,WAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,IAAA,GAAA,UAAA,GAAA,OAAA,IAAA,EAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IAAA,IAAA,IAAA,EAAA,UAAA,GAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,CAAA,CAAA,GAAA,GAAA,EAAA,QAAA,SAAA,GAAA,OAAA,EAAA,8BAAA,EAAA,iBAAA,KAAA,IAAA,EAAA,EAAA,KAAA,YAAA,EAAA,EAAA,EAAA,IAAA,EAAA,IAAA,EAAA,KAAA,GAAA,KAAA,QAAA,EAAA,IAAA,OAAA,EAAA,IAAA,EAAA,EAAA,iBAAA,KAAA,GAAA,KAAA,YAAA,EAAA,GAAA,KAAA,YAAA,EAAA,UAAA,EAAA,KAAA,QAAA,EAAA,MAAA,GAAA,QAAA,MAAA,wBAAA,EAAA,KAAA,OAAA,GAAA,OAAA,GAAA,EAAA,UAAA,WAAA,SAAA,EAAA,GAAA,IAAA,EAAA,KAAA,EAAA,SAAA,EAAA,GAAA,GAAA,IAAA,GAAA,EAAA,IAAA,eAAA,CAAA,IAAA,EAAA,EAAA,aAAA,mCAAA,IAAA,EAAA,OAAA,IAAA,EAAA,EAAA,cAAA,OAAA,EAAA,WAAA,EAAA,iBAAA,GAAA,EAAA,OAAA,KAAA,CAAA,KAAA,GAAA,KAAA,WAAA,EAAA,EAAA,WAAA,EAAA,QAAA,QAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,cAAA,GAAA,EAAA,EAAA,SAAA,EAAA,YAAA,GAAA,gBAAA,EAAA,WAAA,EAAA,kBAAA,GAAA,EAAA,oBAAA,EAAA,WAAA,EAAA,GAAA,EAAA,aAAA,GAAA,EAAA,QAAA,EAAA,EAAA,OAAA,EAAA,EAAA,EAAA,KAAA,EAAA,WAAA,KAAA,IAAA,KAAA,UAAA,KAAA,CAAA,KAAA,EAAA,KAAA,MAAA,EAAA,MAAA,IAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,IAAA,GAAA,EAAA,IAAA,eAAA,CAAA,IAAA,EAAA,EAAA,aAAA,mCAAA,IAAA,EAAA,OAAA,EAAA,SAAA,EAAA,kBAAA,OAAA,EAAA,CAAA,KAAA,GAAA,KAAA,UAAA,KAAA,EAAA,UAAA,KAAA,SAAA,GAAA,OAAA,EAAA,UAAA,OAAA,EAAA,WAAA,IAAA,EAAA,EAAA,EAAA,OAAA,EAAA,KAAA,SAAA,GAAA,OAAA,EAAA,OAAA,KAAA,EAAA,OAAA,EAAA,IAAA,uBAAA,EAAA,KAAA,GAAA,KAAA,YAAA,EAAA,oBAAA,EAAA,gBAAA,EAAA,YAAA,KAAA,aAAA,CAAA,EAAA,MAAA,EAAA,KAAA,YAAA,CAAA,EAAA,KAAA,0BAAA,KAAA,EAAA,OAAA,EAAA,OAAA,EAAA,EAAA,EAAA,MAAA,GAAA,CAAA,EAAA,KAAA,gCAAA,EAAA,UAAA,EAAA,UAAA,UAAA,WAAA,IAAA,EAAA,EAAA,KAAA,YAAA,GAAA,IAAA,KAAA,UAAA,CAAA,IAAA,EAAA,KAAA,GAAA,EAAA,KAAA,IAAA,EAAA,WAAA,EAAA,kBAAA,GAAA,IAAA,EAAA,GAAA,KAAA,kBAAA,KAAA,mBAAA,OAAA,EAAA,WAAA,EAAA,kBAAA,EAAA,EAAA,aAAA,EAAA,WAAA,EAAA,EAAA,KAAA,kBAAA,KAAA,mBAAA,EAAA,KAAA,EAAA,MAAA,GAAA,EAAA,WAAA,EAAA,kBAAA,MAAA,EAAA,IAAA,EAAA,KAAA,GAAA,EAAA,EAAA,MAAA,OAAA,EAAA,gCAAA,EAAA,IAAA,aAAA,KAAA,kBAAA,KAAA,mBAAA,IAAA,EAAA,IAAA,WAAA,KAAA,kBAAA,KAAA,mBAAA,GAAA,EAAA,EAAA,eAAA,EAAA,WAAA,EAAA,EAAA,KAAA,kBAAA,KAAA,mBAAA,EAAA,KAAA,EAAA,GAAA,EAAA,gCAAA,EAAA,IAAA,aAAA,EAAA,SAAA,EAAA,UAAA,sBAAA,WAAA,OAAA,EAAA,UAAA,OAAA,EAAA,WAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,OAAA,EAAA,KAAA,SAAA,GAAA,OAAA,EAAA,KAAA,GAAA,EAAA,MAAA,EAAA,UAAA,EAAA,WAAA,OAAA,GAAA,IAAA,EAAA,EAAA,UAAA,EAAA,2BAAA,GAAA,EAAA,QAAA,EAAA,WAAA,IAAA,EAAA,EAAA,eAAA,EAAA,EAAA,GAAA,OAAA,IAAA,EAAA,kBAAA,IAAA,EAAA,sBAAA,CAAA,EAAA,IAAA,QAAA,SAAA,GAAA,EAAA,SAAA,EAAA,WAAA,EAAA,UAAA,SAAA,SAAA,EAAA,GAAA,IAAA,EAAA,WAAA,IAAA,IAAA,WAAA,EAAA,IAAA,KAAA,EAAA,UAAA,gCAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,KAAA,kBAAA,KAAA,mBAAA,GAAA,IAAA,KAAA,UAAA,CAAA,IAAA,EAAA,KAAA,GAAA,EAAA,IAAA,aAAA,GAAA,EAAA,WAAA,EAAA,kBAAA,GAAA,EAAA,iBAAA,EAAA,kBAAA,EAAA,GAAA,EAAA,WAAA,EAAA,kBAAA,MAAA,IAAA,EAAA,GAAA,GAAA,EAAA,IAAA,qBAAA,OAAA,MAAA,KAAA,GAAA,MAAA,EAAA,EAAA,OAAA,SAAA,EAAA,GAAA,OAAA,EAAA,GAAA,IAAA,IAAA,IAAA,EAAA,EAAA,EAAA,KAAA,kBAAA,KAAA,mBAAA,IAAA,EAAA,KAAA,EAAA,EAAA,IAAA,OAAA,EAAA,IAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,KAAA,kBAAA,KAAA,mBAAA,IAAA,CAAA,IAAA,EAAA,KAAA,YAAA,gCAAA,EAAA,EAAA,EAAA,EAAA,KAAA,EAAA,IAAA,OAAA,GAAA,EAAA,UAAA,YAAA,SAAA,GAAA,IAAA,EAAA,EAAA,YAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,aAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,cAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,eAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,QAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,YAAA,OAAA,IAAA,EAAA,EAAA,EAAA,KAAA,gBAAA,EAAA,KAAA,iBAAA,EAAA,KAAA,kBAAA,EAAA,KAAA,mBAAA,EAAA,KAAA,QAAA,EAAA,KAAA,YAAA,GAAA,EAAA,UAAA,kBAAA,WAAA,IAAA,EAAA,KAAA,GAAA,EAAA,gBAAA,EAAA,YAAA,MAAA,EAAA,OAAA,MAAA,KAAA,gBAAA,EAAA,OAAA,OAAA,KAAA,iBAAA,EAAA,SAAA,EAAA,EAAA,EAAA,OAAA,MAAA,EAAA,OAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,OAAA,MAAA,EAAA,OAAA,SAAA,EAAA,UAAA,kBAAA,SAAA,GAAA,KAAA,eAAA,KAAA,YAAA,GAAA,IAAA,EAAA,KAAA,GAAA,EAAA,qBAAA,EAAA,YAAA,EAAA,kBAAA,EAAA,WAAA,KAAA,eAAA,GAAA,EAAA,SAAA,EAAA,EAAA,KAAA,kBAAA,KAAA,oBAAA,EAAA,QAAA,EAAA,EAAA,KAAA,kBAAA,KAAA,qBAAA,EAAA,UAAA,OAAA,SAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,UAAA,IAAA,IAAA,GAAA,QAAA,IAAA,IAAA,GAAA,GAAA,IAAA,EAAA,EAAA,aAAA,OAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,QAAA,OAAA,IAAA,EAAA,KAAA,EAAA,EAAA,EAAA,OAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,UAAA,EAAA,KAAA,GAAA,EAAA,EAAA,EAAA,QAAA,SAAA,GAAA,EAAA,YAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,cAAA,WAAA,EAAA,KAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,UAAA,EAAA,OAAA,GAAA,KAAA,WAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,eAAA,EAAA,IAAA,EAAA,UAAA,YAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,KAAA,GAAA,EAAA,KAAA,YAAA,EAAA,EAAA,SAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,KAAA,GAAA,EAAA,YAAA,CAAA,KAAA,cAAA,KAAA,eAAA,GAAA,IAAA,EAAA,KAAA,cAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,8BAAA,KAAA,iBAAA,KAAA,EAAA,EAAA,gBAAA,KAAA,cAAA,GAAA,QAAA,EAAA,KAAA,YAAA,GAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,YAAA,EAAA,WAAA,GAAA,IAAA,EAAA,oBAAA,EAAA,EAAA,EAAA,GAAA,EAAA,KAAA,OAAA,EAAA,UAAA,WAAA,SAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,KAAA,EAAA,OAAA,KAAA,GAAA,EAAA,KAAA,GAAA,EAAA,QAAA,SAAA,GAAA,IAAA,EAAA,EAAA,GAAA,KAAA,EAAA,EAAA,GAAA,MAAA,EAAA,EAAA,cAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,gBAAA,EAAA,EAAA,EAAA,MAAA,EAAA,UAAA,cAAA,SAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,IAAA,GAAA,EAAA,OAAA,KAAA,iBAAA,EAAA,GAAA,EAAA,GAAA,IAAA,EAAA,KAAA,GAAA,mBAAA,KAAA,QAAA,QAAA,GAAA,OAAA,KAAA,iBAAA,EAAA,GAAA,KAAA,iBAAA,EAAA,IAAA,GAAA,KAAA,iBAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,UAAA,QAAA,aAAA,EAAA,CAAA,cAAA,EAAA,CAAA,SAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,OAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IAAA,EAAA,EAAA,KAAA,EAAA,EAAA,OAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,QAAA,OAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,SAAA,OAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,UAAA,EAAA,EAAA,oBAAA,EAAA,EAAA,sBAAA,EAAA,EAAA,SAAA,OAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,kBAAA,OAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,kBAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,iBAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,qBAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,OAAA,IAAA,EAAA,EAAA,EAAA,MAAA,SAAA,GAAA,KAAA,MAAA,EAAA,YAAA,EAAA,aAAA,GAAA,IAAA,EAAA,cAAA,EAAA,EAAA,EAAA,GAAA,mRAAA,EAAA,QAAA,MAAA,EAAA,QAAA,EAAA,QAAA,2BAAA,EAAA,MAAA,EAAA,oCAAA,EAAA,aAAA,oCAAA,EAAA,aAAA,gGAAA,EAAA,yEAAA,EAAA,MAAA,EAAA,wCAAA,EAAA,YAAA,wCAAA,EAAA,YAAA,gHAAA,EAAA,0HAAA,EAAA,w3BAAA,EAAA,sGAAA,EAAA,wFAAA,EAAA,2CAAA,EAAA,+GAAA,EAAA,uEAAA,EAAA,6JAAA,EAAA,wFAAA,EAAA,0HAAA,EAAA,+GAAA,EAAA,uEAAA,EAAA,2EAAA,EAAA,6JAAA,EAAA,wFAAA,EAAA,4FAAA,EAAA,wIAAA,EAAA,uCAAA,EAAA,4BAAA,EAAA,iDAAA,IAAA,mBAAA,EAAA,uEAAA,UAAA,GAAA,iFAAA,eAAA,GAAA,2EAAA,EAAA,8BAAA,EAAA,4BAAA,EAAA,yDAAA,gBAAA,CAAA,OAAA,CAAA,yBAAA,OAAA,CAAA,yBAAA,KAAA,CAAA,0BAAA,UAAA,CAAA,gBAAA,uBAAA,qBAAA,gBAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,IAAA,GAAA,IAAA,EAAA,MAAA,CAAA,CAAA,EAAA,EAAA,GAAA,EAAA,CAAA,GAAA,EAAA,CAAA,EAAA,IAAA,IAAA,EAAA,EAAA,MAAA,EAAA,GAAA,EAAA,EAAA,MAAA,GAAA,MAAA,CAAA,EAAA,EAAA,OAAA,EAAA,EAAA,OAAA,CAAA,EAAA,OAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,OAAA,SAAA,EAAA,GAAA,OAAA,EAAA,MAAA,SAAA,EAAA,EAAA,EAAA,GAAA,GAAA,IAAA,EAAA,MAAA,gDAAA,EAAA,+CAAA,EAAA,GAAA,8BAAA,IAAA,EAAA,EAAA,GAAA,OAAA,EAAA,KAAA,GAAA,aAAA,EAAA,aAAA,EAAA,UAAA,EAAA,IAAA,EAAA,KAAA,MAAA,eAAA,EAAA,+BAAA,EAAA,0BAAA,EAAA,wCAAA,EAAA,qCAAA,EAAA,gDAAA,EAAA,gDAAA,EAAA,oDAAA,SAAA,EAAA,GAAA,OAAA,IAAA,EAAA,MAAA,OAAA,EAAA,SAAA,GAAA,GAAA,IAAA,EAAA,EAAA,YAAA,EAAA,EAAA,QAAA,EAAA,EAAA,aAAA,EAAA,EAAA,YAAA,MAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,MAAA,GAAA,CAAA,SAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,OAAA,EAAA,EAAA,YAAA,OAAA,IAAA,GAAA,EAAA,EAAA,EAAA,YAAA,OAAA,IAAA,GAAA,EAAA,EAAA,EAAA,QAAA,OAAA,IAAA,GAAA,EAAA,EAAA,EAAA,QAAA,EAAA,GAAA,EAAA,EAAA,QAAA,IAAA,GAAA,EAAA,MAAA,0KAAA,EAAA,iHAAA,EAAA,gGAAA,EAAA,EAAA,aAAA,EAAA,aAAA,6BAAA,EAAA,kJAAA,EAAA,ocAAA,gBAAA,CAAA,QAAA,CAAA,yBAAA,OAAA,CAAA,2BAAA,SAAA,GAAA,EAAA,GAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,IAAA,GAAA,IAAA,EAAA,MAAA,CAAA,CAAA,EAAA,EAAA,GAAA,EAAA,CAAA,GAAA,EAAA,CAAA,EAAA,IAAA,IAAA,EAAA,EAAA,MAAA,EAAA,GAAA,EAAA,EAAA,MAAA,GAAA,MAAA,CAAA,EAAA,EAAA,OAAA,EAAA,EAAA,OAAA,CAAA,EAAA,OAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,OAAA,SAAA,EAAA,GAAA,OAAA,EAAA,MAAA,SAAA,GAAA,EAAA,EAAA,GAAA,GAAA,IAAA,EAAA,MAAA,gDAAA,EAAA,+CAAA,EAAA,GAAA,8BAAA,IAAA,EAAA,EAAA,GAAA,OAAA,EAAA,KAAA,GAAA,aAAA,EAAA,aAAA,EAAA,UAAA,EAAA,IAAA,EAAA,KAAA,MAAA,eAAA,EAAA,+BAAA,EAAA,0BAAA,EAAA,wCAAA,EAAA,qCAAA,EAAA,gDAAA,EAAA,gDAAA,EAAA,oDAAA,SAAA,GAAA,GAAA,OAAA,IAAA,EAAA,MAAA,OAAA,EAAA,SAAA,GAAA,GAAA,IAAA,EAAA,EAAA,YAAA,EAAA,EAAA,QAAA,EAAA,EAAA,aAAA,EAAA,EAAA,YAAA,MAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,MAAA,GAAA,CAAA,SAAA,SAAA,EAAA,GAAA,MAAA,sKAAA,EAAA,IAAA,cAAA,4NAAA,gBAAA,CAAA,OAAA,CAAA,6BAAA,2BAAA,GAAA,CAAA,SAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,OAAA,EAAA,EAAA,WAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,cAAA,OAAA,IAAA,GAAA,EAAA,MAAA,+qBAAA,EAAA,aAAA,EAAA,gFAAA,EAAA,oCAAA,EAAA,YAAA,iBAAA,EAAA,YAAA,uCAAA,EAAA,aAAA,iBAAA,EAAA,aAAA,kEAAA,EAAA,YAAA,aAAA,EAAA,YAAA,mCAAA,EAAA,aAAA,aAAA,EAAA,aAAA,kFAAA,EAAA,YAAA,qEAAA,EAAA,aAAA,urBAAA,gBAAA,CAAA,OAAA,CAAA,2BAAA,GAAA,GAAA,IAAA,GAAA,CAAA,KAAA,CAAA,gBAAA,MAAA,CAAA,gBAAA,WAAA,CAAA,oBAAA,iBAAA,CAAA,oBAAA,MAAA,CAAA,gBAAA,QAAA,CAAA,kBAAA,aAAA,CAAA,sBAAA,IAAA,CAAA,cAAA,IAAA,CAAA,cAAA,KAAA,CAAA,eAAA,KAAA,CAAA,gBAAA,SAAA,GAAA,EAAA,GAAA,IAAA,EAAA,EAAA,YAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,WAAA,OAAA,IAAA,EAAA,EAAA,EAAA,MAAA,8IAAA,EAAA,gBAAA,aAAA,EAAA,YAAA,EAAA,4CAAA,SAAA,GAAA,GAAA,MAAA,CAAA,SAAA,GAAA,gBAAA,CAAA,OAAA,CAAA,4BAAA,UAAA,GAAA,IAAA,MAAA,GAAA,CAAA,SAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,KAAA,EAAA,MAAA,QAAA,GAAA,EAAA,CAAA,GAAA,EAAA,CAAA,EAAA,EAAA,EAAA,GAAA,OAAA,SAAA,GAAA,OAAA,GAAA,EAAA,SAAA,MAAA,iLAAA,CAAA,EAAA,EAAA,EAAA,GAAA,IAAA,SAAA,GAAA,OAAA,EAAA,QAAA,IAAA,EAAA,EAAA,QAAA,EAAA,OAAA,EAAA,GAAA,MAAA,KAAA,KAAA,iDAAA,gBAAA,CAAA,OAAA,CAAA,2BAAA,GAAA,CAAA,SAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IAAA,EAAA,EAAA,cAAA,MAAA,oWAAA,EAAA,oCAAA,EAAA,YAAA,gBAAA,EAAA,YAAA,uCAAA,EAAA,aAAA,iBAAA,EAAA,aAAA,kEAAA,EAAA,YAAA,aAAA,EAAA,YAAA,mCAAA,EAAA,aAAA,aAAA,EAAA,aAAA,yEAAA,EAAA,wDAAA,EAAA,gIAAA,gBAAA,CAAA,OAAA,CAAA,0BAAA,eAAA,CAAA,2BAAA,IAAA,GAAA,WAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,IAAA,GAAA,UAAA,GAAA,OAAA,IAAA,EAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IAAA,IAAA,IAAA,EAAA,UAAA,GAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,GAAA,MAAA,GAAA,CAAA,SAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,OAAA,EAAA,EAAA,MAAA,EAAA,EAAA,IAAA,EAAA,EAAA,UAAA,OAAA,IAAA,EAAA,CAAA,GAAA,GAAA,GAAA,IAAA,EAAA,EAAA,EAAA,YAAA,EAAA,EAAA,aAAA,EAAA,EAAA,UAAA,EAAA,EAAA,cAAA,EAAA,EAAA,KAAA,EAAA,EAAA,OAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,OAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,QAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,aAAA,EAAA,EAAA,YAAA,EAAA,EAAA,aAAA,EAAA,EAAA,YAAA,EAAA,EAAA,YAAA,EAAA,EAAA,QAAA,EAAA,EAAA,aAAA,EAAA,EAAA,YAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,KAAA,MAAA,IAAA,EAAA,IAAA,EAAA,EAAA,IAAA,SAAA,GAAA,OAAA,KAAA,KAAA,KAAA,EAAA,IAAA,EAAA,OAAA,oBAAA,uBAAA,EAAA,EAAA,OAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,OAAA,CAAA,cAAA,GAAA,EAAA,CAAA,IAAA,aAAA,IAAA,EAAA,EAAA,IAAA,SAAA,GAAA,OAAA,EAAA,EAAA,IAAA,EAAA,EAAA,OAAA,EAAA,SAAA,GAAA,IAAA,EAAA,wDAAA,EAAA,EAAA,OAAA,GAAA,IAAA,EAAA,GAAA,wQAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IAAA,GAAA,6BAAA,EAAA,wBAAA,EAAA,2CAAA,EAAA,gEAAA,EAAA,8GAAA,OAAA,EAAA,gBAAA,GAAA,EAAA,EAAA,2BAAA,GAAA,EAAA,IAAA,EAAA,oBAAA,uBAAA,EAAA,6zDAAA,EAAA,mBAAA,EAAA,EAAA,aAAA,aAAA,EAAA,EAAA,eAAA,aAAA,EAAA,EAAA,qBAAA,aAAA,SAAA,EAAA,GAAA,GAAA,IAAA,EAAA,OAAA,MAAA,OAAA,EAAA,UAAA,EAAA,GAAA,KAAA,IAAA,IAAA,EAAA,EAAA,OAAA,EAAA,iBAAA,EAAA,IAAA,EAAA,UAAA,EAAA,UAAA,EAAA,EAAA,EAAA,EAAA,IAAA,GAAA,EAAA,GAAA,IAAA,OAAA,EAAA,MAAA,GAAA,GAAA,KAAA,CAAA,EAAA,qBAAA,eAAA,EAAA,uQAAA,EAAA,GAAA,WAAA,EAAA,GAAA,WAAA,EAAA,GAAA,+MAAA,OAAA,IAAA,EAAA,aAAA,EAAA,EAAA,aAAA,aAAA,EAAA,qEAAA,iBAAA,EAAA,8HAAA,EAAA,sLAAA,EAAA,OAAA,sTAAA,EAAA,cAAA,EAAA,sDAAA,EAAA,cAAA,EAAA,8CAAA,EAAA,OAAA,+DAAA,EAAA,gJAAA,EAAA,gEAAA,EAAA,yMAAA,EAAA,kIAAA,EAAA,wHAAA,EAAA,gEAAA,EAAA,0MAAA,EAAA,mIAAA,EAAA,4DAAA,EAAA,sDAAA,gBAAA,CAAA,MAAA,CAAA,yBAAA,OAAA,CAAA,2BAAA,GAAA,CAAA,SAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,OAAA,EAAA,EAAA,MAAA,EAAA,EAAA,IAAA,EAAA,EAAA,UAAA,OAAA,IAAA,EAAA,CAAA,GAAA,GAAA,GAAA,IAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,KAAA,EAAA,EAAA,OAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,OAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,QAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,cAAA,OAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,4BAAA,OAAA,IAAA,GAAA,EAAA,EAAA,EAAA,aAAA,EAAA,EAAA,YAAA,EAAA,EAAA,aAAA,EAAA,EAAA,YAAA,EAAA,EAAA,QAAA,EAAA,EAAA,aAAA,EAAA,EAAA,EAAA,EAAA,IAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,CAAA,GAAA,EAAA,QAAA,SAAA,GAAA,IAAA,IAAA,EAAA,KAAA,KAAA,KAAA,IAAA,GAAA,EAAA,KAAA,KAAA,KAAA,EAAA,OAAA,IAAA,EAAA,EAAA,OAAA,EAAA,aAAA,EAAA,EAAA,YAAA,EAAA,YAAA,aAAA,EAAA,EAAA,YAAA,EAAA,YAAA,aAAA,EAAA,EAAA,gBAAA,EAAA,YAAA,SAAA,EAAA,EAAA,+BAAA,GAAA,EAAA,uXAAA,EAAA,EAAA,YAAA,EAAA,YAAA,aAAA,EAAA,EAAA,YAAA,EAAA,YAAA,aAAA,EAAA,EAAA,gBAAA,EAAA,YAAA,wOAAA,EAAA,WAAA,OAAA,IAAA,EAAA,iBAAA,EAAA,EAAA,aAAA,iBAAA,EAAA,sIAAA,iBAAA,EAAA,gCAAA,EAAA,EAAA,WAAA,EAAA,oCAAA,EAAA,iCAAA,EAAA,oDAAA,EAAA,mCAAA,EAAA,2CAAA,EAAA,6CAAA,EAAA,4CAAA,EAAA,2CAAA,EAAA,wDAAA,EAAA,wOAAA,EAAA,OAAA,GAAA,4TAAA,EAAA,OAAA,EAAA,kEAAA,EAAA,+kCAAA,oNAAA,qZAAA,EAAA,+DAAA,gBAAA,CAAA,MAAA,CAAA,yBAAA,OAAA,CAAA,0BAAA,UAAA,IAAA,GAAA,CAAA,SAAA,SAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,IAAA,EAAA,SAAA,EAAA,GAAA,IAAA,EAAA,GAAA,IAAA,IAAA,KAAA,EAAA,OAAA,UAAA,eAAA,KAAA,EAAA,IAAA,EAAA,QAAA,GAAA,IAAA,EAAA,GAAA,EAAA,IAAA,GAAA,MAAA,GAAA,mBAAA,OAAA,sBAAA,CAAA,IAAA,EAAA,EAAA,IAAA,EAAA,OAAA,sBAAA,GAAA,EAAA,EAAA,OAAA,IAAA,EAAA,QAAA,EAAA,IAAA,GAAA,OAAA,UAAA,qBAAA,KAAA,EAAA,EAAA,MAAA,EAAA,EAAA,IAAA,EAAA,EAAA,KAAA,OAAA,EAAA,CAAA,EAAA,CAAA,QAAA,EAAA,EAAA,OAAA,EAAA,EAAA,YAAA,EAAA,EAAA,aAAA,EAAA,EAAA,QAAA,EAAA,EAAA,YAAA,EAAA,EAAA,yBAAA,EAAA,CAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,MAAA,EAAA,GAAA,EAAA,OAAA,KAAA,GAAA,OAAA,EAAA,EAAA,KAAA,EAAA,EAAA,KAAA,EAAA,OAAA,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,GAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,GAAA,EAAA,GAAA,IAAA,EAAA,EAAA,YAAA,EAAA,EAAA,GAAA,OAAA,EAAA,MAAA,KAAA,MAAA,GAAA,QAAA,OAAA,SAAA,EAAA,GAAA,OAAA,GAAA,IAAA,EAAA,0LAAA,+BAAA,EAAA,qEAAA,EAAA,0DAAA,EAAA,6CAAA,GAAA,oKAAA,EAAA,YAAA,4BAAA,EAAA,aAAA,MAAA,EAAA,YAAA,4BAAA,EAAA,QAAA,MAAA,EAAA,YAAA,MAAA,EAAA,aAAA,2CAAA,EAAA,sCAAA,EAAA,gCAAA,EAAA,oCAAA,EAAA,eAAA,EAAA,wCAAA,EAAA,+CAAA,gBAAA,CAAA,OAAA,CAAA,wBAAA,gCAAA,GAAA,CAAA,SAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,OAAA,EAAA,EAAA,KAAA,EAAA,EAAA,OAAA,EAAA,EAAA,KAAA,EAAA,EAAA,cAAA,GAAA,EAAA,OAAA,GAAA,EAAA,OAAA,GAAA,EAAA,OAAA,GAAA,GAAA,IAAA,EAAA,OAAA,MAAA,MAAA,sEAAA,IAAA,EAAA,EAAA,YAAA,EAAA,EAAA,aAAA,EAAA,EAAA,QAAA,EAAA,EAAA,YAAA,EAAA,EAAA,yBAAA,EAAA,CAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,IAAA,EAAA,EAAA,EAAA,GAAA,KAAA,EAAA,EAAA,EAAA,GAAA,MAAA,MAAA,4CAAA,IAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,UAAA,MAAA,SAAA,EAAA,EAAA,MAAA,EAAA,UAAA,kFAAA,EAAA,mFAAA,EAAA,YAAA,4BAAA,EAAA,aAAA,MAAA,EAAA,YAAA,4BAAA,EAAA,QAAA,MAAA,EAAA,YAAA,MAAA,EAAA,aAAA,iRAAA,gBAAA,CAAA,OAAA,CAAA,wBAAA,gCAAA,IAAA,GAAA,CAAA,QAAA,CAAA,SAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,OAAA,EAAA,EAAA,KAAA,OAAA,IAAA,GAAA,EAAA,EAAA,EAAA,EAAA,QAAA,EAAA,EAAA,YAAA,EAAA,EAAA,aAAA,EAAA,EAAA,YAAA,EAAA,EAAA,QAAA,EAAA,EAAA,yBAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA,EAAA,EAAA,EAAA,GAAA,GAAA,MAAA,iIAAA,EAAA,wBAAA,EAAA,+IAAA,EAAA,iSAAA,EAAA,+IAAA,EAAA,iSAAA,EAAA,+IAAA,EAAA,kaAAA,EAAA,saAAA,EAAA,iDAAA,EAAA,qDAAA,EAAA,yDAAA,EAAA,saAAA,gBAAA,CAAA,OAAA,CAAA,2BAAA,QAAA,CAAA,SAAA,SAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,OAAA,EAAA,EAAA,KAAA,OAAA,IAAA,GAAA,EAAA,EAAA,EAAA,EAAA,QAAA,EAAA,EAAA,YAAA,EAAA,EAAA,aAAA,EAAA,EAAA,YAAA,EAAA,EAAA,QAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,CAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,EAAA,GAAA,GAAA,IAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,MAAA,+HAAA,EAAA,wBAAA,EAAA,+IAAA,EAAA,iSAAA,EAAA,+IAAA,EAAA,iSAAA,EAAA,+IAAA,EAAA,uaAAA,EAAA,saAAA,EAAA,iDAAA,EAAA,qDAAA,EAAA,yDAAA,EAAA,saAAA,gBAAA,CAAA,OAAA,CAAA,2BAAA,OAAA,EAAA,eAAA,CAAA,SAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,OAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IAAA,EAAA,EAAA,KAAA,EAAA,EAAA,OAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,QAAA,OAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,SAAA,OAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,UAAA,EAAA,EAAA,SAAA,EAAA,EAAA,kBAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,iBAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,qBAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,OAAA,IAAA,EAAA,EAAA,EAAA,MAAA,6OAAA,EAAA,MAAA,EAAA,oCAAA,EAAA,aAAA,oCAAA,EAAA,aAAA,gGAAA,EAAA,yEAAA,EAAA,MAAA,EAAA,wCAAA,EAAA,YAAA,wCAAA,EAAA,YAAA,gHAAA,EAAA,0HAAA,EAAA,QAAA,mDAAA,EAAA,QAAA,UAAA,EAAA,QAAA,EAAA,QAAA,weAAA,EAAA,QAAA,UAAA,EAAA,QAAA,EAAA,QAAA,0WAAA,EAAA,QAAA,UAAA,EAAA,QAAA,EAAA,QAAA,0WAAA,EAAA,QAAA,UAAA,EAAA,QAAA,EAAA,QAAA,2VAAA,EAAA,uCAAA,EAAA,4BAAA,EAAA,wDAAA,IAAA,mBAAA,EAAA,4FAAA,UAAA,GAAA,2HAAA,eAAA,GAAA,+FAAA,EAAA,6BAAA,EAAA,2BAAA,EAAA,+DAAA,gBAAA,CAAA,OAAA,CAAA,gCAAA,OAAA,CAAA,gCAAA,KAAA,CAAA,iCAAA,UAAA,CAAA,gBAAA,uBAAA,qBAAA,gBAAA,iBAAA,CAAA,SAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,OAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IAAA,EAAA,EAAA,KAAA,EAAA,EAAA,OAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,QAAA,OAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,SAAA,OAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,UAAA,EAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,aAAA,EAAA,EAAA,EAAA,EAAA,YAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,OAAA,IAAA,EAAA,EAAA,EAAA,MAAA,uXAAA,EAAA,MAAA,EAAA,QAAA,OAAA,EAAA,QAAA,2BAAA,EAAA,uCAAA,EAAA,QAAA,MAAA,EAAA,oFAAA,EAAA,aAAA,+DAAA,EAAA,yEAAA,EAAA,wCAAA,EAAA,YAAA,yEAAA,EAAA,yOAAA,EAAA,6BAAA,EAAA,4EAAA,EAAA,sEAAA,EAAA,8CAAA,EAAA,YAAA,gBAAA,EAAA,aAAA,uPAAA,EAAA,uCAAA,EAAA,aAAA,2CAAA,EAAA,YAAA,gLAAA,EAAA,uCAAA,EAAA,oCAAA,EAAA,iDAAA,IAAA,2BAAA,EAAA,uEAAA,UAAA,GAAA,iHAAA,gBAAA,CAAA,OAAA,CAAA,yBAAA,OAAA,CAAA,yBAAA,KAAA,CAAA,0BAAA,UAAA,CAAA,gBAAA,uBAAA,qBAAA,gBAAA,iBAAA,EAAA,iBAAA,EAAA,uBAAA,CAAA,SAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,OAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IAAA,EAAA,EAAA,QAAA,EAAA,EAAA,gBAAA,EAAA,EAAA,OAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,QAAA,OAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,SAAA,OAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,YAAA,EAAA,EAAA,WAAA,EAAA,EAAA,GAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,OAAA,IAAA,EAAA,EAAA,EAAA,MAAA,6GAAA,EAAA,YAAA,gTAAA,EAAA,uHAAA,EAAA,QAAA,MAAA,EAAA,QAAA,EAAA,QAAA,2BAAA,EAAA,MAAA,EAAA,oCAAA,EAAA,aAAA,oCAAA,EAAA,aAAA,gGAAA,EAAA,yEAAA,EAAA,MAAA,EAAA,wCAAA,EAAA,YAAA,wCAAA,EAAA,YAAA,gHAAA,EAAA,0HAAA,EAAA,QAAA,gQAAA,EAAA,uCAAA,EAAA,mCAAA,EAAA,UAAA,EAAA,MAAA,EAAA,gBAAA,gBAAA,CAAA,OAAA,CAAA,yBAAA,OAAA,CAAA,yBAAA,QAAA,CAAA,0BAAA,UAAA,CAAA,aAAA,eAAA,kBAAA,OAAA,CAAA,SAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,OAAA,EAAA,EAAA,QAAA,OAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,SAAA,OAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,aAAA,EAAA,EAAA,MAAA,EAAA,EAAA,GAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,MAAA,kFAAA,EAAA,yNAAA,EAAA,MAAA,EAAA,yCAAA,EAAA,MAAA,EAAA,oCAAA,EAAA,wEAAA,EAAA,aAAA,sJAAA,EAAA,gFAAA,EAAA,YAAA,qRAAA,EAAA,+TAAA,EAAA,yGAAA,gBAAA,CAAA,OAAA,CAAA,0BAAA,UAAA,CAAA,QAAA,YAAA,cAAA,oBAAA,WAAA,CAAA,SAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,OAAA,EAAA,EAAA,QAAA,OAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,SAAA,OAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,eAAA,EAAA,EAAA,QAAA,EAAA,EAAA,GAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,GAAA,IAAA,EAAA,EAAA,YAAA,EAAA,EAAA,QAAA,EAAA,EAAA,aAAA,EAAA,EAAA,YAAA,MAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,GAAA,EAAA,GAAA,EAAA,yBAAA,OAAA,IAAA,IAAA,IAAA,IAAA,EAAA,4DAAA,EAAA,GAAA,EAAA,GAAA,mBAAA,EAAA,GAAA,uCAAA,EAAA,4BAAA,8VAAA,EAAA,MAAA,EAAA,yCAAA,EAAA,MAAA,EAAA,oCAAA,EAAA,wEAAA,EAAA,aAAA,sJAAA,EAAA,gFAAA,EAAA,YAAA,iRAAA,EAAA,8EAAA,EAAA,iBAAA,gBAAA,CAAA,OAAA,CAAA,0BAAA,UAAA,CAAA,QAAA,YAAA,cAAA,oBAAA,gBAAA,CAAA,SAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,OAAA,EAAA,EAAA,KAAA,EAAA,EAAA,QAAA,OAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,SAAA,OAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,UAAA,EAAA,EAAA,GAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,EAAA,eAAA,MAAA,kOAAA,EAAA,MAAA,EAAA,SAAA,+GAAA,EAAA,6DAAA,EAAA,6sBAAA,EAAA,MAAA,EAAA,yCAAA,EAAA,MAAA,EAAA,sCAAA,EAAA,aAAA,wEAAA,EAAA,aAAA,sJAAA,EAAA,YAAA,gFAAA,EAAA,YAAA,2RAAA,EAAA,+TAAA,EAAA,yGAAA,UAAA,CAAA,QAAA,YAAA,cAAA,oBAAA,gBAAA,CAAA,SAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,WAAA,EAAA,EAAA,QAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,QAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,EAAA,EAAA,EAAA,MAAA,4NAAA,EAAA,iCAAA,EAAA,EAAA,iBAAA,EAAA,EAAA,uDAAA,gBAAA,CAAA,QAAA,CAAA,yBAAA,OAAA,CAAA,0BAAA,UAAA,CAAA,yBAAA,6BAAA,gBAAA,CAAA,SAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,QAAA,EAAA,EAAA,WAAA,EAAA,EAAA,QAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,QAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,EAAA,EAAA,EAAA,MAAA,wKAAA,EAAA,eAAA,EAAA,aAAA,+BAAA,EAAA,eAAA,EAAA,aAAA,mCAAA,EAAA,QAAA,gCAAA,EAAA,QAAA,GAAA,mCAAA,EAAA,aAAA,4BAAA,EAAA,aAAA,GAAA,kCAAA,EAAA,YAAA,4BAAA,EAAA,YAAA,GAAA,uXAAA,EAAA,iCAAA,EAAA,EAAA,iBAAA,EAAA,EAAA,yDAAA,gBAAA,CAAA,QAAA,CAAA,yBAAA,OAAA,CAAA,0BAAA,UAAA,CAAA,yBAAA,6BAAA,gBAAA,CAAA,SAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,QAAA,EAAA,EAAA,WAAA,EAAA,EAAA,QAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,QAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,EAAA,EAAA,EAAA,MAAA,wKAAA,EAAA,eAAA,EAAA,aAAA,+BAAA,EAAA,eAAA,EAAA,aAAA,mCAAA,EAAA,QAAA,gCAAA,EAAA,QAAA,GAAA,mCAAA,EAAA,aAAA,4BAAA,EAAA,aAAA,GAAA,kCAAA,EAAA,YAAA,4BAAA,EAAA,YAAA,GAAA,uXAAA,EAAA,iCAAA,EAAA,cAAA,EAAA,EAAA,kBAAA,EAAA,EAAA,2DAAA,gBAAA,CAAA,QAAA,CAAA,yBAAA,OAAA,CAAA,0BAAA,UAAA,CAAA,yBAAA,6BAAA,gBAAA,CAAA,SAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,WAAA,EAAA,EAAA,QAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,QAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,EAAA,EAAA,EAAA,MAAA,4NAAA,EAAA,qCAAA,EAAA,EAAA,gBAAA,EAAA,EAAA,wDAAA,gBAAA,CAAA,QAAA,CAAA,yBAAA,OAAA,CAAA,0BAAA,UAAA,CAAA,yBAAA,6BAAA,gBAAA,CAAA,SAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,WAAA,EAAA,EAAA,QAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,QAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,EAAA,EAAA,EAAA,MAAA,4NAAA,EAAA,iCAAA,EAAA,EAAA,iBAAA,EAAA,EAAA,uDAAA,gBAAA,CAAA,QAAA,CAAA,yBAAA,OAAA,CAAA,0BAAA,UAAA,CAAA,yBAAA,6BAAA,IAAA,CAAA,SAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,OAAA,EAAA,EAAA,QAAA,EAAA,EAAA,eAAA,EAAA,EAAA,eAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,MAAA,SAAA,EAAA,KAAA,EAAA,GAAA,SAAA,EAAA,KAAA,EAAA,GAAA,SAAA,EAAA,KAAA,EAAA,GAAA,SAAA,EAAA,KAAA,EAAA,GAAA,8PAAA,EAAA,GAAA,oDAAA,EAAA,GAAA,0EAAA,EAAA,GAAA,yBAAA,EAAA,GAAA,wDAAA,EAAA,GAAA,6EAAA,EAAA,GAAA,SAAA,EAAA,GAAA,0CAAA,EAAA,GAAA,SAAA,EAAA,GAAA,qQAAA,gBAAA,CAAA,QAAA,CAAA,yBAAA,OAAA,CAAA,2BAAA,OAAA,GAAA,UAAA,GAAA,GAAA,CAAA,SAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,OAAA,EAAA,EAAA,OAAA,EAAA,EAAA,eAAA,EAAA,EAAA,eAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,MAAA,SAAA,GAAA,KAAA,EAAA,GAAA,SAAA,GAAA,KAAA,EAAA,GAAA,SAAA,GAAA,KAAA,EAAA,GAAA,SAAA,GAAA,KAAA,EAAA,GAAA,gVAAA,GAAA,GAAA,oDAAA,GAAA,GAAA,0EAAA,EAAA,GAAA,yBAAA,GAAA,GAAA,wDAAA,GAAA,GAAA,6EAAA,GAAA,GAAA,SAAA,GAAA,GAAA,0CAAA,GAAA,GAAA,SAAA,GAAA,GAAA,+RAAA,gBAAA,CAAA,OAAA,CAAA,yBAAA,OAAA,CAAA,yBAAA,KAAA,CAAA,2BAAA,QAAA,CAAA,SAAA,SAAA,EAAA,GAAA,MAAA,gOAAA,uBAAA,EAAA,wBAAA,yCAAA,EAAA,aAAA,6DAAA,gBAAA,CAAA,OAAA,CAAA,2BAAA,OAAA,CAAA,SAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,IAAA,EAAA,OAAA,KAAA,GAAA,OAAA,SAAA,GAAA,MAAA,QAAA,IAAA,IAAA,SAAA,GAAA,OAAA,EAAA,KAAA,IAAA,SAAA,GAAA,IAAA,EAAA,EAAA,YAAA,EAAA,EAAA,aAAA,EAAA,EAAA,QAAA,MAAA,CAAA,EAAA,aAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,KAAA,EAAA,EAAA,IAAA,SAAA,EAAA,GAAA,OAAA,EAAA,MAAA,EAAA,EAAA,GAAA,OAAA,SAAA,EAAA,GAAA,OAAA,EAAA,GAAA,KAAA,EAAA,GAAA,OAAA,EAAA,QAAA,SAAA,EAAA,GAAA,GAAA,IAAA,EAAA,0BAAA,EAAA,OAAA,EAAA,sHAAA,+BAAA,EAAA,OAAA,EAAA,6BAAA,EAAA,YAAA,EAAA,OAAA,EAAA,EAAA,GAAA,uDAAA,EAAA,mEAAA,gJAAA,EAAA,+CAAA,gBAAA,CAAA,OAAA,CAAA,0BAAA,UAAA,CAAA,iBAAA,WAAA,CAAA,SAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,IAAA,EAAA,OAAA,KAAA,GAAA,OAAA,SAAA,GAAA,MAAA,QAAA,IAAA,IAAA,SAAA,GAAA,OAAA,EAAA,KAAA,IAAA,SAAA,GAAA,IAAA,EAAA,EAAA,YAAA,EAAA,EAAA,aAAA,EAAA,EAAA,QAAA,MAAA,CAAA,EAAA,aAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,KAAA,EAAA,EAAA,IAAA,SAAA,EAAA,GAAA,OAAA,EAAA,MAAA,EAAA,EAAA,GAAA,OAAA,SAAA,EAAA,GAAA,OAAA,EAAA,GAAA,KAAA,EAAA,GAAA,OAAA,EAAA,QAAA,SAAA,EAAA,GAAA,GAAA,IAAA,EAAA,0BAAA,EAAA,OAAA,EAAA,wGAAA,+BAAA,EAAA,OAAA,EAAA,6BAAA,EAAA,YAAA,EAAA,OAAA,EAAA,EAAA,GAAA,uDAAA,EAAA,mEAAA,gJAAA,EAAA,+CAAA,gBAAA,CAAA,OAAA,CAAA,0BAAA,UAAA,CAAA,iBAAA,MAAA,CAAA,SAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,cAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,SAAA,MAAA,sEAAA,GAAA,EAAA,OAAA,EAAA,EAAA,GAAA,EAAA,GAAA,wFAAA,EAAA,YAAA,EAAA,4JAAA,gBAAA,CAAA,OAAA,CAAA,0BAAA,UAAA,CAAA,iBAAA,QAAA,CAAA,SAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,OAAA,EAAA,EAAA,KAAA,EAAA,EAAA,QAAA,GAAA,EAAA,KAAA,GAAA,IAAA,GAAA,GAAA,kHAAA,EAAA,YAAA,IAAA,EAAA,QAAA,IAAA,EAAA,aAAA,IAAA,EAAA,YAAA,sLAAA,EAAA,4PAAA,EAAA,6CAAA,EAAA,QAAA,gPAAA,EAAA,YAAA,qOAAA,gBAAA,CAAA,OAAA,CAAA,2BAAA,UAAA,CAAA,SAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,KAAA,EAAA,EAAA,MAAA,EAAA,EAAA,KAAA,EAAA,EAAA,SAAA,EAAA,EAAA,QAAA,MAAA,6RAAA,EAAA,cAAA,qGAAA,EAAA,cAAA,sGAAA,EAAA,cAAA,6HAAA,EAAA,cAAA,sGAAA,EAAA,yFAAA,gBAAA,CAAA,OAAA,CAAA,yBAAA,MAAA,CAAA,2BAAA,KAAA,CAAA,2BAAA,KAAA,CAAA,2BAAA,SAAA,CAAA,6BAAA,QAAA,GAAA,SAAA,GAAA,gBAAA,GAAA,WAAA,CAAA,SAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,SAAA,EAAA,EAAA,UAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,MAAA,mKAAA,EAAA,4HAAA,EAAA,yHAAA,EAAA,oBAAA,EAAA,kCAAA,EAAA,oBAAA,EAAA,mDAAA,EAAA,gHAAA,EAAA,oBAAA,EAAA,kCAAA,EAAA,oBAAA,EAAA,kCAAA,EAAA,oBAAA,EAAA,mDAAA,EAAA,iFAAA,EAAA,4BAAA,EAAA,4BAAA,EAAA,4BAAA,EAAA,GAAA,6EAAA,gBAAA,CAAA,OAAA,CAAA,0BAAA,UAAA,CAAA,kBAAA,kBAAA,CAAA,SAAA,SAAA,EAAA,GAAA,MAAA,0UAAA,gBAAA,CAAA,OAAA,CAAA,kCAAA,kBAAA,CAAA,SAAA,SAAA,EAAA,GAAA,MAAA,0fAAA,gBAAA,CAAA,OAAA,CAAA,kCAAA,WAAA,CAAA,SAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,OAAA,EAAA,EAAA,KAAA,EAAA,EAAA,yBAAA,EAAA,MAAA,QAAA,GAAA,EAAA,CAAA,GAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IAAA,SAAA,GAAA,OAAA,EAAA,IAAA,EAAA,CAAA,EAAA,EAAA,EAAA,GAAA,OAAA,SAAA,GAAA,OAAA,IAAA,EAAA,QAAA,KAAA,IAAA,SAAA,GAAA,MAAA,QAAA,EAAA,MAAA,EAAA,MAAA,KAAA,IAAA,MAAA,EAAA,QAAA,WAAA,MAAA,MAAA,OAAA,EAAA,OAAA,MAAA,EAAA,WAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,IAAA,GAAA,UAAA,GAAA,OAAA,IAAA,EAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IAAA,IAAA,IAAA,EAAA,UAAA,GAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,GAAA,IAAA,qIAAA,EAAA,KAAA,KAAA,iDAAA,gBAAA,CAAA,OAAA,CAAA,2BAAA,yBAAA,CAAA,SAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IAAA,MAAA,gJAAA,EAAA,YAAA,4BAAA,EAAA,aAAA,MAAA,EAAA,YAAA,4BAAA,EAAA,QAAA,MAAA,EAAA,YAAA,MAAA,EAAA,aAAA,yFAAA,EAAA,QAAA,kBAAA,EAAA,YAAA,kBAAA,EAAA,aAAA,kBAAA,EAAA,YAAA,4JAAA,gBAAA,CAAA,OAAA,CAAA,0BAAA,eAAA,CAAA,2BAAA,SAAA,GAAA,aAAA,CAAA,SAAA,SAAA,EAAA,GAAA,MAAA,kUAAA,gBAAA,CAAA,OAAA,CAAA,yBAAA,QAAA,CAAA,2BAAA,WAAA,CAAA,SAAA,SAAA,EAAA,GAAA,MAAA,oKAAA,EAAA,WAAA,8BAAA,EAAA,IAAA,iJAAA,gBAAA,CAAA,OAAA,CAAA,0BAAA,UAAA,CAAA,iBAAA,MAAA,CAAA,SAAA,SAAA,EAAA,GAAA,MAAA,yhBAAA,gBAAA,CAAA,OAAA,CAAA,yBAAA,QAAA,CAAA,yBAAA,UAAA,CAAA,2BAAA,QAAA,CAAA,SAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,YAAA,EAAA,EAAA,YAAA,EAAA,EAAA,aAAA,EAAA,EAAA,QAAA,EAAA,EAAA,CAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,OAAA,KAAA,GAAA,OAAA,SAAA,GAAA,MAAA,QAAA,IAAA,IAAA,SAAA,GAAA,OAAA,EAAA,GAAA,cAAA,EAAA,EAAA,IAAA,SAAA,EAAA,GAAA,OAAA,EAAA,MAAA,EAAA,EAAA,GAAA,OAAA,SAAA,EAAA,GAAA,OAAA,EAAA,GAAA,KAAA,EAAA,GAAA,OAAA,EAAA,QAAA,SAAA,EAAA,GAAA,GAAA,IAAA,EAAA,8BAAA,EAAA,iKAAA,mCAAA,EAAA,+DAAA,EAAA,aAAA,EAAA,EAAA,GAAA,wDAAA,EAAA,2DAAA,iKAAA,EAAA,GAAA,uBAAA,EAAA,+CAAA,gBAAA,CAAA,OAAA,CAAA,wBAAA,gCAAA,YAAA,CAAA,SAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,WAAA,MAAA,oKAAA,EAAA,8BAAA,EAAA,IAAA,4HAAA,EAAA,0CAAA,gBAAA,CAAA,OAAA,CAAA,0BAAA,UAAA,CAAA,iBAAA,WAAA,CAAA,SAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,OAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,MAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,UAAA,MAAA,yNAAA,EAAA,mBAAA,IAAA,EAAA,EAAA,GAAA,cAAA,EAAA,4CAAA,gBAAA,CAAA,OAAA,CAAA,2BAAA,eAAA,GAAA,kBAAA,GAAA,KAAA,CAAA,SAAA,SAAA,EAAA,GAAA,IAAA,EAAA,GAAA,OAAA,EAAA,WAAA,KAAA,EAAA,EAAA,qJAAA,MAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,EAAA,8EAAA,MAAA,QAAA,EAAA,+EAAA,MAAA,6KAAA,EAAA,iBAAA,gBAAA,CAAA,OAAA,CAAA,2BAAA,8BAAA,CAAA,SAAA,SAAA,EAAA,GAAA,MAAA,sEAAA,EAAA,MAAA,yCAAA,WAAA,CAAA,SAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,aAAA,EAAA,EAAA,WAAA,EAAA,EAAA,WAAA,EAAA,EAAA,MAAA,EAAA,EAAA,QAAA,OAAA,IAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,MAAA,iJAAA,IAAA,GAAA,mEAAA,EAAA,mYAAA,EAAA,2DAAA,EAAA,YAAA,yLAAA,EAAA,gIAAA,gBAAA,CAAA,OAAA,CAAA,yBAAA,SAAA,CAAA,yBAAA,aAAA,CAAA,2BAAA,WAAA,CAAA,SAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,WAAA,EAAA,EAAA,YAAA,MAAA,iQAAA,EAAA,8FAAA,EAAA,EAAA,4FAAA,EAAA,EAAA,sEAAA,EAAA,8SAAA,gBAAA,CAAA,OAAA,CAAA,yBAAA,QAAA,CAAA,2BAAA,SAAA,CAAA,SAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,WAAA,EAAA,EAAA,YAAA,MAAA,iQAAA,EAAA,8FAAA,EAAA,EAAA,4FAAA,EAAA,EAAA,sEAAA,EAAA,0NAAA,gBAAA,CAAA,OAAA,CAAA,yBAAA,QAAA,CAAA,2BAAA,WAAA,CAAA,SAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,aAAA,EAAA,EAAA,aAAA,EAAA,EAAA,WAAA,MAAA,qdAAA,EAAA,YAAA,sRAAA,EAAA,YAAA,8JAAA,EAAA,wIAAA,gBAAA,CAAA,OAAA,CAAA,yBAAA,SAAA,CAAA,yBAAA,aAAA,CAAA,yBAAA,aAAA,CAAA,yBAAA,aAAA,CAAA,yBAAA,aAAA,CAAA,2BAAA,WAAA,CAAA,SAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,OAAA,EAAA,EAAA,QAAA,OAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,SAAA,OAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,GAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,MAAA,uMAAA,EAAA,MAAA,EAAA,yCAAA,EAAA,MAAA,EAAA,oCAAA,EAAA,wEAAA,EAAA,aAAA,sJAAA,EAAA,gFAAA,EAAA,YAAA,sYAAA,EAAA,MAAA,EAAA,4CAAA,gBAAA,CAAA,OAAA,CAAA,0BAAA,UAAA,CAAA,YAAA,cAAA,oBAAA,MAAA,GAAA,SAAA,MAAA,GAAA,SAAA,UAAA,GAAA,aAAA,MAAA,GAAA,SAAA,QAAA,GAAA,WAAA,KAAA,GAAA,QAAA,aAAA,GAAA,gBAAA,IAAA,GAAA,OAAA,KAAA,GAAA,QAAA,KAAA,GAAA,QAAA,IAAA,GAAA,OAAA,SAAA,GAAA,MAAA,CAAA,SAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,OAAA,EAAA,EAAA,SAAA,EAAA,EAAA,KAAA,EAAA,EAAA,MAAA,EAAA,SAAA,GAAA,IAAA,EAAA,EAAA,YAAA,EAAA,EAAA,QAAA,EAAA,EAAA,aAAA,EAAA,EAAA,YAAA,MAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,GAAA,EAAA,CAAA,QAAA,sEAAA,EAAA,GAAA,gCAAA,EAAA,GAAA,4DAAA,EAAA,GAAA,OAAA,EAAA,GAAA,4BAAA,EAAA,GAAA,gBAAA,EAAA,GAAA,MAAA,EAAA,GAAA,+EAAA,EAAA,GAAA,8CAAA,EAAA,GAAA,gCAAA,EAAA,GAAA,4DAAA,EAAA,GAAA,OAAA,EAAA,GAAA,4BAAA,EAAA,GAAA,gBAAA,EAAA,GAAA,MAAA,EAAA,GAAA,+EAAA,EAAA,GAAA,kGAAA,UAAA,sEAAA,EAAA,GAAA,iFAAA,EAAA,GAAA,OAAA,EAAA,GAAA,4BAAA,EAAA,GAAA,0EAAA,EAAA,GAAA,8CAAA,EAAA,GAAA,iFAAA,EAAA,GAAA,OAAA,EAAA,GAAA,4BAAA,EAAA,GAAA,0EAAA,EAAA,GAAA,kGAAA,SAAA,sEAAA,EAAA,GAAA,8CAAA,EAAA,GAAA,yBAAA,EAAA,GAAA,sDAAA,EAAA,GAAA,OAAA,EAAA,GAAA,mDAAA,EAAA,GAAA,MAAA,EAAA,GAAA,YAAA,EAAA,GAAA,yEAAA,EAAA,GAAA,8CAAA,EAAA,GAAA,8CAAA,EAAA,GAAA,yBAAA,EAAA,GAAA,sDAAA,EAAA,GAAA,OAAA,EAAA,GAAA,mDAAA,EAAA,GAAA,MAAA,EAAA,GAAA,YAAA,EAAA,GAAA,yEAAA,EAAA,GAAA,kGAAA,SAAA,GAAA,UAAA,IAAA,MAAA,2GAAA,GAAA,OAAA,2BAAA,EAAA,GAAA,kCAAA,EAAA,GAAA,kCAAA,EAAA,GAAA,MAAA,EAAA,GAAA,6BAAA,EAAA,GAAA,MAAA,EAAA,GAAA,wFAAA,EAAA,GAAA,cAAA,EAAA,GAAA,8CAAA,EAAA,GAAA,0DAAA,gBAAA,CAAA,OAAA,CAAA,2BAAA,mBAAA,GAAA,gBAAA,CAAA,SAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,MAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,YAAA,EAAA,EAAA,aAAA,EAAA,EAAA,YAAA,EAAA,EAAA,QAAA,EAAA,CAAA,EAAA,EAAA,EAAA,GAAA,MAAA,uLAAA,EAAA,4BAAA,EAAA,MAAA,EAAA,4BAAA,EAAA,MAAA,EAAA,MAAA,EAAA,oGAAA,EAAA,kBAAA,EAAA,kBAAA,EAAA,kBAAA,EAAA,4EAAA,EAAA,GAAA,qCAAA,EAAA,GAAA,wBAAA,EAAA,GAAA,wBAAA,EAAA,GAAA,qFAAA,EAAA,wCAAA,EAAA,MAAA,EAAA,wCAAA,EAAA,EAAA,MAAA,EAAA,MAAA,EAAA,6FAAA,EAAA,kBAAA,EAAA,kBAAA,EAAA,kBAAA,EAAA,2OAAA,gBAAA,CAAA,OAAA,CAAA,0BAAA,eAAA,CAAA,2BAAA,SAAA,CAAA,SAAA,SAAA,EAAA,GAAA,MAAA,8MAAA,EAAA,IAAA,cAAA,qxBAAA,gBAAA,CAAA,OAAA,CAAA,wBAAA,gCAAA,YAAA,CAAA,SAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IAAA,MAAA,0HAAA,EAAA,QAAA,4BAAA,EAAA,YAAA,MAAA,EAAA,QAAA,kDAAA,EAAA,QAAA,MAAA,EAAA,YAAA,MAAA,EAAA,aAAA,yFAAA,EAAA,QAAA,kBAAA,EAAA,YAAA,kBAAA,EAAA,aAAA,kBAAA,EAAA,YAAA,4JAAA,gBAAA,CAAA,OAAA,CAAA,0BAAA,eAAA,CAAA,2BAAA,SAAA,CAAA,SAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,KAAA,OAAA,IAAA,EAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,IAAA,OAAA,IAAA,EAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,YAAA,EAAA,EAAA,aAAA,EAAA,EAAA,YAAA,EAAA,EAAA,QAAA,MAAA,qJAAA,EAAA,+BAAA,EAAA,MAAA,EAAA,+BAAA,EAAA,MAAA,EAAA,MAAA,EAAA,uFAAA,EAAA,kBAAA,EAAA,kBAAA,EAAA,kBAAA,EAAA,yeAAA,EAAA,GAAA,cAAA,EAAA,GAAA,oEAAA,EAAA,GAAA,cAAA,EAAA,GAAA,oEAAA,EAAA,GAAA,cAAA,EAAA,GAAA,8DAAA,gBAAA,CAAA,OAAA,CAAA,iCAAA,eAAA,CAAA,2BAAA,QAAA,CAAA,SAAA,WAAA,MAAA,m2BAAA,gBAAA,CAAA,OAAA,KAAA,UAAA,CAAA,SAAA,SAAA,EAAA,GAAA,IAAA,EAAA,uBAAA,EAAA,UAAA,MAAA,qlBAAA,EAAA,kLAAA,oPAAA,+TAAA,EAAA,EAAA,GAAA,gfAAA,EAAA,mQAAA,4LAAA,+CAAA,gBAAA,CAAA,UAAA,CAAA,yBAAA,SAAA,CAAA,yBAAA,YAAA,CAAA,0BAAA,UAAA,IAAA,kBAAA,GAAA,UAAA,GAAA,MAAA,GAAA,MAAA,IAAA,GAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,EAAA,QAAA,EAAA,IAAA,EAAA,gBAAA,GAAA,GAAA,OAAA,KAAA,GAAA,QAAA,SAAA,IAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,KAAA,EAAA,EAAA,OAAA,EAAA,EAAA,KAAA,EAAA,EAAA,SAAA,EAAA,EAAA,gBAAA,EAAA,EAAA,eAAA,EAAA,EAAA,UAAA,OAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,QAAA,IAAA,EAAA,EAAA,WAAA,IAAA,KAAA,EAAA,WAAA,IAAA,GAAA,CAAA,KAAA,EAAA,KAAA,EAAA,OAAA,EAAA,KAAA,EAAA,SAAA,EAAA,gBAAA,EAAA,eAAA,EAAA,UAAA,IAAA,CAAA,EAAA,GAAA,KAAA,CAAA,QAAA,GAAA,MAAA,EAAA,GAAA,SAAA,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,EAAA,GAAA,QAAA,IAAA,EAAA,EAAA,GAAA,CAAA,QAAA,IAAA,OAAA,EAAA,GAAA,EAAA,EAAA,QAAA,GAAA,EAAA,QAAA,OAAA,EAAA,EAAA,EAAA,EAAA,KAAA,IAAA,IAAA,KAAA,EAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,IAAA,OAAA,eAAA,EAAA,EAAA,CAAA,YAAA,EAAA,IAAA,EAAA,OAAA,EAAA,EAAA,WAAA,GAAA,iBAAA,WAAA,OAAA,WAAA,IAAA,OAAA,MAAA,IAAA,SAAA,cAAA,GAAA,MAAA,GAAA,GAAA,iBAAA,OAAA,OAAA,QAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAA,OAAA,UAAA,eAAA,KAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,oBAAA,QAAA,OAAA,aAAA,OAAA,eAAA,EAAA,OAAA,YAAA,CAAA,MAAA,WAAA,OAAA,eAAA,EAAA,aAAA,CAAA,OAAA,MAAA,EAAA,MAAA;;ACkEA,aAGA,IAqBA,EArBA,GAAA,EAEA,GAAA,EAEA,GAAA,EAGA,GAAA,EAEA,EAAA,GACA,GAAA,EAYA,GAXA,oBAAA,QAAA,OAAA,SAEA,OAAA,QAAA,EACA,GAAA,GAIA,oBAAA,SAAA,OAAA,WAAA,EACA,KAAA,WAAA,EAGA,EAMA,CACA,EAAA,SACA,EAAA,eAPA,CACA,IAAA,EAAA,UAAA,UAAA,WAAA,cACA,EAAA,UAAA,QAQA,IAiCA,EAjCA,EAAA,IACA,GAAA,EAAA,QAAA,YAAA,GAAA,EAAA,QAAA,YAAA,EAAA,OAAA,EACA,EAAA,OAAA,GACA,GAAA,EAAA,QAAA,YAAA,EAAA,SAAA,EACA,EAAA,SAAA,GACA,GAAA,EAAA,QAAA,YAAA,GAAA,EAAA,QAAA,YAAA,GAAA,EAAA,QAAA,YAAA,EAAA,OAAA,EACA,EAAA,OAAA,GACA,GAAA,EAAA,QAAA,WAAA,EAAA,QAAA,EACA,EAAA,QAAA,GACA,GAAA,EAAA,QAAA,cAAA,EAAA,UAAA,EACA,EAAA,UAAA,GACA,GAAA,EAAA,QAAA,cAAA,EAAA,UAAA,EACA,EAAA,UAAA,GACA,GAAA,EAAA,QAAA,aAAA,EAAA,SAAA,EACA,EAAA,SAAA,GACA,GAAA,EAAA,QAAA,SAAA,EAAA,MAAA,EACA,EAAA,MAAA,GACA,GAAA,EAAA,QAAA,WAAA,EAAA,OAAA,EACA,EAAA,OAAA,GACA,GAAA,EAAA,QAAA,UAAA,EAAA,MAAA,EACA,EAAA,MAAA,GACA,GAAA,EAAA,QAAA,UAAA,EAAA,MAAA,EACA,EAAA,MAAA,GACA,GAAA,EAAA,QAAA,UAAA,EAAA,MAAA,EACA,EAAA,MAAA,GACA,GAAA,EAAA,QAAA,SAAA,EAAA,KAAA,EACA,EAAA,KAAA,EACA,EAAA,gBAAA,KAQA,IAAA,EAAA,eACA,EAAA,WAAA,SAAA,GAEA,SAAA,EAAA,EAAA,EAAA,GAKA,EAAA,gBAAA,EACA,MAAA,IACA,iBAAA,QAAA,IAAA,EAAA,KAAA,QAAA,GACA,iBAAA,EAAA,KAAA,WAAA,EAAA,EAAA,GACA,MAAA,GAAA,iBAAA,EAAA,KAAA,WAAA,EAAA,KACA,KAAA,WAAA,EAAA,IAGA,SAAA,IAEA,OAAA,IAAA,EAAA,MASA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAEA,OAAA,GAAA,GACA,CACA,IAAA,EAAA,EAAA,KAAA,KAAA,EAAA,GAAA,EACA,EAAA,KAAA,MAAA,EAAA,UACA,EAAA,KAAA,SAAA,EAEA,OAAA,EAKA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAIA,IAFA,IAAA,EAAA,MAAA,EACA,EAAA,GAAA,KACA,GAAA,GACA,CACA,IAAA,EAAA,MAAA,KAAA,GACA,EAAA,KAAA,MAAA,GACA,EAAA,EAAA,EAAA,EAAA,EAEA,IADA,EAAA,EAAA,IAAA,MAAA,IAAA,IAAA,EAAA,IAAA,WAAA,MACA,KAAA,IAAA,IAAA,EAAA,GAAA,IAAA,IACA,EAAA,KAAA,WAAA,EAEA,OAAA,EAIA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAIA,IAFA,IAAA,EAAA,MAAA,EACA,EAAA,GAAA,KACA,GAAA,GACA,CACA,IAAA,EAAA,MAAA,KAAA,GACA,EAAA,KAAA,MAAA,GACA,EAAA,EAAA,EAAA,EAAA,EAEA,IADA,EAAA,EAAA,IAAA,MAAA,IAAA,IAAA,EAAA,GAAA,IACA,KAAA,GAAA,IAAA,EAAA,EACA,EAAA,KAAA,UAAA,EAEA,OAAA,EAEA,GAAA,+BAAA,GAEA,EAAA,UAAA,GAAA,EACA,EAAA,IAEA,GAAA,YAAA,GAEA,EAAA,UAAA,GAAA,EACA,EAAA,KAIA,EAAA,UAAA,GAAA,EACA,EAAA,IAEA,EAAA,UAAA,GAAA,EACA,EAAA,UAAA,IAAA,GAAA,GAAA,EACA,EAAA,UAAA,GAAA,GAAA,EACA,IAAA,EAAA,GACA,EAAA,UAAA,GAAA,KAAA,IAAA,EAAA,GACA,EAAA,UAAA,GAAA,EAAA,EACA,EAAA,UAAA,GAAA,EAAA,EAAA,EAEA,IAEA,EAAA,EAFA,EAAA,uCACA,EAAA,IAAA,MAGA,IADA,EAAA,IAAA,WAAA,GACA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,KAAA,EAEA,IADA,EAAA,IAAA,WAAA,GACA,EAAA,GAAA,EAAA,KAAA,EAAA,EAAA,KAAA,EAEA,IADA,EAAA,IAAA,WAAA,GACA,EAAA,GAAA,EAAA,KAAA,EAAA,EAAA,KAAA,EAEA,SAAA,EAAA,GAEA,OAAA,EAAA,OAAA,GAGA,SAAA,EAAA,EAAA,GAEA,IAAA,EAAA,EAAA,EAAA,WAAA,IACA,OAAA,MAAA,GAAA,EAAA,EAGA,SAAA,EAAA,GAEA,IAAA,IAAA,EAAA,KAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,GAAA,KAAA,GACA,EAAA,EAAA,KAAA,EACA,EAAA,EAAA,KAAA,EAGA,SAAA,EAAA,GAEA,KAAA,EAAA,EACA,KAAA,EAAA,EAAA,GAAA,EAAA,EACA,EAAA,EAAA,KAAA,GAAA,EACA,GAAA,EAAA,KAAA,GAAA,EAAA,KAAA,GACA,KAAA,EAAA,EAGA,SAAA,EAAA,GAEA,IAAA,EAAA,IAEA,OADA,EAAA,QAAA,GACA,EAGA,SAAA,EAAA,EAAA,GAEA,IAAA,EACA,GAAA,IAAA,EAAA,EAAA,OACA,GAAA,GAAA,EAAA,EAAA,OACA,GAAA,KAAA,EAAA,EAAA,OACA,GAAA,GAAA,EAAA,EAAA,OACA,GAAA,IAAA,EAAA,EAAA,MACA,CAAA,GAAA,GAAA,EAIA,YADA,KAAA,UAAA,EAAA,GAHA,EAAA,EAMA,KAAA,EAAA,EACA,KAAA,EAAA,EAIA,IAHA,IAAA,EAAA,EAAA,OACA,GAAA,EACA,EAAA,IACA,GAAA,GACA,CACA,IAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAA,EAAA,GACA,EAAA,EAEA,KAAA,EAAA,OAAA,KAAA,GAAA,IAGA,GAAA,EACA,GAAA,EACA,KAAA,KAAA,KAAA,EACA,EAAA,EAAA,KAAA,IAEA,KAAA,KAAA,EAAA,KAAA,GAAA,GAAA,KAAA,GAAA,GAAA,IAAA,EACA,KAAA,KAAA,KAAA,GAAA,KAAA,GAAA,GAGA,KAAA,KAAA,EAAA,IAAA,GAAA,GACA,GAAA,IACA,KAAA,KAAA,GAAA,KAAA,KAEA,GAAA,GAAA,IAAA,IAAA,EAAA,MAEA,KAAA,GAAA,EACA,EAAA,IAAA,KAAA,KAAA,EAAA,KAAA,GAAA,KAAA,GAAA,GAAA,GAAA,IAEA,KAAA,QACA,GAAA,EAAA,KAAA,MAAA,KAAA,MAGA,SAAA,IAGA,IADA,IAAA,EAAA,KAAA,EAAA,KAAA,GACA,KAAA,EAAA,GAAA,KAAA,KAAA,EAAA,IAAA,KAAA,KAAA,EAGA,SAAA,EAAA,GAEA,GAAA,KAAA,EAAA,EAAA,MAAA,IAAA,KAAA,SAAA,SAAA,GACA,IAAA,EACA,GAAA,IAAA,EAAA,EAAA,OACA,GAAA,GAAA,EAAA,EAAA,OACA,GAAA,GAAA,EAAA,EAAA,OACA,GAAA,IAAA,EAAA,EAAA,MACA,CAAA,GAAA,GAAA,EACA,OAAA,KAAA,QAAA,GADA,EAAA,EAEA,IACA,EADA,GAAA,GAAA,GAAA,EACA,GAAA,EACA,EAAA,GACA,EAAA,KAAA,EACA,EAAA,KAAA,GAAA,EAAA,KAAA,GAAA,EACA,GAAA,KAAA,EAOA,IALA,EAAA,KAAA,KAAA,EAAA,KAAA,IAAA,GAAA,IAEA,GAAA,EACA,EAAA,EAAA,IAEA,GAAA,GAEA,EAAA,GAEA,GAAA,KAAA,IAAA,GAAA,GAAA,IAAA,EAAA,EACA,GAAA,OAAA,KAAA,GAAA,KAAA,GAAA,KAIA,EAAA,KAAA,KAAA,GAAA,GAAA,EACA,GAAA,IAEA,GAAA,KAAA,KACA,IAGA,EAAA,IAAA,GAAA,GACA,IAAA,GAAA,EAAA,IAGA,OAAA,EAAA,EAAA,IAGA,SAAA,IAEA,IAAA,EAAA,IAEA,OADA,EAAA,KAAA,MAAA,KAAA,GACA,EAGA,SAAA,IAEA,OAAA,KAAA,EAAA,EAAA,KAAA,SAAA,KAGA,SAAA,EAAA,GAEA,IAAA,EAAA,KAAA,EAAA,EAAA,EACA,GAAA,GAAA,EAAA,OAAA,EACA,IAAA,EAAA,KAAA,EAEA,GAAA,IADA,EAAA,EAAA,EAAA,GACA,OAAA,KAAA,EAAA,GAAA,EAAA,EACA,OAAA,GAAA,GACA,GAAA,IAAA,EAAA,KAAA,GAAA,EAAA,IAAA,OAAA,EACA,OAAA,EAGA,SAAA,EAAA,GAEA,IACA,EADA,EAAA,EA2BA,OAzBA,IAAA,EAAA,IAAA,MAEA,EAAA,EACA,GAAA,IAEA,IAAA,EAAA,GAAA,KAEA,EAAA,EACA,GAAA,GAEA,IAAA,EAAA,GAAA,KAEA,EAAA,EACA,GAAA,GAEA,IAAA,EAAA,GAAA,KAEA,EAAA,EACA,GAAA,GAEA,IAAA,EAAA,GAAA,KAEA,EAAA,EACA,GAAA,GAEA,EAGA,SAAA,IAEA,OAAA,KAAA,GAAA,EAAA,EACA,KAAA,IAAA,KAAA,EAAA,GAAA,EAAA,KAAA,KAAA,EAAA,GAAA,KAAA,EAAA,KAAA,IAGA,SAAA,EAAA,EAAA,GAEA,IAAA,EACA,IAAA,EAAA,KAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,GAAA,KAAA,GACA,IAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,GAAA,EACA,EAAA,EAAA,KAAA,EAAA,EACA,EAAA,EAAA,KAAA,EAGA,SAAA,EAAA,EAAA,GAEA,IAAA,IAAA,EAAA,EAAA,EAAA,KAAA,IAAA,EAAA,EAAA,EAAA,GAAA,KAAA,GACA,EAAA,EAAA,KAAA,IAAA,KAAA,EAAA,EAAA,GACA,EAAA,EAAA,KAAA,EAGA,SAAA,EAAA,EAAA,GAEA,IAKA,EALA,EAAA,EAAA,KAAA,GACA,EAAA,KAAA,GAAA,EACA,GAAA,GAAA,GAAA,EACA,EAAA,KAAA,MAAA,EAAA,KAAA,IACA,EAAA,KAAA,GAAA,EAAA,KAAA,GAEA,IAAA,EAAA,KAAA,EAAA,EAAA,GAAA,IAAA,EAEA,EAAA,EAAA,EAAA,GAAA,KAAA,IAAA,EAAA,EACA,GAAA,KAAA,GAAA,IAAA,EAEA,IAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,GAAA,EACA,EAAA,GAAA,EACA,EAAA,EAAA,KAAA,EAAA,EAAA,EACA,EAAA,EAAA,KAAA,EACA,EAAA,QAGA,SAAA,EAAA,EAAA,GAEA,EAAA,EAAA,KAAA,EACA,IAAA,EAAA,KAAA,MAAA,EAAA,KAAA,IACA,GAAA,GAAA,KAAA,EAEA,EAAA,EAAA,MAFA,CAKA,IAAA,EAAA,EAAA,KAAA,GACA,EAAA,KAAA,GAAA,EACA,GAAA,GAAA,GAAA,EACA,EAAA,GAAA,KAAA,IAAA,EACA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,KAAA,IAAA,EAEA,EAAA,EAAA,EAAA,KAAA,KAAA,GAAA,IAAA,EACA,EAAA,EAAA,GAAA,KAAA,IAAA,EAEA,EAAA,IAAA,EAAA,KAAA,EAAA,EAAA,KAAA,KAAA,EAAA,IAAA,GACA,EAAA,EAAA,KAAA,EAAA,EACA,EAAA,SAGA,SAAA,EAAA,EAAA,GAKA,IAHA,IAAA,EAAA,EACA,EAAA,EACA,EAAA,KAAA,IAAA,EAAA,EAAA,KAAA,GACA,EAAA,GAEA,GAAA,KAAA,GAAA,EAAA,GACA,EAAA,KAAA,EAAA,KAAA,GACA,IAAA,KAAA,GAEA,GAAA,EAAA,EAAA,KAAA,EACA,CAEA,IADA,GAAA,EAAA,EACA,EAAA,KAAA,GAEA,GAAA,KAAA,GACA,EAAA,KAAA,EAAA,KAAA,GACA,IAAA,KAAA,GAEA,GAAA,KAAA,MAGA,CAEA,IADA,GAAA,KAAA,EACA,EAAA,EAAA,GAEA,GAAA,EAAA,GACA,EAAA,KAAA,EAAA,KAAA,GACA,IAAA,KAAA,GAEA,GAAA,EAAA,EAEA,EAAA,EAAA,EAAA,GAAA,EAAA,EACA,GAAA,EAAA,EAAA,KAAA,KAAA,GAAA,EACA,EAAA,IAAA,EAAA,KAAA,GACA,EAAA,EAAA,EACA,EAAA,QAIA,SAAA,EAAA,EAAA,GAEA,IAAA,EAAA,KAAA,MACA,EAAA,EAAA,MACA,EAAA,EAAA,EAEA,IADA,EAAA,EAAA,EAAA,EAAA,IACA,GAAA,GAAA,EAAA,GAAA,EACA,IAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GACA,EAAA,EAAA,EACA,EAAA,QACA,KAAA,GAAA,EAAA,GAAA,EAAA,KAAA,MAAA,EAAA,GAGA,SAAA,EAAA,GAIA,IAFA,IAAA,EAAA,KAAA,MACA,EAAA,EAAA,EAAA,EAAA,EAAA,IACA,GAAA,GAAA,EAAA,GAAA,EACA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EACA,CACA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IACA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,EAAA,KAEA,EAAA,EAAA,EAAA,IAAA,EAAA,GACA,EAAA,EAAA,EAAA,EAAA,GAAA,GAGA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IACA,EAAA,EAAA,EACA,EAAA,QAIA,SAAA,EAAA,EAAA,EAAA,GAEA,IAAA,EAAA,EAAA,MACA,KAAA,EAAA,GAAA,GAAA,CACA,IAAA,EAAA,KAAA,MACA,GAAA,EAAA,EAAA,EAAA,EAIA,OAFA,MAAA,GAAA,EAAA,QAAA,QACA,MAAA,GAAA,KAAA,OAAA,IAGA,MAAA,IAAA,EAAA,KACA,IAAA,EAAA,IACA,EAAA,KAAA,EACA,EAAA,EAAA,EACA,EAAA,KAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IACA,EAAA,GAEA,EAAA,SAAA,EAAA,GACA,EAAA,SAAA,EAAA,KAIA,EAAA,OAAA,GACA,EAAA,OAAA,IAEA,IAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,GACA,GAAA,GAAA,EAAA,CACA,IAAA,EAAA,GAAA,GAAA,KAAA,KAAA,EAAA,EAAA,EAAA,EAAA,IAAA,KAAA,GAAA,GACA,EAAA,KAAA,GAAA,EACA,GAAA,GAAA,KAAA,IAAA,EACA,EAAA,GAAA,KAAA,GACA,EAAA,EAAA,EACA,EAAA,EAAA,EACA,EAAA,MAAA,EAAA,IAAA,EASA,IARA,EAAA,UAAA,EAAA,GACA,EAAA,UAAA,IAAA,IAEA,EAAA,EAAA,KAAA,EACA,EAAA,MAAA,EAAA,IAEA,EAAA,IAAA,UAAA,EAAA,GACA,EAAA,MAAA,EAAA,GACA,EAAA,EAAA,GAAA,EAAA,EAAA,KAAA,EACA,OAAA,GAAA,GACA,CAEA,IAAA,EAAA,IAAA,IAAA,EAAA,KAAA,GAAA,KAAA,MAAA,EAAA,GAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GACA,IAAA,EAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAIA,IAFA,EAAA,UAAA,EAAA,GACA,EAAA,MAAA,EAAA,GACA,EAAA,KAAA,GAAA,EAAA,MAAA,EAAA,GAGA,MAAA,IAEA,EAAA,UAAA,EAAA,GACA,GAAA,GAAA,EAAA,KAAA,MAAA,EAAA,IAEA,EAAA,EAAA,EACA,EAAA,QACA,EAAA,GAAA,EAAA,SAAA,EAAA,GACA,EAAA,GAAA,EAAA,KAAA,MAAA,EAAA,KAGA,SAAA,EAAA,GAEA,IAAA,EAAA,IAGA,OAFA,KAAA,MAAA,SAAA,EAAA,KAAA,GACA,KAAA,EAAA,GAAA,EAAA,UAAA,EAAA,MAAA,GAAA,EAAA,MAAA,EAAA,GACA,EAGA,SAAA,EAAA,GAEA,KAAA,EAAA,EAGA,SAAA,EAAA,GAEA,OAAA,EAAA,EAAA,GAAA,EAAA,UAAA,KAAA,IAAA,EAAA,EAAA,IAAA,KAAA,GACA,EAGA,SAAA,EAAA,GAEA,OAAA,EAGA,SAAA,EAAA,GAEA,EAAA,SAAA,KAAA,EAAA,KAAA,GAGA,SAAA,EAAA,EAAA,EAAA,GAEA,EAAA,WAAA,EAAA,GACA,KAAA,OAAA,GAGA,SAAA,EAAA,EAAA,GAEA,EAAA,SAAA,GACA,KAAA,OAAA,GAiBA,SAAA,IAEA,GAAA,KAAA,EAAA,EAAA,OAAA,EACA,IAAA,EAAA,KAAA,GACA,GAAA,IAAA,EAAA,GAAA,OAAA,EACA,IAAA,EAAA,EAAA,EAQA,OAFA,GAHA,GADA,GADA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,KACA,GAAA,IAAA,GAAA,GAAA,MACA,IAAA,MAAA,GAAA,EAAA,QAAA,QAGA,EAAA,EAAA,EAAA,KAAA,IAAA,KAAA,IAEA,EAAA,KAAA,GAAA,GAAA,EAGA,SAAA,EAAA,GAEA,KAAA,EAAA,EACA,KAAA,GAAA,EAAA,WACA,KAAA,IAAA,MAAA,KAAA,GACA,KAAA,IAAA,KAAA,IAAA,GACA,KAAA,IAAA,GAAA,EAAA,GAAA,IAAA,EACA,KAAA,IAAA,EAAA,EAAA,EAGA,SAAA,EAAA,GAEA,IAAA,EAAA,IAIA,OAHA,EAAA,MAAA,UAAA,KAAA,EAAA,EAAA,GACA,EAAA,SAAA,KAAA,EAAA,KAAA,GACA,EAAA,EAAA,GAAA,EAAA,UAAA,EAAA,MAAA,GAAA,KAAA,EAAA,MAAA,EAAA,GACA,EAGA,SAAA,EAAA,GAEA,IAAA,EAAA,IAGA,OAFA,EAAA,OAAA,GACA,KAAA,OAAA,GACA,EAGA,SAAA,GAAA,GAEA,KAAA,EAAA,GAAA,KAAA,KACA,EAAA,EAAA,KAAA,EACA,IAAA,IAAA,EAAA,EAAA,EAAA,KAAA,EAAA,IAAA,EACA,CAEA,IAAA,EAAA,MAAA,EAAA,GACA,EAAA,EAAA,KAAA,MAAA,EAAA,KAAA,KAAA,EAAA,IAAA,IAAA,KAAA,IAAA,KAAA,KAAA,IAAA,EAAA,GAKA,IAFA,EADA,EAAA,EAAA,KAAA,EAAA,IACA,KAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,EAAA,GAEA,EAAA,IAAA,EAAA,IAEA,EAAA,IAAA,EAAA,GACA,IAAA,KAGA,EAAA,QACA,EAAA,UAAA,KAAA,EAAA,EAAA,GACA,EAAA,UAAA,KAAA,IAAA,GAAA,EAAA,MAAA,KAAA,EAAA,GAGA,SAAA,GAAA,EAAA,GAEA,EAAA,SAAA,GACA,KAAA,OAAA,GAGA,SAAA,GAAA,EAAA,EAAA,GAEA,EAAA,WAAA,EAAA,GACA,KAAA,OAAA,GAQA,SAAA,KAEA,OAAA,IAAA,KAAA,EAAA,EAAA,EAAA,KAAA,GAAA,KAAA,GAGA,SAAA,GAAA,EAAA,GAEA,GAAA,EAAA,YAAA,EAAA,EAAA,OAAA,EAAA,IACA,IAAA,EAAA,IACA,EAAA,IACA,EAAA,EAAA,QAAA,MACA,EAAA,EAAA,GAAA,EAEA,IADA,EAAA,OAAA,KACA,GAAA,GAGA,GADA,EAAA,MAAA,EAAA,IACA,EAAA,GAAA,GAAA,EAAA,EAAA,MAAA,EAAA,EAAA,OAEA,CACA,IAAA,EAAA,EACA,EAAA,EACA,EAAA,EAGA,OAAA,EAAA,OAAA,GAGA,SAAA,GAAA,EAAA,GAEA,IAAA,EAGA,OAFA,EAAA,EAAA,KAAA,EAAA,SAAA,IAAA,EAAA,GACA,IAAA,EAAA,GACA,KAAA,IAAA,EAAA,GAoCA,SAAA,KAEA,IAAA,EAAA,IAEA,OADA,KAAA,OAAA,GACA,EAGA,SAAA,KAEA,GAAA,KAAA,EAAA,EACA,CACA,GAAA,GAAA,KAAA,EAAA,OAAA,KAAA,GAAA,KAAA,GACA,GAAA,GAAA,KAAA,EAAA,OAAA,MAEA,CAAA,GAAA,GAAA,KAAA,EAAA,OAAA,KAAA,GACA,GAAA,GAAA,KAAA,EAAA,OAAA,EAEA,OAAA,KAAA,IAAA,GAAA,GAAA,KAAA,IAAA,IAAA,KAAA,GAAA,KAAA,GAGA,SAAA,KAEA,OAAA,GAAA,KAAA,EAAA,KAAA,EAAA,KAAA,IAAA,IAAA,GAGA,SAAA,KAEA,OAAA,GAAA,KAAA,EAAA,KAAA,EAAA,KAAA,IAAA,IAAA,GAGA,SAAA,GAAA,GAEA,OAAA,KAAA,MAAA,KAAA,IAAA,KAAA,GAAA,KAAA,IAAA,IAGA,SAAA,KAEA,OAAA,KAAA,EAAA,GAAA,EACA,KAAA,GAAA,GAAA,GAAA,KAAA,GAAA,KAAA,IAAA,EAAA,EACA,EAGA,SAAA,GAAA,GAGA,GADA,MAAA,IAAA,EAAA,IACA,GAAA,KAAA,UAAA,EAAA,GAAA,EAAA,GAAA,MAAA,IACA,IAAA,EAAA,KAAA,UAAA,GACA,EAAA,KAAA,IAAA,EAAA,GACA,EAAA,EAAA,GACA,EAAA,IACA,EAAA,IACA,EAAA,GAEA,IADA,KAAA,SAAA,EAAA,EAAA,GACA,EAAA,SAAA,GAEA,GAAA,EAAA,EAAA,YAAA,SAAA,GAAA,OAAA,GAAA,EACA,EAAA,SAAA,EAAA,EAAA,GAEA,OAAA,EAAA,WAAA,SAAA,GAAA,EAGA,SAAA,GAAA,EAAA,GAEA,KAAA,QAAA,GACA,MAAA,IAAA,EAAA,IAMA,IALA,IAAA,EAAA,KAAA,UAAA,GACA,EAAA,KAAA,IAAA,EAAA,GACA,GAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,SAAA,EACA,CACA,IAAA,EAAA,EAAA,EAAA,GACA,EAAA,EAEA,KAAA,EAAA,OAAA,IAAA,GAAA,KAAA,WAAA,GAAA,IAGA,EAAA,EAAA,EAAA,IACA,GAAA,IAEA,KAAA,UAAA,GACA,KAAA,WAAA,EAAA,GACA,EAAA,EACA,EAAA,IAGA,EAAA,IAEA,KAAA,UAAA,KAAA,IAAA,EAAA,IACA,KAAA,WAAA,EAAA,IAEA,GAAA,EAAA,KAAA,MAAA,KAAA,MAGA,SAAA,GAAA,EAAA,EAAA,GAEA,GAAA,iBAAA,EAGA,GAAA,EAAA,EAAA,KAAA,QAAA,QAOA,IAJA,KAAA,WAAA,EAAA,GACA,KAAA,QAAA,EAAA,IACA,KAAA,UAAA,EAAA,IAAA,UAAA,EAAA,GAAA,GAAA,MACA,KAAA,UAAA,KAAA,WAAA,EAAA,IACA,KAAA,gBAAA,IAEA,KAAA,WAAA,EAAA,GACA,KAAA,YAAA,GAAA,KAAA,MAAA,EAAA,IAAA,UAAA,EAAA,GAAA,UAKA,CAEA,IAAA,EAAA,IAAA,MACA,EAAA,EAAA,EACA,EAAA,OAAA,GAAA,GAAA,GACA,EAAA,UAAA,GACA,EAAA,EAAA,EAAA,KAAA,GAAA,GAAA,EACA,EAAA,GAAA,EACA,KAAA,WAAA,EAAA,MAIA,SAAA,KAEA,IAAA,EAAA,KAAA,EACA,EAAA,IAAA,MACA,EAAA,GAAA,KAAA,EACA,IACA,EADA,EAAA,KAAA,GAAA,EAAA,KAAA,GAAA,EACA,EAAA,EACA,GAAA,KAAA,EAIA,IAFA,EAAA,KAAA,KAAA,EAAA,KAAA,IAAA,KAAA,KAAA,EAAA,KAAA,KAAA,IACA,EAAA,KAAA,EAAA,KAAA,GAAA,KAAA,GAAA,GACA,GAAA,GAEA,EAAA,GAEA,GAAA,KAAA,IAAA,GAAA,GAAA,IAAA,EAAA,EACA,GAAA,OAAA,KAAA,GAAA,KAAA,GAAA,KAIA,EAAA,KAAA,KAAA,GAAA,GAAA,IACA,GAAA,IAEA,GAAA,KAAA,KACA,IAGA,IAAA,IAAA,KAAA,IAAA,KACA,GAAA,IAAA,IAAA,KAAA,KAAA,IAAA,MAAA,GACA,EAAA,GAAA,GAAA,KAAA,KAAA,EAAA,KAAA,GAGA,OAAA,EAGA,SAAA,GAAA,GAEA,OAAA,GAAA,KAAA,UAAA,GAGA,SAAA,GAAA,GAEA,OAAA,KAAA,UAAA,GAAA,EAAA,KAAA,EAGA,SAAA,GAAA,GAEA,OAAA,KAAA,UAAA,GAAA,EAAA,KAAA,EAGA,SAAA,GAAA,EAAA,EAAA,GAEA,IAAA,EAAA,EAAA,EAAA,KAAA,IAAA,EAAA,EAAA,KAAA,GACA,IAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,KAAA,GAAA,EAAA,IACA,GAAA,EAAA,EAAA,KAAA,EACA,CAEA,IADA,EAAA,EAAA,EAAA,KAAA,GACA,EAAA,EAAA,EAAA,KAAA,IAAA,EAAA,EAAA,GAAA,EAAA,KAAA,GAAA,GACA,EAAA,EAAA,KAAA,MAGA,CAEA,IADA,EAAA,KAAA,EAAA,KAAA,GACA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,IACA,EAAA,EAAA,EAAA,EAEA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,GACA,EAAA,QAGA,SAAA,GAAA,EAAA,GAEA,OAAA,EAAA,EAGA,SAAA,GAAA,GAEA,IAAA,EAAA,IAEA,OADA,KAAA,UAAA,EAAA,GAAA,GACA,EAGA,SAAA,GAAA,EAAA,GAEA,OAAA,EAAA,EAGA,SAAA,GAAA,GAEA,IAAA,EAAA,IAEA,OADA,KAAA,UAAA,EAAA,GAAA,GACA,EAGA,SAAA,GAAA,EAAA,GAEA,OAAA,EAAA,EAGA,SAAA,GAAA,GAEA,IAAA,EAAA,IAEA,OADA,KAAA,UAAA,EAAA,GAAA,GACA,EAGA,SAAA,GAAA,EAAA,GAEA,OAAA,GAAA,EAGA,SAAA,GAAA,GAEA,IAAA,EAAA,IAEA,OADA,KAAA,UAAA,EAAA,GAAA,GACA,EAGA,SAAA,KAGA,IADA,IAAA,EAAA,IACA,EAAA,EAAA,EAAA,KAAA,IAAA,EAAA,EAAA,GAAA,KAAA,IAAA,KAAA,GAGA,OAFA,EAAA,EAAA,KAAA,EACA,EAAA,GAAA,KAAA,EACA,EAGA,SAAA,GAAA,GAEA,IAAA,EAAA,IAGA,OAFA,EAAA,EAAA,KAAA,UAAA,EAAA,GACA,KAAA,SAAA,EAAA,GACA,EAGA,SAAA,GAAA,GAEA,IAAA,EAAA,IAGA,OAFA,EAAA,EAAA,KAAA,UAAA,EAAA,GACA,KAAA,SAAA,EAAA,GACA,EAGA,SAAA,GAAA,GAEA,GAAA,GAAA,EAAA,OAAA,EACA,IAAA,EAAA,EAsBA,OArBA,IAAA,MAAA,KAEA,IAAA,GACA,GAAA,IAEA,IAAA,IAAA,KAEA,IAAA,EACA,GAAA,GAEA,IAAA,GAAA,KAEA,IAAA,EACA,GAAA,GAEA,IAAA,EAAA,KAEA,IAAA,EACA,GAAA,GAEA,IAAA,EAAA,MAAA,EACA,EAGA,SAAA,KAEA,IAAA,IAAA,EAAA,EAAA,EAAA,KAAA,IAAA,EACA,GAAA,GAAA,KAAA,GAAA,OAAA,EAAA,KAAA,GAAA,GAAA,KAAA,IACA,OAAA,KAAA,EAAA,EAAA,KAAA,EAAA,KAAA,IACA,EAGA,SAAA,GAAA,GAGA,IADA,IAAA,EAAA,EACA,GAAA,GAEA,GAAA,EAAA,IACA,EAEA,OAAA,EAGA,SAAA,KAIA,IAFA,IAAA,EAAA,EACA,EAAA,KAAA,EAAA,KAAA,GACA,EAAA,EAAA,EAAA,KAAA,IAAA,EAAA,GAAA,GAAA,KAAA,GAAA,GACA,OAAA,EAGA,SAAA,GAAA,GAEA,IAAA,EAAA,KAAA,MAAA,EAAA,KAAA,IACA,OAAA,GAAA,KAAA,EAAA,GAAA,KAAA,EACA,IAAA,KAAA,GAAA,GAAA,EAAA,KAAA,IAGA,SAAA,GAAA,EAAA,GAEA,IAAA,EAAA,EAAA,IAAA,UAAA,GAEA,OADA,KAAA,UAAA,EAAA,EAAA,GACA,EAGA,SAAA,GAAA,GAEA,OAAA,KAAA,UAAA,EAAA,IAGA,SAAA,GAAA,GAEA,OAAA,KAAA,UAAA,EAAA,IAGA,SAAA,GAAA,GAEA,OAAA,KAAA,UAAA,EAAA,IAGA,SAAA,GAAA,EAAA,GAKA,IAHA,IAAA,EAAA,EACA,EAAA,EACA,EAAA,KAAA,IAAA,EAAA,EAAA,KAAA,GACA,EAAA,GAEA,GAAA,KAAA,GAAA,EAAA,GACA,EAAA,KAAA,EAAA,KAAA,GACA,IAAA,KAAA,GAEA,GAAA,EAAA,EAAA,KAAA,EACA,CAEA,IADA,GAAA,EAAA,EACA,EAAA,KAAA,GAEA,GAAA,KAAA,GACA,EAAA,KAAA,EAAA,KAAA,GACA,IAAA,KAAA,GAEA,GAAA,KAAA,MAGA,CAEA,IADA,GAAA,KAAA,EACA,EAAA,EAAA,GAEA,GAAA,EAAA,GACA,EAAA,KAAA,EAAA,KAAA,GACA,IAAA,KAAA,GAEA,GAAA,EAAA,EAEA,EAAA,EAAA,EAAA,GAAA,EAAA,EACA,EAAA,EAAA,EAAA,KAAA,EACA,GAAA,IAAA,EAAA,KAAA,KAAA,GAAA,GACA,EAAA,EAAA,EACA,EAAA,QAGA,SAAA,GAAA,GAEA,IAAA,EAAA,IAEA,OADA,KAAA,MAAA,EAAA,GACA,EAGA,SAAA,GAAA,GAEA,IAAA,EAAA,IAEA,OADA,KAAA,MAAA,EAAA,GACA,EAGA,SAAA,GAAA,GAEA,IAAA,EAAA,IAEA,OADA,KAAA,WAAA,EAAA,GACA,EAGA,SAAA,KAEA,IAAA,EAAA,IAEA,OADA,KAAA,SAAA,GACA,EAGA,SAAA,GAAA,GAEA,IAAA,EAAA,IAEA,OADA,KAAA,SAAA,EAAA,EAAA,MACA,EAGA,SAAA,GAAA,GAEA,IAAA,EAAA,IAEA,OADA,KAAA,SAAA,EAAA,KAAA,GACA,EAGA,SAAA,GAAA,GAEA,IAAA,EAAA,IACA,EAAA,IAEA,OADA,KAAA,SAAA,EAAA,EAAA,GACA,IAAA,MAAA,EAAA,GAGA,SAAA,GAAA,GAEA,KAAA,KAAA,GAAA,KAAA,GAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,KAAA,KACA,KAAA,EACA,KAAA,QAGA,SAAA,GAAA,EAAA,GAEA,GAAA,GAAA,EAAA,CACA,KAAA,KAAA,GAAA,GAAA,KAAA,KAAA,KAAA,EAEA,IADA,KAAA,IAAA,EACA,KAAA,IAAA,KAAA,IAEA,KAAA,IAAA,KAAA,KACA,GAAA,KAAA,IAAA,KAAA,KAAA,KAAA,KACA,KAAA,IAIA,SAAA,MAGA,SAAA,GAAA,GAEA,OAAA,EAGA,SAAA,GAAA,EAAA,EAAA,GAEA,EAAA,WAAA,EAAA,GAGA,SAAA,GAAA,EAAA,GAEA,EAAA,SAAA,GAOA,SAAA,GAAA,GAEA,OAAA,KAAA,IAAA,EAAA,IAAA,IAIA,SAAA,GAAA,EAAA,EAAA,GAEA,IAIA,EAJA,EAAA,KAAA,IAAA,KAAA,EAAA,EAAA,EAAA,GAGA,IAFA,EAAA,EAAA,EACA,EAAA,EAAA,EACA,EAAA,GAAA,IAAA,GAAA,EAEA,IAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,KAAA,GAAA,KAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,KAAA,GACA,IAAA,EAAA,KAAA,IAAA,EAAA,EAAA,GAAA,EAAA,IAAA,EAAA,KAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GACA,EAAA,QAIA,SAAA,GAAA,EAAA,EAAA,KAEA,EACA,IAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,EAEA,IADA,EAAA,EAAA,IACA,GAAA,GAAA,EAAA,GAAA,EACA,IAAA,EAAA,KAAA,IAAA,EAAA,KAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EACA,EAAA,KAAA,EAAA,EAAA,GAAA,KAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,GACA,EAAA,QACA,EAAA,UAAA,EAAA,GAGA,SAAA,GAAA,GAGA,KAAA,GAAA,IACA,KAAA,GAAA,IACA,EAAA,IAAA,UAAA,EAAA,EAAA,EAAA,KAAA,IACA,KAAA,GAAA,KAAA,GAAA,OAAA,GACA,KAAA,EAAA,EAGA,SAAA,GAAA,GAEA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,OAAA,EAAA,IAAA,KAAA,GACA,GAAA,EAAA,UAAA,KAAA,GAAA,EAAA,OAAA,EAGA,IAAA,EAAA,IAGA,OAFA,EAAA,OAAA,GACA,KAAA,OAAA,GACA,EAIA,SAAA,GAAA,GAEA,OAAA,EAGA,SAAA,GAAA,GAUA,IARA,EAAA,UAAA,KAAA,EAAA,EAAA,EAAA,KAAA,IACA,EAAA,EAAA,KAAA,EAAA,EAAA,IAEA,EAAA,EAAA,KAAA,EAAA,EAAA,EACA,EAAA,SAEA,KAAA,GAAA,gBAAA,KAAA,GAAA,KAAA,EAAA,EAAA,EAAA,KAAA,IACA,KAAA,EAAA,gBAAA,KAAA,GAAA,KAAA,EAAA,EAAA,EAAA,KAAA,IACA,EAAA,UAAA,KAAA,IAAA,GAAA,EAAA,WAAA,EAAA,KAAA,EAAA,EAAA,GAEA,IADA,EAAA,MAAA,KAAA,GAAA,GACA,EAAA,UAAA,KAAA,IAAA,GAAA,EAAA,MAAA,KAAA,EAAA,GAGA,SAAA,GAAA,EAAA,GAEA,EAAA,SAAA,GACA,KAAA,OAAA,GAGA,SAAA,GAAA,EAAA,EAAA,GAEA,EAAA,WAAA,EAAA,GACA,KAAA,OAAA,GAQA,SAAA,GAAA,EAAA,GAEA,IACA,EACA,EAFA,EAAA,EAAA,YACA,EAAA,EAAA,GAEA,GAAA,GAAA,EAAA,OAAA,EACA,EAAA,EAAA,GAAA,EACA,EAAA,GAAA,EACA,EAAA,IAAA,EACA,EAAA,IAAA,EACA,EAEA,EADA,EAAA,EACA,IAAA,EAAA,GACA,EAAA,SACA,IAAA,GAAA,GAEA,IAAA,EAAA,GAEA,IAAA,EAAA,IAAA,MACA,EAAA,EACA,EAAA,EAAA,EACA,GAAA,GAAA,GAAA,EAEA,GADA,EAAA,GAAA,EAAA,QAAA,MACA,EAAA,EACA,CACA,IAAA,EAAA,IAEA,IADA,EAAA,MAAA,EAAA,GAAA,GACA,GAAA,GAEA,EAAA,GAAA,IACA,EAAA,MAAA,EAAA,EAAA,EAAA,GAAA,EAAA,IACA,GAAA,EAGA,IACA,EAEA,EAHA,EAAA,EAAA,EAAA,EACA,GAAA,EACA,EAAA,IAGA,IADA,EAAA,EAAA,EAAA,IAAA,EACA,GAAA,GACA,CAQA,IAPA,GAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAGA,GAAA,EAAA,IAAA,GAAA,EAAA,GAAA,IAAA,EAAA,EACA,EAAA,IAAA,GAAA,EAAA,EAAA,IAAA,KAAA,GAAA,EAAA,IAEA,EAAA,EACA,IAAA,EAAA,IAEA,IAAA,IACA,EAOA,IALA,GAAA,GAAA,IAEA,GAAA,KAAA,KACA,GAEA,EAEA,EAAA,GAAA,OAAA,GACA,GAAA,MAGA,CACA,KAAA,EAAA,GAEA,EAAA,MAAA,EAAA,GACA,EAAA,MAAA,EAAA,GACA,GAAA,EAEA,EAAA,EAAA,EAAA,MAAA,EAAA,IAGA,EAAA,EACA,EAAA,EACA,EAAA,GAEA,EAAA,MAAA,EAAA,EAAA,GAAA,GAEA,KAAA,GAAA,GAAA,IAAA,EAAA,GAAA,GAAA,IAEA,EAAA,MAAA,EAAA,GACA,EAAA,EACA,EAAA,EACA,EAAA,IACA,EAAA,IAEA,EAAA,KAAA,GAAA,IACA,GAIA,OAAA,EAAA,OAAA,GAGA,SAAA,GAAA,GAEA,IAAA,EAAA,KAAA,EAAA,EAAA,KAAA,SAAA,KAAA,QACA,EAAA,EAAA,EAAA,EAAA,EAAA,SAAA,EAAA,QACA,GAAA,EAAA,UAAA,GAAA,EACA,CACA,IAAA,EAAA,EACA,EAAA,EACA,EAAA,EAEA,IAAA,EAAA,EAAA,kBACA,EAAA,EAAA,kBACA,GAAA,EAAA,EAAA,OAAA,EAOA,IANA,EAAA,IAAA,EAAA,GACA,EAAA,IAEA,EAAA,SAAA,EAAA,GACA,EAAA,SAAA,EAAA,IAEA,EAAA,SAAA,IAEA,EAAA,EAAA,mBAAA,GAAA,EAAA,SAAA,EAAA,IACA,EAAA,EAAA,mBAAA,GAAA,EAAA,SAAA,EAAA,GACA,EAAA,UAAA,IAAA,GAEA,EAAA,MAAA,EAAA,GACA,EAAA,SAAA,EAAA,KAIA,EAAA,MAAA,EAAA,GACA,EAAA,SAAA,EAAA,IAIA,OADA,EAAA,GAAA,EAAA,SAAA,EAAA,GACA,EAGA,SAAA,GAAA,GAEA,GAAA,GAAA,EAAA,OAAA,EACA,IAAA,EAAA,KAAA,GAAA,EACA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EACA,GAAA,KAAA,EAAA,EACA,GAAA,GAAA,EAAA,EAAA,KAAA,GAAA,OAEA,IAAA,IAAA,EAAA,KAAA,EAAA,EAAA,GAAA,IAAA,EAAA,GAAA,EAAA,EAAA,KAAA,IAAA,EACA,OAAA,EAGA,SAAA,GAAA,GAEA,IAAA,EAAA,EAAA,SACA,GAAA,KAAA,UAAA,GAAA,GAAA,EAAA,SAAA,OAAA,EAAA,KAOA,IANA,IAAA,EAAA,EAAA,QACA,EAAA,KAAA,QACA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,GAAA,EAAA,UACA,CACA,KAAA,EAAA,UAEA,EAAA,SAAA,EAAA,GACA,GAEA,EAAA,UAAA,EAAA,WAEA,EAAA,MAAA,KAAA,GACA,EAAA,MAAA,EAAA,IAEA,EAAA,SAAA,EAAA,IAEA,EAAA,UAAA,EAAA,MAAA,EAAA,GACA,EAAA,SAAA,EAAA,GAEA,KAAA,EAAA,UAEA,EAAA,SAAA,EAAA,GACA,GAEA,EAAA,UAAA,EAAA,WAEA,EAAA,MAAA,KAAA,GACA,EAAA,MAAA,EAAA,IAEA,EAAA,SAAA,EAAA,IAEA,EAAA,UAAA,EAAA,MAAA,EAAA,GACA,EAAA,SAAA,EAAA,GAEA,EAAA,UAAA,IAAA,GAEA,EAAA,MAAA,EAAA,GACA,GAAA,EAAA,MAAA,EAAA,GACA,EAAA,MAAA,EAAA,KAIA,EAAA,MAAA,EAAA,GACA,GAAA,EAAA,MAAA,EAAA,GACA,EAAA,MAAA,EAAA,IAGA,OAAA,GAAA,EAAA,UAAA,EAAA,KAAA,EAAA,KACA,EAAA,UAAA,IAAA,EAAA,EAAA,SAAA,GACA,EAAA,SAAA,GAAA,EAAA,MAAA,EAAA,GAEA,EAAA,SAAA,EAAA,EAAA,IAAA,GACA,GAFA,EAp7BA,EAAA,UAAA,QAAA,EACA,EAAA,UAAA,OAAA,EACA,EAAA,UAAA,OAAA,EACA,EAAA,UAAA,MAAA,EACA,EAAA,UAAA,MAAA,EAyFA,EAAA,UAAA,QAAA,EACA,EAAA,UAAA,OAAA,EACA,EAAA,UAAA,OAAA,GACA,EAAA,UAAA,MAAA,GACA,EAAA,UAAA,MAAA,GAqCA,EAAA,UAAA,OAAA,EACA,EAAA,UAAA,QAAA,EACA,EAAA,UAAA,WAAA,EACA,EAAA,UAAA,MAAA,EACA,EAAA,UAAA,UAAA,EACA,EAAA,UAAA,UAAA,EACA,EAAA,UAAA,SAAA,EACA,EAAA,UAAA,SAAA,EACA,EAAA,UAAA,MAAA,EACA,EAAA,UAAA,WAAA,EACA,EAAA,UAAA,SAAA,EACA,EAAA,UAAA,SAAA,EACA,EAAA,UAAA,SAAA,EACA,EAAA,UAAA,OAAA,GACA,EAAA,UAAA,IAAA,GAEA,EAAA,UAAA,SAAA,EACA,EAAA,UAAA,OAAA,EACA,EAAA,UAAA,IAAA,EACA,EAAA,UAAA,UAAA,EACA,EAAA,UAAA,UAAA,EACA,EAAA,UAAA,IAAA,EACA,EAAA,UAAA,UAAA,GAEA,EAAA,KAAA,EAAA,GACA,EAAA,IAAA,EAAA,GAyeA,GAAA,UAAA,QAAA,GACA,GAAA,UAAA,OAAA,GACA,GAAA,UAAA,MAAA,GACA,GAAA,UAAA,MAAA,GAuFA,GAAA,UAAA,QAAA,GACA,GAAA,UAAA,OAAA,GACA,GAAA,UAAA,OAAA,GACA,GAAA,UAAA,MAAA,GACA,GAAA,UAAA,MAAA,GAkkBACA,GAAA,GAAA,EAAA,OAAA,EACA,IAAA,EAAA,EAAA,WAAA,IACA,EAAA,EAAA,GAAA,GACA,GAAA,SAAA,EAAA,GAAA,QAEA,IADA,IAAA,EAAA,IACA,EAAA,EAAA,EAAA,IAAA,EACA,CAEA,EAAA,QAAA,GAAA,KAAA,MAAA,KAAA,SAAA,GAAA,UACA,IAAA,EAAA,EAAA,OAAA,EAAA,MACA,GAAA,GAAA,EAAA,UAAA,EAAA,MAAA,GAAA,EAAA,UAAA,GACA,CAEA,IADA,IAAA,EAAA,EACA,IAAA,GAAA,GAAA,EAAA,UAAA,IAGA,GAAA,IADA,EAAA,EAAA,UAAA,EAAA,OACA,UAAA,EAAA,KAAA,OAAA,EAEA,GAAA,GAAA,EAAA,UAAA,GAAA,OAAA,GAGA,OAAA,EAGA,EAAA,UAAA,UAAA,GACA,EAAA,UAAA,QAAA,GACA,EAAA,UAAA,UAAA,GACA,EAAA,UAAA,WAAA,GACA,EAAA,UAAA,UAAA,GACA,EAAA,UAAA,UAAA,GACA,EAAA,UAAA,MAAA,GACA,EAAA,UAAA,UAAA,GACA,EAAA,UAAA,WAAA,GACA,EAAA,UAAA,gBAAA,GACA,EAAA,UAAA,gBAAA,GACA,EAAA,UAAA,OAAA,GACA,EAAA,UAAA,YAAA,GAEA,EAAA,UAAA,MAAA,GACA,EAAA,UAAA,SAAA,GACA,EAAA,UAAA,UAAA,GACA,EAAA,UAAA,WAAA,GACA,EAAA,UAAA,OAAA,GACA,EAAA,UAAA,YAAA,GACA,EAAA,UAAA,OAAA,GACA,EAAA,UAAA,IAAA,GACA,EAAA,UAAA,IAAA,GACA,EAAA,UAAA,IAAA,GACA,EAAA,UAAA,GAAA,GACA,EAAA,UAAA,IAAA,GACA,EAAA,UAAA,OAAA,GACA,EAAA,UAAA,IAAA,GACA,EAAA,UAAA,UAAA,GACA,EAAA,UAAA,WAAA,GACA,EAAA,UAAA,gBAAA,GACA,EAAA,UAAA,SAAA,GACA,EAAA,UAAA,QAAA,GACA,EAAA,UAAA,OAAA,GACA,EAAA,UAAA,SAAA,GACA,EAAA,UAAA,QAAA,GACA,EAAA,UAAA,IAAA,GACA,EAAA,UAAA,SAAA,GACA,EAAA,UAAA,SAAA,GACA,EAAA,UAAA,OAAA,GACA,EAAA,UAAA,UAAA,GACA,EAAA,UAAA,mBAAA,GACA,EAAA,UAAA,OAAA,GACA,EAAA,UAAA,WAAA,GACA,EAAA,UAAA,IAAA,GACA,EAAA,UAAA,IAAA,GACA,EAAA,UAAA,gBAAA,GAEA,EAAA,UAAA,OAAA,GACA,IAAA,GAAA,EAgEA,GAtDA,GAAA,UAAA,WAAA,WAEA,OAAA,GAAA,KAAA,UAAA,GAAA,OAGA,GAAA,YAAA,SAAA,EAAA,GAEA,OAAA,GAAA,EAAA,UAAA,IAGA,GAAA,cAAA,SAAA,EAAA,GAEA,OAAA,GAAA,EAAA,UAAA,IAGA,GAAA,eAAA,SAAA,EAAA,GAEA,OAAA,EAAA,UAAA,GAAA,GAGA,GAAA,YAAA,SAAA,EAAA,GAEA,OAAA,EAAA,UAAA,GAAA,GAGA,GAAA,YAAA,SAAA,EAAA,GAEA,OAAA,IAAA,GAAA,GAAA,IAAA,IAAA,GAAA,KAEA,GAAA,eAAA,SAAA,EAAA,GAEA,OAAA,IAAA,GAAA,GAAA,SAAA,IAAA,GAAA,KAEA,GAAA,UAAA,SAAA,EAAA,GAEA,OAAA,IAAA,GAAA,GAAA,SAAA,IAAA,GAAA,KAEA,GAAA,YAAA,SAAA,EAAA,GAEA,OAAA,EAAA,OAAA,IAEA,GAAA,UAAA,SAAA,WAEA,OAAA,WAAA,KAAA,kBAWA,IAAA,GAEA,IAAA,GAAA,SAAA,EAAA,GAEA,IAAA,EACA,QAAA,IAAA,OAAA,oBACA,CACA,IAAA,KAAA,EAAA,eACA,IAAA,EAAA,UAAA,IAAA,EAAA,UAAA,IAAA,OAAA,UAAA,KAAA,EAAA,UAAA,GAAA,EAAA,UAAA,IACA,IAAA,KAAA,OACA,IAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IACA,EAAA,UAAA,MAGA,CAEA,IADA,IAAA,EAAA,OAAA,oBAAA,EAAA,WACA,EAAA,EAAA,EAAA,EAAA,OAAA,SACA,IAAA,OAAA,yBAAA,EAAA,UAAA,EAAA,KAAA,OAAA,eAAA,EAAA,UAAA,EAAA,GAAA,OAAA,yBAAA,EAAA,UAAA,EAAA,KACA,IAAA,KAAA,OACA,IAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IACA,EAAA,UAAA,IAIA,EAAA,KAAA,WAEA,MAAA,IAEA,EAAA,MAAA,WAEA,MAAA,IAIA,EAAA,YAAA,WAEA,IAAA,EAAA,UACA,KAAA,EAAA,EACA,KAAA,EAAA,EAGA,GAAA,EAAA,QAEA,KAAA,EAAA,EAAA,GAAA,EACA,KAAA,EAAA,EAAA,GAAA,GAEA,GAAA,EAAA,SAEA,KAAA,EAAA,EAAA,GACA,KAAA,EAAA,EAAA,KAGA,EAAA,aAAA,WAEA,KAAA,EAAA,EACA,KAAA,EAAA,GAGA,EAAA,aAAA,SAAA,GAEA,KAAA,EAAA,EAAA,EACA,KAAA,EAAA,EAAA,GAGA,EAAA,aAAA,SAAA,EAAA,GAEA,KAAA,EAAA,EACA,KAAA,EAAA,GAIA,EAAA,SAAA,WAEA,KAAA,SAAA,KACA,KAAA,UAAA,IAAA,EAAA,KACA,KAAA,QAAA,EACA,KAAA,WAAA,EACA,KAAA,UAAA,EACA,KAAA,SAAA,GACA,KAAA,QAAA,GAEA,EAAA,SAAA,UAAA,WAAA,WAIA,IAFA,IAAA,GAAA,EACA,EAAA,KAAA,SACA,OAAA,GAEA,GAAA,EACA,EAAA,EAAA,SAEA,OAAA,GAEA,EAAA,SAAA,UAAA,WAAA,WAEA,OAAA,KAAA,SAAA,QAEA,EAAA,SAAA,UAAA,QAAA,WAEA,OAAA,KAAA,WAEA,EAAA,SAAA,UAAA,SAAA,SAAA,GAEA,IAAA,EAAA,KAAA,SAAA,OACA,KAAA,SAAA,KAAA,GACA,EAAA,SAAA,KACA,EAAA,QAAA,GAEA,EAAA,SAAA,UAAA,QAAA,WAEA,OAAA,KAAA,SAAA,OAAA,EACA,KAAA,SAAA,GAEA,KAAA,oBAEA,EAAA,SAAA,UAAA,iBAAA,WAEA,OAAA,OAAA,KAAA,SACA,KACA,KAAA,SAAA,KAAA,SAAA,SAAA,OAAA,EACA,KAAA,SAAA,mBAEA,KAAA,SAAA,SAAA,KAAA,QAAA,IAEA,EAAA,SAAA,UAAA,OAAA,WAEA,OAAA,KAAA,UAEA,EAAA,SAAA,UAAA,OAAA,WAEA,OAAA,KAAA,UAEA,EAAA,SAAA,UAAA,OAAA,WAEA,OAAA,KAAA,cAGA,EAAA,SAAA,WAEA,KAAA,WAAA,GACA,EAAA,SAAA,KAAA,OAEA,EAAA,SAAA,UAAA,MAAA,WAEA,IAAA,IAAA,EAAA,EAAA,EAAA,KAAA,WAAA,OAAA,EAAA,EAAA,IACA,KAAA,WAAA,GAAA,KACA,KAAA,WAAA,OAAA,EACA,KAAA,SAAA,OAAA,GAEA,EAAA,SAAA,UAAA,SAAA,WAEA,OAAA,KAAA,SAAA,OAAA,EACA,KAAA,SAAA,GAEA,MAEA,EAAA,SAAA,UAAA,MAAA,WAEA,OAAA,KAAA,WAAA,QAEA,GAAA,EAAA,SAAA,EAAA,UAGA,EAAA,eAAA,EAAA,eAAA,EAAA,gBAAA,SAAA,GAEA,OAAA,KAAA,IAAA,IAEA,EAAA,qBAAA,SAAA,EAAA,GAEA,OAAA,KAAA,IAAA,EAAA,IAOA,EAAA,MAAA,EAAA,OAAA,EAAA,OAAA,EAAA,WAAA,SAAA,GAEA,OAAA,EAAA,GAEA,EAAA,WAAA,SAAA,GAEA,QAAA,GAgBA,EAAA,OAAA,EAAA,WAAA,SAAA,GAEA,OAAA,GAAA,YAAA,EAAA,WACA,EAAA,EAAA,KAAA,KAAA,GAAA,KAAA,MAAA,KACA,GAEA,EAAA,SAAA,mBAAA,OAAA,UAAA,EAAA,WAAA,SAAA,GAEA,OAAA,OAAA,UAAA,IAEA,EAAA,OAAA,EAAA,MAAA,EAAA,WAAA,SAAA,GAEA,OAAA,SAAA,EAAA,KAEA,EAAA,KAAA,EAAA,WAAA,SAAA,GAEA,OAAA,GAAA,YAAA,EAAA,WACA,EAAA,EAAA,KAAA,KAAA,GAAA,KAAA,MAAA,GACA,EAAA,GAGA,EAAA,WAAA,SAAA,GAEA,OAAA,EAAA,EAAA,KAAA,KAAA,GAAA,KAAA,MAAA,IAEA,EAAA,MAAA,SAAA,GAEA,EAAA,OAAA,GAGA,EAAA,GAAA,kBACA,EAAA,IAAA,kBACA,EAAA,SAAA,WAEA,IAAA,EAAA,UACA,EAAA,EAAA,OAGA,GAFA,KAAA,EAAA,EACA,KAAA,EAAA,EACA,EAGA,GADA,KAAA,EAAA,EACA,GAAA,EAEA,KAAA,EAAA,EAAA,GACA,KAAA,EAAA,EAAA,GACA,KAAA,EAAA,EAAA,QAEA,GAAA,GAAA,EAEA,KAAA,EAAA,EAAA,GACA,KAAA,EAAA,EAAA,GACA,KAAA,EAAA,OAEA,GAAA,GAAA,EAEA,GAAA,EAAA,aAAA,EAAA,YACA,CACA,IAAA,EAAA,EAAA,GACA,KAAA,EAAA,EAAA,QAAA,MAAA,EAAA,GACA,KAAA,EAAA,EAAA,QAAA,MAAA,EAAA,GACA,KAAA,EAAA,MAGA,MAEA,KADA,EAAA,EAAA,IACA,IAAA,EAAA,EAAA,GACA,KAAA,EAAA,EAAA,EACA,KAAA,EAAA,EAAA,EACA,KAAA,EAAA,EAAA,OAKA,KAAA,EAAA,EACA,KAAA,EAAA,EACA,KAAA,EAAA,OAKA,GAAA,GAAA,EAEA,KAAA,EAAA,EAAA,GACA,KAAA,EAAA,EAAA,QAEA,GAAA,GAAA,EAEA,GAAA,EAAA,aAAA,EAAA,YACA,CACA,EAAA,EAAA,GACA,KAAA,EAAA,EAAA,QAAA,MAAA,EAAA,GACA,KAAA,EAAA,EAAA,QAAA,MAAA,EAAA,OAGA,CACA,IAAA,EAAA,EAAA,GACA,KAAA,EAAA,EAAA,EACA,KAAA,EAAA,EAAA,OAKA,KAAA,EAAA,EACA,KAAA,EAAA,GAIA,EAAA,SAAA,YAAA,SAAA,EAAA,GAGA,OAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAEA,EAAA,SAAA,cAAA,SAAA,EAAA,GAGA,OAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAgeAAA,EACA,QAAA,EACA,aAAA,EACA,MAAA,GAEA,EAAA,SAAA,CACA,UAAA,EACA,OAAA,GAEA,EAAA,aAAA,CACA,WAAA,EACA,WAAA,EACA,YAAA,EACA,YAAA,GAEA,EAAA,SAAA,CACA,SAAA,EACA,QAAA,EACA,QAAA,GAEA,EAAA,QAAA,CACA,aAAA,EACA,YAAA,EACA,WAAA,EACA,aAAA,EACA,gBAAA,GAEA,IACA,EAAA,SAAA,CACA,SAAA,EACA,QAAA,EACA,OAAA,EACA,SAAA,IAEA,EAAA,SAAA,CACA,OAAA,EACA,QAAA,GAEA,EAAA,UAAA,CACA,aAAA,EACA,aAAA,GAEA,EAAA,MAAA,WAEA,KAAA,IAAA,IAAA,EAAA,SACA,KAAA,KAAA,IAAA,EAAA,SACA,KAAA,IAAA,IAAA,EAAA,SACA,KAAA,MAAA,IAAA,EAAA,SACA,KAAA,GAAA,EACA,KAAA,QAAA,EAAA,SAAA,UACA,KAAA,KAAA,EAAA,SAAA,OACA,KAAA,UAAA,EACA,KAAA,QAAA,EACA,KAAA,SAAA,EACA,KAAA,OAAA,EACA,KAAA,KAAA,KACA,KAAA,KAAA,KACA,KAAA,UAAA,KACA,KAAA,UAAA,KACA,KAAA,UAAA,KACA,KAAA,UAAA,KACA,KAAA,UAAA,MAEA,EAAA,cAAA,WAEA,KAAA,MAAA,KACA,KAAA,MAAA,KACA,KAAA,GAAA,IAAA,EAAA,UAEA,EAAA,oBAAA,aACA,EAAA,oBAAA,QAAA,SAAA,EAAA,GAEA,OAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAEA,EAAA,YAAA,WAEA,KAAA,EAAA,EACA,KAAA,UAAA,KACA,KAAA,WAAA,KACA,KAAA,KAAA,MAEA,EAAA,SAAA,WAEA,KAAA,EAAA,EACA,KAAA,KAAA,MAEA,EAAA,OAAA,WAEA,KAAA,IAAA,EACA,KAAA,QAAA,EACA,KAAA,QAAA,EACA,KAAA,UAAA,KACA,KAAA,IAAA,KACA,KAAA,SAAA,KACA,KAAA,SAAA,MAEA,EAAA,MAAA,WAEA,KAAA,IAAA,EACA,KAAA,GAAA,IAAA,EAAA,SACA,KAAA,KAAA,KACA,KAAA,KAAA,MAEA,EAAA,KAAA,WAEA,KAAA,OAAA,KACA,KAAA,OAAA,KACA,KAAA,MAAA,IAAA,EAAA,UAEA,EAAA,YAAA,WAEA,KAAA,aAAA,KACA,KAAA,YAAA,KACA,KAAA,QAAA,IAAA,MACA,KAAA,gBAAA,EACA,KAAA,gBAAA,EACA,KAAA,mBAAA,EACA,KAAA,aAAA,KACA,KAAA,YAAA,KACA,KAAA,gBAAA,EACA,KAAA,gBAAA,GASA,EAAA,YAAA,YAAA,iBACA,EAAA,YAAA,MAAA,EACA,EAAA,YAAA,YAAA,EACA,EAAA,YAAA,UAAA,MACA,GAEA,EAAA,YAAA,QAAA,MACA,EAAA,YAAA,QAAA,QAIA,EAAA,YAAA,QAAA,SACA,EAAA,YAAA,QAAA,iBAEA,EAAA,YAAA,UAAA,SAAA,GAEA,OAAA,GAAA,EAAA,YAAA,WAAA,EAAA,EAAA,YAAA,WAEA,EAAA,YAAA,aAAA,SAAA,GAEA,OAAA,IAAA,EAAA,MAAA,GAEA,EAAA,YAAA,UAAA,cAAA,SAAA,EAAA,GAEA,IAAA,EAAA,EACA,EAAA,CACA,GAAA,EAAA,SAAA,YAAA,EAAA,GAAA,GACA,OAAA,EACA,EAAA,EAAA,WAEA,GAAA,GACA,OAAA,GAEA,EAAA,YAAA,UAAA,mBAAA,SAAA,EAAA,EAAA,EAAA,GAEA,OAAA,EACA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GACA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GACA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GACA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GACA,GAAA,YAAA,GAAA,UAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACA,GAAA,UAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAEA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,IAEA,EAAA,YAAA,UAAA,eAAA,SAAA,EAAA,EAAA,GAGA,IADA,IAAA,EAAA,IAEA,CACA,GAAA,KAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,KAAA,GAAA,GACA,OAAA,EAEA,IADA,EAAA,EAAA,OACA,EACA,MAEA,OAAA,GAEA,EAAA,YAAA,UAAA,YAAA,EAAA,YAAA,YAAA,WAEA,IAEA,EAAA,EAAA,EAAA,EAAA,EAAA,EAFA,EAAA,UACA,EAAA,EAAA,OAEA,OAAA,GAAA,GAEA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,EAAA,GAEA,GAAA,YAAA,GAAA,UAAA,EAAA,MAAA,EAAA,EAAA,MAAA,GAAA,GAAA,UAAA,EAAA,MAAA,EAAA,EAAA,MAAA,IAEA,EAAA,WAAA,EAAA,MAAA,EAAA,EAAA,MAAA,IAAA,EAAA,WAAA,EAAA,MAAA,EAAA,EAAA,MAAA,IAEA,GAAA,GAEA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,EAAA,GAEA,GAAA,YAAA,GAAA,UAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,UAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAEA,EAAA,YAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EAAA,YAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,KAAA,IAIA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,EAAA,GAEA,GAAA,YAAA,GAAA,UAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,UAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAEA,EAAA,YAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EAAA,YAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,KAAA,IAGA,EAAA,YAAA,aAAA,SAAA,EAAA,EAAA,GAEA,OAAA,EACA,GAAA,YAAA,GAAA,UAAA,EAAA,MAAA,EAAA,EAAA,MAAA,GAAA,GAAA,UAAA,EAAA,MAAA,EAAA,EAAA,MAAA,IAEA,EAAA,WAAA,EAAA,MAAA,EAAA,EAAA,MAAA,IAAA,EAAA,WAAA,EAAA,MAAA,EAAA,EAAA,MAAA,IAEA,EAAA,YAAA,aAAA,SAAA,EAAA,EAAA,EAAA,GAEA,OAAA,EACA,GAAA,YAAA,GAAA,UAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,UAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAEA,EAAA,YAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EAAA,YAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,KAAA,GAEA,EAAA,YAAA,aAAA,SAAA,EAAA,EAAA,EAAA,EAAA,GAEA,OAAA,EACA,GAAA,YAAA,GAAA,UAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,UAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAEA,EAAA,YAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EAAA,YAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,KAAA,GAEA,EAAA,YAAA,UAAA,MAAA,WAEA,KAAA,yBACA,IAAA,IAAA,EAAA,EAAA,EAAA,KAAA,QAAA,OAAA,EAAA,IAAA,EACA,CACA,IAAA,IAAA,EAAA,EAAA,EAAA,KAAA,QAAA,GAAA,OAAA,EAAA,IAAA,EACA,KAAA,QAAA,GAAA,GAAA,KACA,EAAA,MAAA,KAAA,QAAA,IAEA,EAAA,MAAA,KAAA,SACA,KAAA,gBAAA,EACA,KAAA,gBAAA,GAEA,EAAA,YAAA,UAAA,uBAAA,WAEA,KAAA,OAAA,KAAA,cACA,CACA,IAAA,EAAA,KAAA,aAAA,KACA,KAAA,aAAA,KACA,KAAA,aAAA,EAEA,KAAA,YAAA,MAEA,EAAA,YAAA,UAAA,UAAA,SAAA,EAAA,GAEA,EAAA,OAEA,EAAA,EAAA,EAAA,YAAA,SAAA,EAAA,EAAA,EAAA,YAAA,UAAA,EAAA,EAAA,EAAA,YAAA,UAAA,EAAA,EAAA,EAAA,YAAA,UACA,EAAA,MAAA,qDAEA,EAAA,EAAA,EAAA,YAAA,SAAA,EAAA,EAAA,EAAA,YAAA,UAAA,EAAA,EAAA,EAAA,YAAA,UAAA,EAAA,EAAA,EAAA,YAAA,WAEA,EAAA,OAAA,EACA,KAAA,UAAA,EAAA,KAGA,EAAA,YAAA,UAAA,SAAA,SAAA,EAAA,EAAA,EAAA,GAEA,EAAA,KAAA,EACA,EAAA,KAAA,EAEA,EAAA,KAAA,EAAA,EAAA,EACA,EAAA,KAAA,EAAA,EAAA,EACA,EAAA,QAAA,GAEA,EAAA,YAAA,UAAA,UAAA,SAAA,EAAA,GAEA,EAAA,KAAA,GAAA,EAAA,KAAA,KAAA,GAGA,EAAA,IAAA,EAAA,EAAA,KAAA,EACA,EAAA,IAAA,EAAA,EAAA,KAAA,EAEA,EAAA,IAAA,EAAA,EAAA,KAAA,KAAA,EACA,EAAA,IAAA,EAAA,EAAA,KAAA,KAAA,IAKA,EAAA,IAAA,EAAA,EAAA,KAAA,EACA,EAAA,IAAA,EAAA,EAAA,KAAA,EAEA,EAAA,IAAA,EAAA,EAAA,KAAA,KAAA,EACA,EAAA,IAAA,EAAA,EAAA,KAAA,KAAA,GAEA,KAAA,MAAA,GACA,EAAA,QAAA,GAEA,EAAA,YAAA,UAAA,eAAA,SAAA,GAGA,IADA,IAAA,IAEA,CACA,KAAA,EAAA,SAAA,cAAA,EAAA,IAAA,EAAA,KAAA,MAAA,EAAA,SAAA,YAAA,EAAA,KAAA,EAAA,MACA,EAAA,EAAA,KACA,GAAA,EAAA,IAAA,EAAA,YAAA,YAAA,EAAA,KAAA,IAAA,EAAA,YAAA,WACA,MACA,KAAA,EAAA,KAAA,IAAA,EAAA,YAAA,YACA,EAAA,EAAA,KAEA,IADA,EAAA,EACA,EAAA,IAAA,EAAA,YAAA,YACA,EAAA,EAAA,KACA,GAAA,EAAA,IAAA,GAAA,EAAA,KAAA,IAAA,EAAA,CAGA,EAAA,KAAA,IAAA,EAAA,EAAA,IAAA,IACA,EAAA,GACA,OAEA,OAAA,GAEA,EAAA,YAAA,UAAA,aAAA,SAAA,EAAA,GAEA,IAEA,EACA,EAHA,EAAA,EACA,EAAA,EAcA,GAXA,EAAA,IAAA,EAAA,YAAA,aAKA,EADA,EACA,EAAA,KAAA,IAAA,EAEA,EAAA,KAAA,IAAA,EACA,EAAA,IAAA,GAAA,GACA,KAAA,kBAAA,IAEA,EAAA,QAAA,EAAA,YAAA,KAEA,GAAA,EACA,CACA,KAAA,EAAA,IAAA,GAAA,EAAA,KAAA,IAAA,GAAA,EAAA,KAAA,QAAA,EAAA,YAAA,MACA,EAAA,EAAA,KACA,GAAA,EAAA,IAAA,EAAA,YAAA,YAAA,EAAA,KAAA,QAAA,EAAA,YAAA,KACA,CAKA,IADA,EAAA,EACA,EAAA,KAAA,IAAA,EAAA,YAAA,YACA,EAAA,EAAA,KACA,EAAA,KAAA,IAAA,GAAA,EAAA,KAAA,IAAA,EAEA,IACA,EAAA,EAAA,MAEA,EAAA,KAAA,IAAA,EAAA,EAAA,KAAA,IAAA,IACA,EAAA,EAAA,MAEA,KAAA,GAAA,GAEA,EAAA,UAAA,EAAA,KACA,EAAA,IAAA,EAAA,YAAA,YAAA,GAAA,GAAA,EAAA,IAAA,GAAA,EAAA,KAAA,IAAA,GACA,KAAA,kBAAA,GACA,EAAA,EAAA,KAEA,EAAA,IAAA,EAAA,YAAA,YAAA,GAAA,GAAA,EAAA,IAAA,GAAA,EAAA,KAAA,IAAA,GACA,KAAA,kBAAA,GACA,EAAA,EAAA,SAIA,CACA,KAAA,EAAA,IAAA,GAAA,EAAA,KAAA,IAAA,GAAA,EAAA,KAAA,QAAA,EAAA,YAAA,MACA,EAAA,EAAA,KACA,GAAA,EAAA,IAAA,EAAA,YAAA,YAAA,EAAA,KAAA,QAAA,EAAA,YAAA,KACA,CAEA,IADA,EAAA,EACA,EAAA,KAAA,IAAA,EAAA,YAAA,YACA,EAAA,EAAA,KACA,EAAA,KAAA,IAAA,GAAA,EAAA,KAAA,IAAA,EAEA,IACA,EAAA,EAAA,MAEA,EAAA,KAAA,IAAA,EAAA,EAAA,KAAA,IAAA,IACA,EAAA,EAAA,MAEA,KAAA,GAAA,GAEA,EAAA,UAAA,EAAA,KACA,EAAA,IAAA,EAAA,YAAA,YAAA,GAAA,GAAA,EAAA,IAAA,GAAA,EAAA,KAAA,IAAA,GACA,KAAA,kBAAA,GACA,EAAA,EAAA,KAEA,EAAA,IAAA,EAAA,YAAA,YAAA,GAAA,GAAA,EAAA,IAAA,GAAA,EAAA,KAAA,IAAA,GACA,KAAA,kBAAA,GACA,EAAA,EAAA,KAIA,GAAA,EAAA,QAAA,EAAA,YAAA,KACA,CAIA,GADA,EAAA,EACA,EACA,CACA,KAAA,EAAA,IAAA,GAAA,EAAA,KAAA,IAAA,GACA,EAAA,EAAA,KAGA,KAAA,GAAA,GAAA,EAAA,IAAA,EAAA,YAAA,YACA,EAAA,EAAA,SAGA,CACA,KAAA,EAAA,IAAA,GAAA,EAAA,KAAA,IAAA,GACA,EAAA,EAAA,KACA,KAAA,GAAA,GAAA,EAAA,IAAA,EAAA,YAAA,YACA,EAAA,EAAA,KAEA,GAAA,GAAA,EAGA,EADA,EACA,EAAA,KAEA,EAAA,SAGA,CAGA,EADA,EACA,EAAA,KAEA,EAAA,KACA,IAAA,EAAA,IAAA,EAAA,YACA,EAAA,KAAA,KACA,EAAA,EAAA,EAAA,IAAA,EACA,EAAA,UAAA,KACA,EAAA,WAAA,EACA,EAAA,WAAA,UAAA,EACA,EAAA,KAAA,aAAA,EAAA,WAAA,GACA,KAAA,kBAAA,IAGA,OAAA,GAEA,EAAA,YAAA,UAAA,QAAA,SAAA,EAAA,EAAA,GAEA,EAEA,GAAA,GAAA,EAAA,SAAA,QACA,EAAA,MAAA,wCAIA,GACA,EAAA,MAAA,2CAEA,IAAA,EAAA,EAAA,OAAA,EACA,GAAA,EACA,KAAA,EAAA,GAAA,EAAA,SAAA,YAAA,EAAA,GAAA,EAAA,OACA,EACA,KAAA,EAAA,GAAA,EAAA,SAAA,YAAA,EAAA,GAAA,EAAA,EAAA,OACA,EACA,GAAA,GAAA,EAAA,IAAA,GAAA,EAAA,EACA,OAAA,EAGA,IADA,IAAA,EAAA,IAAA,MACA,EAAA,EAAA,GAAA,EAAA,IACA,EAAA,KAAA,IAAA,EAAA,OACA,IAAA,GAAA,EAIA,EAAA,GAAA,KAAA,EAAA,EAAA,GAAA,EACA,EAAA,GAAA,KAAA,EAAA,EAAA,GAAA,EAEA,IAAA,EAAA,CAAA,MAAA,KAAA,gBACA,KAAA,UAAA,EAAA,GAAA,GACA,KAAA,eAAA,EAAA,MAEA,EAAA,MAAA,KAAA,eACA,KAAA,UAAA,EAAA,GAAA,GACA,KAAA,eAAA,EAAA,MAEA,KAAA,SAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,IACA,KAAA,SAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,IACA,IAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAEA,EAAA,MAAA,KAAA,eACA,KAAA,UAAA,EAAA,GAAA,GACA,KAAA,eAAA,EAAA,MAEA,KAAA,SAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,IAOA,IAJA,IAAA,EAAA,EAAA,GAEA,EAAA,EACA,EAAA,IAGA,GAAA,EAAA,SAAA,YAAA,EAAA,KAAA,EAAA,KAAA,MAAA,CAEA,GAAA,GAAA,EAAA,KACA,MACA,GAAA,IACA,EAAA,EAAA,MAEA,EADA,EAAA,KAAA,WAAA,OANA,CAUA,GAAA,EAAA,MAAA,EAAA,KACA,MACA,IAAA,IAAA,EAAA,YAAA,YAAA,EAAA,KAAA,KAAA,EAAA,KAAA,EAAA,KAAA,KAAA,KAAA,iBAAA,KAAA,mBAAA,KAAA,sBAAA,EAAA,KAAA,KAAA,EAAA,KAAA,EAAA,KAAA,OAcA,IADA,EAAA,EAAA,OACA,EACA,WATA,GAAA,IACA,EAAA,EAAA,MAGA,EADA,GADA,EAAA,KAAA,WAAA,IACA,KAQA,IAAA,GAAA,GAAA,EAAA,MAAA,GAAA,EAAA,MAAA,EAAA,KACA,OAAA,EACA,IAEA,KAAA,gBAAA,EACA,EAAA,KAAA,OAAA,EAAA,YAAA,MAGA,IAsCA,EArCA,EAAA,EACA,GACA,KAAA,UAAA,EAAA,GACA,EAAA,EAAA,KACA,GAAA,EAAA,KAAA,GAAA,EAAA,KAAA,IACA,GAAA,SAEA,GAAA,GAIA,GAAA,EACA,CACA,GAAA,EACA,OAAA,EAWA,IAVA,EAAA,KAAA,OAAA,EAAA,YAAA,KACA,EAAA,KAAA,IAAA,EAAA,EAAA,KAAA,IAAA,GACA,KAAA,kBAAA,EAAA,OACA,EAAA,IAAA,EAAA,aACA,KAAA,KACA,EAAA,EAAA,EAAA,IAAA,EACA,EAAA,UAAA,KACA,EAAA,WAAA,EACA,EAAA,WAAA,KAAA,EAAA,SAAA,QACA,EAAA,WAAA,UAAA,EACA,EAAA,KAAA,QAAA,EAAA,YAAA,MAEA,EAAA,UAAA,EAAA,KACA,EAAA,IAAA,GAAA,EAAA,KAAA,IAAA,GACA,KAAA,kBAAA,GACA,EAAA,EAAA,KAIA,OAFA,KAAA,kBAAA,GACA,KAAA,QAAA,KAAA,IACA,EAEA,KAAA,QAAA,KAAA,GAGA,IADA,IAAA,EAAA,MAGA,EAAA,KAAA,eAAA,KACA,GAFA,CAQA,IAAA,EAJA,MAAA,IACA,EAAA,IAGA,EAAA,IAAA,EAAA,aACA,KAAA,KACA,EAAA,EAAA,EAAA,IAAA,EACA,EAAA,GAAA,EAAA,KAAA,IAEA,EAAA,UAAA,EAAA,KACA,EAAA,WAAA,EACA,GAAA,IAKA,EAAA,UAAA,EACA,EAAA,WAAA,EAAA,KACA,GAAA,GAGA,EAAA,UAAA,KAAA,EAAA,SAAA,OACA,EAAA,WAAA,KAAA,EAAA,SAAA,QACA,EAEA,EAAA,UAAA,MAAA,EAAA,WACA,EAAA,UAAA,WAAA,EAEA,EAAA,UAAA,UAAA,EAJA,EAAA,UAAA,UAAA,EAKA,EAAA,WAAA,WAAA,EAAA,UAAA,UACA,EAAA,KAAA,aAAA,EAAA,UAAA,GACA,IAAA,EAAA,KAAA,aAAA,EAAA,YAAA,GACA,EAAA,UAAA,QAAA,EAAA,YAAA,KACA,EAAA,UAAA,KACA,EAAA,WAAA,QAAA,EAAA,YAAA,OACA,EAAA,WAAA,MACA,KAAA,kBAAA,GACA,IACA,EAAA,GAEA,OAAA,GAEA,EAAA,YAAA,UAAA,SAAA,SAAA,EAAA,EAAA,GAKA,IADA,IAAA,GAAA,EACA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,IAAA,EACA,KAAA,QAAA,EAAA,GAAA,EAAA,KACA,GAAA,GACA,OAAA,GAGA,EAAA,YAAA,UAAA,sBAAA,SAAA,EAAA,EAAA,GAEA,QAAA,EAAA,SAAA,YAAA,EAAA,IAAA,EAAA,SAAA,YAAA,EAAA,IACA,EAAA,SAAA,YAAA,EAAA,MAEA,EAAA,GAAA,EAAA,EACA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAEA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,IAEA,EAAA,YAAA,UAAA,WAAA,SAAA,GAGA,EAAA,KAAA,KAAA,EAAA,KACA,EAAA,KAAA,KAAA,EAAA,KACA,IAAA,EAAA,EAAA,KAEA,OADA,EAAA,KAAA,KACA,GAEA,EAAA,YAAA,UAAA,MAAA,SAAA,GAEA,EAAA,MAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EACA,EAAA,MAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EACA,IAAA,EAAA,MAAA,EAAA,EAAA,GAAA,EAAA,YAAA,WACA,EAAA,GAAA,EAAA,MAAA,EAAA,EAAA,MAAA,GAEA,EAAA,YAAA,UAAA,kBAAA,SAAA,GAEA,GAAA,OAAA,KAAA,aAEA,KAAA,aAAA,OAEA,GAAA,EAAA,GAAA,KAAA,aAAA,EAEA,EAAA,KAAA,KAAA,aACA,KAAA,aAAA,MAGA,CAEA,IADA,IAAA,EAAA,KAAA,aACA,OAAA,EAAA,MAAA,EAAA,EAAA,EAAA,KAAA,GACA,EAAA,EAAA,KACA,EAAA,KAAA,EAAA,KACA,EAAA,KAAA,IAGA,EAAA,YAAA,UAAA,eAAA,WAEA,OAAA,KAAA,cAEA,KAAA,YAAA,KAAA,YAAA,OAEA,EAAA,YAAA,UAAA,kBAAA,SAAA,GAKA,IAAA,EAAA,EAAA,IAAA,EACA,EAAA,IAAA,EAAA,EAAA,IAAA,EACA,EAAA,IAAA,EAAA,EACA,IAEA,EAAA,EAAA,IAAA,EACA,EAAA,IAAA,EAAA,EAAA,IAAA,EACA,EAAA,IAAA,EAAA,IAGA,EAAA,YAAA,UAAA,MAAA,WAGA,GADA,KAAA,YAAA,KAAA,aACA,MAAA,KAAA,YAKA,IADA,IAAA,EAAA,KAAA,aACA,MAAA,GACA,CACA,IAAA,EAAA,EAAA,UACA,MAAA,IAGA,EAAA,KAAA,EAAA,EAAA,IAAA,EACA,EAAA,KAAA,EAAA,EAAA,IAAA,EACA,EAAA,KAAA,EAAA,SAAA,OACA,EAAA,OAAA,EAAA,YAAA,YAGA,OADA,EAAA,EAAA,cAIA,EAAA,KAAA,EAAA,EAAA,IAAA,EACA,EAAA,KAAA,EAAA,EAAA,IAAA,EACA,EAAA,KAAA,EAAA,SAAA,QACA,EAAA,OAAA,EAAA,YAAA,YAEA,EAAA,EAAA,OAGA,EAAA,QAAA,SAAA,QAEA,IAAA,IAAA,EAAA,GACA,KAAA,WAAA,KACA,KAAA,WAAA,EAAA,SAAA,eACA,KAAA,WAAA,KACA,KAAA,cAAA,KACA,KAAA,cAAA,KACA,KAAA,gBAAA,KACA,KAAA,wBAAA,KACA,KAAA,iBAAA,EACA,KAAA,eAAA,EAAA,aAAA,WACA,KAAA,eAAA,EAAA,aAAA,WACA,KAAA,QAAA,KACA,KAAA,aAAA,KACA,KAAA,iBAAA,EACA,KAAA,iBAAA,EACA,KAAA,gBAAA,EACA,EAAA,YAAA,KAAA,MACA,KAAA,WAAA,KACA,KAAA,cAAA,KACA,KAAA,cAAA,KACA,KAAA,gBAAA,IAAA,MACA,KAAA,wBAAA,EAAA,oBAAA,QACA,KAAA,iBAAA,EACA,KAAA,iBAAA,EACA,KAAA,WAAA,IAAA,MACA,KAAA,QAAA,IAAA,MACA,KAAA,aAAA,IAAA,MACA,KAAA,gBAAA,IAAA,EAAA,GACA,KAAA,eAAA,IAAA,EAAA,GACA,KAAA,kBAAA,IAAA,EAAA,GACA,IAEA,KAAA,cAAA,OAGA,EAAA,QAAA,kBAAA,EACA,EAAA,QAAA,iBAAA,EACA,EAAA,QAAA,oBAAA,EAEA,EAAA,QAAA,UAAA,MAAA,WAEA,IAAA,KAAA,QAAA,SAGA,KAAA,oBACA,EAAA,YAAA,UAAA,MAAA,KAAA,QAGA,EAAA,QAAA,UAAA,oBAAA,WAEA,KAAA,OAAA,KAAA,YACA,CACA,IAAA,EAAA,KAAA,WAAA,KACA,KAAA,WAAA,KACA,KAAA,WAAA,IAGA,EAAA,QAAA,UAAA,MAAA,WAEA,EAAA,YAAA,UAAA,MAAA,KAAA,MACA,KAAA,WAAA,KACA,KAAA,cAAA,KACA,KAAA,cAAA,KAGA,IADA,IAAA,EAAA,KAAA,aACA,OAAA,GAEA,KAAA,eAAA,EAAA,GACA,EAAA,EAAA,MAGA,EAAA,QAAA,UAAA,eAAA,SAAA,GAEA,GAAA,OAAA,KAAA,WAEA,KAAA,WAAA,IAAA,EAAA,SACA,KAAA,WAAA,KAAA,KACA,KAAA,WAAA,EAAA,OAEA,GAAA,EAAA,KAAA,WAAA,EACA,EACA,EAAA,IAAA,EAAA,UACA,EAAA,EACA,EAAA,KAAA,KAAA,WACA,KAAA,WAAA,MAGA,CAEA,IADA,IAAA,EAAA,KAAA,WACA,OAAA,EAAA,MAAA,GAAA,EAAA,KAAA,GACA,EAAA,EAAA,KACA,GAAA,GAAA,EAAA,EACA,OAEA,IAAA,GAAA,EAAA,IAAA,EAAA,UACA,EAAA,EACA,EAAA,KAAA,EAAA,KACA,EAAA,KAAA,IAIA,EAAA,QAAA,UAAA,QAAA,WAEA,IAAA,EAAA,UACA,EAAA,EAAA,OACA,EAAA,EAAA,aAAA,EAAA,SACA,GAAA,GAAA,IAAA,EACA,CACA,IAAA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,GAAA,KAAA,gBACA,OAAA,EACA,KAAA,gBACA,EAAA,MAAA,0DACA,KAAA,iBAAA,EACA,EAAA,MAAA,GACA,KAAA,eAAA,EACA,KAAA,eAAA,EACA,KAAA,WAAA,EACA,KAAA,iBAAA,EACA,KAEA,EAAA,KAAA,oBAEA,KAAA,YAAA,GAEA,QAEA,KAAA,oBACA,KAAA,iBAAA,EAEA,OAAA,EAEA,GAAA,GAAA,GAAA,EACA,CACA,EAAA,EAAA,GAAA,IACA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,GAAA,KAAA,gBACA,OAAA,EACA,KAAA,iBAAA,EACA,KAAA,eAAA,EACA,KAAA,eAAA,EACA,KAAA,WAAA,EACA,KAAA,iBAAA,EACA,IAEA,IAAA,GAAA,EAAA,KAAA,oBAEA,KAAA,aAAA,GAEA,QAEA,KAAA,oBACA,KAAA,iBAAA,EAEA,OAAA,EAEA,GAAA,GAAA,IAAA,EACA,CACA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,OAAA,KAAA,QAAA,EAAA,EAAA,EAAA,aAAA,WAAA,EAAA,aAAA,YAEA,GAAA,GAAA,GAAA,EACA,CACA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,OAAA,KAAA,QAAA,EAAA,EAAA,EAAA,aAAA,WAAA,EAAA,aAAA,cAGA,EAAA,QAAA,UAAA,eAAA,SAAA,GAIA,GAAA,OAAA,EAAA,YAAA,EAAA,QAAA,EAAA,UAAA,QAAA,OAAA,EAAA,UAAA,KAAA,CAGA,IADA,IAAA,EAAA,EAAA,UACA,OAAA,IAAA,EAAA,QAAA,EAAA,QAAA,OAAA,EAAA,MACA,EAAA,EAAA,UACA,EAAA,UAAA,IAEA,EAAA,QAAA,UAAA,gBAAA,WAEA,IAGA,GADA,KAAA,QACA,OAAA,KAAA,YACA,OAAA,EACA,IAAA,EAAA,KAAA,cACA,EAAA,CAIA,GAHA,KAAA,yBAAA,GACA,EAAA,MAAA,KAAA,cACA,KAAA,oBAAA,GACA,OAAA,KAAA,WACA,MACA,IAAA,EAAA,KAAA,cAEA,IAAA,KAAA,qBAAA,EAAA,GACA,OAAA,EACA,KAAA,4BAAA,GACA,EAAA,QAEA,OAAA,KAAA,YAAA,OAAA,KAAA,aAEA,IAAA,IAAA,EAAA,EAAA,EAAA,KAAA,WAAA,OAAA,EAAA,EAAA,IACA,CAEA,QADA,EAAA,KAAA,WAAA,IACA,KAAA,EAAA,SAEA,EAAA,OAAA,KAAA,kBAAA,KAAA,KAAA,GAAA,GACA,KAAA,mBAAA,EAAA,KAEA,KAAA,kBACA,IAAA,EAAA,EAAA,EAAA,KAAA,WAAA,OAAA,EAAA,EAAA,IACA,CACA,IAAA,EACA,QADA,EAAA,KAAA,WAAA,IACA,KAAA,EAAA,QACA,KAAA,gBAAA,GAIA,OAFA,KAAA,gBACA,KAAA,oBACA,EAEA,QAEA,EAAA,MAAA,KAAA,SACA,EAAA,MAAA,KAAA,gBAGA,EAAA,QAAA,UAAA,YAAA,WAEA,IAAA,EAAA,KAAA,WAAA,EACA,KAAA,WAGA,OAFA,KAAA,WAAA,KAAA,WAAA,KACA,KACA,GAEA,EAAA,QAAA,UAAA,kBAAA,WAEA,IAAA,IAAA,EAAA,EAAA,EAAA,KAAA,WAAA,OAAA,EAAA,IAAA,EACA,KAAA,cAAA,GACA,EAAA,MAAA,KAAA,aAEA,EAAA,QAAA,UAAA,cAAA,SAAA,GAEA,IAAA,EAAA,KAAA,WAAA,GACA,OAAA,EAAA,KACA,KAAA,cAAA,EAAA,KACA,EAAA,KACA,KAAA,WAAA,GAAA,MAEA,EAAA,QAAA,UAAA,cAAA,SAAA,GAEA,GAAA,OAAA,EAAA,CAIA,IADA,EAAA,KAAA,KAAA,KACA,OAAA,GAEA,EACA,EAAA,EAAA,KACA,OAGA,EAAA,QAAA,UAAA,QAAA,SAAA,EAAA,EAAA,GAEA,IAAA,EAAA,IAAA,EAAA,KACA,EAAA,OAAA,EACA,EAAA,OAAA,EAEA,EAAA,MAAA,EAAA,EAAA,EACA,EAAA,MAAA,EAAA,EAAA,EACA,KAAA,QAAA,KAAA,IAEA,EAAA,QAAA,UAAA,aAAA,SAAA,EAAA,GAEA,IAAA,EAAA,IAAA,EAAA,KACA,EAAA,OAAA,EAEA,EAAA,MAAA,EAAA,EAAA,EACA,EAAA,MAAA,EAAA,EAAA,EACA,KAAA,aAAA,KAAA,IAEA,IAEA,EAAA,QAAA,UAAA,KAAA,SAAA,EAAA,GAEA,EAAA,EAAA,EACA,OAAA,KAAA,gBAGA,EAAA,OAAA,EACA,KAAA,cAAA,EAAA,IAAA,EAAA,IAAA,GAEA,KAAA,cAAA,EAAA,IAAA,EAAA,IAAA,MAKA,EAAA,QAAA,UAAA,yBAAA,SAAA,GAEA,KAAA,OAAA,KAAA,aAAA,KAAA,YAAA,GAAA,GACA,CACA,IAAA,EAAA,KAAA,YAAA,UACA,EAAA,KAAA,YAAA,WACA,KAAA,iBACA,IAAA,EAAA,KAkCA,GAjCA,OAAA,GAEA,KAAA,kBAAA,EAAA,MACA,KAAA,gBAAA,GACA,KAAA,eAAA,KACA,EAAA,KAAA,SAAA,EAAA,EAAA,OAEA,MAAA,GAEA,KAAA,kBAAA,EAAA,MACA,KAAA,gBAAA,GACA,KAAA,eAAA,KACA,EAAA,KAAA,SAAA,EAAA,EAAA,MACA,KAAA,eAAA,EAAA,IAAA,KAIA,KAAA,kBAAA,EAAA,MACA,KAAA,kBAAA,EAAA,GACA,KAAA,gBAAA,GACA,EAAA,QAAA,EAAA,QACA,EAAA,SAAA,EAAA,SACA,KAAA,eAAA,KACA,EAAA,KAAA,gBAAA,EAAA,EAAA,EAAA,MACA,KAAA,eAAA,EAAA,IAAA,IAEA,MAAA,IAEA,EAAA,YAAA,aAAA,GACA,KAAA,aAAA,GAEA,KAAA,eAAA,EAAA,IAAA,IAEA,MAAA,GAAA,MAAA,EAAA,CAEA,GAAA,OAAA,GAAA,EAAA,YAAA,aAAA,IAAA,KAAA,aAAA,OAAA,GAAA,IAAA,EAAA,UAEA,IAAA,IAAA,EAAA,EAAA,EAAA,KAAA,aAAA,OAAA,EAAA,EAAA,IACA,CAGA,IAAA,EAAA,KAAA,aAAA,GACA,KAAA,oBAAA,EAAA,OAAA,GAAA,EAAA,MAAA,EAAA,IAAA,EAAA,MACA,KAAA,QAAA,EAAA,OAAA,EAAA,EAAA,OAGA,GAAA,EAAA,QAAA,GAAA,OAAA,EAAA,WACA,EAAA,UAAA,KAAA,GAAA,EAAA,IAAA,GACA,EAAA,UAAA,QAAA,GACA,EAAA,YAAA,YAAA,EAAA,UAAA,EAAA,KAAA,iBACA,IAAA,EAAA,WAAA,IAAA,EAAA,UAAA,UACA,CACA,IAAA,EAAA,KAAA,SAAA,EAAA,UAAA,EAAA,KACA,KAAA,QAAA,EAAA,EAAA,EAAA,KAEA,GAAA,EAAA,WAAA,EACA,CACA,GAAA,EAAA,QAAA,GAAA,EAAA,UAAA,QAAA,GACA,EAAA,YAAA,YAAA,EAAA,UAAA,EAAA,KAAA,iBACA,IAAA,EAAA,WAAA,IAAA,EAAA,UAAA,UACA,CACA,EAAA,KAAA,SAAA,EAAA,UAAA,EAAA,KACA,KAAA,QAAA,EAAA,EAAA,EAAA,KAEA,IAAA,EAAA,EAAA,UACA,GAAA,OAAA,EACA,KAAA,GAAA,GAIA,KAAA,eAAA,EAAA,EAAA,EAAA,MAAA,GAEA,EAAA,EAAA,cAKA,EAAA,QAAA,UAAA,kBAAA,SAAA,EAAA,GAEA,GAAA,OAAA,KAAA,cAEA,EAAA,UAAA,KACA,EAAA,UAAA,KACA,KAAA,cAAA,OAEA,GAAA,OAAA,GAAA,KAAA,kBAAA,KAAA,cAAA,GAEA,EAAA,UAAA,KACA,EAAA,UAAA,KAAA,cACA,KAAA,cAAA,UAAA,EACA,KAAA,cAAA,MAGA,CAGA,IAFA,OAAA,IACA,EAAA,KAAA,eACA,OAAA,EAAA,YAAA,KAAA,kBAAA,EAAA,UAAA,IACA,EAAA,EAAA,UACA,EAAA,UAAA,EAAA,UACA,OAAA,EAAA,YACA,EAAA,UAAA,UAAA,GACA,EAAA,UAAA,EACA,EAAA,UAAA,IAGA,EAAA,QAAA,UAAA,kBAAA,SAAA,EAAA,GAEA,OAAA,EAAA,KAAA,GAAA,EAAA,KAAA,EAEA,EAAA,IAAA,EAAA,EAAA,IAAA,EACA,EAAA,IAAA,EAAA,EAAA,QAAA,KAAA,EAAA,EAAA,IAAA,GAEA,EAAA,IAAA,EAAA,EAAA,QAAA,KAAA,EAAA,EAAA,IAAA,GAGA,EAAA,KAAA,EAAA,EAAA,KAAA,GAEA,EAAA,QAAA,UAAA,kBAAA,SAAA,GAEA,OAAA,EAAA,SAAA,EAAA,SAAA,UACA,KAAA,gBAAA,EAAA,aAAA,WAEA,KAAA,gBAAA,EAAA,aAAA,YAEA,EAAA,QAAA,UAAA,qBAAA,SAAA,GAEA,OAAA,EAAA,SAAA,EAAA,SAAA,UACA,KAAA,gBAAA,EAAA,aAAA,WAEA,KAAA,gBAAA,EAAA,aAAA,YAEA,EAAA,QAAA,UAAA,eAAA,SAAA,GAEA,IAAA,EAAA,EAWA,OAVA,EAAA,SAAA,EAAA,SAAA,WAEA,EAAA,KAAA,eACA,EAAA,KAAA,iBAIA,EAAA,KAAA,eACA,EAAA,KAAA,gBAEA,GAEA,KAAA,EAAA,aAAA,WACA,GAAA,IAAA,EAAA,WAAA,GAAA,EAAA,QACA,OAAA,EACA,MACA,KAAA,EAAA,aAAA,WACA,GAAA,GAAA,KAAA,IAAA,EAAA,SACA,OAAA,EACA,MACA,KAAA,EAAA,aAAA,YACA,GAAA,GAAA,EAAA,QACA,OAAA,EACA,MACA,QACA,IAAA,GAAA,EAAA,QACA,OAAA,EAGA,OAAA,KAAA,YAEA,KAAA,EAAA,SAAA,eACA,OAAA,GAEA,KAAA,EAAA,aAAA,WACA,KAAA,EAAA,aAAA,WACA,OAAA,IAAA,EAAA,SACA,KAAA,EAAA,aAAA,YACA,OAAA,EAAA,SAAA,EACA,QACA,OAAA,EAAA,SAAA,EAEA,KAAA,EAAA,SAAA,QACA,OAAA,GAEA,KAAA,EAAA,aAAA,WACA,KAAA,EAAA,aAAA,WACA,OAAA,IAAA,EAAA,SACA,KAAA,EAAA,aAAA,YACA,OAAA,EAAA,UAAA,EACA,QACA,OAAA,EAAA,UAAA,EAEA,KAAA,EAAA,SAAA,aACA,GAAA,EAAA,SAAA,EAAA,SAAA,UACA,OAAA,GAEA,KAAA,EAAA,aAAA,WACA,KAAA,EAAA,aAAA,WACA,OAAA,IAAA,EAAA,SACA,KAAA,EAAA,aAAA,YACA,OAAA,EAAA,UAAA,EACA,QACA,OAAA,EAAA,UAAA,OAGA,OAAA,GAEA,KAAA,EAAA,aAAA,WACA,KAAA,EAAA,aAAA,WACA,OAAA,IAAA,EAAA,SACA,KAAA,EAAA,aAAA,YACA,OAAA,EAAA,SAAA,EACA,QACA,OAAA,EAAA,SAAA,EAEA,KAAA,EAAA,SAAA,MACA,GAAA,IAAA,EAAA,UAYA,OAAA,EAXA,OAAA,GAEA,KAAA,EAAA,aAAA,WACA,KAAA,EAAA,aAAA,WACA,OAAA,IAAA,EAAA,SACA,KAAA,EAAA,aAAA,YACA,OAAA,EAAA,UAAA,EACA,QACA,OAAA,EAAA,UAAA,GAKA,OAAA,GAEA,EAAA,QAAA,UAAA,gBAAA,SAAA,GAIA,IAFA,IAAA,EAAA,EAAA,UAEA,OAAA,IAAA,EAAA,SAAA,EAAA,SAAA,IAAA,EAAA,YACA,EAAA,EAAA,UACA,GAAA,OAAA,EAEA,EAAA,QAAA,IAAA,EAAA,UAAA,EAAA,EAAA,UACA,EAAA,SAAA,EACA,EAAA,KAAA,mBAGA,GAAA,IAAA,EAAA,WAAA,KAAA,YAAA,EAAA,SAAA,QAEA,EAAA,QAAA,EACA,EAAA,SAAA,EAAA,SACA,EAAA,EAAA,eAGA,GAAA,KAAA,kBAAA,GACA,CAEA,GAAA,IAAA,EAAA,UACA,CAIA,IAFA,IAAA,GAAA,EACA,EAAA,EAAA,UACA,OAAA,GAEA,EAAA,SAAA,EAAA,SAAA,IAAA,EAAA,YACA,GAAA,GACA,EAAA,EAAA,UAEA,EAAA,QAAA,EAAA,EAAA,OAIA,EAAA,QAAA,EAAA,UAEA,EAAA,SAAA,EAAA,SACA,EAAA,EAAA,eAMA,EAAA,QAAA,EAAA,UAAA,EAIA,KAAA,IAAA,EAAA,SAAA,EAIA,EAAA,UAAA,EAAA,UAAA,EACA,EAAA,QAAA,EAAA,QAEA,EAAA,QAAA,EAAA,QAAA,EAAA,UAGA,EAAA,QAAA,IAAA,EAAA,UAAA,EAAA,EAAA,UAMA,IAAA,EAAA,UACA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EACA,EAAA,UAAA,EAAA,UAAA,EACA,EAAA,QAAA,EAAA,QAEA,EAAA,QAAA,EAAA,QAAA,EAAA,UAEA,EAAA,SAAA,EAAA,SACA,EAAA,EAAA,UAIA,GAAA,KAAA,qBAAA,GAGA,KAAA,GAAA,GAEA,IAAA,EAAA,YACA,EAAA,SAAA,IAAA,EAAA,SAAA,EAAA,GACA,EAAA,EAAA,eAMA,KAAA,GAAA,GAEA,EAAA,UAAA,EAAA,UACA,EAAA,EAAA,WAIA,EAAA,QAAA,UAAA,aAAA,SAAA,GAIA,OAAA,KAAA,eAEA,KAAA,cAAA,EACA,EAAA,UAAA,KACA,EAAA,UAAA,OAIA,EAAA,UAAA,KAAA,cACA,EAAA,UAAA,KACA,KAAA,cAAA,UAAA,EACA,KAAA,cAAA,IAGA,EAAA,QAAA,UAAA,aAAA,WAEA,IAAA,EAAA,KAAA,cAEA,IADA,KAAA,cAAA,EACA,OAAA,GAEA,EAAA,UAAA,EAAA,UACA,EAAA,UAAA,EAAA,UACA,EAAA,EAAA,WAGA,EAAA,QAAA,UAAA,mBAAA,SAAA,EAAA,GAGA,GAAA,EAAA,WAAA,EAAA,WAAA,EAAA,WAAA,EAAA,UAAA,CAEA,GAAA,EAAA,WAAA,EAGA,QADA,EAAA,EAAA,aAEA,EAAA,UAAA,GAEA,QADA,EAAA,EAAA,aAEA,EAAA,UAAA,GACA,EAAA,UAAA,EACA,EAAA,UAAA,EACA,EAAA,UAAA,EACA,EAAA,UAAA,OAEA,GAAA,EAAA,WAAA,EACA,CAEA,QADA,EAAA,EAAA,aAEA,EAAA,UAAA,GAEA,QADA,EAAA,EAAA,aAEA,EAAA,UAAA,GACA,EAAA,UAAA,EACA,EAAA,UAAA,EACA,EAAA,UAAA,EACA,EAAA,UAAA,MAGA,CACA,IAAA,EAAA,EAAA,UACA,EAAA,EAAA,UACA,EAAA,UAAA,EAAA,UACA,OAAA,EAAA,YACA,EAAA,UAAA,UAAA,GACA,EAAA,UAAA,EAAA,UACA,OAAA,EAAA,YACA,EAAA,UAAA,UAAA,GACA,EAAA,UAAA,EACA,OAAA,EAAA,YACA,EAAA,UAAA,UAAA,GACA,EAAA,UAAA,EACA,OAAA,EAAA,YACA,EAAA,UAAA,UAAA,GAEA,OAAA,EAAA,UACA,KAAA,cAAA,EACA,OAAA,EAAA,YACA,KAAA,cAAA,KAEA,EAAA,QAAA,UAAA,mBAAA,SAAA,EAAA,GAEA,KAAA,OAAA,EAAA,WAAA,OAAA,EAAA,WAEA,OAAA,EAAA,WAAA,OAAA,EAAA,WAAA,CAEA,GAAA,EAAA,WAAA,EAGA,QADA,EAAA,EAAA,aAEA,EAAA,UAAA,GAEA,QADA,EAAA,EAAA,aAEA,EAAA,UAAA,GACA,EAAA,UAAA,EACA,EAAA,UAAA,EACA,EAAA,UAAA,EACA,EAAA,UAAA,OAEA,GAAA,EAAA,WAAA,EACA,CAEA,QADA,EAAA,EAAA,aAEA,EAAA,UAAA,GAEA,QADA,EAAA,EAAA,aAEA,EAAA,UAAA,GACA,EAAA,UAAA,EACA,EAAA,UAAA,EACA,EAAA,UAAA,EACA,EAAA,UAAA,MAGA,CACA,IAAA,EAAA,EAAA,UACA,EAAA,EAAA,UACA,EAAA,UAAA,EAAA,UACA,OAAA,EAAA,YACA,EAAA,UAAA,UAAA,GACA,EAAA,UAAA,EAAA,UACA,OAAA,EAAA,YACA,EAAA,UAAA,UAAA,GACA,EAAA,UAAA,EACA,OAAA,EAAA,YACA,EAAA,UAAA,UAAA,GACA,EAAA,UAAA,EACA,OAAA,EAAA,YACA,EAAA,UAAA,UAAA,GAEA,OAAA,EAAA,UACA,KAAA,cAAA,EACA,OAAA,EAAA,YACA,KAAA,cAAA,KAEA,EAAA,QAAA,UAAA,gBAAA,SAAA,EAAA,EAAA,GAEA,KAAA,SAAA,EAAA,GACA,GAAA,EAAA,WAAA,KAAA,SAAA,EAAA,GACA,EAAA,QAAA,EAAA,QAEA,EAAA,QAAA,EACA,EAAA,QAAA,GAEA,EAAA,OAAA,EAAA,OACA,KAAA,cAAA,EAAA,GAEA,KAAA,cAAA,EAAA,IAEA,EAAA,QAAA,UAAA,gBAAA,SAAA,EAAA,EAAA,GAEA,IAAA,EACA,EAAA,EAyBA,GAxBA,EAAA,YAAA,aAAA,IAAA,EAAA,GAAA,EAAA,IAEA,EAAA,KAAA,SAAA,EAAA,GACA,EAAA,OAAA,EAAA,OACA,EAAA,KAAA,EAAA,SAAA,OACA,EAAA,KAAA,EAAA,SAAA,QAGA,GAFA,EAAA,GACA,WAAA,EACA,EAAA,UAEA,EAAA,YAIA,EAAA,KAAA,SAAA,EAAA,GACA,EAAA,OAAA,EAAA,OACA,EAAA,KAAA,EAAA,SAAA,QACA,EAAA,KAAA,EAAA,SAAA,OAGA,GAFA,EAAA,GACA,WAAA,EACA,EAAA,UAEA,EAAA,WAEA,OAAA,GAAA,EAAA,QAAA,GAAA,EAAA,QAAA,KAAA,EAAA,EAAA,IAAA,EAAA,QAAA,KAAA,EAAA,EAAA,IAAA,EAAA,YAAA,YAAA,EAAA,EAAA,KAAA,iBAAA,IAAA,EAAA,WAAA,IAAA,EAAA,UACA,CACA,IAAA,EAAA,KAAA,SAAA,EAAA,GACA,KAAA,QAAA,EAAA,EAAA,EAAA,KAEA,OAAA,GAEA,EAAA,QAAA,UAAA,aAAA,WAEA,IAAA,EAAA,IAAA,EAAA,OAUA,OATA,EAAA,KAAA,EACA,EAAA,QAAA,EACA,EAAA,QAAA,EACA,EAAA,UAAA,KACA,EAAA,IAAA,KACA,EAAA,SAAA,KACA,EAAA,SAAA,KACA,KAAA,WAAA,KAAA,GACA,EAAA,IAAA,KAAA,WAAA,OAAA,EACA,GAEA,EAAA,QAAA,UAAA,SAAA,SAAA,EAAA,GAEA,IAAA,EAAA,EAAA,MAAA,EAAA,SAAA,OACA,GAAA,EAAA,OAAA,EACA,EACA,EAAA,KAAA,gBACA,OAAA,IAAA,EAAA,UACA,IAAA,EAAA,IAAA,EAAA,MA+BA,OA9BA,EAAA,IAAA,EACA,EAAA,IAAA,EAAA,IAEA,EAAA,GAAA,EAAA,EAAA,EACA,EAAA,GAAA,EAAA,EAAA,EACA,EAAA,KAAA,EACA,EAAA,KAAA,EACA,EAAA,QACA,KAAA,aAAA,EAAA,GACA,IAEA,EAAA,SAAA,YAAA,EAAA,EAAA,MAGA,EAAA,GAAA,EAAA,EAAA,IAAA,EACA,EAAA,GAAA,EAAA,EAAA,IAAA,EACA,EAAA,GAAA,EAAA,EAAA,IAAA,GAEA,EAAA,SAAA,YAAA,EAAA,EAAA,MAGA,EAAA,GAAA,EAAA,EAAA,IAAA,EACA,EAAA,GAAA,EAAA,EAAA,IAAA,EACA,EAAA,GAAA,EAAA,EAAA,IAAA,GAGA,KAAA,KAAA,EAAA,GAAA,IAEA,EAAA,OAAA,EAAA,IAEA,EAIA,IAAA,EAEA,GAFA,EAAA,KAAA,WAAA,EAAA,SAEA,IACA,OAAA,GAAA,EAAA,SAAA,YAAA,EAAA,EAAA,IACA,GACA,GAAA,EAAA,SAAA,YAAA,EAAA,EAAA,KAAA,IACA,EAAA,OACA,EAAA,IAAA,EAAA,OACA,IAAA,EAAA,IAEA,EAAA,GAAA,EAAA,EAAA,EACA,EAAA,GAAA,EAAA,EAAA,EACA,EAAA,KAAA,EACA,EAAA,KAAA,EAAA,KACA,EAAA,KAAA,KAAA,EACA,EAAA,KAAA,EACA,IACA,EAAA,IAAA,GACA,IAEA,EAAA,SAAA,YAAA,EAAA,EAAA,MAGA,EAAA,GAAA,EAAA,EAAA,IAAA,EACA,EAAA,GAAA,EAAA,EAAA,IAAA,EACA,EAAA,GAAA,EAAA,EAAA,IAAA,GAEA,EAAA,SAAA,YAAA,EAAA,EAAA,MAGA,EAAA,GAAA,EAAA,EAAA,IAAA,EACA,EAAA,GAAA,EAAA,EAAA,IAAA,EACA,EAAA,GAAA,EAAA,EAAA,IAAA,GAGA,KAAA,KAAA,EAAA,GAAA,IAEA,IAGA,EAAA,QAAA,UAAA,WAAA,SAAA,EAAA,GAEA,IAAA,EAAA,IAAA,EAAA,SAAA,EAAA,OAEA,EAAA,MAAA,EAAA,EAAA,MAAA,EACA,EAAA,MAAA,EAAA,EAAA,MAAA,EAEA,EAAA,MAAA,EAAA,EAAA,EACA,EAAA,MAAA,EAAA,EAAA,GAEA,EAAA,QAAA,UAAA,oBAAA,SAAA,EAAA,EAAA,EAAA,GAGA,OAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,IAEA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,IAEA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,IAEA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,IAEA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAEA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,OAKA,EAAA,QAAA,UAAA,oBAAA,SAAA,EAAA,EAAA,GAEA,IAAA,EAAA,IAAA,EAAA,MAkBA,OAhBA,EAAA,GAAA,EAAA,EAAA,EACA,EAAA,GAAA,EAAA,EAAA,EACA,GAAA,EAAA,MAEA,EAAA,KAAA,EACA,EAAA,KAAA,EACA,EAAA,KAAA,EACA,EAAA,KAAA,IAIA,EAAA,KAAA,EACA,EAAA,KAAA,EACA,EAAA,KAAA,EACA,EAAA,KAAA,GAEA,GAEA,EAAA,QAAA,UAAA,aAAA,SAAA,EAAA,GAIA,IAFA,IAAA,GAAA,EACA,EAAA,EAAA,UACA,OAAA,GAEA,EAAA,QAAA,GAAA,GAAA,EAAA,YAEA,GAAA,EACA,OAAA,EAAA,YACA,EAAA,UAAA,KAAA,WAAA,EAAA,UAEA,EAAA,EAAA,UAEA,IACA,EAAA,QAAA,IAEA,EAAA,QAAA,UAAA,MAAA,SAAA,EAAA,GAEA,OAAA,EAAA,GAAA,EAAA,EACA,EAAA,YAAA,YAEA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,IAEA,EAAA,QAAA,UAAA,gBAAA,SAAA,EAAA,GAGA,IADA,IAAA,EAAA,EAAA,KACA,EAAA,SAAA,YAAA,EAAA,GAAA,EAAA,KAAA,GAAA,GACA,EAAA,EAAA,KACA,IAAA,EAAA,KAAA,IAAA,KAAA,MAAA,EAAA,GAAA,EAAA,KAEA,IADA,EAAA,EAAA,KACA,EAAA,SAAA,YAAA,EAAA,GAAA,EAAA,KAAA,GAAA,GACA,EAAA,EAAA,KACA,IAAA,EAAA,KAAA,IAAA,KAAA,MAAA,EAAA,GAAA,EAAA,KAEA,IADA,EAAA,EAAA,KACA,EAAA,SAAA,YAAA,EAAA,GAAA,EAAA,KAAA,GAAA,GACA,EAAA,EAAA,KACA,IAAA,EAAA,KAAA,IAAA,KAAA,MAAA,EAAA,GAAA,EAAA,KAEA,IADA,EAAA,EAAA,KACA,EAAA,SAAA,YAAA,EAAA,GAAA,EAAA,KAAA,GAAA,GACA,EAAA,EAAA,KACA,IAAA,EAAA,KAAA,IAAA,KAAA,MAAA,EAAA,GAAA,EAAA,KACA,OAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAEA,EAAA,QAAA,UAAA,YAAA,SAAA,GAIA,IAFA,IAAA,EAAA,KACA,EAAA,EAAA,KACA,GAAA,GAEA,EAAA,GAAA,EAAA,EAAA,GAAA,GAEA,EAAA,EACA,EAAA,MAEA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,IAEA,EAAA,GAAA,EAAA,EAAA,GAAA,GAEA,EAAA,KACA,EAAA,GAIA,EAAA,MAAA,GAAA,EAAA,MAAA,IACA,EAAA,IAGA,EAAA,EAAA,KAEA,GAAA,OAAA,EAGA,KAAA,GAAA,GAKA,IAHA,KAAA,gBAAA,EAAA,KACA,EAAA,GACA,EAAA,EAAA,KACA,EAAA,SAAA,cAAA,EAAA,GAAA,EAAA,KACA,EAAA,EAAA,KAGA,OAAA,GAEA,EAAA,QAAA,UAAA,gBAAA,SAAA,EAAA,GAGA,OAAA,EAAA,WACA,EAAA,SAAA,KAAA,YAAA,EAAA,MACA,OAAA,EAAA,WACA,EAAA,SAAA,KAAA,YAAA,EAAA,MACA,IAAA,EAAA,EAAA,SACA,EAAA,EAAA,SACA,OAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EACA,EACA,EAAA,GAAA,EAAA,EAAA,GAAA,EACA,EACA,EAAA,GAAA,EAAA,EAAA,GAAA,EACA,EACA,EAAA,GAAA,EAAA,EAAA,GAAA,EACA,EACA,EAAA,MAAA,EACA,EACA,EAAA,MAAA,EACA,EACA,KAAA,gBAAA,EAAA,GACA,EAEA,GAEA,EAAA,QAAA,UAAA,oBAAA,SAAA,EAAA,GAEA,GAEA,IADA,EAAA,EAAA,YACA,EACA,OAAA,QAEA,OAAA,GACA,OAAA,GAEA,EAAA,QAAA,UAAA,UAAA,SAAA,GAGA,IADA,IAAA,EAAA,KAAA,WAAA,GACA,GAAA,KAAA,WAAA,EAAA,MACA,EAAA,KAAA,WAAA,EAAA,KACA,OAAA,GAEA,EAAA,QAAA,UAAA,cAAA,SAAA,EAAA,GAGA,IAEA,EAFA,EAAA,KAAA,WAAA,EAAA,QACA,EAAA,KAAA,WAAA,EAAA,QAGA,EADA,KAAA,oBAAA,EAAA,GACA,EACA,KAAA,oBAAA,EAAA,GACA,EAEA,KAAA,gBAAA,EAAA,GACA,IAIA,EAJA,EAAA,EAAA,IACA,EAAA,EAAA,KACA,EAAA,EAAA,IACA,EAAA,EAAA,KAGA,EAAA,MAAA,EAAA,SAAA,QAEA,EAAA,MAAA,EAAA,SAAA,QAGA,KAAA,mBAAA,GACA,EAAA,KAAA,EACA,EAAA,KAAA,EACA,EAAA,KAAA,EACA,EAAA,KAAA,EACA,EAAA,IAAA,IAKA,EAAA,KAAA,EACA,EAAA,KAAA,EACA,EAAA,KAAA,EACA,EAAA,KAAA,EACA,EAAA,IAAA,GAEA,EAAA,EAAA,SAAA,SAIA,EAAA,MAAA,EAAA,SAAA,SAGA,KAAA,mBAAA,GACA,EAAA,KAAA,EACA,EAAA,KAAA,EACA,EAAA,KAAA,EACA,EAAA,KAAA,IAKA,EAAA,KAAA,EACA,EAAA,KAAA,EACA,EAAA,KAAA,EACA,EAAA,KAAA,GAEA,EAAA,EAAA,SAAA,SAEA,EAAA,SAAA,KACA,GAAA,IAEA,EAAA,WAAA,IACA,EAAA,UAAA,EAAA,WACA,EAAA,OAAA,EAAA,QAEA,EAAA,IAAA,KACA,EAAA,SAAA,KACA,EAAA,UAAA,EACA,IAAA,EAAA,EAAA,OACA,EAAA,EAAA,OACA,EAAA,QAAA,EAEA,EAAA,QAAA,EAEA,IADA,IAAA,EAAA,KAAA,cACA,OAAA,GACA,CACA,GAAA,EAAA,QAAA,EACA,CACA,EAAA,OAAA,EACA,EAAA,KAAA,EACA,MAEA,EAAA,EAAA,UAEA,EAAA,IAAA,EAAA,KAEA,EAAA,QAAA,UAAA,mBAAA,SAAA,GAEA,GAAA,OAAA,EAAA,CAEA,IAAA,EACA,EACA,EAAA,EACA,GACA,EAAA,EAAA,KACA,EAAA,KAAA,EAAA,KACA,EAAA,KAAA,EACA,EAAA,QAEA,GAAA,KAEA,EAAA,QAAA,UAAA,SAAA,EAAA,GAEA,IAAA,EAAA,EAAA,KACA,EAAA,KAAA,EAAA,KACA,EAAA,KAAA,GAEA,EAAA,QAAA,gBAAA,SAAA,EAAA,GAEA,IAAA,EAAA,EAAA,OACA,EAAA,OAAA,EAAA,OACA,EAAA,OAAA,GAEA,EAAA,QAAA,UAAA,eAAA,SAAA,EAAA,EAAA,EAAA,GAIA,IAwGA,EAAA,EAAA,EAAA,EAqBA,EAAA,EA7HA,GAAA,GAAA,OAAA,EAAA,WACA,EAAA,IAAA,GAAA,EAAA,GAAA,EAAA,IAAA,GAAA,EAAA,EACA,GAAA,GAAA,OAAA,EAAA,WACA,EAAA,IAAA,GAAA,EAAA,GAAA,EAAA,IAAA,GAAA,EAAA,EACA,EAAA,EAAA,QAAA,EACA,EAAA,EAAA,QAAA,EACA,GAAA,IAGA,IAAA,EAAA,WAAA,IAAA,EAAA,WA2DA,OAvDA,IAAA,EAAA,WAAA,IAAA,EAAA,WAEA,GAAA,IAAA,GAAA,GACA,KAAA,gBAAA,EAAA,EAAA,GAGA,EAAA,SAAA,EAAA,SACA,EAAA,WAAA,EAAA,WAAA,KAAA,YAAA,EAAA,SAAA,QAEA,IAAA,EAAA,UAEA,IAEA,KAAA,SAAA,EAAA,GACA,IACA,EAAA,QAAA,IAKA,IAEA,KAAA,SAAA,EAAA,GACA,IACA,EAAA,QAAA,IAIA,EAAA,SAAA,EAAA,UAEA,IAAA,EAAA,WAAA,GAAA,KAAA,IAAA,EAAA,UACA,KAAA,YAAA,EAAA,SAAA,SAAA,IAAA,EAAA,SAMA,IAAA,EAAA,WAAA,GAAA,KAAA,IAAA,EAAA,UACA,KAAA,YAAA,EAAA,SAAA,SAAA,IAAA,EAAA,WAEA,KAAA,SAAA,EAAA,GACA,IACA,EAAA,QAAA,KATA,KAAA,SAAA,EAAA,GACA,IACA,EAAA,QAAA,KAUA,IACA,EAAA,OAAA,EACA,KAAA,cAAA,GAEA,EAAA,MAAA,sCACA,IACA,EAAA,OAAA,EACA,KAAA,cAAA,GAEA,EAAA,MAAA,kCAMA,GAAA,EAAA,SAAA,EAAA,QAEA,GAAA,KAAA,kBAAA,GACA,CACA,IAAA,EAAA,EAAA,QACA,EAAA,QAAA,EAAA,QACA,EAAA,QAAA,OAIA,EAAA,QAAA,EAAA,YAAA,EACA,EAAA,SAAA,EAAA,QAEA,EAAA,SAAA,EAAA,UACA,EAAA,QAAA,EAAA,WAAA,EACA,EAAA,SAAA,EAAA,QAEA,EAAA,SAAA,EAAA,eAKA,KAAA,kBAAA,GAGA,EAAA,SAAA,IAAA,EAAA,SAAA,EAAA,EAFA,EAAA,UAAA,EAAA,UAGA,KAAA,kBAAA,GAGA,EAAA,SAAA,IAAA,EAAA,SAAA,EAAA,EAFA,EAAA,UAAA,EAAA,UA0BA,OArBA,EAAA,SAAA,EAAA,SAAA,WAEA,EAAA,KAAA,eACA,EAAA,KAAA,iBAIA,EAAA,KAAA,eACA,EAAA,KAAA,gBAEA,EAAA,SAAA,EAAA,SAAA,WAEA,EAAA,KAAA,eACA,EAAA,KAAA,iBAIA,EAAA,KAAA,eACA,EAAA,KAAA,gBAGA,GAEA,KAAA,EAAA,aAAA,YACA,EAAA,EAAA,QACA,MACA,KAAA,EAAA,aAAA,YACA,GAAA,EAAA,QACA,MACA,QACA,EAAA,KAAA,IAAA,EAAA,SAGA,OAAA,GAEA,KAAA,EAAA,aAAA,YACA,EAAA,EAAA,QACA,MACA,KAAA,EAAA,aAAA,YACA,GAAA,EAAA,QACA,MACA,QACA,EAAA,KAAA,IAAA,EAAA,SAGA,GAAA,GAAA,EAEA,GAAA,GAAA,IAAA,GAAA,GAAA,GAAA,IAAA,GAAA,GAAA,GACA,EAAA,SAAA,EAAA,SAAA,KAAA,YAAA,EAAA,SAAA,MACA,KAAA,gBAAA,EAAA,EAAA,IAGA,KAAA,SAAA,EAAA,GACA,KAAA,SAAA,EAAA,GACA,EAAA,QAAA,UAAA,EAAA,GACA,EAAA,QAAA,gBAAA,EAAA,SAGA,GAAA,EAEA,IAAA,GAAA,GAAA,IAEA,KAAA,SAAA,EAAA,GACA,EAAA,QAAA,UAAA,EAAA,GACA,EAAA,QAAA,gBAAA,EAAA,SAGA,GAAA,EAEA,IAAA,GAAA,GAAA,IAEA,KAAA,SAAA,EAAA,GACA,EAAA,QAAA,UAAA,EAAA,GACA,EAAA,QAAA,gBAAA,EAAA,SAGA,KAAA,IAAA,GAAA,GAAA,GACA,IAAA,GAAA,GAAA,GAAA,GAAA,GACA,CAEA,IAAA,EAAA,EACA,OAAA,GAEA,KAAA,EAAA,aAAA,YACA,EAAA,EAAA,SACA,MACA,KAAA,EAAA,aAAA,YACA,GAAA,EAAA,SACA,MACA,QACA,EAAA,KAAA,IAAA,EAAA,UAGA,OAAA,GAEA,KAAA,EAAA,aAAA,YACA,EAAA,EAAA,SACA,MACA,KAAA,EAAA,aAAA,YACA,GAAA,EAAA,SACA,MACA,QACA,EAAA,KAAA,IAAA,EAAA,UAGA,GAAA,EAAA,SAAA,EAAA,QACA,KAAA,gBAAA,EAAA,EAAA,QACA,GAAA,GAAA,GAAA,GAAA,EACA,OAAA,KAAA,YAEA,KAAA,EAAA,SAAA,eACA,EAAA,GAAA,EAAA,GACA,KAAA,gBAAA,EAAA,EAAA,GACA,MACA,KAAA,EAAA,SAAA,QACA,GAAA,GAAA,GAAA,GACA,KAAA,gBAAA,EAAA,EAAA,GACA,MACA,KAAA,EAAA,SAAA,cACA,EAAA,SAAA,EAAA,SAAA,QAAA,EAAA,GAAA,EAAA,GACA,EAAA,SAAA,EAAA,SAAA,WAAA,GAAA,GAAA,GAAA,IACA,KAAA,gBAAA,EAAA,EAAA,GACA,MACA,KAAA,EAAA,SAAA,MACA,KAAA,gBAAA,EAAA,EAAA,QAIA,EAAA,QAAA,UAAA,EAAA,GAEA,GAAA,IACA,GAAA,EAAA,QAAA,GAAA,GAAA,EAAA,QAAA,KAEA,EAAA,QAAA,UAAA,EAAA,GACA,EAAA,QAAA,gBAAA,EAAA,IAGA,GACA,KAAA,cAAA,GACA,GACA,KAAA,cAAA,IAEA,EAAA,QAAA,UAAA,cAAA,SAAA,GAEA,IAAA,EAAA,EAAA,UACA,EAAA,EAAA,UACA,OAAA,GAAA,OAAA,GAAA,GAAA,KAAA,gBAGA,OAAA,EACA,EAAA,UAAA,EAEA,KAAA,cAAA,EACA,OAAA,IACA,EAAA,UAAA,GACA,EAAA,UAAA,KACA,EAAA,UAAA,OAEA,EAAA,QAAA,UAAA,cAAA,SAAA,GAEA,IAAA,EAAA,EAAA,UACA,EAAA,EAAA,UACA,OAAA,GAAA,OAAA,GAAA,GAAA,KAAA,gBAGA,OAAA,EACA,EAAA,UAAA,EAEA,KAAA,cAAA,EACA,OAAA,IACA,EAAA,UAAA,GACA,EAAA,UAAA,KACA,EAAA,UAAA,OAEA,EAAA,QAAA,UAAA,kBAAA,SAAA,GAEA,OAAA,EAAA,WACA,EAAA,MAAA,mCACA,IAAA,EAAA,EAAA,UACA,EAAA,EAAA,UAoBA,OAnBA,EAAA,UAAA,OAAA,EAAA,OACA,OAAA,EACA,EAAA,UAAA,EAAA,UAEA,KAAA,cAAA,EAAA,UACA,OAAA,IACA,EAAA,UAAA,EAAA,WACA,EAAA,UAAA,KAAA,EAAA,KACA,EAAA,UAAA,UAAA,EAAA,UACA,EAAA,UAAA,QAAA,EAAA,QACA,EAAA,UAAA,SAAA,EAAA,UACA,EAAA,EAAA,WAEA,KAAA,EAAA,EAAA,IAAA,EACA,EAAA,KAAA,EAAA,EAAA,IAAA,EACA,EAAA,UAAA,EACA,EAAA,UAAA,EACA,EAAA,YAAA,aAAA,IACA,KAAA,eAAA,EAAA,IAAA,GACA,GAEA,EAAA,QAAA,UAAA,mBAAA,SAAA,GAGA,IADA,IAAA,EAAA,KAAA,cACA,OAAA,GAEA,KAAA,cAAA,GACA,KAAA,kBAAA,EAAA,GACA,EAAA,KAAA,eAGA,EAAA,QAAA,UAAA,iBAAA,SAAA,EAAA,GAEA,EAAA,IAAA,EAAA,EAAA,IAAA,GAEA,EAAA,KAAA,EAAA,IAAA,EACA,EAAA,MAAA,EAAA,IAAA,EACA,EAAA,IAAA,EAAA,UAAA,eAIA,EAAA,KAAA,EAAA,IAAA,EACA,EAAA,MAAA,EAAA,IAAA,EACA,EAAA,IAAA,EAAA,UAAA,eAGA,EAAA,QAAA,UAAA,iBAAA,SAAA,EAAA,GAIA,IAAA,EAAA,KAAA,WAAA,EAAA,QAAA,IACA,EAAA,MAAA,EAAA,SAAA,SACA,EAAA,EAAA,MAcA,IACA,EAAA,SAAA,YAAA,EAAA,GAAA,EAAA,KACA,KAAA,aAAA,EAAA,EAAA,KAEA,KAAA,aAAA,EAAA,EAAA,OAEA,EAAA,QAAA,UAAA,kBAAA,SAAA,EAAA,GAEA,IAAA,EAAA,CAAA,IAAA,KAAA,KAAA,KAAA,MAAA,MACA,KAAA,iBAAA,EAAA,GAOA,IANA,IAAA,EAAA,EAAA,IACA,EAAA,EAAA,KACA,EAAA,EAAA,MAEA,EAAA,EACA,EAAA,KACA,OAAA,EAAA,WAAA,EAAA,YAAA,aAAA,EAAA,YACA,EAAA,EAAA,UAGA,IAFA,OAAA,EAAA,YACA,EAAA,KAAA,cAAA,MAEA,CAGA,IAFA,IAAA,EAAA,GAAA,EACA,EAAA,KAAA,aAAA,EAAA,GACA,OAAA,KAIA,EAAA,KAAA,GAAA,EAAA,IAAA,GAAA,OAAA,EAAA,WAAA,EAAA,GAAA,EAAA,UAAA,KAHA,CAKA,IAAA,EAAA,KAAA,aAAA,EAAA,GAEA,GAAA,GAAA,EAAA,UAAA,cAAA,EAAA,KAAA,GAAA,GAAA,GAAA,EAAA,UAAA,cAAA,EAAA,KAAA,GAAA,EACA,CAOA,GALA,EAAA,QAAA,GAAA,GAAA,EAAA,WACA,KAAA,iBAAA,EAAA,GAIA,GAAA,GAAA,EAQA,OANA,GAAA,EAAA,UAAA,aACA,KAAA,eAAA,EAAA,EAAA,EAAA,KAAA,GAEA,KAAA,eAAA,EAAA,EAAA,EAAA,KAAA,QACA,EAAA,QAAA,GACA,EAAA,MAAA,4BAGA,GAAA,GAAA,EAAA,UAAA,aACA,CACA,IAAA,EAAA,IAAA,EAAA,SAAA,EAAA,KAAA,EAAA,EAAA,KAAA,GACA,KAAA,eAAA,EAAA,EAAA,GAAA,OAGA,CACA,EAAA,IAAA,EAAA,SAAA,EAAA,KAAA,EAAA,EAAA,KAAA,GACA,KAAA,eAAA,EAAA,EAAA,GAAA,GAEA,KAAA,mBAAA,EAAA,QAEA,GAAA,GAAA,EAAA,UAAA,cAAA,EAAA,KAAA,GAAA,GAAA,GAAA,EAAA,UAAA,cAAA,EAAA,KAAA,GAAA,EACA,MACA,EAAA,EAKA,GAFA,EAAA,QAAA,GAAA,IAAA,EAAA,WACA,KAAA,iBAAA,EAAA,GACA,OAAA,EAAA,YAAA,EAAA,YAAA,aAAA,EAAA,WAaA,OAXA,EAAA,KAAA,kBAAA,IACA,QAAA,GACA,KAAA,SAAA,EAAA,EAAA,KAEA,EAAA,CAAA,IAAA,EAAA,KAAA,EAAA,MAAA,GACA,KAAA,iBAAA,EAAA,GACA,EAAA,EAAA,IACA,EAAA,EAAA,KACA,EAAA,EAAA,MAMA,GAAA,OAAA,EAAA,UAEA,GAAA,EAAA,QAAA,EACA,CACA,IAAA,EAAA,KAAA,SAAA,EAAA,EAAA,KAEA,GAAA,KADA,EAAA,KAAA,kBAAA,IACA,UACA,OAEA,IAAA,EAAA,EAAA,UACA,EAAA,EAAA,UACA,GAAA,OAAA,GAAA,EAAA,KAAA,GAAA,EAAA,IAAA,GACA,EAAA,KAAA,GAAA,EAAA,IAAA,GAAA,IAAA,EAAA,WACA,EAAA,QAAA,GAAA,EAAA,KAAA,EAAA,EAAA,IAAA,GACA,EAAA,YAAA,YAAA,EAAA,EAAA,KAAA,gBACA,CACA,IAAA,EAAA,KAAA,SAAA,EAAA,EAAA,KACA,KAAA,QAAA,EAAA,EAAA,EAAA,UAEA,GAAA,OAAA,GAAA,EAAA,KAAA,GAAA,EAAA,IAAA,GACA,EAAA,KAAA,GAAA,EAAA,IAAA,GAAA,IAAA,EAAA,WACA,EAAA,QAAA,GAAA,EAAA,KAAA,EAAA,EAAA,IAAA,GACA,EAAA,YAAA,YAAA,EAAA,EAAA,KAAA,gBACA,CACA,EAAA,KAAA,SAAA,EAAA,EAAA,KACA,KAAA,QAAA,EAAA,EAAA,EAAA,WAGA,EAAA,KAAA,kBAAA,QAEA,OAAA,EAEA,EAAA,QAAA,GAEA,GAAA,EAAA,UAAA,aACA,KAAA,eAAA,EAAA,EAAA,EAAA,KAAA,GAEA,KAAA,eAAA,EAAA,EAAA,EAAA,KAAA,GACA,EAAA,QAAA,GACA,EAAA,MAAA,6BAIA,KAAA,cAAA,GACA,KAAA,cAAA,KAKA,EAAA,QAAA,GACA,KAAA,SAAA,EAAA,EAAA,KACA,KAAA,cAAA,KAGA,EAAA,QAAA,UAAA,aAAA,SAAA,EAAA,GAEA,OAAA,GAAA,EAAA,UAAA,aAAA,EAAA,UAAA,EAAA,WAEA,EAAA,QAAA,UAAA,SAAA,SAAA,GAEA,OAAA,OAAA,GAAA,EAAA,KAAA,WAAA,GAAA,EAAA,KAAA,WAAA,GAEA,EAAA,QAAA,UAAA,SAAA,SAAA,EAAA,GAEA,OAAA,OAAA,GAAA,EAAA,IAAA,GAAA,GAAA,OAAA,EAAA,WAEA,EAAA,QAAA,UAAA,eAAA,SAAA,EAAA,GAEA,OAAA,EAAA,IAAA,GAAA,GAAA,OAAA,EAAA,WAEA,EAAA,QAAA,UAAA,cAAA,SAAA,GAEA,IAAA,EAAA,KAKA,OAJA,EAAA,SAAA,YAAA,EAAA,KAAA,IAAA,EAAA,MAAA,OAAA,EAAA,KAAA,UACA,EAAA,EAAA,KACA,EAAA,SAAA,YAAA,EAAA,KAAA,IAAA,EAAA,MAAA,OAAA,EAAA,KAAA,YACA,EAAA,EAAA,MACA,OAAA,IAAA,GAAA,EAAA,SAAA,EAAA,WAAA,EAAA,WAAA,EAAA,YAAA,aAAA,IAEA,EADA,MAGA,EAAA,QAAA,UAAA,qBAAA,SAAA,EAAA,GAEA,GAAA,MAAA,KAAA,cACA,OAAA,EACA,IAGA,GADA,KAAA,mBAAA,EAAA,GACA,GAAA,KAAA,gBAAA,OACA,OAAA,EACA,GAAA,GAAA,KAAA,gBAAA,SAAA,KAAA,yBAGA,OAAA,EAFA,KAAA,uBAIA,MAAA,GAEA,KAAA,cAAA,KACA,KAAA,gBAAA,OAAA,EACA,EAAA,MAAA,8BAGA,OADA,KAAA,cAAA,MACA,GAEA,EAAA,QAAA,UAAA,mBAAA,SAAA,EAAA,GAEA,GAAA,OAAA,KAAA,cAAA,CAGA,IAAA,EAAA,KAAA,cAGA,IADA,KAAA,cAAA,EACA,OAAA,GAEA,EAAA,UAAA,EAAA,UACA,EAAA,UAAA,EAAA,UACA,EAAA,KAAA,EAAA,EAAA,QAAA,KAAA,EAAA,GACA,EAAA,EAAA,UAIA,IADA,IAAA,GAAA,EACA,GAAA,OAAA,KAAA,eACA,CAGA,IAFA,GAAA,EACA,EAAA,KAAA,cACA,OAAA,EAAA,WACA,CACA,IAAA,EAAA,EAAA,UACA,EAAA,IAAA,EAAA,SAEA,GAAA,EAAA,KAAA,EAAA,EAAA,KAAA,EACA,EACA,KAAA,eAAA,EAAA,EAAA,IAAA,EAAA,KAAA,EAAA,EAAA,KAAA,EAAA,GAIA,EAAA,MAAA,sBAEA,EAAA,EAAA,IAEA,EAAA,EAAA,EACA,KAAA,IAAA,EAAA,IAAA,KAAA,IAAA,EAAA,IACA,EAAA,EAAA,EAAA,QAAA,KAAA,EAAA,GAEA,EAAA,EAAA,EAAA,QAAA,KAAA,EAAA,IAEA,IAAA,EAAA,IAAA,EAAA,cACA,EAAA,MAAA,EACA,EAAA,MAAA,EAEA,EAAA,GAAA,EAAA,EAAA,EACA,EAAA,GAAA,EAAA,EAAA,EACA,KAAA,gBAAA,KAAA,GACA,KAAA,mBAAA,EAAA,GACA,GAAA,OAGA,EAAA,EAEA,GAAA,OAAA,EAAA,UAGA,MAFA,EAAA,UAAA,UAAA,KAIA,KAAA,cAAA,OAEA,EAAA,QAAA,UAAA,cAAA,SAAA,GAEA,OAAA,EAAA,MAAA,WAAA,EAAA,OAAA,EAAA,MAAA,WAAA,EAAA,OAEA,EAAA,QAAA,kBAAA,SAAA,EAAA,GAIA,OAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAEA,EAAA,QAAA,UAAA,uBAAA,WAKA,KAAA,gBAAA,KAAA,KAAA,yBACA,KAAA,eAEA,IADA,IAAA,EAAA,KAAA,gBAAA,OACA,EAAA,EAAA,EAAA,EAAA,IACA,CACA,IAAA,KAAA,cAAA,KAAA,gBAAA,IACA,CAEA,IADA,IAAA,EAAA,EAAA,EACA,EAAA,IAAA,KAAA,cAAA,KAAA,gBAAA,KACA,IACA,GAAA,GAAA,EACA,OAAA,EACA,IAAA,EAAA,KAAA,gBAAA,GACA,KAAA,gBAAA,GAAA,KAAA,gBAAA,GACA,KAAA,gBAAA,GAAA,EAEA,KAAA,mBAAA,KAAA,gBAAA,GAAA,MAAA,KAAA,gBAAA,GAAA,OAEA,OAAA,GAEA,EAAA,QAAA,UAAA,qBAAA,WAEA,IAAA,IAAA,EAAA,EAAA,EAAA,KAAA,gBAAA,OAAA,EAAA,EAAA,IACA,CACA,IAAA,EAAA,KAAA,gBAAA,GACA,KAAA,eAAA,EAAA,MAAA,EAAA,MAAA,EAAA,IAAA,GACA,KAAA,mBAAA,EAAA,MAAA,EAAA,OAEA,KAAA,gBAAA,OAAA,GAOA,IAAA,GAAA,SAAA,GAEA,OAAA,EAAA,EAAA,KAAA,KAAA,EAAA,IAAA,KAAA,MAAA,IAEA,GAAA,SAAA,GAEA,OAAA,EAAA,EAAA,KAAA,KAAA,EAAA,IAAA,KAAA,MAAA,EAAA,KAEA,GAAA,SAAA,GAEA,OAAA,EAAA,GAAA,KAAA,MAAA,KAAA,IAAA,IAAA,KAAA,MAAA,IAEA,GAAA,SAAA,GAEA,OAAA,EAAA,GAEA,GAAA,KACA,WAAA,KAAA,KAAA,GAAA,EAAA,GAIA,GAAA,IACA,WAAA,KAAA,MAAA,GAAA,EAAA,GAGA,EAAA,KAAA,EAAA,QAAA,MAAA,GACA,EAAA,SAAA,EAAA,QAAA,MAAA,GACA,EAAA,OAAA,EAAA,QAAA,MAAA,GACA,EAAA,QAAA,MAAA,GACA,EAAA,QAAA,KAAA,SAAA,EAAA,GAIA,OAAA,GAAA,EAAA,IAAA,EACA,EAAA,IAAA,EACA,EAAA,IAAA,EAAA,EAAA,QAAA,MAAA,EAAA,IAAA,EAAA,EAAA,IAAA,KAEA,EAAA,QAAA,UAAA,eAAA,SAAA,EAAA,EAAA,GAIA,IAAA,EAAA,EAGA,GALA,EAAA,EAAA,EACA,EAAA,EAAA,EAIA,EAAA,YAAA,YAAA,EAAA,EAAA,KAAA,iBAAA,EAAA,IAAA,EAAA,GAYA,OAVA,EAAA,IAAA,EAAA,EAAA,IAAA,GAEA,EAAA,EAAA,EAAA,IAAA,EACA,EAAA,EAAA,EAAA,IAAA,IAIA,EAAA,EAAA,EAAA,IAAA,EACA,EAAA,EAAA,EAAA,IAAA,IAEA,EAEA,GAAA,IAAA,EAAA,MAAA,EAEA,EAAA,EAAA,EAAA,IAAA,EACA,EAAA,YAAA,aAAA,GAEA,EAAA,EAAA,EAAA,IAAA,GAIA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GACA,EAAA,EAAA,EAAA,QAAA,MAAA,EAAA,EAAA,EAAA,GAAA,SAGA,GAAA,IAAA,EAAA,MAAA,EAEA,EAAA,EAAA,EAAA,IAAA,EACA,EAAA,YAAA,aAAA,GAEA,EAAA,EAAA,EAAA,IAAA,GAIA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GACA,EAAA,EAAA,EAAA,QAAA,MAAA,EAAA,EAAA,EAAA,GAAA,QAIA,CACA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAEA,IAAA,IADA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IACA,IAAA,EAAA,GAAA,EAAA,IACA,EAAA,EAAA,EAAA,QAAA,MAAA,GACA,KAAA,IAAA,EAAA,IAAA,KAAA,IAAA,EAAA,IACA,EAAA,EAAA,EAAA,QAAA,MAAA,EAAA,GAAA,EAAA,GAEA,EAAA,EAAA,EAAA,QAAA,MAAA,EAAA,GAAA,EAAA,GAEA,GAAA,EAAA,EAAA,EAAA,IAAA,GAAA,EAAA,EAAA,EAAA,IAAA,EACA,CACA,GAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAIA,OAFA,EAAA,EAAA,EAAA,IAAA,EACA,EAAA,EAAA,EAAA,QAAA,KAAA,EAAA,EAAA,IAAA,GACA,EAAA,EAAA,EAAA,IAAA,EAGA,EAAA,EAAA,EAAA,IAAA,EACA,KAAA,IAAA,EAAA,IAAA,KAAA,IAAA,EAAA,IACA,EAAA,EAAA,EAAA,QAAA,KAAA,EAAA,EAAA,GAEA,EAAA,EAAA,EAAA,QAAA,KAAA,EAAA,EAAA,GAEA,OAAA,GAEA,EAAA,QAAA,UAAA,4BAAA,SAAA,GAGA,IADA,IAAA,EAAA,KAAA,cACA,OAAA,GACA,CAGA,IAAA,EAAA,KAAA,SAAA,EAAA,GACA,GAAA,EACA,CACA,IAAA,EAAA,KAAA,cAAA,GACA,EAAA,OAAA,IAAA,EAAA,YAAA,aAAA,GAEA,GAAA,EACA,CACA,IAAA,EAAA,EAAA,UACA,KAAA,SAAA,GAEA,EADA,OAAA,EACA,KAAA,cAEA,EAAA,cAGA,CAcA,GAZA,KAAA,eAAA,EAAA,IAAA,EAAA,YAAA,aAAA,EAAA,aAEA,EAAA,KAAA,kBAAA,IACA,QAAA,GACA,KAAA,SAAA,EAAA,EAAA,KACA,KAAA,aAAA,KAIA,EAAA,KAAA,EAAA,EAAA,QAAA,KAAA,EAAA,GACA,EAAA,KAAA,EAAA,GAEA,KAAA,eACA,CACA,EAAA,EAAA,UACA,GAAA,EAAA,QAAA,GAAA,IAAA,EAAA,WAAA,OAAA,GACA,EAAA,QAAA,GAAA,EAAA,KAAA,GAAA,EAAA,KAAA,GACA,IAAA,EAAA,UACA,CACA,IAAA,EAAA,KAAA,SAAA,EAAA,EAAA,MACA,EAAA,KAAA,SAAA,EAAA,EAAA,MACA,KAAA,QAAA,EAAA,EAAA,EAAA,OAIA,EAAA,EAAA,WAOA,IAHA,KAAA,oBAAA,GAEA,EAAA,KAAA,cACA,OAAA,GACA,CACA,GAAA,KAAA,eAAA,EAAA,GACA,CACA,EAAA,KACA,EAAA,QAAA,IACA,EAAA,KAAA,SAAA,EAAA,EAAA,MAGA,GAFA,EAAA,KAAA,kBAAA,IAEA,UAAA,IACA,EAAA,EAAA,UACA,GAAA,OAAA,GAAA,EAAA,KAAA,GAAA,EAAA,IAAA,GACA,EAAA,KAAA,GAAA,EAAA,IAAA,GAAA,OAAA,GACA,EAAA,QAAA,GAAA,EAAA,KAAA,EAAA,EAAA,IAAA,GACA,EAAA,YAAA,YAAA,EAAA,EAAA,KAAA,iBACA,IAAA,EAAA,WAAA,IAAA,EAAA,UACA,CACA,EAAA,KAAA,SAAA,EAAA,EAAA,KACA,KAAA,QAAA,EAAA,EAAA,EAAA,UAEA,GAAA,OAAA,GAAA,EAAA,KAAA,GAAA,EAAA,IAAA,GACA,EAAA,KAAA,GAAA,EAAA,IAAA,GAAA,OAAA,GACA,EAAA,QAAA,GAAA,EAAA,KAAA,EAAA,EAAA,IAAA,GACA,EAAA,YAAA,YAAA,EAAA,EAAA,KAAA,iBACA,IAAA,EAAA,WAAA,IAAA,EAAA,UACA,CACA,EAAA,KAAA,SAAA,EAAA,EAAA,KACA,KAAA,QAAA,EAAA,EAAA,EAAA,MAGA,EAAA,EAAA,YAGA,EAAA,QAAA,UAAA,SAAA,SAAA,GAEA,IAAA,EAAA,KAAA,cAAA,GACA,GAAA,OAAA,EAKA,OAHA,EAAA,QAAA,GACA,KAAA,SAAA,EAAA,EAAA,UACA,KAAA,cAAA,GAKA,IAFA,IAAA,EAAA,EAAA,UAEA,OAAA,GAAA,GAAA,GAEA,KAAA,eAAA,EAAA,EAAA,EAAA,KAAA,GACA,KAAA,mBAAA,EAAA,GACA,EAAA,EAAA,WAEA,GAAA,EAAA,SAAA,GAAA,EAAA,QAEA,KAAA,cAAA,GACA,KAAA,cAAA,IAEA,EAAA,QAAA,GAAA,EAAA,QAAA,EAEA,KAAA,eAAA,EAAA,EAAA,EAAA,KAAA,GAEA,IAAA,EAAA,WAEA,EAAA,QAAA,IAEA,KAAA,SAAA,EAAA,EAAA,KACA,EAAA,QAAA,GAEA,KAAA,cAAA,GACA,EAAA,QAAA,IAEA,KAAA,SAAA,EAAA,EAAA,KACA,EAAA,QAAA,GAEA,KAAA,cAAA,IAGA,EAAA,MAAA,mBAEA,EAAA,QAAA,aAAA,SAAA,GAEA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IACA,EAAA,GAAA,WAEA,EAAA,QAAA,YAAA,SAAA,GAEA,OAAA,EAAA,QAAA,KAAA,IAAA,GAEA,EAAA,QAAA,UAAA,WAAA,SAAA,GAEA,GAAA,OAAA,EACA,OAAA,EACA,IAAA,EAAA,EACA,EAAA,EACA,GACA,IACA,EAAA,EAAA,WAEA,GAAA,GACA,OAAA,GAEA,EAAA,QAAA,UAAA,YAAA,SAAA,GAEA,EAAA,MAAA,GACA,IAAA,IAAA,EAAA,EAAA,EAAA,KAAA,WAAA,OAAA,EAAA,EAAA,IACA,CACA,IAAA,EAAA,KAAA,WAAA,GACA,GAAA,OAAA,EAAA,IAAA,CAEA,IAAA,EAAA,EAAA,IAAA,KACA,EAAA,KAAA,WAAA,GACA,KAAA,EAAA,GAAA,CAGA,IADA,IAAA,EAAA,IAAA,MAAA,GACA,EAAA,EAAA,EAAA,EAAA,IAEA,EAAA,GAAA,EAAA,GACA,EAAA,EAAA,KAEA,EAAA,KAAA,OAGA,EAAA,QAAA,UAAA,aAAA,SAAA,GAEA,EAAA,QAGA,IAAA,IAAA,EAAA,EAAA,EAAA,KAAA,WAAA,OAAA,EAAA,EAAA,IACA,CACA,IAAA,EAAA,KAAA,WAAA,GACA,EAAA,KAAA,WAAA,EAAA,KACA,KAAA,EAAA,QAAA,EAAA,IAAA,EAAA,QAAA,EAAA,GAAA,CAEA,KAAA,eAAA,GACA,IAAA,EAAA,IAAA,EAAA,SACA,EAAA,WAAA,KAAA,GACA,EAAA,SAAA,EACA,EAAA,UAAA,OAAA,EAEA,IADA,IAAA,EAAA,EAAA,IAAA,KACA,EAAA,EAAA,EAAA,EAAA,IAEA,EAAA,UAAA,GAAA,EAAA,GACA,EAAA,EAAA,MAKA,IAAA,EAAA,EAAA,EAAA,KAAA,WAAA,OAAA,EAAA,EAAA,IACA,CAEA,QADA,EAAA,KAAA,WAAA,IACA,WAEA,EAAA,QAEA,EAAA,SAAA,QAAA,EACA,EAAA,SAAA,EAAA,WAEA,OAAA,EAAA,WAAA,MAAA,EAAA,UAAA,SACA,EAAA,UAAA,SAAA,SAAA,EAAA,UAEA,EAAA,SAAA,EAAA,aAGA,EAAA,QAAA,UAAA,gBAAA,SAAA,GAIA,IAAA,EAAA,KACA,EAAA,SAAA,KAEA,IADA,IAAA,EAAA,EAAA,MAEA,CACA,GAAA,EAAA,MAAA,GAAA,EAAA,MAAA,EAAA,KAIA,OAFA,KAAA,cAAA,QACA,EAAA,IAAA,MAIA,GAAA,EAAA,SAAA,YAAA,EAAA,GAAA,EAAA,KAAA,KAAA,EAAA,SAAA,YAAA,EAAA,GAAA,EAAA,KAAA,KACA,EAAA,YAAA,YAAA,EAAA,KAAA,GAAA,EAAA,GAAA,EAAA,KAAA,GAAA,KAAA,mBACA,KAAA,oBAAA,KAAA,sBAAA,EAAA,KAAA,GAAA,EAAA,GAAA,EAAA,KAAA,KACA,CACA,EAAA,KAEA,EAAA,KAAA,KAAA,EAAA,KACA,EAAA,KAAA,KAAA,EAAA,KACA,EAAA,EAAA,KACA,SAEA,CAAA,GAAA,GAAA,EACA,MAGA,OAAA,IACA,EAAA,GACA,EAAA,EAAA,MAGA,EAAA,IAAA,GAEA,EAAA,QAAA,UAAA,SAAA,SAAA,EAAA,GAEA,IAAA,EAAA,IAAA,EAAA,MAmBA,OAjBA,EAAA,GAAA,EAAA,EAAA,GAAA,EACA,EAAA,GAAA,EAAA,EAAA,GAAA,EACA,EAAA,IAAA,EAAA,IACA,GAEA,EAAA,KAAA,EAAA,KACA,EAAA,KAAA,EACA,EAAA,KAAA,KAAA,EACA,EAAA,KAAA,IAIA,EAAA,KAAA,EAAA,KACA,EAAA,KAAA,EACA,EAAA,KAAA,KAAA,EACA,EAAA,KAAA,GAEA,GAEA,EAAA,QAAA,UAAA,WAAA,SAAA,EAAA,EAAA,EAAA,EAAA,GA4BA,OA1BA,EAAA,EAEA,EAAA,GAEA,EAAA,KAAA,KAAA,IAAA,EAAA,GACA,EAAA,MAAA,KAAA,IAAA,EAAA,KAIA,EAAA,KAAA,KAAA,IAAA,EAAA,GACA,EAAA,MAAA,KAAA,IAAA,EAAA,IAKA,EAAA,GAEA,EAAA,KAAA,KAAA,IAAA,EAAA,GACA,EAAA,MAAA,KAAA,IAAA,EAAA,KAIA,EAAA,KAAA,KAAA,IAAA,EAAA,GACA,EAAA,MAAA,KAAA,IAAA,EAAA,IAGA,EAAA,KAAA,EAAA,OAEA,EAAA,QAAA,UAAA,SAAA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAEA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,UAAA,aAAA,EAAA,UAAA,aACA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,UAAA,aAAA,EAAA,UAAA,aACA,GAAA,GAAA,EACA,OAAA,EAMA,GAAA,GAAA,EAAA,UAAA,aACA,CACA,KAAA,EAAA,KAAA,GAAA,GAAA,EAAA,GACA,EAAA,KAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,KAAA,GAAA,GAAA,EAAA,GACA,EAAA,EAAA,KACA,GAAA,EAAA,GAAA,GAAA,EAAA,IACA,EAAA,EAAA,MACA,EAAA,KAAA,SAAA,GAAA,GACA,EAAA,SAAA,cAAA,EAAA,GAAA,MAEA,EAAA,GAEA,GAAA,EAAA,EAAA,EACA,EAAA,GAAA,EAAA,EAAA,EACA,EAAA,KAAA,SAAA,GAAA,QAIA,CACA,KAAA,EAAA,KAAA,GAAA,GAAA,EAAA,GACA,EAAA,KAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,KAAA,GAAA,GAAA,EAAA,GACA,EAAA,EAAA,KACA,GAAA,EAAA,GAAA,GAAA,EAAA,IACA,EAAA,EAAA,MACA,EAAA,KAAA,SAAA,EAAA,GACA,EAAA,SAAA,cAAA,EAAA,GAAA,MAEA,EAAA,GAEA,GAAA,EAAA,EAAA,EACA,EAAA,GAAA,EAAA,EAAA,EACA,EAAA,KAAA,SAAA,EAAA,IAGA,GAAA,GAAA,EAAA,UAAA,aACA,CACA,KAAA,EAAA,KAAA,GAAA,GAAA,EAAA,GACA,EAAA,KAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,KAAA,GAAA,GAAA,EAAA,GACA,EAAA,EAAA,KACA,GAAA,EAAA,GAAA,GAAA,EAAA,IACA,EAAA,EAAA,MACA,EAAA,KAAA,SAAA,GAAA,GACA,EAAA,SAAA,cAAA,EAAA,GAAA,MAEA,EAAA,GAEA,GAAA,EAAA,EAAA,EACA,EAAA,GAAA,EAAA,EAAA,EACA,EAAA,KAAA,SAAA,GAAA,QAIA,CACA,KAAA,EAAA,KAAA,GAAA,GAAA,EAAA,GACA,EAAA,KAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,KAAA,GAAA,GAAA,EAAA,GACA,EAAA,EAAA,KACA,GAAA,EAAA,GAAA,GAAA,EAAA,IACA,EAAA,EAAA,MACA,EAAA,KAAA,SAAA,EAAA,GACA,EAAA,SAAA,cAAA,EAAA,GAAA,MAEA,EAAA,GAEA,GAAA,EAAA,EAAA,EACA,EAAA,GAAA,EAAA,EAAA,EACA,EAAA,KAAA,SAAA,EAAA,IAiBA,OAdA,GAAA,EAAA,UAAA,cAAA,GAEA,EAAA,KAAA,EACA,EAAA,KAAA,EACA,EAAA,KAAA,EACA,EAAA,KAAA,IAIA,EAAA,KAAA,EACA,EAAA,KAAA,EACA,EAAA,KAAA,EACA,EAAA,KAAA,IAEA,GAEA,EAAA,QAAA,UAAA,WAAA,SAAA,EAAA,EAAA,GAEA,IAAA,EAAA,EAAA,OACA,EAAA,IAAA,EAAA,MACA,EAAA,EAAA,OACA,EAAA,IAAA,EAAA,MAQA,EAAA,EAAA,OAAA,GAAA,GAAA,EAAA,MAAA,EACA,GAAA,GAAA,EAAA,SAAA,YAAA,EAAA,MAAA,EAAA,OAAA,KAAA,EAAA,SAAA,YAAA,EAAA,MAAA,EAAA,OAAA,IACA,CAGA,IADA,EAAA,EAAA,OAAA,KACA,GAAA,GAAA,EAAA,SAAA,YAAA,EAAA,GAAA,EAAA,QACA,EAAA,EAAA,KACA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,MAAA,EAEA,IADA,EAAA,EAAA,OAAA,KACA,GAAA,GAAA,EAAA,SAAA,YAAA,EAAA,GAAA,EAAA,QACA,EAAA,EAAA,KAEA,OAAA,GADA,EAAA,GAAA,EAAA,EAAA,MAAA,IAGA,GAEA,EAAA,KAAA,SAAA,GAAA,GACA,EAAA,KAAA,SAAA,GAAA,GACA,EAAA,KAAA,EACA,EAAA,KAAA,EACA,EAAA,KAAA,EACA,EAAA,KAAA,EACA,EAAA,OAAA,EACA,EAAA,OAAA,GACA,IAIA,EAAA,KAAA,SAAA,GAAA,GACA,EAAA,KAAA,SAAA,GAAA,GACA,EAAA,KAAA,EACA,EAAA,KAAA,EACA,EAAA,KAAA,EACA,EAAA,KAAA,EACA,EAAA,OAAA,EACA,EAAA,OAAA,GACA,IAGA,GAAA,EACA,CAKA,IADA,EAAA,EACA,EAAA,KAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,MAAA,GAAA,EAAA,MAAA,GACA,EAAA,EAAA,KACA,KAAA,EAAA,KAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,MAAA,GAAA,EAAA,MAAA,GACA,EAAA,EAAA,KACA,GAAA,EAAA,MAAA,GAAA,EAAA,MAAA,EACA,OAAA,EAGA,IADA,EAAA,EACA,EAAA,KAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,MAAA,GAAA,EAAA,MAAA,GACA,EAAA,EAAA,KACA,KAAA,EAAA,KAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,MAAA,GAAA,EAAA,MAAA,GACA,EAAA,EAAA,KACA,GAAA,EAAA,MAAA,GAAA,EAAA,MAAA,EACA,OAAA,EAIA,IAAA,EAAA,CAAA,KAAA,KAAA,MAAA,MACA,IAAA,KAAA,WAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GACA,OAAA,EACA,IAOA,EAPA,EAAA,EAAA,KACA,EAAA,EAAA,MAKA,EAAA,IAAA,EAAA,SAgCA,OA9BA,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,GAAA,GAGA,EAAA,EAAA,EAAA,GAAA,EACA,EAAA,EAAA,EAAA,GAAA,EACA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAEA,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,GAAA,GAGA,EAAA,EAAA,EAAA,GAAA,EACA,EAAA,EAAA,EAAA,GAAA,EACA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAEA,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,GAAA,GAGA,EAAA,EAAA,EAAA,GAAA,EACA,EAAA,EAAA,EAAA,GAAA,EACA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,IAKA,EAAA,EAAA,EAAA,GAAA,EACA,EAAA,EAAA,EAAA,GAAA,EACA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAEA,EAAA,OAAA,EACA,EAAA,OAAA,EACA,KAAA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GASA,IADA,EAAA,EAAA,KACA,EAAA,SAAA,YAAA,EAAA,GAAA,EAAA,KAAA,GAAA,GACA,EAAA,EAAA,KACA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,IAAA,EAAA,YAAA,YAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,KAAA,gBACA,GAAA,EACA,CAEA,IADA,EAAA,EAAA,KACA,EAAA,SAAA,YAAA,EAAA,GAAA,EAAA,KAAA,GAAA,GACA,EAAA,EAAA,KACA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,IAAA,EAAA,YAAA,YAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,KAAA,gBACA,OAAA,EAGA,IADA,EAAA,EAAA,KACA,EAAA,SAAA,YAAA,EAAA,GAAA,EAAA,KAAA,GAAA,GACA,EAAA,EAAA,KACA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,IAAA,EAAA,YAAA,YAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,KAAA,gBACA,GAAA,EACA,CAEA,IADA,EAAA,EAAA,KACA,EAAA,SAAA,YAAA,EAAA,GAAA,EAAA,KAAA,GAAA,GACA,EAAA,EAAA,KACA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,IAAA,EAAA,YAAA,YAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,KAAA,gBACA,OAAA,EAEA,OAAA,GAAA,GAAA,GAAA,GAAA,GAAA,IACA,GAAA,GAAA,GAAA,KAEA,GAEA,EAAA,KAAA,SAAA,GAAA,GACA,EAAA,KAAA,SAAA,GAAA,GACA,EAAA,KAAA,EACA,EAAA,KAAA,EACA,EAAA,KAAA,EACA,EAAA,KAAA,EACA,EAAA,OAAA,EACA,EAAA,OAAA,GACA,IAIA,EAAA,KAAA,SAAA,GAAA,GACA,EAAA,KAAA,SAAA,GAAA,GACA,EAAA,KAAA,EACA,EAAA,KAAA,EACA,EAAA,KAAA,EACA,EAAA,KAAA,EACA,EAAA,OAAA,EACA,EAAA,OAAA,GACA,KAIA,EAAA,QAAA,UAAA,SAAA,GAIA,IAFA,IAAA,EAAA,EACA,EAAA,EAAA,OACA,EAAA,GAAA,GAAA,EAAA,GAAA,QAAA,IACA,GAAA,GAAA,EAAA,OAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,GACA,IAAA,EAAA,IAAA,EAAA,QAKA,IAJA,EAAA,KAAA,EAAA,GAAA,GAAA,EACA,EAAA,MAAA,EAAA,KACA,EAAA,IAAA,EAAA,GAAA,GAAA,EACA,EAAA,OAAA,EAAA,IACA,EAAA,EAAA,IACA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,GAAA,OAAA,EAAA,EAAA,IAEA,EAAA,GAAA,GAAA,EAAA,EAAA,KAAA,EAAA,KAAA,EAAA,GAAA,GAAA,EACA,EAAA,GAAA,GAAA,EAAA,EAAA,QAAA,EAAA,MAAA,EAAA,GAAA,GAAA,GACA,EAAA,GAAA,GAAA,EAAA,EAAA,IAAA,EAAA,IAAA,EAAA,GAAA,GAAA,EACA,EAAA,GAAA,GAAA,EAAA,EAAA,SAAA,EAAA,OAAA,EAAA,GAAA,GAAA,GAEA,OAAA,GAEA,EAAA,QAAA,UAAA,WAAA,SAAA,GAEA,IAAA,EAAA,EACA,EAAA,IAAA,EAAA,QAMA,IALA,EAAA,KAAA,EAAA,GAAA,EACA,EAAA,MAAA,EAAA,GAAA,EACA,EAAA,IAAA,EAAA,GAAA,EACA,EAAA,OAAA,EAAA,GAAA,EACA,EAAA,EAAA,KACA,GAAA,GAEA,EAAA,GAAA,EAAA,EAAA,OACA,EAAA,KAAA,EAAA,GAAA,GACA,EAAA,GAAA,EAAA,EAAA,QACA,EAAA,MAAA,EAAA,GAAA,GACA,EAAA,GAAA,EAAA,EAAA,MACA,EAAA,IAAA,EAAA,GAAA,GACA,EAAA,GAAA,EAAA,EAAA,SACA,EAAA,OAAA,EAAA,GAAA,GACA,EAAA,EAAA,KAEA,OAAA,GAGA,EAAA,QAAA,eAAA,SAAA,EAAA,GAIA,IAAA,EAAA,EACA,EAAA,EAAA,OACA,GAAA,EAAA,EACA,OAAA,EAEA,IADA,IAAA,EAAA,EAAA,GACA,EAAA,EAAA,GAAA,IAAA,EACA,CACA,IAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GACA,GAAA,EAAA,GAAA,EAAA,IAEA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GACA,OAAA,EAEA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAEA,GAAA,EAAA,GAAA,EAAA,EAEA,GAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,MAEA,CAEA,GAAA,IADA,GAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,IAEA,OAAA,EACA,EAAA,GAAA,EAAA,EAAA,EAAA,IACA,EAAA,EAAA,QAKA,GAAA,EAAA,EAAA,EAAA,EACA,CACA,IAAA,EACA,GAAA,IADA,GAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,IAEA,OAAA,EACA,EAAA,GAAA,EAAA,EAAA,EAAA,IACA,EAAA,EAAA,GAIA,EAAA,EAEA,OAAA,GAGA,EAAA,QAAA,UAAA,eAAA,SAAA,EAAA,GAMA,IAFA,IAAA,EAAA,EACA,EAAA,IAEA,CACA,IAAA,EAAA,EAAA,GAAA,EACA,EAAA,EAAA,GAAA,EACA,EAAA,EAAA,KAAA,GAAA,EACA,EAAA,EAAA,KAAA,GAAA,EACA,GAAA,GAAA,EAAA,IAEA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GACA,OAAA,EAEA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAEA,GAAA,GAAA,EAAA,EAEA,GAAA,EAAA,EAAA,EACA,EAAA,EAAA,MAEA,CAEA,GAAA,IADA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAEA,OAAA,EACA,EAAA,GAAA,EAAA,IACA,EAAA,EAAA,QAKA,GAAA,EAAA,EAAA,EACA,CACA,IAAA,EACA,GAAA,IADA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAEA,OAAA,EACA,EAAA,GAAA,EAAA,IACA,EAAA,EAAA,GAKA,GAAA,IADA,EAAA,EAAA,MAEA,MAEA,OAAA,GAGA,EAAA,QAAA,UAAA,mBAAA,SAAA,EAAA,GAEA,IAAA,EAAA,EACA,EAAA,CACA,IAAA,EAAA,KAAA,eAAA,EAAA,GAAA,GACA,GAAA,GAAA,EACA,OAAA,GAAA,EACA,EAAA,EAAA,WAEA,GAAA,GACA,OAAA,GAEA,EAAA,QAAA,UAAA,iBAAA,SAAA,EAAA,GAEA,IAAA,IAAA,EAAA,EAAA,EAAA,KAAA,WAAA,OAAA,EAAA,EAAA,IACA,CACA,IAAA,EAAA,KAAA,WAAA,GACA,OAAA,EAAA,KAAA,EAAA,WAAA,GAEA,KAAA,mBAAA,EAAA,IAAA,EAAA,OACA,EAAA,UAAA,KAIA,EAAA,QAAA,UAAA,iBAAA,SAAA,EAAA,GAEA,IAAA,IAAA,EAAA,EAAA,EAAA,KAAA,WAAA,EAAA,EAAA,OAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,IAAA,GACA,EAAA,WAAA,IACA,EAAA,UAAA,IAEA,EAAA,QAAA,eAAA,SAAA,GAEA,KAAA,MAAA,GAAA,MAAA,EAAA,KACA,EAAA,EAAA,UACA,OAAA,GAEA,EAAA,QAAA,UAAA,gBAAA,WAEA,IAAA,IAAA,EAAA,EAAA,EAAA,KAAA,QAAA,OAAA,EAAA,EAAA,IACA,CACA,IAOA,EAPA,EAAA,KAAA,QAAA,GACA,EAAA,KAAA,UAAA,EAAA,OAAA,KACA,EAAA,KAAA,UAAA,EAAA,OAAA,KACA,GAAA,MAAA,EAAA,KAAA,MAAA,EAAA,IAcA,GARA,EADA,GAAA,EACA,EACA,KAAA,oBAAA,EAAA,GACA,EACA,KAAA,oBAAA,EAAA,GACA,EAEA,KAAA,gBAAA,EAAA,GAEA,KAAA,WAAA,EAAA,EAAA,GAEA,GAAA,GAAA,EACA,CAWA,GARA,EAAA,IAAA,EAAA,OACA,EAAA,SAAA,MACA,EAAA,KAAA,gBACA,IAAA,EAAA,OAEA,KAAA,gBAAA,GAGA,KAAA,gBACA,IAAA,IAAA,EAAA,EAAA,EAAA,KAAA,WAAA,OAAA,EAAA,EAAA,EAAA,IACA,CACA,IAAA,EAAA,KAAA,WAAA,GACA,MAAA,EAAA,KAAA,EAAA,QAAA,eAAA,EAAA,YAAA,GAAA,EAAA,QAAA,EAAA,SAEA,KAAA,mBAAA,EAAA,IAAA,EAAA,UACA,EAAA,UAAA,IAEA,KAAA,mBAAA,EAAA,IAAA,EAAA,MAGA,EAAA,QAAA,EAAA,OACA,EAAA,UAAA,EAEA,KAAA,iBACA,KAAA,iBAAA,EAAA,IACA,EAAA,OAAA,KAAA,kBAAA,KAAA,KAAA,GAAA,GACA,KAAA,mBAAA,EAAA,MAEA,KAAA,mBAAA,EAAA,IAAA,EAAA,MAGA,EAAA,OAAA,EAAA,OACA,EAAA,QAAA,EAAA,OACA,EAAA,UAAA,EAAA,UACA,EAAA,UAAA,EAEA,KAAA,iBACA,KAAA,iBAAA,EAAA,IACA,EAAA,OAAA,KAAA,kBAAA,KAAA,KAAA,GAAA,GACA,KAAA,mBAAA,EAAA,OAKA,EAAA,OAAA,EAAA,OACA,EAAA,UAAA,EAAA,UAEA,KAAA,iBACA,KAAA,iBAAA,EAAA,SAMA,EAAA,IAAA,KACA,EAAA,SAAA,KACA,EAAA,IAAA,EAAA,IACA,EAAA,OAAA,EAAA,OACA,GAAA,IACA,EAAA,UAAA,EAAA,WACA,EAAA,UAAA,EAEA,KAAA,iBACA,KAAA,iBAAA,EAAA,KAIA,EAAA,QAAA,UAAA,gBAAA,SAAA,GAEA,IAAA,EAAA,EAAA,IACA,GACA,EAAA,IAAA,EAAA,IACA,EAAA,EAAA,WAEA,GAAA,EAAA,MAEA,EAAA,QAAA,UAAA,iBAAA,WAGA,IADA,IAAA,EAAA,EACA,EAAA,KAAA,WAAA,QACA,CACA,IAAA,EAAA,KAAA,WAAA,KACA,EAAA,EAAA,IACA,GAAA,OAAA,EAEA,EACA,CAEA,IADA,IAAA,EAAA,EAAA,KACA,GAAA,EAAA,KACA,CACA,GAAA,EAAA,SAAA,YAAA,EAAA,GAAA,EAAA,KAAA,EAAA,MAAA,GAAA,EAAA,MAAA,EACA,CAEA,IAAA,EAAA,EAAA,KACA,EAAA,EAAA,KACA,EAAA,KAAA,EACA,EAAA,KAAA,EACA,EAAA,KAAA,EACA,EAAA,KAAA,EACA,EAAA,IAAA,EACA,IAAA,EAAA,KAAA,eACA,EAAA,IAAA,EACA,KAAA,gBAAA,GACA,KAAA,mBAAA,EAAA,IAAA,EAAA,MAGA,EAAA,QAAA,EAAA,OACA,EAAA,UAAA,GAEA,KAAA,mBAAA,EAAA,IAAA,EAAA,MAGA,EAAA,OAAA,EAAA,OACA,EAAA,QAAA,EAAA,OACA,EAAA,UAAA,EAAA,UACA,EAAA,UAAA,IAKA,EAAA,OAAA,EAAA,OACA,EAAA,UAAA,EAAA,WAEA,EAAA,EAGA,EAAA,EAAA,KAEA,EAAA,EAAA,WAEA,GAAA,EAAA,OAGA,EAAA,QAAA,KAAA,SAAA,GAEA,IAAA,EAAA,EAAA,OACA,GAAA,EAAA,EACA,OAAA,EAEA,IADA,IAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAEA,IAAA,EAAA,GAAA,EAAA,EAAA,GAAA,IAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GACA,EAAA,EAEA,MAAA,IAAA,GAEA,EAAA,QAAA,UAAA,KAAA,SAAA,GAEA,IAAA,EAAA,EAAA,IACA,GAAA,MAAA,EACA,OAAA,EACA,IAAA,EAAA,EACA,GACA,IAAA,EAAA,KAAA,GAAA,EAAA,EAAA,GAAA,IAAA,EAAA,KAAA,GAAA,EAAA,EAAA,GAAA,GACA,EAAA,EAAA,WAEA,GAAA,EAAA,KACA,MAAA,GAAA,GAEA,IAEA,EAAA,QAAA,YAAA,SAAA,EAAA,EAAA,EAAA,EAAA,GAEA,IAAA,EAAA,IAAA,EAAA,MACA,EAAA,IAAA,EAAA,cAAA,EAAA,GAGA,OAFA,EAAA,SAAA,EAAA,EAAA,GACA,EAAA,QAAA,EAAA,GACA,IAGA,EAAA,QAAA,gBAAA,SAAA,EAAA,GAEA,IAAA,EAAA,IAAA,MACA,EAAA,IAAA,EAAA,QAAA,GAIA,OAHA,EAAA,gBAAA,EACA,EAAA,QAAA,EAAA,EAAA,SAAA,WAAA,GACA,EAAA,QAAA,EAAA,SAAA,QAAA,EAAA,EAAA,GACA,GAEA,EAAA,QAAA,iBAAA,SAAA,EAAA,QAEA,IAAA,IAAA,EAAA,EAAA,aAAA,YACA,IAAA,EAAA,IAAA,MACA,EAAA,IAAA,EAAA,QAAA,GAIA,OAHA,EAAA,gBAAA,EACA,EAAA,SAAA,EAAA,EAAA,SAAA,WAAA,GACA,EAAA,QAAA,EAAA,SAAA,QAAA,EAAA,EAAA,GACA,GAEA,EAAA,QAAA,aAAA,SAAA,EAAA,GAEA,IAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EACA,OAAA,EAAA,EAAA,EAAA,GAEA,EAAA,QAAA,qBAAA,SAAA,EAAA,EAAA,GAQA,IAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAEA,OADA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACA,GAAA,EAAA,EAAA,EAAA,IAEA,EAAA,QAAA,oBAAA,SAAA,EAAA,EAAA,EAAA,GAEA,OAAA,EAAA,QAAA,qBAAA,EAAA,EAAA,GAAA,GAEA,EAAA,QAAA,eAAA,SAAA,EAAA,EAAA,GAEA,IAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EACA,OAAA,EAAA,EAAA,EAAA,GAAA,GAGA,EAAA,QAAA,UAAA,SAAA,GAEA,IAAA,EAAA,EAAA,KAIA,OAHA,EAAA,KAAA,EAAA,KACA,EAAA,KAAA,KAAA,EACA,EAAA,IAAA,EACA,GAEA,EAAA,QAAA,aAAA,SAAA,EAAA,QAEA,IAAA,IAAA,EAAA,OAIA,IAAA,EAAA,EAAA,OACA,GAAA,GAAA,EACA,OAAA,IAAA,MAEA,IADA,IAAA,EAAA,IAAA,MAAA,GACA,EAAA,EAAA,EAAA,IAAA,EACA,EAAA,GAAA,IAAA,EAAA,MACA,IAAA,EAAA,EAAA,EAAA,IAAA,EAEA,EAAA,GAAA,GAAA,EAAA,GACA,EAAA,GAAA,KAAA,GAAA,EAAA,GAAA,GACA,EAAA,GAAA,KAAA,KAAA,EAAA,GACA,EAAA,GAAA,IAAA,EAIA,IAFA,IAAA,EAAA,EAAA,EACA,EAAA,EAAA,GACA,GAAA,EAAA,KAAA,EAAA,MAAA,EAAA,MAEA,EAAA,QAAA,eAAA,EAAA,GAAA,EAAA,KAAA,GAAA,IAEA,EAAA,EAAA,QAAA,UAAA,GACA,KAEA,EAAA,QAAA,eAAA,EAAA,KAAA,GAAA,EAAA,KAAA,GAAA,IAEA,EAAA,QAAA,UAAA,EAAA,MACA,EAAA,EAAA,QAAA,UAAA,GACA,GAAA,GAEA,EAAA,QAAA,oBAAA,EAAA,KAAA,GAAA,EAAA,GAAA,EAAA,KAAA,GAAA,IAEA,EAAA,EAAA,QAAA,UAAA,GACA,MAIA,EAAA,IAAA,EACA,EAAA,EAAA,MAGA,EAAA,IACA,EAAA,GACA,IAAA,EAAA,IAAA,MAAA,GACA,IAAA,EAAA,EAAA,EAAA,IAAA,EAEA,EAAA,GAAA,IAAA,EAAA,SAAA,EAAA,IACA,EAAA,EAAA,KAGA,OADA,EAAA,KACA,GAEA,EAAA,QAAA,cAAA,SAAA,EAAA,GAGA,IADA,IAAA,EAAA,IAAA,MAAA,EAAA,QACA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IACA,EAAA,GAAA,EAAA,QAAA,aAAA,EAAA,GAAA,GACA,OAAA,GAEA,EAAA,QAAA,UAAA,SAAA,EAAA,EAAA,EAAA,GAEA,IAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,OACA,EAAA,EAAA,OACA,EAAA,IAAA,MACA,GAAA,EACA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IACA,CAEA,IADA,IAAA,EAAA,IAAA,MAAA,GACA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,IAAA,GACA,EAAA,GAAA,IAAA,EAAA,SAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GACA,EAAA,KAAA,QAGA,IAAA,EAAA,EAAA,EAAA,EAAA,IACA,CAEA,IADA,EAAA,IAAA,MAAA,GACA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,IAAA,GACA,EAAA,GAAA,IAAA,EAAA,SAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GACA,EAAA,KAAA,GAEA,IAAA,EAAA,IAAA,MACA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IACA,IAAA,EAAA,EAAA,EAAA,EAAA,IACA,CACA,IAAA,EAAA,IAAA,MACA,EAAA,KAAA,EAAA,EAAA,GAAA,EAAA,IACA,EAAA,KAAA,GAAA,EAAA,GAAA,GAAA,EAAA,IACA,EAAA,KAAA,GAAA,EAAA,GAAA,IAAA,EAAA,GAAA,IACA,EAAA,KAAA,EAAA,EAAA,IAAA,EAAA,GAAA,IACA,EAAA,QAAA,YAAA,IACA,EAAA,UACA,EAAA,KAAA,GAEA,IAAA,EAAA,IAAA,EAAA,QAAA,GAGA,OAFA,EAAA,SAAA,EAAA,EAAA,SAAA,WAAA,GACA,EAAA,QAAA,EAAA,SAAA,QAAA,EAAA,EAAA,aAAA,WAAA,EAAA,aAAA,YACA,GAGA,EAAA,QAAA,aAAA,WAEA,IAAA,EAAA,UACA,EAAA,EAAA,OACA,GAAA,GAAA,EACA,CACA,IAAA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,OAAA,EAAA,QAAA,UAAA,EAAA,GAAA,EAAA,GAEA,GAAA,GAAA,EACA,CACA,EAAA,EAAA,GAMA,IANA,IACA,EAAA,EAAA,GACA,EAAA,EAAA,GAEA,GADA,EAAA,EAAA,GACA,IAAA,EAAA,SAEA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,IAAA,EACA,CACA,IAAA,EAAA,EAAA,QAAA,UAAA,EAAA,EAAA,IAAA,EAAA,GACA,EAAA,SAAA,EAAA,EAAA,SAAA,WAAA,GAEA,GAAA,EAAA,SAAA,EAAA,EAAA,SAAA,QAAA,GACA,IAAA,EAAA,IAAA,EAAA,MAEA,OADA,EAAA,QAAA,EAAA,SAAA,QAAA,EAAA,EAAA,GACA,IAIA,EAAA,QAAA,cAAA,SAAA,EAAA,EAAA,GAEA,OAAA,EAAA,QAAA,UAAA,EAAA,GAAA,EAAA,IAGA,EAAA,QAAA,gBAAA,SAAA,GAEA,IAAA,EAAA,IAAA,MAGA,OADA,EAAA,QAAA,mBAAA,EAAA,EAAA,QAAA,SAAA,MAAA,GACA,GAEA,EAAA,QAAA,mBAAA,SAAA,EAAA,EAAA,GAEA,IAAA,GAAA,EACA,OAAA,GAEA,KAAA,EAAA,QAAA,SAAA,OACA,OACA,KAAA,EAAA,QAAA,SAAA,SACA,GAAA,EAAA,OAKA,EAAA,UAAA,OAAA,GAAA,GACA,EAAA,KAAA,EAAA,WACA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,SAAA,EAAA,EAAA,OAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,IAAA,GACA,EAAA,QAAA,mBAAA,EAAA,EAAA,IAEA,EAAA,QAAA,sBAAA,SAAA,GAIA,IAFA,IAAA,EAAA,IAAA,EAAA,MAEA,EAAA,EAAA,EAAA,EAAA,aAAA,EAAA,EAAA,IACA,EAAA,SAAA,GAAA,QACA,EAAA,KAAA,EAAA,SAAA,GAAA,WACA,OAAA,GAEA,EAAA,QAAA,wBAAA,SAAA,GAEA,IAAA,EAAA,IAAA,EAAA,MAGA,OADA,EAAA,QAAA,mBAAA,EAAA,EAAA,QAAA,SAAA,SAAA,GACA,GAEA,GAAA,EAAA,QAAA,EAAA,aACA,EAAA,QAAA,SAAA,CACA,MAAA,EACA,OAAA,EACA,SAAA,GAEA,EAAA,cAAA,SAAA,EAAA,QAEA,IAAA,IAAA,EAAA,QACA,IAAA,IAAA,EAAA,EAAA,cAAA,mBACA,KAAA,YAAA,IAAA,EAAA,MACA,KAAA,UAAA,IAAA,EAAA,KACA,KAAA,WAAA,IAAA,EAAA,KACA,KAAA,UAAA,IAAA,MACA,KAAA,QAAA,EACA,KAAA,OAAA,EACA,KAAA,MAAA,EACA,KAAA,MAAA,EACA,KAAA,WAAA,EACA,KAAA,cAAA,EACA,KAAA,SAAA,IAAA,EAAA,SACA,KAAA,YAAA,IAAA,EAAA,SACA,KAAA,WAAA,EACA,KAAA,aAAA,EACA,KAAA,SAAA,GAAA,GAEA,EAAA,cAAA,OAAA,iBACA,EAAA,cAAA,kBAAA,IACA,EAAA,cAAA,UAAA,MAAA,WAEA,EAAA,MAAA,KAAA,YAAA,UACA,KAAA,SAAA,GAAA,GAEA,EAAA,cAAA,MAAA,EAAA,QAAA,MACA,EAAA,cAAA,UAAA,QAAA,SAAA,EAAA,EAAA,GAEA,IAAA,EAAA,EAAA,OAAA,EACA,KAAA,EAAA,GAAA,CAEA,IAAA,EAAA,IAAA,EAAA,SAIA,GAHA,EAAA,WAAA,EACA,EAAA,UAAA,EAEA,GAAA,EAAA,QAAA,cAAA,GAAA,EAAA,QAAA,gBACA,KAAA,EAAA,GAAA,EAAA,SAAA,YAAA,EAAA,GAAA,EAAA,KACA,IAEA,EAAA,UAAA,KAAA,EAAA,IAGA,IAFA,IAAA,EAAA,EACA,EAAA,EACA,EAAA,EAAA,GAAA,EAAA,IACA,EAAA,SAAA,cAAA,EAAA,UAAA,GAAA,EAAA,MAEA,IACA,EAAA,UAAA,KAAA,EAAA,KACA,EAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,UAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,UAAA,GAAA,KACA,EAAA,IAEA,KAAA,GAAA,EAAA,QAAA,iBAAA,EAAA,GAAA,GAAA,EAAA,QAAA,iBAAA,EAAA,KAEA,KAAA,YAAA,SAAA,GAEA,GAAA,EAAA,QAAA,iBAEA,GAAA,KAAA,SAAA,EAAA,EACA,KAAA,SAAA,IAAA,EAAA,SAAA,EAAA,OAEA,CACA,IAAA,EAAA,KAAA,YAAA,SAAA,KAAA,SAAA,GAAA,UAAA,KAAA,SAAA,IACA,EAAA,UAAA,GAAA,EAAA,EAAA,GAAA,EAAA,UAAA,GAAA,GAAA,EAAA,GAAA,EAAA,UAAA,GAAA,EAAA,EAAA,KACA,KAAA,SAAA,IAAA,EAAA,SAAA,KAAA,YAAA,aAAA,EAAA,OAGA,EAAA,cAAA,UAAA,SAAA,SAAA,EAAA,EAAA,GAEA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IACA,KAAA,QAAA,EAAA,GAAA,EAAA,IAEA,EAAA,cAAA,UAAA,gBAAA,WAIA,GAAA,KAAA,SAAA,GAAA,IAAA,EAAA,QAAA,YAAA,KAAA,YAAA,SAAA,KAAA,SAAA,GAAA,WAEA,IAAA,IAAA,EAAA,EAAA,EAAA,KAAA,YAAA,aAAA,IACA,GACA,EAAA,KAAA,YAAA,SAAA,IACA,WAAA,EAAA,QAAA,iBAAA,EAAA,WAAA,EAAA,QAAA,cAAA,EAAA,QAAA,YAAA,EAAA,aACA,EAAA,UAAA,eAKA,IAAA,EAAA,EAAA,EAAA,KAAA,YAAA,aAAA,IACA,CACA,IAAA,GAAA,EAAA,KAAA,YAAA,SAAA,IACA,WAAA,EAAA,QAAA,cAAA,EAAA,QAAA,YAAA,EAAA,YACA,EAAA,UAAA,YAIA,EAAA,cAAA,cAAA,SAAA,EAAA,GAEA,IAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EACA,GAAA,GAAA,GAAA,GAAA,EACA,OAAA,IAAA,EAAA,YAAA,EAAA,GACA,IAAA,EAAA,EAAA,KAAA,KAAA,EAAA,EAAA,EAAA,GAGA,OAFA,GAAA,EACA,GAAA,EACA,IAAA,EAAA,YAAA,GAAA,IAEA,EAAA,cAAA,UAAA,SAAA,SAAA,GAKA,GAHA,KAAA,YAAA,IAAA,MACA,KAAA,QAAA,EAEA,EAAA,YAAA,UAAA,GAGA,IAAA,IAAA,EAAA,EAAA,EAAA,KAAA,YAAA,aAAA,IACA,EACA,EAAA,KAAA,YAAA,SAAA,IACA,WAAA,EAAA,QAAA,iBACA,KAAA,YAAA,KAAA,EAAA,eAPA,CAgBA,IAAA,EAJA,KAAA,WAAA,EACA,KAAA,WAAA,GAAA,KAAA,WAAA,KAAA,YAEA,KAAA,WAAA,GAGA,EADA,KAAA,cAAA,EACA,EAAA,cAAA,kBACA,KAAA,aAAA,KAAA,IAAA,GAAA,EAAA,cAAA,kBACA,KAAA,IAAA,GAAA,EAAA,cAAA,kBAEA,KAAA,aAEA,IAAA,EAAA,iBAAA,KAAA,KAAA,EAAA,EAAA,KAAA,IAAA,IACA,KAAA,MAAA,KAAA,IAAA,EAAA,cAAA,OAAA,GACA,KAAA,MAAA,KAAA,IAAA,EAAA,cAAA,OAAA,GACA,KAAA,cAAA,EAAA,EAAA,cAAA,OACA,EAAA,IACA,KAAA,OAAA,KAAA,OAEA,IAAA,EAAA,EAAA,EAAA,KAAA,YAAA,aAAA,IACA,CACA,IAAA,EAAA,KAAA,YAAA,SAAA,GACA,KAAA,UAAA,EAAA,UACA,IAAA,EAAA,KAAA,UAAA,OACA,KAAA,GAAA,GAAA,GAAA,IAAA,EAAA,GAAA,EAAA,WAAA,EAAA,QAAA,kBAGA,GADA,KAAA,WAAA,IAAA,MACA,GAAA,EAAA,CAiCA,KAAA,UAAA,OAAA,EAEA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IACA,KAAA,UAAA,KAAA,EAAA,cAAA,cAAA,KAAA,UAAA,GAAA,KAAA,UAAA,EAAA,KAKA,GAJA,EAAA,WAAA,EAAA,QAAA,cAAA,EAAA,WAAA,EAAA,QAAA,gBACA,KAAA,UAAA,KAAA,EAAA,cAAA,cAAA,KAAA,UAAA,EAAA,GAAA,KAAA,UAAA,KAEA,KAAA,UAAA,KAAA,IAAA,EAAA,YAAA,KAAA,UAAA,EAAA,KACA,EAAA,WAAA,EAAA,QAAA,gBACA,CACA,IAAA,EAAA,EAAA,EACA,IAAA,EAAA,EAAA,EAAA,EAAA,IACA,EAAA,KAAA,YAAA,EAAA,EAAA,EAAA,YACA,KAAA,YAAA,KAAA,KAAA,iBAEA,GAAA,EAAA,WAAA,EAAA,QAAA,aACA,CAEA,IADA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,IACA,EAAA,KAAA,YAAA,EAAA,EAAA,EAAA,YACA,KAAA,YAAA,KAAA,KAAA,YACA,KAAA,WAAA,IAAA,MAEA,IAAA,EAAA,KAAA,UAAA,EAAA,GACA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IACA,KAAA,UAAA,GAAA,IAAA,EAAA,aAAA,KAAA,UAAA,EAAA,GAAA,GAAA,KAAA,UAAA,EAAA,GAAA,GACA,KAAA,UAAA,GAAA,IAAA,EAAA,aAAA,EAAA,GAAA,EAAA,GACA,EAAA,EACA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,IACA,EAAA,KAAA,YAAA,EAAA,EAAA,EAAA,YACA,KAAA,YAAA,KAAA,KAAA,gBAGA,CACA,IAGA,EAFA,IADA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,IAAA,EACA,EAAA,KAAA,YAAA,EAAA,EAAA,EAAA,YAEA,GAAA,EAAA,WAAA,EAAA,QAAA,WACA,CACA,EAAA,EAAA,EACA,EAAA,IAAA,EAAA,SAAA,EAAA,cAAA,MAAA,KAAA,UAAA,GAAA,EAAA,KAAA,UAAA,GAAA,EAAA,GAAA,EAAA,cAAA,MAAA,KAAA,UAAA,GAAA,EAAA,KAAA,UAAA,GAAA,EAAA,IACA,KAAA,WAAA,KAAA,GACA,EAAA,IAAA,EAAA,SAAA,EAAA,cAAA,MAAA,KAAA,UAAA,GAAA,EAAA,KAAA,UAAA,GAAA,EAAA,GAAA,EAAA,cAAA,MAAA,KAAA,UAAA,GAAA,EAAA,KAAA,UAAA,GAAA,EAAA,IACA,KAAA,WAAA,KAAA,OAGA,CACA,EAAA,EAAA,EACA,EAAA,EAAA,EACA,KAAA,OAAA,EACA,KAAA,UAAA,GAAA,IAAA,EAAA,aAAA,KAAA,UAAA,GAAA,GAAA,KAAA,UAAA,GAAA,GACA,EAAA,WAAA,EAAA,QAAA,aACA,KAAA,SAAA,EAAA,GAEA,KAAA,QAAA,EAAA,GAGA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IACA,KAAA,UAAA,GAAA,IAAA,EAAA,aAAA,KAAA,UAAA,EAAA,GAAA,GAAA,KAAA,UAAA,EAAA,GAAA,GACA,KAAA,UAAA,GAAA,IAAA,EAAA,aAAA,KAAA,UAAA,GAAA,GAAA,KAAA,UAAA,GAAA,GAEA,IAAA,GADA,EAAA,EAAA,GACA,EAAA,EAAA,IAAA,EACA,EAAA,KAAA,YAAA,EAAA,EAAA,EAAA,YACA,EAAA,WAAA,EAAA,QAAA,YAEA,EAAA,IAAA,EAAA,SAAA,EAAA,cAAA,MAAA,KAAA,UAAA,GAAA,EAAA,KAAA,UAAA,GAAA,EAAA,GAAA,EAAA,cAAA,MAAA,KAAA,UAAA,GAAA,EAAA,KAAA,UAAA,GAAA,EAAA,IACA,KAAA,WAAA,KAAA,GACA,EAAA,IAAA,EAAA,SAAA,EAAA,cAAA,MAAA,KAAA,UAAA,GAAA,EAAA,KAAA,UAAA,GAAA,EAAA,GAAA,EAAA,cAAA,MAAA,KAAA,UAAA,GAAA,EAAA,KAAA,UAAA,GAAA,EAAA,IACA,KAAA,WAAA,KAAA,KAIA,EAAA,EACA,KAAA,OAAA,EACA,EAAA,WAAA,EAAA,QAAA,aACA,KAAA,SAAA,EAAA,GAEA,KAAA,QAAA,EAAA,IAEA,KAAA,YAAA,KAAA,KAAA,iBAjHA,CAEA,GAAA,EAAA,YAAA,EAAA,SAAA,QAIA,IAFA,IAAA,EAAA,EACA,EAAA,EACA,EAAA,EAAA,GAAA,EAAA,IACA,CACA,KAAA,WAAA,KAAA,IAAA,EAAA,SAAA,EAAA,cAAA,MAAA,KAAA,UAAA,GAAA,EAAA,EAAA,GAAA,EAAA,cAAA,MAAA,KAAA,UAAA,GAAA,EAAA,EAAA,KACA,IAAA,EAAA,EACA,EAAA,EAAA,KAAA,MAAA,KAAA,MAAA,EACA,EAAA,EAAA,KAAA,MAAA,EAAA,KAAA,UAKA,CAAA,GAAA,EACA,GAAA,EACA,IAFA,IAEA,EAAA,EAAA,EAAA,IAAA,EAEA,KAAA,WAAA,KAAA,IAAA,EAAA,SAAA,EAAA,cAAA,MAAA,KAAA,UAAA,GAAA,EAAA,EAAA,GAAA,EAAA,cAAA,MAAA,KAAA,UAAA,GAAA,EAAA,EAAA,KACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EAEA,GAAA,EAGA,KAAA,YAAA,KAAA,KAAA,gBAwFA,EAAA,cAAA,UAAA,QAAA,WAEA,IAAA,EAAA,UAEA,GADA,EAAA,aAAA,EAAA,SAgCA,CACA,EAAA,EAAA,GACA,EAAA,EAAA,GAOA,GANA,EAAA,QACA,KAAA,kBACA,KAAA,SAAA,IAEA,EAAA,IAAA,EAAA,QAAA,IACA,SAAA,KAAA,YAAA,EAAA,SAAA,WAAA,GACA,EAAA,EAEA,EAAA,QAAA,EAAA,SAAA,QAAA,EAAA,EAAA,aAAA,YAAA,EAAA,aAAA,iBAGA,CACA,EAAA,EAAA,QAAA,UAAA,KAAA,aAUA,IATA,EAAA,IAAA,EAAA,MACA,KAAA,IAAA,EAAA,SAAA,EAAA,KAAA,GAAA,EAAA,OAAA,KACA,EAAA,KAAA,IAAA,EAAA,SAAA,EAAA,MAAA,GAAA,EAAA,OAAA,KACA,EAAA,KAAA,IAAA,EAAA,SAAA,EAAA,MAAA,GAAA,EAAA,IAAA,KACA,EAAA,KAAA,IAAA,EAAA,SAAA,EAAA,KAAA,GAAA,EAAA,IAAA,KACA,EAAA,QAAA,EAAA,EAAA,SAAA,WAAA,GACA,EAAA,iBAAA,EACA,EAAA,QAAA,EAAA,SAAA,QAAA,EAAA,EAAA,aAAA,YAAA,EAAA,aAAA,aAEA,GAAA,EAAA,cAAA,EAAA,SAAA,GAAA,aAAA,EACA,CACA,IAAA,EAAA,EAAA,SAAA,GAEA,EAAA,SAAA,GAAA,EAAA,SAAA,GACA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,aAAA,IACA,EAAA,SAAA,EAAA,SAAA,SAGA,EAAA,aAhEA,CACA,IAMA,EANA,EAAA,EAAA,GACA,EAAA,EAAA,GAOA,GANA,EAAA,MAAA,GACA,KAAA,kBACA,KAAA,SAAA,IAEA,EAAA,IAAA,EAAA,QAAA,IACA,SAAA,KAAA,YAAA,EAAA,SAAA,WAAA,GACA,EAAA,EAEA,EAAA,QAAA,EAAA,SAAA,QAAA,EAAA,EAAA,aAAA,YAAA,EAAA,aAAA,iBAGA,CACA,IACA,EADA,EAAA,EAAA,QAAA,UAAA,KAAA,cACA,EAAA,IAAA,EAAA,MACA,KAAA,IAAA,EAAA,SAAA,EAAA,KAAA,GAAA,EAAA,OAAA,KACA,EAAA,KAAA,IAAA,EAAA,SAAA,EAAA,MAAA,GAAA,EAAA,OAAA,KACA,EAAA,KAAA,IAAA,EAAA,SAAA,EAAA,MAAA,GAAA,EAAA,IAAA,KACA,EAAA,KAAA,IAAA,EAAA,SAAA,EAAA,KAAA,GAAA,EAAA,IAAA,KACA,EAAA,QAAA,EAAA,EAAA,SAAA,WAAA,GACA,EAAA,iBAAA,EACA,EAAA,QAAA,EAAA,SAAA,QAAA,EAAA,EAAA,aAAA,YAAA,EAAA,aAAA,aACA,EAAA,OAAA,GACA,EAAA,OAAA,EAAA,MA2CA,EAAA,cAAA,UAAA,YAAA,SAAA,EAAA,EAAA,GAGA,GADA,KAAA,OAAA,KAAA,UAAA,GAAA,EAAA,KAAA,UAAA,GAAA,EAAA,KAAA,UAAA,GAAA,EAAA,KAAA,UAAA,GAAA,EACA,KAAA,OAAA,MAAA,KAAA,QAAA,KACA,OAAA,EAKA,GAJA,KAAA,OAAA,EACA,KAAA,OAAA,EACA,KAAA,QAAA,IACA,KAAA,QAAA,GACA,KAAA,OAAA,KAAA,QAAA,EAEA,KAAA,WAAA,KAAA,IAAA,EAAA,SAAA,EAAA,cAAA,MAAA,KAAA,UAAA,GAAA,EAAA,KAAA,UAAA,GAAA,EAAA,KAAA,SACA,EAAA,cAAA,MAAA,KAAA,UAAA,GAAA,EAAA,KAAA,UAAA,GAAA,EAAA,KAAA,WACA,KAAA,WAAA,KAAA,IAAA,EAAA,SAAA,KAAA,UAAA,KACA,KAAA,WAAA,KAAA,IAAA,EAAA,SAAA,EAAA,cAAA,MAAA,KAAA,UAAA,GAAA,EAAA,KAAA,UAAA,GAAA,EAAA,KAAA,SACA,EAAA,cAAA,MAAA,KAAA,UAAA,GAAA,EAAA,KAAA,UAAA,GAAA,EAAA,KAAA,gBAGA,OAAA,GAEA,KAAA,EAAA,SAAA,QAEA,IAAA,EAAA,KAAA,UAAA,GAAA,EAAA,KAAA,UAAA,GAAA,EAAA,KAAA,UAAA,GAAA,EAAA,KAAA,UAAA,GAAA,EAAA,EACA,GAAA,KAAA,WACA,KAAA,QAAA,EAAA,EAAA,GAEA,KAAA,SAAA,EAAA,GACA,MAEA,KAAA,EAAA,SAAA,SACA,KAAA,SAAA,EAAA,GACA,MACA,KAAA,EAAA,SAAA,QACA,KAAA,QAAA,EAAA,GAIA,OADA,EAAA,GAGA,EAAA,cAAA,UAAA,SAAA,SAAA,EAAA,GAEA,IAAA,EAAA,KAAA,IAAA,KAAA,MAAA,KAAA,OACA,KAAA,UAAA,GAAA,EAAA,KAAA,UAAA,GAAA,EAAA,KAAA,UAAA,GAAA,EAAA,KAAA,UAAA,GAAA,GAAA,GACA,KAAA,WAAA,KAAA,IAAA,EAAA,SACA,EAAA,cAAA,MAAA,KAAA,UAAA,GAAA,EAAA,KAAA,SAAA,KAAA,UAAA,GAAA,EAAA,KAAA,UAAA,GAAA,EAAA,IACA,EAAA,cAAA,MAAA,KAAA,UAAA,GAAA,EAAA,KAAA,SAAA,KAAA,UAAA,GAAA,EAAA,KAAA,UAAA,GAAA,EAAA,MACA,KAAA,WAAA,KAAA,IAAA,EAAA,SACA,EAAA,cAAA,MAAA,KAAA,UAAA,GAAA,EAAA,KAAA,SAAA,KAAA,UAAA,GAAA,EAAA,KAAA,UAAA,GAAA,EAAA,IACA,EAAA,cAAA,MAAA,KAAA,UAAA,GAAA,EAAA,KAAA,SAAA,KAAA,UAAA,GAAA,EAAA,KAAA,UAAA,GAAA,EAAA,OAEA,EAAA,cAAA,UAAA,QAAA,SAAA,EAAA,EAAA,GAEA,IAAA,EAAA,KAAA,QAAA,EACA,KAAA,WAAA,KAAA,IAAA,EAAA,SACA,EAAA,cAAA,MAAA,KAAA,UAAA,GAAA,GAAA,KAAA,UAAA,GAAA,EAAA,KAAA,UAAA,GAAA,GAAA,GACA,EAAA,cAAA,MAAA,KAAA,UAAA,GAAA,GAAA,KAAA,UAAA,GAAA,EAAA,KAAA,UAAA,GAAA,GAAA,MAEA,EAAA,cAAA,UAAA,QAAA,SAAA,EAAA,GAQA,IANA,IAKA,EALA,EAAA,KAAA,MAAA,KAAA,OACA,KAAA,UAAA,GAAA,EAAA,KAAA,UAAA,GAAA,EAAA,KAAA,UAAA,GAAA,EAAA,KAAA,UAAA,GAAA,GACA,EAAA,EAAA,WAAA,EAAA,cAAA,MAAA,KAAA,cAAA,KAAA,IAAA,KACA,EAAA,KAAA,UAAA,GAAA,EACA,EAAA,KAAA,UAAA,GAAA,EAEA,EAAA,EAAA,EAAA,IAAA,EAEA,KAAA,WAAA,KAAA,IAAA,EAAA,SACA,EAAA,cAAA,MAAA,KAAA,UAAA,GAAA,EAAA,EAAA,KAAA,SACA,EAAA,cAAA,MAAA,KAAA,UAAA,GAAA,EAAA,EAAA,KAAA,WACA,EAAA,EACA,EAAA,EAAA,KAAA,MAAA,KAAA,MAAA,EACA,EAAA,EAAA,KAAA,MAAA,EAAA,KAAA,MAEA,KAAA,WAAA,KAAA,IAAA,EAAA,SACA,EAAA,cAAA,MAAA,KAAA,UAAA,GAAA,EAAA,KAAA,UAAA,GAAA,EAAA,KAAA,SACA,EAAA,cAAA,MAAA,KAAA,UAAA,GAAA,EAAA,KAAA,UAAA,GAAA,EAAA,KAAA,YAEA,EAAA,MAAA,SAAA,GAEA,IAEA,MAAA,IAAA,MAAA,GAEA,MAAA,GAEA,MAAA,EAAA,WAKA,EAAA,GAAA,GACA,EAAA,GAAA,cAAA,SAAA,EAAA,GAGA,OADA,IAAA,EAAA,GACA,EAAA,QAAA,KAAA,IAAA,EAAA,IAEA,EAAA,GAAA,eAAA,SAAA,EAAA,GAEA,IAAA,EAAA,GAEA,IADA,IAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,OAAA,IAEA,GAAA,EAAA,QAAA,KAAA,EAAA,IAEA,OAAA,GAAA,EAAA,IAEA,EAAA,GAAA,aAAA,SAAA,EAAA,GAEA,OAAA,EAAA,GAAA,cAAA,CAAA,GAAA,IAEA,EAAA,GAAA,cAAA,SAAA,EAAA,GAEA,IAAA,EAAA,GACA,IAAA,EAAA,EAAA,QAAA,UAAA,GAKA,OAJA,EAAA,MAAA,EACA,EAAA,QAAA,EACA,EAAA,OAAA,EACA,EAAA,KAAA,EACA,GAIA,EAAA,GAAA,MAAA,SAAA,EAAA,GAEA,KAAA,aAAA,OAAA,MAAA,GACA,IAAA,EAAA,EAAA,aAAA,MACA,EAAA,EAAA,GAAA,MAAA,GACA,GAAA,iBAAA,GAAA,OAAA,EAGA,OADA,EAAA,MAAA,qCACA,EAEA,GAAA,IAAA,EAAA,QAAA,GAAA,EAAA,QAAA,IAAA,EAAA,GAAA,QAAA,EAAA,EAAA,OAAA,EACA,IAAA,EAAA,CAAA,IAIA,IAHA,IACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EADA,EAAA,EAAA,OAEA,EAAA,GACA,EAAA,EAAA,EAAA,EAAA,IAIA,GAAA,KADA,GADA,EAAA,EAAA,IACA,QAEA,GAAA,EAAA,EAEA,EAAA,EACA,EAAA,KAAA,OAHA,CAWA,IALA,EAAA,EACA,EAAA,EAAA,EAEA,EAAA,EAAA,GACA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,KAEA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,EAAA,IACA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,EAAA,IAAA,IAEA,EAAA,GAAA,EAAA,GACA,EAAA,EAAA,GACA,KAEA,EAAA,EAAA,EAAA,IACA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,EAAA,IACA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,EAAA,IAAA,GACA,IACA,EAAA,GACA,EAAA,OAAA,EAAA,EAAA,GACA,EAAA,QAAA,EAAA,KAAA,GAOA,OALA,GAAA,EAAA,OAAA,EAAA,EAAA,GACA,GAAA,IAAA,EAAA,OACA,GAAA,IAAA,EAAA,SAAA,EAAA,CACA,KAFA,EAAA,GAIA,GAKA,EAAA,GAAA,MAAA,SAAA,GAEA,KAAA,aAAA,OAAA,MAAA,GACA,GAAA,IAAA,EAAA,OAAA,MAAA,GACA,GAAA,GAAA,EAAA,QAAA,IAAA,EAAA,GAAA,OAAA,MAAA,CAAA,IACA,IAAA,EAAA,EAAA,aAAA,MACA,IAAA,EAAA,CAAA,IACA,IACA,EAAA,EAAA,EAAA,EADA,EAAA,EAAA,OAEA,EAAA,IAAA,MAAA,GACA,IAAA,EAAA,EAAA,EAAA,EAAA,IACA,CAGA,IAFA,EAAA,EAAA,GAAA,OACA,EAAA,IAAA,MAAA,GACA,EAAA,EAAA,EAAA,EAAA,IAEA,EAAA,GAAA,CACA,EAAA,EAAA,GAAA,GAAA,EACA,EAAA,EAAA,GAAA,GAAA,GAGA,EAAA,GAAA,EAGA,OADA,IAAA,EAAA,EAAA,IACA,GAKA,EAAA,GAAA,QAAA,SAAA,EAAA,GAEA,KAAA,aAAA,OAAA,MAAA,GACA,GAAA,iBAAA,GAAA,OAAA,EAGA,OADA,EAAA,MAAA,2CACA,EAAA,GAAA,MAAA,GAEA,GAAA,IAAA,EAAA,QAAA,GAAA,EAAA,QAAA,IAAA,EAAA,GAAA,QAAA,EAAA,EAEA,OAAA,EAAA,GAAA,MAAA,GAGA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAFA,EAAA,aAAA,QAAA,EAAA,CAAA,IAGA,IAAA,EAAA,EAAA,OACA,EAAA,EAAA,EACA,EAAA,GACA,IAAA,EAAA,EAAA,EAAA,EAAA,IAIA,GAAA,IADA,GADA,EAAA,EAAA,IACA,QACA,CACA,IAAA,EAAA,EAAA,EAAA,IAAA,IACA,CAiBA,IAhBA,EAAA,GAIA,GAHA,EAAA,EAAA,QAGA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAEA,EAAA,EACA,EAAA,KACA,CACA,EAAA,EAAA,GAAA,EACA,EAAA,EAAA,GAAA,IAEA,EAAA,EAAA,QAEA,EAAA,EACA,EAAA,GACA,EAAA,EAAA,EAAA,EAAA,EAAA,IAEA,EAAA,EAAA,GACA,EAAA,EAAA,EAAA,GACA,EAAA,EAAA,EAAA,GACA,EAAA,EAAA,EACA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EACA,IAAA,GAAA,IAAA,KAEA,IAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,IACA,GAEA,EAAA,EAAA,EACA,EAAA,EAAA,GAEA,EAAA,IAEA,GAAA,EAAA,EACA,GAAA,EAAA,KAGA,EAAA,EAAA,EAAA,GAEA,GADA,EAAA,EAAA,EAAA,GACA,GACA,IAEA,EAAA,EAAA,GAAA,EACA,KASA,IALA,EAAA,KACA,CACA,EAAA,EAAA,GAAA,EACA,EAAA,EAAA,GAAA,IAEA,EAAA,EAAA,EAAA,EAAA,EAAA,IACA,EAAA,IAAA,EAAA,KACA,CACA,EAAA,EAAA,GAAA,EACA,EAAA,EAAA,GAAA,IAUA,GARA,EAAA,KACA,CACA,EAAA,EAAA,EAAA,GAAA,EACA,EAAA,EAAA,EAAA,GAAA,IAGA,GAAA,EAAA,OAEA,EAAA,OAAA,MAEA,EAAA,EAIA,GAFA,EAAA,EAAA,QAEA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAEA,EAAA,MAEA,EAAA,OAAA,GACA,EAAA,KAAA,GAMA,OAJA,EAAA,aAAA,QAAA,EAAA,EAAA,SACA,IAAA,IAAA,EAAA,CACA,KAEA,GAEA,EAAA,GAAA,gBAAA,SAAA,EAAA,EAAA,GAEA,QAAA,IAAA,EAAA,OAAA,EACA,IAEA,EAAA,EAFA,EAAA,KAAA,KACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EAAA,OACA,GAAA,EAAA,EAAA,OAAA,EAMA,IALA,IAEA,EAAA,GAAA,EAAA,GACA,OAEA,GAGA,GADA,EAAA,EAAA,IACA,EACA,EAAA,EAAA,EAIA,GAAA,GAAA,GAFA,GADA,EAAA,EAAA,EAAA,IACA,KAEA,EAAA,IAAA,GADA,EAAA,EAAA,KACA,EAAA,IAGA,OADA,GAAA,EAAA,MACA,EAAA,GAEA,EAAA,GAAA,iBAAA,SAAA,EAAA,EAAA,GAEA,IAAA,EAAA,GAEA,IADA,IAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,OAAA,IAEA,GAAA,EAAA,GAAA,gBAAA,EAAA,GAAA,EAAA,GAEA,OAAA,GAEA,EAAA,GAAA,cAAA,SAAA,EAAA,GAEA,IAAA,EAAA,EAGA,IAFA,IAAA,EAAA,GACA,EAAA,EAAA,OACA,MAEA,EAAA,EAAA,IACA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,GAGA,EAAA,GAAA,eAAA,SAAA,EAAA,GAEA,IAAA,EAAA,EAAA,EAAA,KAAA,MAGA,IAFA,IAAA,EAAA,GACA,EAAA,EAAA,OACA,KAGA,IADA,EAAA,EAAA,GAAA,OACA,MAEA,EAAA,EAAA,GAAA,IACA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,GAIA,EAAA,GAAA,YAAA,SAAA,EAAA,GAEA,IAAA,EAAA,EAAA,EAAA,KAAA,MAGA,IAFA,IAAA,EAAA,GACA,EAAA,EAAA,OACA,MAEA,EAAA,EAAA,IACA,EAAA,EAAA,EAAA,EAAA,GACA,EAAA,EAAA,EAAA,EAAA,EAAA,IAGA,EAAA,GAAA,aAAA,SAAA,EAAA,GAEA,IAAA,EAAA,EAAA,EAAA,EAAA,KAAA,MAGA,IAFA,IAAA,EAAA,GACA,EAAA,EAAA,OACA,KAGA,IADA,EAAA,EAAA,GAAA,OACA,MAEA,EAAA,EAAA,GAAA,IACA,EAAA,EAAA,EAAA,EAAA,GACA,EAAA,EAAA,EAAA,EAAA,EAAA,IAIA,EAAA,WAAA,WAEA,MAAA,IAEA,EAAA,UAAA,WAEA,KAAA,MAAA,KACA,KAAA,MAAA,MAEA,EAAA,GAAA,6BAAA,SAAA,EAAA,GAEA,IAAA,EAAA,IAAA,EAAA,UACA,EAAA,MAAA,EAAA,UACA,IAGA,EAAA,EAAA,EAAA,EAAA,EAAA,EAHA,EAAA,EAAA,SACA,EAAA,EAAA,OAGA,IAFA,EAAA,MAAA,IAAA,MAAA,GAEA,EAAA,EAAA,EAAA,EAAA,IAKA,IAHA,EAAA,EAAA,GACA,EAAA,MAAA,GAAA,EAAA,UAEA,EAAA,EAAA,GAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,IAEA,EAAA,EAAA,GACA,EAAA,GAAA,6BAAA,EAAA,GAGA,EAAA,KAAA,IAEA,EAAA,GAAA,kBAAA,SAAA,GAEA,IAAA,EAAA,EAAA,EAAA,EACA,EAAA,IAAA,EAAA,MACA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IAGA,IADA,EAAA,KAAA,EAAA,GAAA,OACA,EAAA,EAAA,EAAA,EAAA,GAAA,MAAA,OAAA,EAAA,EAAA,IAEA,EAAA,KAAA,EAAA,GAAA,MAAA,IAGA,OAAA,GAEA,EAAA,GAAA,qBAAA,SAAA,GAEA,IACA,EAAA,EAAA,EAAA,EADA,EAAA,IAAA,EAAA,WAEA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,IAEA,EAAA,EAAA,GACA,EAAA,GAAA,6BAAA,EAAA,GAEA,OAAA,GAIA,OAAA,QAAA;;AClrNoB,aA1IpB,SAASA,EAAMC,EAAKC,GAEhB,YADkB,IAAdA,IAAwBA,EAAY,KAChCC,WAAWC,OAAOH,GAAKI,YAAYH,IAO/C,SAASI,EAAYL,GAEjB,IAAIM,EAASN,EAAIO,WAAWC,MAAM,QAC9BC,GAAOH,EAAO,GAAGE,MAAM,KAAK,IAAM,IAAIE,SAAWJ,EAAO,IAAM,GAClE,OAAOG,EAAM,EAAIA,EAAM,EAQ3B,SAASE,EAAYX,GACjB,IAAqC,IAAjCA,EAAIO,WAAWK,QAAQ,KACvB,OAAOT,OAAOH,EAAIO,WAAWM,QAAQ,IAAK,KAE9C,IAAIC,EAAOT,EAAYL,GACvB,OAAOc,EAAO,EAAIf,EAAMI,OAAOH,GAAOe,KAAKC,IAAI,GAAIF,IAASX,OAAOH,GAOvE,SAASiB,EAAcjB,GACfkB,IACIlB,EAAMG,OAAOgB,kBAAoBnB,EAAMG,OAAOiB,mBAC9CC,QAAQC,KAAKtB,EAAM,iFAS/B,SAASuB,EAAgBC,GACrB,OAAO,WAEH,IADA,IAAIC,EAAO,GACFC,EAAK,EAAGA,EAAKC,UAAUjB,OAAQgB,IACpCD,EAAKC,GAAMC,UAAUD,GAEzB,IAAIE,EAAQH,EAAK,GACjB,OAD8BA,EAAKI,MAAM,GAC3BC,OAAO,SAAUC,EAAMC,GAAQ,OAAOR,EAAUO,EAAMC,IAAUJ,IAsFlE,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAAA,QAAA,YAAA,EAAA,QAAA,YAAA,EAAA,QAAA,uBAAA,EAAA,QAAA,YAAA,EAAA,QAAA,KAAA,QAAA,WAAA,EAAA,QAAA,MAAA,EAAA,QAAA,MAAA,EAAA,QAAA,WAAA,EA9EpB,IAAIK,EAAKC,QAAAD,MAAGV,EAAgB,SAAUY,EAAMC,GACxC,IAAIC,EAAc1B,EAAYwB,GAC1BG,EAAc3B,EAAYyB,GAC1BG,EAAUlC,EAAY8B,GAAQ9B,EAAY+B,GAC1CI,EAAYH,EAAcC,EAE9B,OADArB,EAAcuB,GACPA,EAAYzB,KAAKC,IAAI,GAAIuB,KAOhCE,EAAIP,QAAAO,KAAGlB,EAAgB,SAAUY,EAAMC,GAEvC,IAAIG,EAAUxB,KAAKC,IAAI,GAAID,KAAK2B,IAAIrC,EAAY8B,GAAO9B,EAAY+B,KAEnE,OAAQH,EAAME,EAAMI,GAAWN,EAAMG,EAAMG,IAAYA,IAOvDI,EAAKT,QAAAS,MAAGpB,EAAgB,SAAUY,EAAMC,GACxC,IAAIG,EAAUxB,KAAKC,IAAI,GAAID,KAAK2B,IAAIrC,EAAY8B,GAAO9B,EAAY+B,KACnE,OAAQH,EAAME,EAAMI,GAAWN,EAAMG,EAAMG,IAAYA,IAOvDK,EAAMV,QAAAU,OAAGrB,EAAgB,SAAUY,EAAMC,GACzC,IAAIC,EAAc1B,EAAYwB,GAC1BG,EAAc3B,EAAYyB,GAI9B,OAHAnB,EAAcoB,GACdpB,EAAcqB,GAEPL,EAAMI,EAAcC,EAAavC,EAAMgB,KAAKC,IAAI,GAAIX,EAAY+B,GAAQ/B,EAAY8B,QAQ/F,SAASU,EAAM7C,EAAK8C,GAChB,IAAIC,EAAOhC,KAAKC,IAAI,GAAI8B,GACpBE,EAASJ,EAAO7B,KAAK8B,MAAM9B,KAAKkC,IAAIhB,EAAMjC,EAAK+C,KAASA,GAI5D,OAHI/C,EAAM,GAAgB,IAAXgD,IACXA,EAASf,EAAMe,GAAS,IAErBA,EAEX,IAAI9B,GAAyB,EAM7B,SAASgC,EAAuBC,QACf,IAATA,IAAmBA,GAAO,GAC9BjC,EAAyBiC,EAE7B,IAAIC,EAAQ,CACRrD,MAAOA,EACP0C,KAAMA,EACNE,MAAOA,EACPV,MAAOA,EACPW,OAAQA,EACRC,MAAOA,EACPxC,YAAaA,EACbM,YAAaA,EACbuC,uBAAwBA,GAC1BG,EAAAnB,QAAAoB,QAGaF;;;ACtJf,IAOIG,EACAC,EARAC,EAAUC,OAAOxB,QAAU,GAU/B,SAASyB,IACL,MAAM,IAAIC,MAAM,mCAEpB,SAASC,IACL,MAAM,IAAID,MAAM,qCAsBpB,SAASE,EAAWC,GAChB,GAAIR,IAAqBS,WAErB,OAAOA,WAAWD,EAAK,GAG3B,IAAKR,IAAqBI,IAAqBJ,IAAqBS,WAEhE,OADAT,EAAmBS,WACZA,WAAWD,EAAK,GAE3B,IAEI,OAAOR,EAAiBQ,EAAK,GAC/B,MAAME,GACJ,IAEI,OAAOV,EAAiBW,KAAK,KAAMH,EAAK,GAC1C,MAAME,GAEJ,OAAOV,EAAiBW,KAAK,KAAMH,EAAK,KAMpD,SAASI,EAAgBC,GACrB,GAAIZ,IAAuBa,aAEvB,OAAOA,aAAaD,GAGxB,IAAKZ,IAAuBK,IAAwBL,IAAuBa,aAEvE,OADAb,EAAqBa,aACdA,aAAaD,GAExB,IAEI,OAAOZ,EAAmBY,GAC5B,MAAOH,GACL,IAEI,OAAOT,EAAmBU,KAAK,KAAME,GACvC,MAAOH,GAGL,OAAOT,EAAmBU,KAAK,KAAME,MAjEhD,WACG,IAEQb,EADsB,mBAAfS,WACYA,WAEAL,EAEzB,MAAOM,GACLV,EAAmBI,EAEvB,IAEQH,EADwB,mBAAjBa,aACcA,aAEAR,EAE3B,MAAOI,GACLT,EAAqBK,GAjB5B,GAwED,IAEIS,EAFAC,EAAQ,GACRC,GAAW,EAEXC,GAAc,EAElB,SAASC,IACAF,GAAaF,IAGlBE,GAAW,EACPF,EAAa5D,OACb6D,EAAQD,EAAaK,OAAOJ,GAE5BE,GAAc,EAEdF,EAAM7D,QACNkE,KAIR,SAASA,IACL,IAAIJ,EAAJ,CAGA,IAAIK,EAAUf,EAAWY,GACzBF,GAAW,EAGX,IADA,IAAI/D,EAAM8D,EAAM7D,OACVD,GAAK,CAGP,IAFA6D,EAAeC,EACfA,EAAQ,KACCE,EAAahE,GACd6D,GACAA,EAAaG,GAAYK,MAGjCL,GAAc,EACdhE,EAAM8D,EAAM7D,OAEhB4D,EAAe,KACfE,GAAW,EACXL,EAAgBU,IAiBpB,SAASE,EAAKhB,EAAKiB,GACf,KAAKjB,IAAMA,EACX,KAAKiB,MAAQA,EAYjB,SAASC,KA5BTxB,EAAQyB,SAAW,SAAUnB,GACzB,IAAIoB,EAAO,IAAIC,MAAMzD,UAAUjB,OAAS,GACxC,GAAIiB,UAAUjB,OAAS,EACnB,IAAK,IAAI2E,EAAI,EAAGA,EAAI1D,UAAUjB,OAAQ2E,IAClCF,EAAKE,EAAI,GAAK1D,UAAU0D,GAGhCd,EAAMe,KAAK,IAAIP,EAAKhB,EAAKoB,IACJ,IAAjBZ,EAAM7D,QAAiB8D,GACvBV,EAAWc,IASnBG,EAAKQ,UAAUT,IAAM,WACjB,KAAKf,IAAIyB,MAAM,KAAM,KAAKR,QAE9BvB,EAAQgC,MAAQ,UAEhBhC,EAAQiC,IAAM,GACdjC,EAAQkC,KAAO,GACflC,EAAQmC,QAAU,GAClBnC,EAAQoC,SAAW,GAInBpC,EAAQqC,GAAKb,EACbxB,EAAQsC,YAAcd,EACtBxB,EAAQuC,KAAOf,EACfxB,EAAQwC,IAAMhB,EACdxB,EAAQyC,eAAiBjB,EACzBxB,EAAQ0C,mBAAqBlB,EAC7BxB,EAAQ2C,KAAOnB,EACfxB,EAAQ4C,gBAAkBpB,EAC1BxB,EAAQ6C,oBAAsBrB,EAE9BxB,EAAQ8C,UAAY,SAAUC,GAAQ,MAAO,IAE7C/C,EAAQgD,QAAU,SAAUD,GACxB,MAAM,IAAI5C,MAAM,qCAGpBH,EAAQiD,IAAM,WAAc,MAAO,KACnCjD,EAAQkD,MAAQ,SAAUC,GACtB,MAAM,IAAIhD,MAAM,mCAEpBH,EAAQoD,MAAQ,WAAa,OAAO;;;ACuHpC,IAAA,EAAA,QAAA,WAlRA,SAAA,EAAA,EAAA,GAGA,IADA,IAAA,EAAA,EACA,EAAA,EAAA,OAAA,EAAA,GAAA,EAAA,IAAA,CACA,IAAA,EAAA,EAAA,GACA,MAAA,EACA,EAAA,OAAA,EAAA,GACA,OAAA,GACA,EAAA,OAAA,EAAA,GACA,KACA,IACA,EAAA,OAAA,EAAA,GACA,KAKA,GAAA,EACA,KAAA,IAAA,EACA,EAAA,QAAA,MAIA,OAAA,EAmJA,SAAA,EAAA,GACA,iBAAA,IAAA,GAAA,IAEA,IAGA,EAHA,EAAA,EACA,GAAA,EACA,GAAA,EAGA,IAAA,EAAA,EAAA,OAAA,EAAA,GAAA,IAAA,EACA,GAAA,KAAA,EAAA,WAAA,IAGA,IAAA,EAAA,CACA,EAAA,EAAA,EACA,YAEA,IAAA,IAGA,GAAA,EACA,EAAA,EAAA,GAIA,OAAA,IAAA,EAAA,GACA,EAAA,MAAA,EAAA,GA8DA,SAAA,EAAA,EAAA,GACA,GAAA,EAAA,OAAA,OAAA,EAAA,OAAA,GAEA,IADA,IAAA,EAAA,GACA,EAAA,EAAA,EAAA,EAAA,OAAA,IACA,EAAA,EAAA,GAAA,EAAA,IAAA,EAAA,KAAA,EAAA,IAEA,OAAA,EA3OA,QAAA,QAAA,WAIA,IAHA,IAAA,EAAA,GACA,GAAA,EAEA,EAAA,UAAA,OAAA,EAAA,IAAA,IAAA,EAAA,IAAA,CACA,IAAA,EAAA,GAAA,EAAA,UAAA,GAAA,EAAA,MAGA,GAAA,iBAAA,EACA,MAAA,IAAA,UAAA,6CACA,IAIA,EAAA,EAAA,IAAA,EACA,EAAA,MAAA,EAAA,OAAA,IAWA,OAAA,EAAA,IAAA,KAJA,EAAA,EAAA,EAAA,EAAA,MAAA,KAAA,SAAA,GACA,QAAA,KACA,GAAA,KAAA,OAEA,KAKA,QAAA,UAAA,SAAA,GACA,IAAA,EAAA,QAAA,WAAA,GACA,EAAA,MAAA,EAAA,GAAA,GAcA,OAXA,EAAA,EAAA,EAAA,EAAA,MAAA,KAAA,SAAA,GACA,QAAA,KACA,GAAA,KAAA,OAEA,IACA,EAAA,KAEA,GAAA,IACA,GAAA,MAGA,EAAA,IAAA,IAAA,GAIA,QAAA,WAAA,SAAA,GACA,MAAA,MAAA,EAAA,OAAA,IAIA,QAAA,KAAA,WACA,IAAA,EAAA,MAAA,UAAA,MAAA,KAAA,UAAA,GACA,OAAA,QAAA,UAAA,EAAA,EAAA,SAAA,EAAA,GACA,GAAA,iBAAA,EACA,MAAA,IAAA,UAAA,0CAEA,OAAA,IACA,KAAA,OAMA,QAAA,SAAA,SAAA,EAAA,GAIA,SAAA,EAAA,GAEA,IADA,IAAA,EAAA,EACA,EAAA,EAAA,QACA,KAAA,EAAA,GADA,KAKA,IADA,IAAA,EAAA,EAAA,OAAA,EACA,GAAA,GACA,KAAA,EAAA,GADA,KAIA,OAAA,EAAA,EAAA,GACA,EAAA,MAAA,EAAA,EAAA,EAAA,GAfA,EAAA,QAAA,QAAA,GAAA,OAAA,GACA,EAAA,QAAA,QAAA,GAAA,OAAA,GAsBA,IALA,IAAA,EAAA,EAAA,EAAA,MAAA,MACA,EAAA,EAAA,EAAA,MAAA,MAEA,EAAA,KAAA,IAAA,EAAA,OAAA,EAAA,QACA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,IACA,GAAA,EAAA,KAAA,EAAA,GAAA,CACA,EAAA,EACA,MAIA,IAAA,EAAA,GACA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IACA,EAAA,KAAA,MAKA,OAFA,EAAA,EAAA,OAAA,EAAA,MAAA,KAEA,KAAA,MAGA,QAAA,IAAA,IACA,QAAA,UAAA,IAEA,QAAA,QAAA,SAAA,GAEA,GADA,iBAAA,IAAA,GAAA,IACA,IAAA,EAAA,OAAA,MAAA,IAKA,IAJA,IAAA,EAAA,EAAA,WAAA,GACA,EAAA,KAAA,EACA,GAAA,EACA,GAAA,EACA,EAAA,EAAA,OAAA,EAAA,GAAA,IAAA,EAEA,GAAA,MADA,EAAA,EAAA,WAAA,KAEA,IAAA,EAAA,CACA,EAAA,EACA,YAIA,GAAA,EAIA,OAAA,IAAA,EAAA,EAAA,IAAA,IACA,GAAA,IAAA,EAGA,IAEA,EAAA,MAAA,EAAA,IAiCA,QAAA,SAAA,SAAA,EAAA,GACA,IAAA,EAAA,EAAA,GAIA,OAHA,GAAA,EAAA,QAAA,EAAA,EAAA,UAAA,IACA,EAAA,EAAA,OAAA,EAAA,EAAA,OAAA,EAAA,SAEA,GAGA,QAAA,QAAA,SAAA,GACA,iBAAA,IAAA,GAAA,IAQA,IAPA,IAAA,GAAA,EACA,EAAA,EACA,GAAA,EACA,GAAA,EAGA,EAAA,EACA,EAAA,EAAA,OAAA,EAAA,GAAA,IAAA,EAAA,CACA,IAAA,EAAA,EAAA,WAAA,GACA,GAAA,KAAA,GASA,IAAA,IAGA,GAAA,EACA,EAAA,EAAA,GAEA,KAAA,GAEA,IAAA,EACA,EAAA,EACA,IAAA,IACA,EAAA,IACA,IAAA,IAGA,GAAA,QArBA,IAAA,EAAA,CACA,EAAA,EAAA,EACA,OAuBA,OAAA,IAAA,IAAA,IAAA,GAEA,IAAA,GAEA,IAAA,GAAA,IAAA,EAAA,GAAA,IAAA,EAAA,EACA,GAEA,EAAA,MAAA,EAAA,IAaA,IAAA,EAAA,MAAA,KAAA,QAAA,GACA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,EAAA,IACA,SAAA,EAAA,EAAA,GAEA,OADA,EAAA,IAAA,EAAA,EAAA,OAAA,GACA,EAAA,OAAA,EAAA;;;;AC3SA,aAEA,QAAA,WAAA,EACA,QAAA,YAAA,EACA,QAAA,cAAA,EAOA,IALA,IAAA,EAAA,GACA,EAAA,GACA,EAAA,oBAAA,WAAA,WAAA,MAEA,EAAA,mEACA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,IAAA,EACA,EAAA,GAAA,EAAA,GACA,EAAA,EAAA,WAAA,IAAA,EAQA,SAAA,EAAA,GACA,IAAA,EAAA,EAAA,OAEA,GAAA,EAAA,EAAA,EACA,MAAA,IAAA,MAAA,kDAKA,IAAA,EAAA,EAAA,QAAA,KAOA,OANA,IAAA,IAAA,EAAA,GAMA,CAAA,EAJA,IAAA,EACA,EACA,EAAA,EAAA,GAMA,SAAA,EAAA,GACA,IAAA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,OAAA,GAAA,EAAA,GAAA,EAAA,EAGA,SAAA,EAAA,EAAA,EAAA,GACA,OAAA,GAAA,EAAA,GAAA,EAAA,EAGA,SAAA,EAAA,GACA,IAAA,EAcA,EAbA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,EAAA,EAAA,GAEA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IAEA,EAAA,EAGA,EAAA,EAAA,EACA,EAAA,EACA,EAGA,IAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EACA,EACA,EAAA,EAAA,WAAA,KAAA,GACA,EAAA,EAAA,WAAA,EAAA,KAAA,GACA,EAAA,EAAA,WAAA,EAAA,KAAA,EACA,EAAA,EAAA,WAAA,EAAA,IACA,EAAA,KAAA,GAAA,GAAA,IACA,EAAA,KAAA,GAAA,EAAA,IACA,EAAA,KAAA,IAAA,EAmBA,OAhBA,IAAA,IACA,EACA,EAAA,EAAA,WAAA,KAAA,EACA,EAAA,EAAA,WAAA,EAAA,KAAA,EACA,EAAA,KAAA,IAAA,GAGA,IAAA,IACA,EACA,EAAA,EAAA,WAAA,KAAA,GACA,EAAA,EAAA,WAAA,EAAA,KAAA,EACA,EAAA,EAAA,WAAA,EAAA,KAAA,EACA,EAAA,KAAA,GAAA,EAAA,IACA,EAAA,KAAA,IAAA,GAGA,EAGA,SAAA,EAAA,GACA,OAAA,EAAA,GAAA,GAAA,IACA,EAAA,GAAA,GAAA,IACA,EAAA,GAAA,EAAA,IACA,EAAA,GAAA,GAGA,SAAA,EAAA,EAAA,EAAA,GAGA,IAFA,IAAA,EACA,EAAA,GACA,EAAA,EAAA,EAAA,EAAA,GAAA,EACA,GACA,EAAA,IAAA,GAAA,WACA,EAAA,EAAA,IAAA,EAAA,QACA,IAAA,EAAA,EAAA,IACA,EAAA,KAAA,EAAA,IAEA,OAAA,EAAA,KAAA,IAGA,SAAA,EAAA,GAQA,IAPA,IAAA,EACA,EAAA,EAAA,OACA,EAAA,EAAA,EACA,EAAA,GAIA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAHA,MAIA,EAAA,KAAA,EAAA,EAAA,EAAA,EAJA,MAIA,EAAA,EAAA,EAJA,QAyBA,OAjBA,IAAA,GACA,EAAA,EAAA,EAAA,GACA,EAAA,KACA,EAAA,GAAA,GACA,EAAA,GAAA,EAAA,IACA,OAEA,IAAA,IACA,GAAA,EAAA,EAAA,IAAA,GAAA,EAAA,EAAA,GACA,EAAA,KACA,EAAA,GAAA,IACA,EAAA,GAAA,EAAA,IACA,EAAA,GAAA,EAAA,IACA,MAIA,EAAA,KAAA,IAlIA,EAAA,IAAA,WAAA,IAAA,GACA,EAAA,IAAA,WAAA,IAAA;;AClBA,QAAA,KAAA,SAAA,EAAA,EAAA,EAAA,EAAA,GACA,IAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EACA,GAAA,GAAA,GAAA,EACA,EAAA,GAAA,EACA,GAAA,EACA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,GAAA,EAAA,EACA,EAAA,EAAA,EAAA,GAOA,IALA,GAAA,EAEA,EAAA,GAAA,IAAA,GAAA,EACA,KAAA,EACA,GAAA,EACA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAKA,IAHA,EAAA,GAAA,IAAA,GAAA,EACA,KAAA,EACA,GAAA,EACA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAEA,GAAA,IAAA,EACA,EAAA,EAAA,MACA,CAAA,GAAA,IAAA,EACA,OAAA,EAAA,IAAA,EAAA,GAAA,GAAA,EAAA,GAEA,GAAA,KAAA,IAAA,EAAA,GACA,GAAA,EAEA,OAAA,GAAA,EAAA,GAAA,EAAA,KAAA,IAAA,EAAA,EAAA,IAGA,QAAA,MAAA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EACA,GAAA,GAAA,GAAA,EACA,EAAA,GAAA,EACA,EAAA,KAAA,EAAA,KAAA,IAAA,GAAA,IAAA,KAAA,IAAA,GAAA,IAAA,EACA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,GAAA,EACA,EAAA,EAAA,GAAA,IAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAmCA,IAjCA,EAAA,KAAA,IAAA,GAEA,MAAA,IAAA,IAAA,EAAA,GACA,EAAA,MAAA,GAAA,EAAA,EACA,EAAA,IAEA,EAAA,KAAA,MAAA,KAAA,IAAA,GAAA,KAAA,KACA,GAAA,EAAA,KAAA,IAAA,GAAA,IAAA,IACA,IACA,GAAA,IAGA,GADA,EAAA,GAAA,EACA,EAAA,EAEA,EAAA,KAAA,IAAA,EAAA,EAAA,IAEA,GAAA,IACA,IACA,GAAA,GAGA,EAAA,GAAA,GACA,EAAA,EACA,EAAA,GACA,EAAA,GAAA,GACA,GAAA,EAAA,EAAA,GAAA,KAAA,IAAA,EAAA,GACA,GAAA,IAEA,EAAA,EAAA,KAAA,IAAA,EAAA,EAAA,GAAA,KAAA,IAAA,EAAA,GACA,EAAA,IAIA,GAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,GAAA,EAAA,GAAA,IAAA,GAAA,GAIA,IAFA,EAAA,GAAA,EAAA,EACA,GAAA,EACA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,GAAA,EAAA,GAAA,IAAA,GAAA,GAEA,EAAA,EAAA,EAAA,IAAA,IAAA;;ACnFA,IAAA,EAAA,GAAA,SAEA,OAAA,QAAA,MAAA,SAAA,SAAA,GACA,MAAA,kBAAA,EAAA,KAAA;;;;AC0vDA,IAAA,EAAA,UAAA,GAnvDA,EAAA,QAAA,aACA,EAAA,QAAA,WACA,EAAA,QAAA,WAuCA,SAAA,IACA,IACA,IAAA,EAAA,IAAA,WAAA,GAEA,OADA,EAAA,UAAA,CAAA,UAAA,WAAA,UAAA,IAAA,WAAA,OAAA,KACA,KAAA,EAAA,OACA,mBAAA,EAAA,UACA,IAAA,EAAA,SAAA,EAAA,GAAA,WACA,MAAA,GACA,OAAA,GAIA,SAAA,IACA,OAAA,EAAA,oBACA,WACA,WAGA,SAAA,EAAA,EAAA,GACA,GAAA,IAAA,EACA,MAAA,IAAA,WAAA,8BAcA,OAZA,EAAA,qBAEA,EAAA,IAAA,WAAA,IACA,UAAA,EAAA,WAGA,OAAA,IACA,EAAA,IAAA,EAAA,IAEA,EAAA,OAAA,GAGA,EAaA,SAAA,EAAA,EAAA,EAAA,GACA,KAAA,EAAA,qBAAA,gBAAA,GACA,OAAA,IAAA,EAAA,EAAA,EAAA,GAIA,GAAA,iBAAA,EAAA,CACA,GAAA,iBAAA,EACA,MAAA,IAAA,MACA,qEAGA,OAAA,EAAA,KAAA,GAEA,OAAA,EAAA,KAAA,EAAA,EAAA,GAWA,SAAA,EAAA,EAAA,EAAA,EAAA,GACA,GAAA,iBAAA,EACA,MAAA,IAAA,UAAA,yCAGA,MAAA,oBAAA,aAAA,aAAA,YACA,EAAA,EAAA,EAAA,EAAA,GAGA,iBAAA,EACA,EAAA,EAAA,EAAA,GAGA,EAAA,EAAA,GA4BA,SAAA,EAAA,GACA,GAAA,iBAAA,EACA,MAAA,IAAA,UAAA,oCACA,GAAA,EAAA,EACA,MAAA,IAAA,WAAA,wCAIA,SAAA,EAAA,EAAA,EAAA,EAAA,GAEA,OADA,EAAA,GACA,GAAA,EACA,EAAA,EAAA,QAEA,IAAA,EAIA,iBAAA,EACA,EAAA,EAAA,GAAA,KAAA,EAAA,GACA,EAAA,EAAA,GAAA,KAAA,GAEA,EAAA,EAAA,GAWA,SAAA,EAAA,EAAA,GAGA,GAFA,EAAA,GACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KACA,EAAA,oBACA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EACA,EAAA,GAAA,EAGA,OAAA,EAgBA,SAAA,EAAA,EAAA,EAAA,GAKA,GAJA,iBAAA,GAAA,KAAA,IACA,EAAA,SAGA,EAAA,WAAA,GACA,MAAA,IAAA,UAAA,8CAGA,IAAA,EAAA,EAAA,EAAA,EAAA,GAGA,GAFA,EAAA,EAAA,EAAA,IAEA,MAAA,EAAA,GASA,OAPA,IAAA,IAIA,EAAA,EAAA,MAAA,EAAA,IAGA,EAGA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,OAAA,EAAA,EAAA,EAAA,EAAA,EAAA,QACA,EAAA,EAAA,EAAA,GACA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EACA,EAAA,GAAA,IAAA,EAAA,GAEA,OAAA,EAGA,SAAA,EAAA,EAAA,EAAA,EAAA,GAGA,GAFA,EAAA,WAEA,EAAA,GAAA,EAAA,WAAA,EACA,MAAA,IAAA,WAAA,6BAGA,GAAA,EAAA,WAAA,GAAA,GAAA,GACA,MAAA,IAAA,WAAA,6BAmBA,OAfA,OADA,IAAA,QAAA,IAAA,EACA,IAAA,WAAA,QACA,IAAA,EACA,IAAA,WAAA,EAAA,GAEA,IAAA,WAAA,EAAA,EAAA,GAGA,EAAA,qBAEA,EAAA,GACA,UAAA,EAAA,UAGA,EAAA,EAAA,EAAA,GAEA,EAGA,SAAA,EAAA,EAAA,GACA,GAAA,EAAA,SAAA,GAAA,CACA,IAAA,EAAA,EAAA,EAAA,EAAA,QAGA,OAAA,KAFA,EAAA,EAAA,EAAA,IAEA,OACA,GAGA,EAAA,KAAA,EAAA,EAAA,EAAA,GACA,GAGA,GAAA,EAAA,CACA,GAAA,oBAAA,aACA,EAAA,kBAAA,aAAA,WAAA,EACA,MAAA,iBAAA,EAAA,QAAA,EAAA,EAAA,QACA,EAAA,EAAA,GAEA,EAAA,EAAA,GAGA,GAAA,WAAA,EAAA,MAAA,EAAA,EAAA,MACA,OAAA,EAAA,EAAA,EAAA,MAIA,MAAA,IAAA,UAAA,sFAGA,SAAA,EAAA,GAGA,GAAA,GAAA,IACA,MAAA,IAAA,WAAA,0DACA,IAAA,SAAA,IAAA,UAEA,OAAA,EAAA,EAGA,SAAA,EAAA,GAIA,OAHA,GAAA,IACA,EAAA,GAEA,EAAA,OAAA,GA+EA,SAAA,EAAA,EAAA,GACA,GAAA,EAAA,SAAA,GACA,OAAA,EAAA,OAEA,GAAA,oBAAA,aAAA,mBAAA,YAAA,SACA,YAAA,OAAA,IAAA,aAAA,aACA,OAAA,EAAA,WAEA,iBAAA,IACA,EAAA,GAAA,GAGA,IAAA,EAAA,EAAA,OACA,GAAA,IAAA,EAAA,OAAA,EAIA,IADA,IAAA,GAAA,IAEA,OAAA,GACA,IAAA,QACA,IAAA,SACA,IAAA,SACA,OAAA,EACA,IAAA,OACA,IAAA,QACA,UAAA,EACA,OAAA,EAAA,GAAA,OACA,IAAA,OACA,IAAA,QACA,IAAA,UACA,IAAA,WACA,OAAA,EAAA,EACA,IAAA,MACA,OAAA,IAAA,EACA,IAAA,SACA,OAAA,EAAA,GAAA,OACA,QACA,GAAA,EAAA,OAAA,EAAA,GAAA,OACA,GAAA,GAAA,GAAA,cACA,GAAA,GAMA,SAAA,EAAA,EAAA,EAAA,GACA,IAAA,GAAA,EAcA,SALA,IAAA,GAAA,EAAA,KACA,EAAA,GAIA,EAAA,KAAA,OACA,MAAA,GAOA,SAJA,IAAA,GAAA,EAAA,KAAA,UACA,EAAA,KAAA,QAGA,GAAA,EACA,MAAA,GAOA,IAHA,KAAA,KACA,KAAA,GAGA,MAAA,GAKA,IAFA,IAAA,EAAA,UAGA,OAAA,GACA,IAAA,MACA,OAAA,EAAA,KAAA,EAAA,GAEA,IAAA,OACA,IAAA,QACA,OAAA,EAAA,KAAA,EAAA,GAEA,IAAA,QACA,OAAA,EAAA,KAAA,EAAA,GAEA,IAAA,SACA,IAAA,SACA,OAAA,EAAA,KAAA,EAAA,GAEA,IAAA,SACA,OAAA,EAAA,KAAA,EAAA,GAEA,IAAA,OACA,IAAA,QACA,IAAA,UACA,IAAA,WACA,OAAA,EAAA,KAAA,EAAA,GAEA,QACA,GAAA,EAAA,MAAA,IAAA,UAAA,qBAAA,GACA,GAAA,EAAA,IAAA,cACA,GAAA,GASA,SAAA,EAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,GACA,EAAA,GAAA,EAAA,GACA,EAAA,GAAA,EAmIA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAEA,GAAA,IAAA,EAAA,OAAA,OAAA,EAmBA,GAhBA,iBAAA,GACA,EAAA,EACA,EAAA,GACA,EAAA,WACA,EAAA,WACA,GAAA,aACA,GAAA,YAEA,GAAA,EACA,MAAA,KAEA,EAAA,EAAA,EAAA,EAAA,OAAA,GAIA,EAAA,IAAA,EAAA,EAAA,OAAA,GACA,GAAA,EAAA,OAAA,CACA,GAAA,EAAA,OAAA,EACA,EAAA,EAAA,OAAA,OACA,GAAA,EAAA,EAAA,CACA,IAAA,EACA,OAAA,EADA,EAAA,EAUA,GALA,iBAAA,IACA,EAAA,EAAA,KAAA,EAAA,IAIA,EAAA,SAAA,GAEA,OAAA,IAAA,EAAA,QACA,EAEA,EAAA,EAAA,EAAA,EAAA,EAAA,GACA,GAAA,iBAAA,EAEA,OADA,GAAA,IACA,EAAA,qBACA,mBAAA,WAAA,UAAA,QACA,EACA,WAAA,UAAA,QAAA,KAAA,EAAA,EAAA,GAEA,WAAA,UAAA,YAAA,KAAA,EAAA,EAAA,GAGA,EAAA,EAAA,CAAA,GAAA,EAAA,EAAA,GAGA,MAAA,IAAA,UAAA,wCAGA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACA,IA0BA,EA1BA,EAAA,EACA,EAAA,EAAA,OACA,EAAA,EAAA,OAEA,QAAA,IAAA,IAEA,UADA,EAAA,OAAA,GAAA,gBACA,UAAA,GACA,YAAA,GAAA,aAAA,GAAA,CACA,GAAA,EAAA,OAAA,GAAA,EAAA,OAAA,EACA,OAAA,EAEA,EAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EAIA,SAAA,EAAA,EAAA,GACA,OAAA,IAAA,EACA,EAAA,GAEA,EAAA,aAAA,EAAA,GAKA,GAAA,EAAA,CACA,IAAA,GAAA,EACA,IAAA,EAAA,EAAA,EAAA,EAAA,IACA,GAAA,EAAA,EAAA,KAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,IAEA,IADA,IAAA,IAAA,EAAA,GACA,EAAA,EAAA,IAAA,EAAA,OAAA,EAAA,OAEA,IAAA,IAAA,GAAA,EAAA,GACA,GAAA,OAKA,IADA,EAAA,EAAA,IAAA,EAAA,EAAA,GACA,EAAA,EAAA,GAAA,EAAA,IAAA,CAEA,IADA,IAAA,GAAA,EACA,EAAA,EAAA,EAAA,EAAA,IACA,GAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,GAAA,CACA,GAAA,EACA,MAGA,GAAA,EAAA,OAAA,EAIA,OAAA,EAeA,SAAA,EAAA,EAAA,EAAA,EAAA,GACA,EAAA,OAAA,IAAA,EACA,IAAA,EAAA,EAAA,OAAA,EACA,GAGA,EAAA,OAAA,IACA,IACA,EAAA,GAJA,EAAA,EASA,IAAA,EAAA,EAAA,OACA,GAAA,EAAA,GAAA,EAAA,MAAA,IAAA,UAAA,sBAEA,EAAA,EAAA,IACA,EAAA,EAAA,GAEA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EAAA,CACA,IAAA,EAAA,SAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IACA,GAAA,MAAA,GAAA,OAAA,EACA,EAAA,EAAA,GAAA,EAEA,OAAA,EAGA,SAAA,EAAA,EAAA,EAAA,EAAA,GACA,OAAA,EAAA,EAAA,EAAA,EAAA,OAAA,GAAA,EAAA,EAAA,GAGA,SAAA,EAAA,EAAA,EAAA,EAAA,GACA,OAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAGA,SAAA,EAAA,EAAA,EAAA,EAAA,GACA,OAAA,EAAA,EAAA,EAAA,EAAA,GAGA,SAAA,EAAA,EAAA,EAAA,EAAA,GACA,OAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAGA,SAAA,EAAA,EAAA,EAAA,EAAA,GACA,OAAA,EAAA,EAAA,EAAA,EAAA,OAAA,GAAA,EAAA,EAAA,GAkFA,SAAA,EAAA,EAAA,EAAA,GACA,OAAA,IAAA,GAAA,IAAA,EAAA,OACA,EAAA,cAAA,GAEA,EAAA,cAAA,EAAA,MAAA,EAAA,IAIA,SAAA,EAAA,EAAA,EAAA,GACA,EAAA,KAAA,IAAA,EAAA,OAAA,GAIA,IAHA,IAAA,EAAA,GAEA,EAAA,EACA,EAAA,GAAA,CACA,IAQA,EAAA,EAAA,EAAA,EARA,EAAA,EAAA,GACA,EAAA,KACA,EAAA,EAAA,IAAA,EACA,EAAA,IAAA,EACA,EAAA,IAAA,EACA,EAEA,GAAA,EAAA,GAAA,EAGA,OAAA,GACA,KAAA,EACA,EAAA,MACA,EAAA,GAEA,MACA,KAAA,EAEA,MAAA,KADA,EAAA,EAAA,EAAA,OAEA,GAAA,GAAA,IAAA,EAAA,GAAA,GACA,MACA,EAAA,GAGA,MACA,KAAA,EACA,EAAA,EAAA,EAAA,GACA,EAAA,EAAA,EAAA,GACA,MAAA,IAAA,IAAA,MAAA,IAAA,KACA,GAAA,GAAA,IAAA,IAAA,GAAA,IAAA,EAAA,GAAA,GACA,OAAA,EAAA,OAAA,EAAA,SACA,EAAA,GAGA,MACA,KAAA,EACA,EAAA,EAAA,EAAA,GACA,EAAA,EAAA,EAAA,GACA,EAAA,EAAA,EAAA,GACA,MAAA,IAAA,IAAA,MAAA,IAAA,IAAA,MAAA,IAAA,KACA,GAAA,GAAA,IAAA,IAAA,GAAA,IAAA,IAAA,GAAA,IAAA,EAAA,GAAA,GACA,OAAA,EAAA,UACA,EAAA,GAMA,OAAA,GAGA,EAAA,MACA,EAAA,GACA,EAAA,QAEA,GAAA,MACA,EAAA,KAAA,IAAA,GAAA,KAAA,OACA,EAAA,MAAA,KAAA,GAGA,EAAA,KAAA,GACA,GAAA,EAGA,OAAA,EAAA,GA98BA,QAAA,OAAA,EACA,QAAA,WAAA,EACA,QAAA,kBAAA,GA0BA,EAAA,yBAAA,IAAA,EAAA,oBACA,EAAA,oBACA,IAKA,QAAA,WAAA,IAkEA,EAAA,SAAA,KAGA,EAAA,SAAA,SAAA,GAEA,OADA,EAAA,UAAA,EAAA,UACA,GA2BA,EAAA,KAAA,SAAA,EAAA,EAAA,GACA,OAAA,EAAA,KAAA,EAAA,EAAA,IAGA,EAAA,sBACA,EAAA,UAAA,UAAA,WAAA,UACA,EAAA,UAAA,WACA,oBAAA,QAAA,OAAA,SACA,EAAA,OAAA,WAAA,GAEA,OAAA,eAAA,EAAA,OAAA,QAAA,CACA,MAAA,KACA,cAAA,KAiCA,EAAA,MAAA,SAAA,EAAA,EAAA,GACA,OAAA,EAAA,KAAA,EAAA,EAAA,IAiBA,EAAA,YAAA,SAAA,GACA,OAAA,EAAA,KAAA,IAKA,EAAA,gBAAA,SAAA,GACA,OAAA,EAAA,KAAA,IAiHA,EAAA,SAAA,SAAA,GACA,QAAA,MAAA,IAAA,EAAA,YAGA,EAAA,QAAA,SAAA,EAAA,GACA,IAAA,EAAA,SAAA,KAAA,EAAA,SAAA,GACA,MAAA,IAAA,UAAA,6BAGA,GAAA,IAAA,EAAA,OAAA,EAKA,IAHA,IAAA,EAAA,EAAA,OACA,EAAA,EAAA,OAEA,EAAA,EAAA,EAAA,KAAA,IAAA,EAAA,GAAA,EAAA,IAAA,EACA,GAAA,EAAA,KAAA,EAAA,GAAA,CACA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,MAIA,OAAA,EAAA,GAAA,EACA,EAAA,EAAA,EACA,GAGA,EAAA,WAAA,SAAA,GACA,OAAA,OAAA,GAAA,eACA,IAAA,MACA,IAAA,OACA,IAAA,QACA,IAAA,QACA,IAAA,SACA,IAAA,SACA,IAAA,SACA,IAAA,OACA,IAAA,QACA,IAAA,UACA,IAAA,WACA,OAAA,EACA,QACA,OAAA,IAIA,EAAA,OAAA,SAAA,EAAA,GACA,IAAA,EAAA,GACA,MAAA,IAAA,UAAA,+CAGA,GAAA,IAAA,EAAA,OACA,OAAA,EAAA,MAAA,GAGA,IAAA,EACA,QAAA,IAAA,EAEA,IADA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,SAAA,EACA,GAAA,EAAA,GAAA,OAIA,IAAA,EAAA,EAAA,YAAA,GACA,EAAA,EACA,IAAA,EAAA,EAAA,EAAA,EAAA,SAAA,EAAA,CACA,IAAA,EAAA,EAAA,GACA,IAAA,EAAA,SAAA,GACA,MAAA,IAAA,UAAA,+CAEA,EAAA,KAAA,EAAA,GACA,GAAA,EAAA,OAEA,OAAA,GA8CA,EAAA,WAAA,EA0EA,EAAA,UAAA,WAAA,EAQA,EAAA,UAAA,OAAA,WACA,IAAA,EAAA,KAAA,OACA,GAAA,EAAA,GAAA,EACA,MAAA,IAAA,WAAA,6CAEA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EACA,EAAA,KAAA,EAAA,EAAA,GAEA,OAAA,MAGA,EAAA,UAAA,OAAA,WACA,IAAA,EAAA,KAAA,OACA,GAAA,EAAA,GAAA,EACA,MAAA,IAAA,WAAA,6CAEA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EACA,EAAA,KAAA,EAAA,EAAA,GACA,EAAA,KAAA,EAAA,EAAA,EAAA,GAEA,OAAA,MAGA,EAAA,UAAA,OAAA,WACA,IAAA,EAAA,KAAA,OACA,GAAA,EAAA,GAAA,EACA,MAAA,IAAA,WAAA,6CAEA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EACA,EAAA,KAAA,EAAA,EAAA,GACA,EAAA,KAAA,EAAA,EAAA,EAAA,GACA,EAAA,KAAA,EAAA,EAAA,EAAA,GACA,EAAA,KAAA,EAAA,EAAA,EAAA,GAEA,OAAA,MAGA,EAAA,UAAA,SAAA,WACA,IAAA,EAAA,EAAA,KAAA,OACA,OAAA,IAAA,EAAA,GACA,IAAA,UAAA,OAAA,EAAA,KAAA,EAAA,GACA,EAAA,MAAA,KAAA,YAGA,EAAA,UAAA,OAAA,SAAA,GACA,IAAA,EAAA,SAAA,GAAA,MAAA,IAAA,UAAA,6BACA,OAAA,OAAA,GACA,IAAA,EAAA,QAAA,KAAA,IAGA,EAAA,UAAA,QAAA,WACA,IAAA,EAAA,GACA,EAAA,QAAA,kBAKA,OAJA,KAAA,OAAA,IACA,EAAA,KAAA,SAAA,MAAA,EAAA,GAAA,MAAA,SAAA,KAAA,KACA,KAAA,OAAA,IAAA,GAAA,UAEA,WAAA,EAAA,KAGA,EAAA,UAAA,QAAA,SAAA,EAAA,EAAA,EAAA,EAAA,GACA,IAAA,EAAA,SAAA,GACA,MAAA,IAAA,UAAA,6BAgBA,QAbA,IAAA,IACA,EAAA,QAEA,IAAA,IACA,EAAA,EAAA,EAAA,OAAA,QAEA,IAAA,IACA,EAAA,QAEA,IAAA,IACA,EAAA,KAAA,QAGA,EAAA,GAAA,EAAA,EAAA,QAAA,EAAA,GAAA,EAAA,KAAA,OACA,MAAA,IAAA,WAAA,sBAGA,GAAA,GAAA,GAAA,GAAA,EACA,OAAA,EAEA,GAAA,GAAA,EACA,OAAA,EAEA,GAAA,GAAA,EACA,OAAA,EAQA,GAAA,OAAA,EAAA,OAAA,EASA,IAPA,IAAA,GAJA,KAAA,IADA,KAAA,GAMA,GAPA,KAAA,IADA,KAAA,GASA,EAAA,KAAA,IAAA,EAAA,GAEA,EAAA,KAAA,MAAA,EAAA,GACA,EAAA,EAAA,MAAA,EAAA,GAEA,EAAA,EAAA,EAAA,IAAA,EACA,GAAA,EAAA,KAAA,EAAA,GAAA,CACA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,MAIA,OAAA,EAAA,GAAA,EACA,EAAA,EAAA,EACA,GA6HA,EAAA,UAAA,SAAA,SAAA,EAAA,EAAA,GACA,OAAA,IAAA,KAAA,QAAA,EAAA,EAAA,IAGA,EAAA,UAAA,QAAA,SAAA,EAAA,EAAA,GACA,OAAA,EAAA,KAAA,EAAA,EAAA,GAAA,IAGA,EAAA,UAAA,YAAA,SAAA,EAAA,EAAA,GACA,OAAA,EAAA,KAAA,EAAA,EAAA,GAAA,IAkDA,EAAA,UAAA,MAAA,SAAA,EAAA,EAAA,EAAA,GAEA,QAAA,IAAA,EACA,EAAA,OACA,EAAA,KAAA,OACA,EAAA,OAEA,QAAA,IAAA,GAAA,iBAAA,EACA,EAAA,EACA,EAAA,KAAA,OACA,EAAA,MAEA,CAAA,IAAA,SAAA,GAWA,MAAA,IAAA,MACA,2EAXA,GAAA,EACA,SAAA,IACA,GAAA,OACA,IAAA,IAAA,EAAA,UAEA,EAAA,EACA,OAAA,GASA,IAAA,EAAA,KAAA,OAAA,EAGA,SAFA,IAAA,GAAA,EAAA,KAAA,EAAA,GAEA,EAAA,OAAA,IAAA,EAAA,GAAA,EAAA,IAAA,EAAA,KAAA,OACA,MAAA,IAAA,WAAA,0CAGA,IAAA,EAAA,QAGA,IADA,IAAA,GAAA,IAEA,OAAA,GACA,IAAA,MACA,OAAA,EAAA,KAAA,EAAA,EAAA,GAEA,IAAA,OACA,IAAA,QACA,OAAA,EAAA,KAAA,EAAA,EAAA,GAEA,IAAA,QACA,OAAA,EAAA,KAAA,EAAA,EAAA,GAEA,IAAA,SACA,IAAA,SACA,OAAA,EAAA,KAAA,EAAA,EAAA,GAEA,IAAA,SAEA,OAAA,EAAA,KAAA,EAAA,EAAA,GAEA,IAAA,OACA,IAAA,QACA,IAAA,UACA,IAAA,WACA,OAAA,EAAA,KAAA,EAAA,EAAA,GAEA,QACA,GAAA,EAAA,MAAA,IAAA,UAAA,qBAAA,GACA,GAAA,GAAA,GAAA,cACA,GAAA,IAKA,EAAA,UAAA,OAAA,WACA,MAAA,CACA,KAAA,SACA,KAAA,MAAA,UAAA,MAAA,KAAA,KAAA,MAAA,KAAA,KAwFA,IAAA,EAAA,KAEA,SAAA,EAAA,GACA,IAAA,EAAA,EAAA,OACA,GAAA,GAAA,EACA,OAAA,OAAA,aAAA,MAAA,OAAA,GAMA,IAFA,IAAA,EAAA,GACA,EAAA,EACA,EAAA,GACA,GAAA,OAAA,aAAA,MACA,OACA,EAAA,MAAA,EAAA,GAAA,IAGA,OAAA,EAGA,SAAA,EAAA,EAAA,EAAA,GACA,IAAA,EAAA,GACA,EAAA,KAAA,IAAA,EAAA,OAAA,GAEA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EACA,GAAA,OAAA,aAAA,IAAA,EAAA,IAEA,OAAA,EAGA,SAAA,EAAA,EAAA,EAAA,GACA,IAAA,EAAA,GACA,EAAA,KAAA,IAAA,EAAA,OAAA,GAEA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EACA,GAAA,OAAA,aAAA,EAAA,IAEA,OAAA,EAGA,SAAA,EAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,SAEA,GAAA,EAAA,KAAA,EAAA,KACA,GAAA,EAAA,GAAA,EAAA,KAAA,EAAA,GAGA,IADA,IAAA,EAAA,GACA,EAAA,EAAA,EAAA,IAAA,EACA,GAAA,EAAA,EAAA,IAEA,OAAA,EAGA,SAAA,EAAA,EAAA,EAAA,GAGA,IAFA,IAAA,EAAA,EAAA,MAAA,EAAA,GACA,EAAA,GACA,EAAA,EAAA,EAAA,EAAA,OAAA,GAAA,EACA,GAAA,OAAA,aAAA,EAAA,GAAA,IAAA,EAAA,EAAA,IAEA,OAAA,EA0CA,SAAA,EAAA,EAAA,EAAA,GACA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,MAAA,IAAA,WAAA,sBACA,GAAA,EAAA,EAAA,EAAA,MAAA,IAAA,WAAA,yCA+JA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACA,IAAA,EAAA,SAAA,GAAA,MAAA,IAAA,UAAA,+CACA,GAAA,EAAA,GAAA,EAAA,EAAA,MAAA,IAAA,WAAA,qCACA,GAAA,EAAA,EAAA,EAAA,OAAA,MAAA,IAAA,WAAA,sBAkDA,SAAA,EAAA,EAAA,EAAA,EAAA,GACA,EAAA,IAAA,EAAA,MAAA,EAAA,GACA,IAAA,IAAA,EAAA,EAAA,EAAA,KAAA,IAAA,EAAA,OAAA,EAAA,GAAA,EAAA,IAAA,EACA,EAAA,EAAA,IAAA,EAAA,KAAA,GAAA,EAAA,EAAA,EAAA,MACA,GAAA,EAAA,EAAA,EAAA,GA8BA,SAAA,EAAA,EAAA,EAAA,EAAA,GACA,EAAA,IAAA,EAAA,WAAA,EAAA,GACA,IAAA,IAAA,EAAA,EAAA,EAAA,KAAA,IAAA,EAAA,OAAA,EAAA,GAAA,EAAA,IAAA,EACA,EAAA,EAAA,GAAA,IAAA,GAAA,EAAA,EAAA,EAAA,GAAA,IAmJA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACA,GAAA,EAAA,EAAA,EAAA,OAAA,MAAA,IAAA,WAAA,sBACA,GAAA,EAAA,EAAA,MAAA,IAAA,WAAA,sBAGA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAKA,OAJA,GACA,EAAA,EAAA,EAAA,EAAA,EAAA,uBAAA,uBAEA,EAAA,MAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GACA,EAAA,EAWA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAKA,OAJA,GACA,EAAA,EAAA,EAAA,EAAA,EAAA,wBAAA,wBAEA,EAAA,MAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GACA,EAAA,EA/cA,EAAA,UAAA,MAAA,SAAA,EAAA,GACA,IAoBA,EApBA,EAAA,KAAA,OAqBA,IApBA,IAAA,GAGA,GACA,GAAA,GACA,IAAA,EAAA,GACA,EAAA,IACA,EAAA,IANA,OAAA,IAAA,EAAA,IAAA,GASA,GACA,GAAA,GACA,IAAA,EAAA,GACA,EAAA,IACA,EAAA,GAGA,EAAA,IAAA,EAAA,GAGA,EAAA,qBACA,EAAA,KAAA,SAAA,EAAA,IACA,UAAA,EAAA,cACA,CACA,IAAA,EAAA,EAAA,EACA,EAAA,IAAA,EAAA,OAAA,GACA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EACA,EAAA,GAAA,KAAA,EAAA,GAIA,OAAA,GAWA,EAAA,UAAA,WAAA,SAAA,EAAA,EAAA,GACA,GAAA,EACA,GAAA,EACA,GAAA,EAAA,EAAA,EAAA,KAAA,QAKA,IAHA,IAAA,EAAA,KAAA,GACA,EAAA,EACA,EAAA,IACA,EAAA,IAAA,GAAA,MACA,GAAA,KAAA,EAAA,GAAA,EAGA,OAAA,GAGA,EAAA,UAAA,WAAA,SAAA,EAAA,EAAA,GACA,GAAA,EACA,GAAA,EACA,GACA,EAAA,EAAA,EAAA,KAAA,QAKA,IAFA,IAAA,EAAA,KAAA,IAAA,GACA,EAAA,EACA,EAAA,IAAA,GAAA,MACA,GAAA,KAAA,IAAA,GAAA,EAGA,OAAA,GAGA,EAAA,UAAA,UAAA,SAAA,EAAA,GAEA,OADA,GAAA,EAAA,EAAA,EAAA,KAAA,QACA,KAAA,IAGA,EAAA,UAAA,aAAA,SAAA,EAAA,GAEA,OADA,GAAA,EAAA,EAAA,EAAA,KAAA,QACA,KAAA,GAAA,KAAA,EAAA,IAAA,GAGA,EAAA,UAAA,aAAA,SAAA,EAAA,GAEA,OADA,GAAA,EAAA,EAAA,EAAA,KAAA,QACA,KAAA,IAAA,EAAA,KAAA,EAAA,IAGA,EAAA,UAAA,aAAA,SAAA,EAAA,GAGA,OAFA,GAAA,EAAA,EAAA,EAAA,KAAA,SAEA,KAAA,GACA,KAAA,EAAA,IAAA,EACA,KAAA,EAAA,IAAA,IACA,SAAA,KAAA,EAAA,IAGA,EAAA,UAAA,aAAA,SAAA,EAAA,GAGA,OAFA,GAAA,EAAA,EAAA,EAAA,KAAA,QAEA,SAAA,KAAA,IACA,KAAA,EAAA,IAAA,GACA,KAAA,EAAA,IAAA,EACA,KAAA,EAAA,KAGA,EAAA,UAAA,UAAA,SAAA,EAAA,EAAA,GACA,GAAA,EACA,GAAA,EACA,GAAA,EAAA,EAAA,EAAA,KAAA,QAKA,IAHA,IAAA,EAAA,KAAA,GACA,EAAA,EACA,EAAA,IACA,EAAA,IAAA,GAAA,MACA,GAAA,KAAA,EAAA,GAAA,EAMA,OAFA,IAFA,GAAA,OAEA,GAAA,KAAA,IAAA,EAAA,EAAA,IAEA,GAGA,EAAA,UAAA,UAAA,SAAA,EAAA,EAAA,GACA,GAAA,EACA,GAAA,EACA,GAAA,EAAA,EAAA,EAAA,KAAA,QAKA,IAHA,IAAA,EAAA,EACA,EAAA,EACA,EAAA,KAAA,IAAA,GACA,EAAA,IAAA,GAAA,MACA,GAAA,KAAA,IAAA,GAAA,EAMA,OAFA,IAFA,GAAA,OAEA,GAAA,KAAA,IAAA,EAAA,EAAA,IAEA,GAGA,EAAA,UAAA,SAAA,SAAA,EAAA,GAEA,OADA,GAAA,EAAA,EAAA,EAAA,KAAA,QACA,IAAA,KAAA,IACA,GAAA,IAAA,KAAA,GAAA,GADA,KAAA,IAIA,EAAA,UAAA,YAAA,SAAA,EAAA,GACA,GAAA,EAAA,EAAA,EAAA,KAAA,QACA,IAAA,EAAA,KAAA,GAAA,KAAA,EAAA,IAAA,EACA,OAAA,MAAA,EAAA,WAAA,EAAA,GAGA,EAAA,UAAA,YAAA,SAAA,EAAA,GACA,GAAA,EAAA,EAAA,EAAA,KAAA,QACA,IAAA,EAAA,KAAA,EAAA,GAAA,KAAA,IAAA,EACA,OAAA,MAAA,EAAA,WAAA,EAAA,GAGA,EAAA,UAAA,YAAA,SAAA,EAAA,GAGA,OAFA,GAAA,EAAA,EAAA,EAAA,KAAA,QAEA,KAAA,GACA,KAAA,EAAA,IAAA,EACA,KAAA,EAAA,IAAA,GACA,KAAA,EAAA,IAAA,IAGA,EAAA,UAAA,YAAA,SAAA,EAAA,GAGA,OAFA,GAAA,EAAA,EAAA,EAAA,KAAA,QAEA,KAAA,IAAA,GACA,KAAA,EAAA,IAAA,GACA,KAAA,EAAA,IAAA,EACA,KAAA,EAAA,IAGA,EAAA,UAAA,YAAA,SAAA,EAAA,GAEA,OADA,GAAA,EAAA,EAAA,EAAA,KAAA,QACA,EAAA,KAAA,KAAA,GAAA,EAAA,GAAA,IAGA,EAAA,UAAA,YAAA,SAAA,EAAA,GAEA,OADA,GAAA,EAAA,EAAA,EAAA,KAAA,QACA,EAAA,KAAA,KAAA,GAAA,EAAA,GAAA,IAGA,EAAA,UAAA,aAAA,SAAA,EAAA,GAEA,OADA,GAAA,EAAA,EAAA,EAAA,KAAA,QACA,EAAA,KAAA,KAAA,GAAA,EAAA,GAAA,IAGA,EAAA,UAAA,aAAA,SAAA,EAAA,GAEA,OADA,GAAA,EAAA,EAAA,EAAA,KAAA,QACA,EAAA,KAAA,KAAA,GAAA,EAAA,GAAA,IASA,EAAA,UAAA,YAAA,SAAA,EAAA,EAAA,EAAA,IACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,IAEA,EAAA,KAAA,EAAA,EAAA,EADA,KAAA,IAAA,EAAA,EAAA,GAAA,EACA,GAGA,IAAA,EAAA,EACA,EAAA,EAEA,IADA,KAAA,GAAA,IAAA,IACA,EAAA,IAAA,GAAA,MACA,KAAA,EAAA,GAAA,EAAA,EAAA,IAGA,OAAA,EAAA,GAGA,EAAA,UAAA,YAAA,SAAA,EAAA,EAAA,EAAA,IACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,IAEA,EAAA,KAAA,EAAA,EAAA,EADA,KAAA,IAAA,EAAA,EAAA,GAAA,EACA,GAGA,IAAA,EAAA,EAAA,EACA,EAAA,EAEA,IADA,KAAA,EAAA,GAAA,IAAA,IACA,GAAA,IAAA,GAAA,MACA,KAAA,EAAA,GAAA,EAAA,EAAA,IAGA,OAAA,EAAA,GAGA,EAAA,UAAA,WAAA,SAAA,EAAA,EAAA,GAMA,OALA,GAAA,EACA,GAAA,EACA,GAAA,EAAA,KAAA,EAAA,EAAA,EAAA,IAAA,GACA,EAAA,sBAAA,EAAA,KAAA,MAAA,IACA,KAAA,GAAA,IAAA,EACA,EAAA,GAWA,EAAA,UAAA,cAAA,SAAA,EAAA,EAAA,GAUA,OATA,GAAA,EACA,GAAA,EACA,GAAA,EAAA,KAAA,EAAA,EAAA,EAAA,MAAA,GACA,EAAA,qBACA,KAAA,GAAA,IAAA,EACA,KAAA,EAAA,GAAA,IAAA,GAEA,EAAA,KAAA,EAAA,GAAA,GAEA,EAAA,GAGA,EAAA,UAAA,cAAA,SAAA,EAAA,EAAA,GAUA,OATA,GAAA,EACA,GAAA,EACA,GAAA,EAAA,KAAA,EAAA,EAAA,EAAA,MAAA,GACA,EAAA,qBACA,KAAA,GAAA,IAAA,EACA,KAAA,EAAA,GAAA,IAAA,GAEA,EAAA,KAAA,EAAA,GAAA,GAEA,EAAA,GAUA,EAAA,UAAA,cAAA,SAAA,EAAA,EAAA,GAYA,OAXA,GAAA,EACA,GAAA,EACA,GAAA,EAAA,KAAA,EAAA,EAAA,EAAA,WAAA,GACA,EAAA,qBACA,KAAA,EAAA,GAAA,IAAA,GACA,KAAA,EAAA,GAAA,IAAA,GACA,KAAA,EAAA,GAAA,IAAA,EACA,KAAA,GAAA,IAAA,GAEA,EAAA,KAAA,EAAA,GAAA,GAEA,EAAA,GAGA,EAAA,UAAA,cAAA,SAAA,EAAA,EAAA,GAYA,OAXA,GAAA,EACA,GAAA,EACA,GAAA,EAAA,KAAA,EAAA,EAAA,EAAA,WAAA,GACA,EAAA,qBACA,KAAA,GAAA,IAAA,GACA,KAAA,EAAA,GAAA,IAAA,GACA,KAAA,EAAA,GAAA,IAAA,EACA,KAAA,EAAA,GAAA,IAAA,GAEA,EAAA,KAAA,EAAA,GAAA,GAEA,EAAA,GAGA,EAAA,UAAA,WAAA,SAAA,EAAA,EAAA,EAAA,GAGA,GAFA,GAAA,EACA,GAAA,GACA,EAAA,CACA,IAAA,EAAA,KAAA,IAAA,EAAA,EAAA,EAAA,GAEA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAGA,IAAA,EAAA,EACA,EAAA,EACA,EAAA,EAEA,IADA,KAAA,GAAA,IAAA,IACA,EAAA,IAAA,GAAA,MACA,EAAA,GAAA,IAAA,GAAA,IAAA,KAAA,EAAA,EAAA,KACA,EAAA,GAEA,KAAA,EAAA,IAAA,EAAA,GAAA,GAAA,EAAA,IAGA,OAAA,EAAA,GAGA,EAAA,UAAA,WAAA,SAAA,EAAA,EAAA,EAAA,GAGA,GAFA,GAAA,EACA,GAAA,GACA,EAAA,CACA,IAAA,EAAA,KAAA,IAAA,EAAA,EAAA,EAAA,GAEA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAGA,IAAA,EAAA,EAAA,EACA,EAAA,EACA,EAAA,EAEA,IADA,KAAA,EAAA,GAAA,IAAA,IACA,GAAA,IAAA,GAAA,MACA,EAAA,GAAA,IAAA,GAAA,IAAA,KAAA,EAAA,EAAA,KACA,EAAA,GAEA,KAAA,EAAA,IAAA,EAAA,GAAA,GAAA,EAAA,IAGA,OAAA,EAAA,GAGA,EAAA,UAAA,UAAA,SAAA,EAAA,EAAA,GAOA,OANA,GAAA,EACA,GAAA,EACA,GAAA,EAAA,KAAA,EAAA,EAAA,EAAA,KAAA,KACA,EAAA,sBAAA,EAAA,KAAA,MAAA,IACA,EAAA,IAAA,EAAA,IAAA,EAAA,GACA,KAAA,GAAA,IAAA,EACA,EAAA,GAGA,EAAA,UAAA,aAAA,SAAA,EAAA,EAAA,GAUA,OATA,GAAA,EACA,GAAA,EACA,GAAA,EAAA,KAAA,EAAA,EAAA,EAAA,OAAA,OACA,EAAA,qBACA,KAAA,GAAA,IAAA,EACA,KAAA,EAAA,GAAA,IAAA,GAEA,EAAA,KAAA,EAAA,GAAA,GAEA,EAAA,GAGA,EAAA,UAAA,aAAA,SAAA,EAAA,EAAA,GAUA,OATA,GAAA,EACA,GAAA,EACA,GAAA,EAAA,KAAA,EAAA,EAAA,EAAA,OAAA,OACA,EAAA,qBACA,KAAA,GAAA,IAAA,EACA,KAAA,EAAA,GAAA,IAAA,GAEA,EAAA,KAAA,EAAA,GAAA,GAEA,EAAA,GAGA,EAAA,UAAA,aAAA,SAAA,EAAA,EAAA,GAYA,OAXA,GAAA,EACA,GAAA,EACA,GAAA,EAAA,KAAA,EAAA,EAAA,EAAA,YAAA,YACA,EAAA,qBACA,KAAA,GAAA,IAAA,EACA,KAAA,EAAA,GAAA,IAAA,EACA,KAAA,EAAA,GAAA,IAAA,GACA,KAAA,EAAA,GAAA,IAAA,IAEA,EAAA,KAAA,EAAA,GAAA,GAEA,EAAA,GAGA,EAAA,UAAA,aAAA,SAAA,EAAA,EAAA,GAaA,OAZA,GAAA,EACA,GAAA,EACA,GAAA,EAAA,KAAA,EAAA,EAAA,EAAA,YAAA,YACA,EAAA,IAAA,EAAA,WAAA,EAAA,GACA,EAAA,qBACA,KAAA,GAAA,IAAA,GACA,KAAA,EAAA,GAAA,IAAA,GACA,KAAA,EAAA,GAAA,IAAA,EACA,KAAA,EAAA,GAAA,IAAA,GAEA,EAAA,KAAA,EAAA,GAAA,GAEA,EAAA,GAgBA,EAAA,UAAA,aAAA,SAAA,EAAA,EAAA,GACA,OAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAGA,EAAA,UAAA,aAAA,SAAA,EAAA,EAAA,GACA,OAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAWA,EAAA,UAAA,cAAA,SAAA,EAAA,EAAA,GACA,OAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAGA,EAAA,UAAA,cAAA,SAAA,EAAA,EAAA,GACA,OAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAIA,EAAA,UAAA,KAAA,SAAA,EAAA,EAAA,EAAA,GAQA,GAPA,IAAA,EAAA,GACA,GAAA,IAAA,IAAA,EAAA,KAAA,QACA,GAAA,EAAA,SAAA,EAAA,EAAA,QACA,IAAA,EAAA,GACA,EAAA,GAAA,EAAA,IAAA,EAAA,GAGA,IAAA,EAAA,OAAA,EACA,GAAA,IAAA,EAAA,QAAA,IAAA,KAAA,OAAA,OAAA,EAGA,GAAA,EAAA,EACA,MAAA,IAAA,WAAA,6BAEA,GAAA,EAAA,GAAA,GAAA,KAAA,OAAA,MAAA,IAAA,WAAA,6BACA,GAAA,EAAA,EAAA,MAAA,IAAA,WAAA,2BAGA,EAAA,KAAA,SAAA,EAAA,KAAA,QACA,EAAA,OAAA,EAAA,EAAA,IACA,EAAA,EAAA,OAAA,EAAA,GAGA,IACA,EADA,EAAA,EAAA,EAGA,GAAA,OAAA,GAAA,EAAA,GAAA,EAAA,EAEA,IAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EACA,EAAA,EAAA,GAAA,KAAA,EAAA,QAEA,GAAA,EAAA,MAAA,EAAA,oBAEA,IAAA,EAAA,EAAA,EAAA,IAAA,EACA,EAAA,EAAA,GAAA,KAAA,EAAA,QAGA,WAAA,UAAA,IAAA,KACA,EACA,KAAA,SAAA,EAAA,EAAA,GACA,GAIA,OAAA,GAOA,EAAA,UAAA,KAAA,SAAA,EAAA,EAAA,EAAA,GAEA,GAAA,iBAAA,EAAA,CASA,GARA,iBAAA,GACA,EAAA,EACA,EAAA,EACA,EAAA,KAAA,QACA,iBAAA,IACA,EAAA,EACA,EAAA,KAAA,QAEA,IAAA,EAAA,OAAA,CACA,IAAA,EAAA,EAAA,WAAA,GACA,EAAA,MACA,EAAA,GAGA,QAAA,IAAA,GAAA,iBAAA,EACA,MAAA,IAAA,UAAA,6BAEA,GAAA,iBAAA,IAAA,EAAA,WAAA,GACA,MAAA,IAAA,UAAA,qBAAA,OAEA,iBAAA,IACA,GAAA,KAIA,GAAA,EAAA,GAAA,KAAA,OAAA,GAAA,KAAA,OAAA,EACA,MAAA,IAAA,WAAA,sBAGA,GAAA,GAAA,EACA,OAAA,KAQA,IAAA,EACA,GANA,KAAA,EACA,OAAA,IAAA,EAAA,KAAA,OAAA,IAAA,EAEA,IAAA,EAAA,GAGA,iBAAA,EACA,IAAA,EAAA,EAAA,EAAA,IAAA,EACA,KAAA,GAAA,MAEA,CACA,IAAA,EAAA,EAAA,SAAA,GACA,EACA,EAAA,IAAA,EAAA,EAAA,GAAA,YACA,EAAA,EAAA,OACA,IAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EACA,KAAA,EAAA,GAAA,EAAA,EAAA,GAIA,OAAA,MAMA,IAAA,EAAA,qBAEA,SAAA,EAAA,GAIA,IAFA,EAAA,EAAA,GAAA,QAAA,EAAA,KAEA,OAAA,EAAA,MAAA,GAEA,KAAA,EAAA,OAAA,GAAA,GACA,GAAA,IAEA,OAAA,EAGA,SAAA,EAAA,GACA,OAAA,EAAA,KAAA,EAAA,OACA,EAAA,QAAA,aAAA,IAGA,SAAA,EAAA,GACA,OAAA,EAAA,GAAA,IAAA,EAAA,SAAA,IACA,EAAA,SAAA,IAGA,SAAA,EAAA,EAAA,GAEA,IAAA,EADA,EAAA,GAAA,EAAA,EAMA,IAJA,IAAA,EAAA,EAAA,OACA,EAAA,KACA,EAAA,GAEA,EAAA,EAAA,EAAA,IAAA,EAAA,CAIA,IAHA,EAAA,EAAA,WAAA,IAGA,OAAA,EAAA,MAAA,CAEA,IAAA,EAAA,CAEA,GAAA,EAAA,MAAA,EAEA,GAAA,IAAA,GAAA,EAAA,KAAA,IAAA,IAAA,KACA,SACA,GAAA,EAAA,IAAA,EAAA,EAEA,GAAA,IAAA,GAAA,EAAA,KAAA,IAAA,IAAA,KACA,SAIA,EAAA,EAEA,SAIA,GAAA,EAAA,MAAA,EACA,GAAA,IAAA,GAAA,EAAA,KAAA,IAAA,IAAA,KACA,EAAA,EACA,SAIA,EAAA,OAAA,EAAA,OAAA,GAAA,EAAA,YACA,IAEA,GAAA,IAAA,GAAA,EAAA,KAAA,IAAA,IAAA,KAMA,GAHA,EAAA,KAGA,EAAA,IAAA,CACA,IAAA,GAAA,GAAA,EAAA,MACA,EAAA,KAAA,QACA,GAAA,EAAA,KAAA,CACA,IAAA,GAAA,GAAA,EAAA,MACA,EAAA,KACA,GAAA,EAAA,IACA,GAAA,EAAA,UAEA,GAAA,EAAA,MAAA,CACA,IAAA,GAAA,GAAA,EAAA,MACA,EAAA,KACA,GAAA,GAAA,IACA,GAAA,EAAA,GAAA,IACA,GAAA,EAAA,SAEA,CAAA,KAAA,EAAA,SASA,MAAA,IAAA,MAAA,sBARA,IAAA,GAAA,GAAA,EAAA,MACA,EAAA,KACA,GAAA,GAAA,IACA,GAAA,GAAA,GAAA,IACA,GAAA,EAAA,GAAA,IACA,GAAA,EAAA,MAOA,OAAA,EAGA,SAAA,EAAA,GAEA,IADA,IAAA,EAAA,GACA,EAAA,EAAA,EAAA,EAAA,SAAA,EAEA,EAAA,KAAA,IAAA,EAAA,WAAA,IAEA,OAAA,EAGA,SAAA,EAAA,EAAA,GAGA,IAFA,IAAA,EAAA,EAAA,EACA,EAAA,GACA,EAAA,EAAA,EAAA,EAAA,WACA,GAAA,GAAA,KADA,EAIA,GADA,EAAA,EAAA,WAAA,KACA,EACA,EAAA,EAAA,IACA,EAAA,KAAA,GACA,EAAA,KAAA,GAGA,OAAA,EAGA,SAAA,EAAA,GACA,OAAA,EAAA,YAAA,EAAA,IAGA,SAAA,EAAA,EAAA,EAAA,EAAA,GACA,IAAA,IAAA,EAAA,EAAA,EAAA,KACA,EAAA,GAAA,EAAA,QAAA,GAAA,EAAA,UADA,EAEA,EAAA,EAAA,GAAA,EAAA,GAEA,OAAA,EAGA,SAAA,EAAA,GACA,OAAA,GAAA;;;AC1vDA,IAAA,EAAA,QAAA,UACA,EAAA,EAAA,OAGA,SAAA,EAAA,EAAA,GACA,IAAA,IAAA,KAAA,EACA,EAAA,GAAA,EAAA,GAWA,SAAA,EAAA,EAAA,EAAA,GACA,OAAA,EAAA,EAAA,EAAA,GATA,EAAA,MAAA,EAAA,OAAA,EAAA,aAAA,EAAA,gBACA,OAAA,QAAA,GAGA,EAAA,EAAA,SACA,QAAA,OAAA,GAQA,EAAA,EAAA,GAEA,EAAA,KAAA,SAAA,EAAA,EAAA,GACA,GAAA,iBAAA,EACA,MAAA,IAAA,UAAA,iCAEA,OAAA,EAAA,EAAA,EAAA,IAGA,EAAA,MAAA,SAAA,EAAA,EAAA,GACA,GAAA,iBAAA,EACA,MAAA,IAAA,UAAA,6BAEA,IAAA,EAAA,EAAA,GAUA,YATA,IAAA,EACA,iBAAA,EACA,EAAA,KAAA,EAAA,GAEA,EAAA,KAAA,GAGA,EAAA,KAAA,GAEA,GAGA,EAAA,YAAA,SAAA,GACA,GAAA,iBAAA,EACA,MAAA,IAAA,UAAA,6BAEA,OAAA,EAAA,IAGA,EAAA,gBAAA,SAAA,GACA,GAAA,iBAAA,EACA,MAAA,IAAA,UAAA,6BAEA,OAAA,EAAA,WAAA;;;;;ACVA,IAAA,EAAA,UAAA,GAAA,EAAA,QAAA,WA9CA,EAAA,MAIA,EAAA,WAEA,SAAA,IACA,MAAA,IAAA,MAAA,kHAGA,IAAA,EAAA,QAAA,eAAA,OACA,EAAA,EAAA,QAAA,EAAA,SAQA,SAAA,EAAA,EAAA,GAEA,GAAA,EAAA,EAAA,MAAA,IAAA,WAAA,mCAEA,IAAA,EAAA,EAAA,YAAA,GAEA,GAAA,EAAA,EACA,GAAA,EAAA,EAEA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAGA,EAAA,gBAAA,EAAA,MAAA,EAAA,EAAA,SAGA,EAAA,gBAAA,GAIA,MAAA,mBAAA,EACA,EAAA,SAAA,WACA,EAAA,KAAA,KAIA,EA/BA,GAAA,EAAA,gBACA,OAAA,QAAA,EAEA,OAAA,QAAA;;ACpBA,mBAAA,OAAA,OAEA,OAAA,QAAA,SAAA,EAAA,GACA,IACA,EAAA,OAAA,EACA,EAAA,UAAA,OAAA,OAAA,EAAA,UAAA,CACA,YAAA,CACA,MAAA,EACA,YAAA,EACA,UAAA,EACA,cAAA,OAOA,OAAA,QAAA,SAAA,EAAA,GACA,GAAA,EAAA,CACA,EAAA,OAAA,EACA,IAAA,EAAA,aACA,EAAA,UAAA,EAAA,UACA,EAAA,UAAA,IAAA,EACA,EAAA,UAAA,YAAA;;ACFA,aAEA,IAOIC,EAPAC,EAAuB,iBAAZC,QAAuBA,QAAU,KAC5CC,EAAeF,GAAwB,mBAAZA,EAAEvB,MAC7BuB,EAAEvB,MACF,SAAsB0B,EAAQC,EAAUhC,GACxC,OAAOiC,SAAS7B,UAAUC,MAAMtB,KAAKgD,EAAQC,EAAUhC,IAiB3D,SAASkC,EAAmBC,GACtBjG,SAAWA,QAAQC,MAAMD,QAAQC,KAAKgG,GAb1CR,EADEC,GAA0B,mBAAdA,EAAEQ,QACCR,EAAEQ,QACVC,OAAOC,sBACC,SAAwBP,GACvC,OAAOM,OAAOE,oBAAoBR,GAC/BvC,OAAO6C,OAAOC,sBAAsBP,KAGxB,SAAwBA,GACvC,OAAOM,OAAOE,oBAAoBR,IAQtC,IAAIS,EAAcxH,OAAOyH,OAAS,SAAqBC,GACrD,OAAOA,GAAUA,GAGnB,SAASC,IACPA,EAAaC,KAAK7D,KAAK,MAEzBR,OAAOxB,QAAU4F,EACjBpE,OAAOxB,QAAQ8D,KAAOA,EAGtB8B,EAAaA,aAAeA,EAE5BA,EAAavC,UAAUyC,aAAUC,EACjCH,EAAavC,UAAU2C,aAAe,EACtCJ,EAAavC,UAAU4C,mBAAgBF,EAIvC,IAAIG,EAAsB,GAE1B,SAASC,EAAcC,GACrB,GAAwB,mBAAbA,EACT,MAAM,IAAIC,UAAU,0EAA4ED,GAsCpG,SAASE,EAAiBC,GACxB,YAA2BR,IAAvBQ,EAAKN,cACAL,EAAaM,oBACfK,EAAKN,cAmDd,SAASO,EAAaxB,EAAQyB,EAAML,EAAUM,GAC5C,IAAIC,EACAC,EACAC,EAsBJ,GApBAV,EAAcC,QAGCL,KADfa,EAAS5B,EAAOc,UAEdc,EAAS5B,EAAOc,QAAUR,OAAOwB,OAAO,MACxC9B,EAAOgB,aAAe,SAIKD,IAAvBa,EAAOG,cACT/B,EAAOd,KAAK,cAAeuC,EACfL,EAASA,SAAWA,EAASA,SAAWA,GAIpDQ,EAAS5B,EAAOc,SAElBe,EAAWD,EAAOH,SAGHV,IAAbc,EAEFA,EAAWD,EAAOH,GAAQL,IACxBpB,EAAOgB,kBAeT,GAbwB,mBAAba,EAETA,EAAWD,EAAOH,GAChBC,EAAU,CAACN,EAAUS,GAAY,CAACA,EAAUT,GAErCM,EACTG,EAASG,QAAQZ,GAEjBS,EAASzD,KAAKgD,IAIhBO,EAAIL,EAAiBtB,IACb,GAAK6B,EAASrI,OAASmI,IAAME,EAASI,OAAQ,CACpDJ,EAASI,QAAS,EAGlB,IAAIC,EAAI,IAAIxF,MAAM,+CACEmF,EAASrI,OAAS,IAAM2I,OAAOV,GAAQ,qEAG3DS,EAAE5C,KAAO,8BACT4C,EAAEE,QAAUpC,EACZkC,EAAET,KAAOA,EACTS,EAAEG,MAAQR,EAASrI,OACnB2G,EAAmB+B,GAIvB,OAAOlC,EAcT,SAASsC,IACP,IAAK,KAAKC,MAGR,OAFA,KAAKvC,OAAOhB,eAAe,KAAKyC,KAAM,KAAKe,QAC3C,KAAKD,OAAQ,EACY,IAArB9H,UAAUjB,OACL,KAAK4H,SAASpE,KAAK,KAAKgD,QAC1B,KAAKoB,SAAS9C,MAAM,KAAK0B,OAAQvF,WAI5C,SAASgI,EAAUzC,EAAQyB,EAAML,GAC/B,IAAIsB,EAAQ,CAAEH,OAAO,EAAOC,YAAQzB,EAAWf,OAAQA,EAAQyB,KAAMA,EAAML,SAAUA,GACjFuB,EAAUL,EAAYM,KAAKF,GAG/B,OAFAC,EAAQvB,SAAWA,EACnBsB,EAAMF,OAASG,EACRA,EA0HT,SAASE,EAAW7C,EAAQyB,EAAMqB,GAChC,IAAIlB,EAAS5B,EAAOc,QAEpB,QAAeC,IAAXa,EACF,MAAO,GAET,IAAImB,EAAanB,EAAOH,GACxB,YAAmBV,IAAfgC,EACK,GAEiB,mBAAfA,EACFD,EAAS,CAACC,EAAW3B,UAAY2B,GAAc,CAACA,GAElDD,EACLE,EAAgBD,GAAcE,EAAWF,EAAYA,EAAWvJ,QAoBpE,SAAS0J,EAAczB,GACrB,IAAIG,EAAS,KAAKd,QAElB,QAAeC,IAAXa,EAAsB,CACxB,IAAImB,EAAanB,EAAOH,GAExB,GAA0B,mBAAfsB,EACT,OAAO,EACF,QAAmBhC,IAAfgC,EACT,OAAOA,EAAWvJ,OAItB,OAAO,EAOT,SAASyJ,EAAWE,EAAKC,GAEvB,IADA,IAAIC,EAAO,IAAInF,MAAMkF,GACZjF,EAAI,EAAGA,EAAIiF,IAAKjF,EACvBkF,EAAKlF,GAAKgF,EAAIhF,GAChB,OAAOkF,EAGT,SAASC,EAAUC,EAAMrH,GACvB,KAAOA,EAAQ,EAAIqH,EAAK/J,OAAQ0C,IAC9BqH,EAAKrH,GAASqH,EAAKrH,EAAQ,GAC7BqH,EAAKC,MAGP,SAASR,EAAgBG,GAEvB,IADA,IAAIM,EAAM,IAAIvF,MAAMiF,EAAI3J,QACf2E,EAAI,EAAGA,EAAIsF,EAAIjK,SAAU2E,EAChCsF,EAAItF,GAAKgF,EAAIhF,GAAGiD,UAAY+B,EAAIhF,GAElC,OAAOsF,EAGT,SAAS3E,EAAKsD,EAAS9C,GACrB,OAAO,IAAIoE,QAAQ,SAAUC,EAASC,GACpC,SAASC,EAAcC,GACrB1B,EAAQpD,eAAeM,EAAMyE,GAC7BH,EAAOE,GAGT,SAASC,IAC+B,mBAA3B3B,EAAQpD,gBACjBoD,EAAQpD,eAAe,QAAS6E,GAElCF,EAAQ,GAAGhJ,MAAMqC,KAAKvC,YAGxBuJ,EAA+B5B,EAAS9C,EAAMyE,EAAU,CAAEjF,MAAM,IACnD,UAATQ,GACF2E,EAA8B7B,EAASyB,EAAe,CAAE/E,MAAM,MAKpE,SAASmF,EAA8B7B,EAAS8B,EAASC,GAC7B,mBAAf/B,EAAQxD,IACjBoF,EAA+B5B,EAAS,QAAS8B,EAASC,GAI9D,SAASH,EAA+B5B,EAAS9C,EAAM8B,EAAU+C,GAC/D,GAA0B,mBAAf/B,EAAQxD,GACbuF,EAAMrF,KACRsD,EAAQtD,KAAKQ,EAAM8B,GAEnBgB,EAAQxD,GAAGU,EAAM8B,OAEd,CAAA,GAAwC,mBAA7BgB,EAAQgC,iBAYxB,MAAM,IAAI/C,UAAU,6EAA+Ee,GATnGA,EAAQgC,iBAAiB9E,EAAM,SAAS+E,EAAaC,GAG/CH,EAAMrF,MACRsD,EAAQmC,oBAAoBjF,EAAM+E,GAEpCjD,EAASkD,MAhafhE,OAAOkE,eAAe5D,EAAc,sBAAuB,CACzD6D,YAAY,EACZC,IAAK,WACH,OAAOxD,GAETyD,IAAK,SAASL,GACZ,GAAmB,iBAARA,GAAoBA,EAAM,GAAK7D,EAAY6D,GACpD,MAAM,IAAIM,WAAW,kGAAoGN,EAAM,KAEjIpD,EAAsBoD,KAI1B1D,EAAaC,KAAO,gBAEGE,IAAjB,KAAKD,SACL,KAAKA,UAAYR,OAAOuE,eAAe,MAAM/D,UAC/C,KAAKA,QAAUR,OAAOwB,OAAO,MAC7B,KAAKd,aAAe,GAGtB,KAAKC,cAAgB,KAAKA,oBAAiBF,GAK7CH,EAAavC,UAAUyG,gBAAkB,SAAyB1B,GAChE,GAAiB,iBAANA,GAAkBA,EAAI,GAAK3C,EAAY2C,GAChD,MAAM,IAAIwB,WAAW,gFAAkFxB,EAAI,KAG7G,OADA,KAAKnC,cAAgBmC,EACd,MASTxC,EAAavC,UAAU0G,gBAAkB,WACvC,OAAOzD,EAAiB,OAG1BV,EAAavC,UAAUa,KAAO,SAAcuC,GAE1C,IADA,IAAIxD,EAAO,GACFE,EAAI,EAAGA,EAAI1D,UAAUjB,OAAQ2E,IAAKF,EAAKG,KAAK3D,UAAU0D,IAC/D,IAAI6G,EAAoB,UAATvD,EAEXG,EAAS,KAAKd,QAClB,QAAeC,IAAXa,EACFoD,EAAWA,QAA4BjE,IAAjBa,EAAOqD,WAC1B,IAAKD,EACR,OAAO,EAGT,GAAIA,EAAS,CACX,IAAIE,EAGJ,GAFIjH,EAAKzE,OAAS,IAChB0L,EAAKjH,EAAK,IACRiH,aAAcxI,MAGhB,MAAMwI,EAGR,IAAIpB,EAAM,IAAIpH,MAAM,oBAAsBwI,EAAK,KAAOA,EAAGC,QAAU,IAAM,KAEzE,MADArB,EAAIsB,QAAUF,EACRpB,EAGR,IAAII,EAAUtC,EAAOH,GAErB,QAAgBV,IAAZmD,EACF,OAAO,EAET,GAAuB,mBAAZA,EACTnE,EAAamE,EAAS,KAAMjG,OAE5B,CAAA,IAAI1E,EAAM2K,EAAQ1K,OACd6F,EAAY4D,EAAWiB,EAAS3K,GACpC,IAAS4E,EAAI,EAAGA,EAAI5E,IAAO4E,EACzB4B,EAAaV,EAAUlB,GAAI,KAAMF,GAGrC,OAAO,GAiET2C,EAAavC,UAAUQ,YAAc,SAAqB4C,EAAML,GAC9D,OAAOI,EAAa,KAAMC,EAAML,GAAU,IAG5CR,EAAavC,UAAUO,GAAKgC,EAAavC,UAAUQ,YAEnD+B,EAAavC,UAAUc,gBACnB,SAAyBsC,EAAML,GAC7B,OAAOI,EAAa,KAAMC,EAAML,GAAU,IAqBhDR,EAAavC,UAAUS,KAAO,SAAc2C,EAAML,GAGhD,OAFAD,EAAcC,GACd,KAAKxC,GAAG6C,EAAMgB,EAAU,KAAMhB,EAAML,IAC7B,MAGTR,EAAavC,UAAUe,oBACnB,SAA6BqC,EAAML,GAGjC,OAFAD,EAAcC,GACd,KAAKjC,gBAAgBsC,EAAMgB,EAAU,KAAMhB,EAAML,IAC1C,MAIbR,EAAavC,UAAUW,eACnB,SAAwByC,EAAML,GAC5B,IAAImC,EAAM3B,EAAQyD,EAAUlH,EAAGmH,EAK/B,GAHAnE,EAAcC,QAGCL,KADfa,EAAS,KAAKd,SAEZ,OAAO,KAGT,QAAaC,KADbwC,EAAO3B,EAAOH,IAEZ,OAAO,KAET,GAAI8B,IAASnC,GAAYmC,EAAKnC,WAAaA,EACb,KAAtB,KAAKJ,aACT,KAAKF,QAAUR,OAAOwB,OAAO,cAEtBF,EAAOH,GACVG,EAAO5C,gBACT,KAAKE,KAAK,iBAAkBuC,EAAM8B,EAAKnC,UAAYA,SAElD,GAAoB,mBAATmC,EAAqB,CAGrC,IAFA8B,GAAY,EAEPlH,EAAIoF,EAAK/J,OAAS,EAAG2E,GAAK,EAAGA,IAChC,GAAIoF,EAAKpF,KAAOiD,GAAYmC,EAAKpF,GAAGiD,WAAaA,EAAU,CACzDkE,EAAmB/B,EAAKpF,GAAGiD,SAC3BiE,EAAWlH,EACX,MAIJ,GAAIkH,EAAW,EACb,OAAO,KAEQ,IAAbA,EACF9B,EAAKgC,QAELjC,EAAUC,EAAM8B,GAGE,IAAhB9B,EAAK/J,SACPoI,EAAOH,GAAQ8B,EAAK,SAEQxC,IAA1Ba,EAAO5C,gBACT,KAAKE,KAAK,iBAAkBuC,EAAM6D,GAAoBlE,GAG1D,OAAO,MAGbR,EAAavC,UAAUU,IAAM6B,EAAavC,UAAUW,eAEpD4B,EAAavC,UAAUY,mBACnB,SAA4BwC,GAC1B,IAAIpC,EAAWuC,EAAQzD,EAGvB,QAAe4C,KADfa,EAAS,KAAKd,SAEZ,OAAO,KAGT,QAA8BC,IAA1Ba,EAAO5C,eAUT,OATyB,IAArBvE,UAAUjB,QACZ,KAAKsH,QAAUR,OAAOwB,OAAO,MAC7B,KAAKd,aAAe,QACMD,IAAjBa,EAAOH,KACY,KAAtB,KAAKT,aACT,KAAKF,QAAUR,OAAOwB,OAAO,aAEtBF,EAAOH,IAEX,KAIT,GAAyB,IAArBhH,UAAUjB,OAAc,CAC1B,IACIgM,EADAC,EAAOnF,OAAOmF,KAAK7D,GAEvB,IAAKzD,EAAI,EAAGA,EAAIsH,EAAKjM,SAAU2E,EAEjB,oBADZqH,EAAMC,EAAKtH,KAEX,KAAKc,mBAAmBuG,GAK1B,OAHA,KAAKvG,mBAAmB,kBACxB,KAAK6B,QAAUR,OAAOwB,OAAO,MAC7B,KAAKd,aAAe,EACb,KAKT,GAAyB,mBAFzB3B,EAAYuC,EAAOH,IAGjB,KAAKzC,eAAeyC,EAAMpC,QACrB,QAAkB0B,IAAd1B,EAET,IAAKlB,EAAIkB,EAAU7F,OAAS,EAAG2E,GAAK,EAAGA,IACrC,KAAKa,eAAeyC,EAAMpC,EAAUlB,IAIxC,OAAO,MAoBbyC,EAAavC,UAAUgB,UAAY,SAAmBoC,GACpD,OAAOoB,EAAW,KAAMpB,GAAM,IAGhCb,EAAavC,UAAUqH,aAAe,SAAsBjE,GAC1D,OAAOoB,EAAW,KAAMpB,GAAM,IAGhCb,EAAasC,cAAgB,SAASd,EAASX,GAC7C,MAAqC,mBAA1BW,EAAQc,cACVd,EAAQc,cAAczB,GAEtByB,EAAclG,KAAKoF,EAASX,IAIvCb,EAAavC,UAAU6E,cAAgBA,EAiBvCtC,EAAavC,UAAUsH,WAAa,WAClC,OAAO,KAAK3E,aAAe,EAAIpB,EAAe,KAAKkB,SAAW;;;AC3XhE,IAAA,EAAA,QAAA,WAlCA,SAAA,EAAA,EAAA,EAAA,EAAA,GACA,GAAA,mBAAA,EACA,MAAA,IAAA,UAAA,0CAEA,IACA,EAAA,EADA,EAAA,UAAA,OAEA,OAAA,GACA,KAAA,EACA,KAAA,EACA,OAAA,EAAA,SAAA,GACA,KAAA,EACA,OAAA,EAAA,SAAA,WACA,EAAA,KAAA,KAAA,KAEA,KAAA,EACA,OAAA,EAAA,SAAA,WACA,EAAA,KAAA,KAAA,EAAA,KAEA,KAAA,EACA,OAAA,EAAA,SAAA,WACA,EAAA,KAAA,KAAA,EAAA,EAAA,KAEA,QAGA,IAFA,EAAA,IAAA,MAAA,EAAA,GACA,EAAA,EACA,EAAA,EAAA,QACA,EAAA,KAAA,UAAA,GAEA,OAAA,EAAA,SAAA,WACA,EAAA,MAAA,KAAA,WAtCA,IAAA,IACA,EAAA,SACA,IAAA,EAAA,QAAA,QAAA,QACA,IAAA,EAAA,QAAA,QAAA,QAAA,IAAA,EAAA,QAAA,QAAA,SACA,OAAA,QAAA,CAAA,SAAA,GAEA,OAAA,QAAA;;ACRA,OAAA,QAAA,QAAA,UAAA;;ACwBA,SAAA,EAAA,GACA,OAAA,MAAA,QACA,MAAA,QAAA,GAEA,mBAAA,EAAA,GAIA,SAAA,EAAA,GACA,MAAA,kBAAA,EAIA,SAAA,EAAA,GACA,OAAA,OAAA,EAIA,SAAA,EAAA,GACA,OAAA,MAAA,EAIA,SAAA,EAAA,GACA,MAAA,iBAAA,EAIA,SAAA,EAAA,GACA,MAAA,iBAAA,EAIA,SAAA,EAAA,GACA,MAAA,iBAAA,EAIA,SAAA,EAAA,GACA,YAAA,IAAA,EAIA,SAAA,EAAA,GACA,MAAA,oBAAA,EAAA,GAIA,SAAA,EAAA,GACA,MAAA,iBAAA,GAAA,OAAA,EAIA,SAAA,EAAA,GACA,MAAA,kBAAA,EAAA,GAIA,SAAA,EAAA,GACA,MAAA,mBAAA,EAAA,IAAA,aAAA,MAIA,SAAA,EAAA,GACA,MAAA,mBAAA,EAIA,SAAA,EAAA,GACA,OAAA,OAAA,GACA,kBAAA,GACA,iBAAA,GACA,iBAAA,GACA,iBAAA,QACA,IAAA,EAMA,SAAA,EAAA,GACA,OAAA,OAAA,UAAA,SAAA,KAAA,GA3EA,QAAA,QAAA,EAKA,QAAA,UAAA,EAKA,QAAA,OAAA,EAKA,QAAA,kBAAA,EAKA,QAAA,SAAA,EAKA,QAAA,SAAA,EAKA,QAAA,SAAA,EAKA,QAAA,YAAA,EAKA,QAAA,SAAA,EAKA,QAAA,SAAA,EAKA,QAAA,OAAA,EAKA,QAAA,QAAA,EAKA,QAAA,WAAA,EAUA,QAAA,YAAA,EAEA,QAAA,SAAA,QAAA,UAAA,OAAA;;;ACtGA,aAEA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAEA,IAAA,EAAA,QAAA,eAAA,OACA,EAAA,QAAA,QAEA,SAAA,EAAA,EAAA,EAAA,GACA,EAAA,KAAA,EAAA,GAGA,OAAA,QAAA,WACA,SAAA,IACA,EAAA,KAAA,GAEA,KAAA,KAAA,KACA,KAAA,KAAA,KACA,KAAA,OAAA,EAoDA,OAjDA,EAAA,UAAA,KAAA,SAAA,GACA,IAAA,EAAA,CAAA,KAAA,EAAA,KAAA,MACA,KAAA,OAAA,EAAA,KAAA,KAAA,KAAA,EAAA,KAAA,KAAA,EACA,KAAA,KAAA,IACA,KAAA,QAGA,EAAA,UAAA,QAAA,SAAA,GACA,IAAA,EAAA,CAAA,KAAA,EAAA,KAAA,KAAA,MACA,IAAA,KAAA,SAAA,KAAA,KAAA,GACA,KAAA,KAAA,IACA,KAAA,QAGA,EAAA,UAAA,MAAA,WACA,GAAA,IAAA,KAAA,OAAA,CACA,IAAA,EAAA,KAAA,KAAA,KAGA,OAFA,IAAA,KAAA,OAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,OACA,KAAA,OACA,IAGA,EAAA,UAAA,MAAA,WACA,KAAA,KAAA,KAAA,KAAA,KACA,KAAA,OAAA,GAGA,EAAA,UAAA,KAAA,SAAA,GACA,GAAA,IAAA,KAAA,OAAA,MAAA,GAGA,IAFA,IAAA,EAAA,KAAA,KACA,EAAA,GAAA,EAAA,KACA,EAAA,EAAA,MACA,GAAA,EAAA,EAAA,KACA,OAAA,GAGA,EAAA,UAAA,OAAA,SAAA,GACA,GAAA,IAAA,KAAA,OAAA,OAAA,EAAA,MAAA,GAIA,IAHA,IAAA,EAAA,EAAA,YAAA,IAAA,GACA,EAAA,KAAA,KACA,EAAA,EACA,GACA,EAAA,EAAA,KAAA,EAAA,GACA,GAAA,EAAA,KAAA,OACA,EAAA,EAAA,KAEA,OAAA,GAGA,EA1DA,GA6DA,GAAA,EAAA,SAAA,EAAA,QAAA,SACA,OAAA,QAAA,UAAA,EAAA,QAAA,QAAA,WACA,IAAA,EAAA,EAAA,QAAA,CAAA,OAAA,KAAA,SACA,OAAA,KAAA,YAAA,KAAA,IAAA;;AC3EA,aAIA,IAAA,EAAA,QAAA,wBAIA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,KAEA,EAAA,KAAA,gBAAA,KAAA,eAAA,UACA,EAAA,KAAA,gBAAA,KAAA,eAAA,UAEA,OAAA,GAAA,GACA,EACA,EAAA,GACA,IACA,KAAA,eAEA,KAAA,eAAA,eACA,KAAA,eAAA,cAAA,EACA,EAAA,SAAA,EAAA,KAAA,IAHA,EAAA,SAAA,EAAA,KAAA,IAOA,OAMA,KAAA,iBACA,KAAA,eAAA,WAAA,GAIA,KAAA,iBACA,KAAA,eAAA,WAAA,GAGA,KAAA,SAAA,GAAA,KAAA,SAAA,IACA,GAAA,EACA,EAAA,eAEA,EAAA,eAAA,eACA,EAAA,eAAA,cAAA,EACA,EAAA,SAAA,EAAA,EAAA,IAHA,EAAA,SAAA,EAAA,EAAA,GAKA,GACA,EAAA,KAIA,MAGA,SAAA,IACA,KAAA,iBACA,KAAA,eAAA,WAAA,EACA,KAAA,eAAA,SAAA,EACA,KAAA,eAAA,OAAA,EACA,KAAA,eAAA,YAAA,GAGA,KAAA,iBACA,KAAA,eAAA,WAAA,EACA,KAAA,eAAA,OAAA,EACA,KAAA,eAAA,QAAA,EACA,KAAA,eAAA,aAAA,EACA,KAAA,eAAA,aAAA,EACA,KAAA,eAAA,UAAA,EACA,KAAA,eAAA,cAAA,GAIA,SAAA,EAAA,EAAA,GACA,EAAA,KAAA,QAAA,GAGA,OAAA,QAAA,CACA,QAAA,EACA,UAAA;;;ACfA,IAAA,EAAA,UAAA,GA1CA,SAAA,EAAA,EAAA,GACA,GAAA,EAAA,iBACA,OAAA,EAGA,IAAA,GAAA,EAeA,OAdA,WACA,IAAA,EAAA,CACA,GAAA,EAAA,oBACA,MAAA,IAAA,MAAA,GACA,EAAA,oBACA,QAAA,MAAA,GAEA,QAAA,KAAA,GAEA,GAAA,EAEA,OAAA,EAAA,MAAA,KAAA,YAcA,SAAA,EAAA,GAEA,IACA,IAAA,EAAA,aAAA,OAAA,EACA,MAAA,GACA,OAAA,EAEA,IAAA,EAAA,EAAA,aAAA,GACA,OAAA,MAAA,GACA,SAAA,OAAA,GAAA,cA5DA,OAAA,QAAA;;;;;ACuqBC,IAAA,EAAA,QAAA,WAAA,EAAA,UAAA,GA/oBG8E,EAAMC,QAAQ,wBAMlB,SAASC,EAASC,EAAOC,EAAUC,GACjC,KAAKF,MAAQA,EACb,KAAKC,SAAWA,EAChB,KAAKE,SAAWD,EAChB,KAAKnL,KAAO,KAKd,SAASqL,EAAczD,GACrB,IAAI0D,EAAQ,KAEZ,KAAKtL,KAAO,KACZ,KAAKuL,MAAQ,KACb,KAAKC,OAAS,WACZC,EAAeH,EAAO1D,IAlB1BlG,OAAOxB,QAAUwL,EAwBjB,IAIIC,EAJAC,EAA+Gd,EAAI5H,SAOvHwI,EAASG,cAAgBA,EAGzB,IAAIC,EAAOtG,OAAOwB,OAAO+D,QAAQ,iBACjCe,EAAKC,SAAWhB,QAAQ,YAIxB,IAAIiB,EAAe,CACjBC,UAAWlB,QAAQ,mBAKjBmB,EAASnB,QAAQ,6BAKjBoB,EAASpB,QAAQ,eAAeoB,OAChCC,QAAmC,IAAXC,EAAyBA,EAA2B,oBAAXC,OAAyBA,OAAyB,oBAATC,KAAuBA,KAAO,IAAIC,YAAc,aAC9J,SAASC,EAAoBxB,GAC3B,OAAOkB,EAAOO,KAAKzB,GAErB,SAAS0B,EAAcC,GACrB,OAAOT,EAAOU,SAASD,IAAQA,aAAeR,EAKhD,IA2IIU,EA3IAC,EAAchC,QAAQ,8BAI1B,SAASiC,KAET,SAASnB,EAAcoB,EAASC,GAC9BvB,EAASA,GAAUZ,QAAQ,oBAE3BkC,EAAUA,GAAW,GAOrB,IAAIE,EAAWD,aAAkBvB,EAIjC,KAAKyB,aAAeH,EAAQG,WAExBD,IAAU,KAAKC,WAAa,KAAKA,cAAgBH,EAAQI,oBAK7D,IAAIC,EAAML,EAAQM,cACdC,EAAcP,EAAQQ,sBACtBC,EAAa,KAAKN,WAAa,GAAK,MAElB,KAAKG,cAAvBD,GAAe,IAARA,EAAgCA,EAAaH,IAAaK,GAA+B,IAAhBA,GAAyCA,EAAsCE,EAGnK,KAAKH,cAAgBxO,KAAK4O,MAAM,KAAKJ,eAGrC,KAAKK,aAAc,EAGnB,KAAKC,WAAY,EAEjB,KAAKC,QAAS,EAEd,KAAKC,OAAQ,EAEb,KAAKC,UAAW,EAGhB,KAAKC,WAAY,EAKjB,IAAIC,GAAqC,IAA1BjB,EAAQkB,cACvB,KAAKA,eAAiBD,EAKtB,KAAKE,gBAAkBnB,EAAQmB,iBAAmB,OAKlD,KAAK1P,OAAS,EAGd,KAAK2P,SAAU,EAGf,KAAKC,OAAS,EAMd,KAAKC,MAAO,EAKZ,KAAKC,kBAAmB,EAGxB,KAAKC,QAAU,SAAUrE,GACvBqE,EAAQvB,EAAQ9C,IAIlB,KAAKsE,QAAU,KAGf,KAAKC,SAAW,EAEhB,KAAKC,gBAAkB,KACvB,KAAKC,oBAAsB,KAI3B,KAAKC,UAAY,EAIjB,KAAKC,aAAc,EAGnB,KAAKC,cAAe,EAGpB,KAAKC,qBAAuB,EAI5B,KAAKC,mBAAqB,IAAI7D,EAAc,MA0C9C,SAASK,EAASuB,GAUhB,GATAtB,EAASA,GAAUZ,QAAQ,sBAStB+B,EAAgB5K,KAAKwJ,EAAU,OAAW,gBAAgBC,GAC7D,OAAO,IAAID,EAASuB,GAGtB,KAAKkC,eAAiB,IAAItD,EAAcoB,EAAS,MAGjD,KAAKmC,UAAW,EAEZnC,IAC2B,mBAAlBA,EAAQoC,QAAsB,KAAKC,OAASrC,EAAQoC,OAEjC,mBAAnBpC,EAAQsC,SAAuB,KAAKC,QAAUvC,EAAQsC,QAElC,mBAApBtC,EAAQwC,UAAwB,KAAKC,SAAWzC,EAAQwC,SAEtC,mBAAlBxC,EAAQ0C,QAAsB,KAAKC,OAAS3C,EAAQ0C,QAGjEzD,EAAOhK,KAAK,MAQd,SAAS2N,EAAc3C,EAAQ/B,GAC7B,IAAIf,EAAK,IAAIxI,MAAM,mBAEnBsL,EAAO9I,KAAK,QAASgG,GACrBU,EAAI5H,SAASiI,EAAIf,GAMnB,SAAS0F,EAAW5C,EAAQtF,EAAOqD,EAAOE,GACxC,IAAI4E,GAAQ,EACR3F,GAAK,EAYT,OAVc,OAAVa,EACFb,EAAK,IAAI7D,UAAU,uCACO,iBAAV0E,QAAgChF,IAAVgF,GAAwBrD,EAAMwF,aACpEhD,EAAK,IAAI7D,UAAU,oCAEjB6D,IACF8C,EAAO9I,KAAK,QAASgG,GACrBU,EAAI5H,SAASiI,EAAIf,GACjB2F,GAAQ,GAEHA,EAqDT,SAASC,EAAYpI,EAAOqD,EAAOC,GAIjC,OAHKtD,EAAMwF,aAAsC,IAAxBxF,EAAMuG,eAA4C,iBAAVlD,IAC/DA,EAAQkB,EAAOO,KAAKzB,EAAOC,IAEtBD,EAgBT,SAASgF,EAAc/C,EAAQtF,EAAOsI,EAAOjF,EAAOC,EAAUC,GAC5D,IAAK+E,EAAO,CACV,IAAIC,EAAWH,EAAYpI,EAAOqD,EAAOC,GACrCD,IAAUkF,IACZD,GAAQ,EACRhF,EAAW,SACXD,EAAQkF,GAGZ,IAAI1R,EAAMmJ,EAAMwF,WAAa,EAAInC,EAAMvM,OAEvCkJ,EAAMlJ,QAAUD,EAEhB,IAAIkK,EAAMf,EAAMlJ,OAASkJ,EAAM2F,cAI/B,GAFK5E,IAAKf,EAAMiG,WAAY,GAExBjG,EAAMyG,SAAWzG,EAAM0G,OAAQ,CACjC,IAAI8B,EAAOxI,EAAMiH,oBACjBjH,EAAMiH,oBAAsB,CAC1B5D,MAAOA,EACPC,SAAUA,EACVgF,MAAOA,EACP9E,SAAUD,EACVnL,KAAM,MAEJoQ,EACFA,EAAKpQ,KAAO4H,EAAMiH,oBAElBjH,EAAMgH,gBAAkBhH,EAAMiH,oBAEhCjH,EAAMqH,sBAAwB,OAE9BoB,EAAQnD,EAAQtF,GAAO,EAAOnJ,EAAKwM,EAAOC,EAAUC,GAGtD,OAAOxC,EAGT,SAAS0H,EAAQnD,EAAQtF,EAAO2H,EAAQ9Q,EAAKwM,EAAOC,EAAUC,GAC5DvD,EAAM+G,SAAWlQ,EACjBmJ,EAAM8G,QAAUvD,EAChBvD,EAAMyG,SAAU,EAChBzG,EAAM2G,MAAO,EACTgB,EAAQrC,EAAOsC,QAAQvE,EAAOrD,EAAM6G,SAAcvB,EAAOoC,OAAOrE,EAAOC,EAAUtD,EAAM6G,SAC3F7G,EAAM2G,MAAO,EAGf,SAAS+B,EAAapD,EAAQtF,EAAO2G,EAAMnE,EAAIe,KAC3CvD,EAAMkH,UAEJP,GAGFzD,EAAI5H,SAASiI,EAAIf,GAGjBU,EAAI5H,SAASqN,EAAarD,EAAQtF,GAClCsF,EAAOiC,eAAeH,cAAe,EACrC9B,EAAO9I,KAAK,QAASgG,KAIrBe,EAAGf,GACH8C,EAAOiC,eAAeH,cAAe,EACrC9B,EAAO9I,KAAK,QAASgG,GAGrBmG,EAAYrD,EAAQtF,IAIxB,SAAS4I,EAAmB5I,GAC1BA,EAAMyG,SAAU,EAChBzG,EAAM8G,QAAU,KAChB9G,EAAMlJ,QAAUkJ,EAAM+G,SACtB/G,EAAM+G,SAAW,EAGnB,SAASF,EAAQvB,EAAQ9C,GACvB,IAAIxC,EAAQsF,EAAOiC,eACfZ,EAAO3G,EAAM2G,KACbpD,EAAKvD,EAAM8G,QAIf,GAFA8B,EAAmB5I,GAEfwC,EAAIkG,EAAapD,EAAQtF,EAAO2G,EAAMnE,EAAIe,OAAS,CAErD,IAAI6C,EAAWyC,EAAW7I,GAErBoG,GAAapG,EAAM0G,QAAW1G,EAAM4G,mBAAoB5G,EAAMgH,iBACjE8B,EAAYxD,EAAQtF,GAGlB2G,EAEF3C,EAAW+E,EAAYzD,EAAQtF,EAAOoG,EAAU7C,GAGhDwF,EAAWzD,EAAQtF,EAAOoG,EAAU7C,IAK1C,SAASwF,EAAWzD,EAAQtF,EAAOoG,EAAU7C,GACtC6C,GAAU4C,EAAa1D,EAAQtF,GACpCA,EAAMkH,YACN3D,IACAoF,EAAYrD,EAAQtF,GAMtB,SAASgJ,EAAa1D,EAAQtF,GACP,IAAjBA,EAAMlJ,QAAgBkJ,EAAMiG,YAC9BjG,EAAMiG,WAAY,EAClBX,EAAO9I,KAAK,UAKhB,SAASsM,EAAYxD,EAAQtF,GAC3BA,EAAM4G,kBAAmB,EACzB,IAAIjD,EAAQ3D,EAAMgH,gBAElB,GAAI1B,EAAOsC,SAAWjE,GAASA,EAAMvL,KAAM,CAEzC,IAAI6Q,EAAIjJ,EAAMqH,qBACV6B,EAAS,IAAI1N,MAAMyN,GACnBE,EAASnJ,EAAMsH,mBACnB6B,EAAOxF,MAAQA,EAIf,IAFA,IAAIhE,EAAQ,EACRyJ,GAAa,EACVzF,GACLuF,EAAOvJ,GAASgE,EACXA,EAAM2E,QAAOc,GAAa,GAC/BzF,EAAQA,EAAMvL,KACduH,GAAS,EAEXuJ,EAAOE,WAAaA,EAEpBX,EAAQnD,EAAQtF,GAAO,EAAMA,EAAMlJ,OAAQoS,EAAQ,GAAIC,EAAOvF,QAI9D5D,EAAMkH,YACNlH,EAAMiH,oBAAsB,KACxBkC,EAAO/Q,MACT4H,EAAMsH,mBAAqB6B,EAAO/Q,KAClC+Q,EAAO/Q,KAAO,MAEd4H,EAAMsH,mBAAqB,IAAI7D,EAAczD,GAE/CA,EAAMqH,qBAAuB,MACxB,CAEL,KAAO1D,GAAO,CACZ,IAAIN,EAAQM,EAAMN,MACdC,EAAWK,EAAML,SACjBC,EAAKI,EAAMH,SAUf,GAPAiF,EAAQnD,EAAQtF,GAAO,EAFbA,EAAMwF,WAAa,EAAInC,EAAMvM,OAEJuM,EAAOC,EAAUC,GACpDI,EAAQA,EAAMvL,KACd4H,EAAMqH,uBAKFrH,EAAMyG,QACR,MAIU,OAAV9C,IAAgB3D,EAAMiH,oBAAsB,MAGlDjH,EAAMgH,gBAAkBrD,EACxB3D,EAAM4G,kBAAmB,EAiC3B,SAASiC,EAAW7I,GAClB,OAAOA,EAAMkG,QAA2B,IAAjBlG,EAAMlJ,QAA0C,OAA1BkJ,EAAMgH,kBAA6BhH,EAAMoG,WAAapG,EAAMyG,QAE3G,SAAS4C,EAAU/D,EAAQtF,GACzBsF,EAAO0C,OAAO,SAAU5G,GACtBpB,EAAMkH,YACF9F,GACFkE,EAAO9I,KAAK,QAAS4E,GAEvBpB,EAAMmH,aAAc,EACpB7B,EAAO9I,KAAK,aACZmM,EAAYrD,EAAQtF,KAGxB,SAASsJ,EAAUhE,EAAQtF,GACpBA,EAAMmH,aAAgBnH,EAAMgG,cACF,mBAAlBV,EAAO0C,QAChBhI,EAAMkH,YACNlH,EAAMgG,aAAc,EACpB9C,EAAI5H,SAAS+N,EAAW/D,EAAQtF,KAEhCA,EAAMmH,aAAc,EACpB7B,EAAO9I,KAAK,eAKlB,SAASmM,EAAYrD,EAAQtF,GAC3B,IAAIuJ,EAAOV,EAAW7I,GAQtB,OAPIuJ,IACFD,EAAUhE,EAAQtF,GACM,IAApBA,EAAMkH,YACRlH,EAAMoG,UAAW,EACjBd,EAAO9I,KAAK,YAGT+M,EAGT,SAASC,EAAYlE,EAAQtF,EAAOuD,GAClCvD,EAAMkG,QAAS,EACfyC,EAAYrD,EAAQtF,GAChBuD,IACEvD,EAAMoG,SAAUlD,EAAI5H,SAASiI,GAAS+B,EAAOlJ,KAAK,SAAUmH,IAElEvD,EAAMmG,OAAQ,EACdb,EAAOkC,UAAW,EAGpB,SAAS3D,EAAe4F,EAASzJ,EAAOoB,GACtC,IAAIuC,EAAQ8F,EAAQ9F,MAEpB,IADA8F,EAAQ9F,MAAQ,KACTA,GAAO,CACZ,IAAIJ,EAAKI,EAAMH,SACfxD,EAAMkH,YACN3D,EAAGnC,GACHuC,EAAQA,EAAMvL,KAIhB4H,EAAMsH,mBAAmBlP,KAAOqR,EAjjBlCvF,EAAKC,SAASL,EAAUQ,GAmHxBL,EAActI,UAAU+N,UAAY,WAGlC,IAFA,IAAIC,EAAU,KAAK3C,gBACf4C,EAAM,GACHD,GACLC,EAAIlO,KAAKiO,GACTA,EAAUA,EAAQvR,KAEpB,OAAOwR,GAGT,WACE,IACEhM,OAAOkE,eAAemC,EAActI,UAAW,SAAU,CACvDqG,IAAKoC,EAAaC,UAAU,WAC1B,OAAO,KAAKqF,aACX,6EAAmF,aAExF,MAAOG,KAPX,GAasB,mBAAXC,QAAyBA,OAAOC,aAAiE,mBAA3CvM,SAAS7B,UAAUmO,OAAOC,cACzF7E,EAAkB1H,SAAS7B,UAAUmO,OAAOC,aAC5CnM,OAAOkE,eAAegC,EAAUgG,OAAOC,YAAa,CAClD9L,MAAO,SAAU+L,GACf,QAAI9E,EAAgB5K,KAAK,KAAM0P,IAC3B,OAASlG,IAENkG,GAAUA,EAAOzC,0BAA0BtD,OAItDiB,EAAkB,SAAU8E,GAC1B,OAAOA,aAAkB,MAqC7BlG,EAASnI,UAAUsO,KAAO,WACxB,KAAKzN,KAAK,QAAS,IAAIxC,MAAM,+BA8B/B8J,EAASnI,UAAU8L,MAAQ,SAAUpE,EAAOC,EAAUC,GACpD,IAAIvD,EAAQ,KAAKuH,eACbxG,GAAM,EACNuH,GAAStI,EAAMwF,YAAcT,EAAc1B,GAoB/C,OAlBIiF,IAAU/D,EAAOU,SAAS5B,KAC5BA,EAAQwB,EAAoBxB,IAGN,mBAAbC,IACTC,EAAKD,EACLA,EAAW,MAGTgF,EAAOhF,EAAW,SAAmBA,IAAUA,EAAWtD,EAAMwG,iBAElD,mBAAPjD,IAAmBA,EAAK6B,GAE/BpF,EAAMmG,MAAO8B,EAAc,KAAM1E,IAAa+E,GAASJ,EAAW,KAAMlI,EAAOqD,EAAOE,MACxFvD,EAAMkH,YACNnG,EAAMsH,EAAc,KAAMrI,EAAOsI,EAAOjF,EAAOC,EAAUC,IAGpDxC,GAGT+C,EAASnI,UAAUuO,KAAO,WACZ,KAAK3C,eAEXb,UAGR5C,EAASnI,UAAUwO,OAAS,WAC1B,IAAInK,EAAQ,KAAKuH,eAEbvH,EAAM0G,SACR1G,EAAM0G,SAED1G,EAAMyG,SAAYzG,EAAM0G,QAAW1G,EAAM4G,mBAAoB5G,EAAMgH,iBAAiB8B,EAAY,KAAM9I,KAI/G8D,EAASnI,UAAUyO,mBAAqB,SAA4B9G,GAGlE,GADwB,iBAAbA,IAAuBA,EAAWA,EAAS+G,iBAChD,CAAC,MAAO,OAAQ,QAAS,QAAS,SAAU,SAAU,OAAQ,QAAS,UAAW,WAAY,OAAOrT,SAASsM,EAAW,IAAI+G,gBAAkB,GAAI,MAAM,IAAI1L,UAAU,qBAAuB2E,GAEpM,OADA,KAAKiE,eAAef,gBAAkBlD,EAC/B,MAUT1F,OAAOkE,eAAegC,EAASnI,UAAW,wBAAyB,CAIjEoG,YAAY,EACZC,IAAK,WACH,OAAO,KAAKuF,eAAe5B,iBA8L/B7B,EAASnI,UAAU+L,OAAS,SAAUrE,EAAOC,EAAUC,GACrDA,EAAG,IAAIvJ,MAAM,iCAGf8J,EAASnI,UAAUiM,QAAU,KAE7B9D,EAASnI,UAAU2O,IAAM,SAAUjH,EAAOC,EAAUC,GAClD,IAAIvD,EAAQ,KAAKuH,eAEI,mBAAVlE,GACTE,EAAKF,EACLA,EAAQ,KACRC,EAAW,MACkB,mBAAbA,IAChBC,EAAKD,EACLA,EAAW,MAGTD,MAAAA,GAAuC,KAAKoE,MAAMpE,EAAOC,GAGzDtD,EAAM0G,SACR1G,EAAM0G,OAAS,EACf,KAAKyD,UAIFnK,EAAMkG,QAAQsD,EAAY,KAAMxJ,EAAOuD,IAkE9C3F,OAAOkE,eAAegC,EAASnI,UAAW,YAAa,CACrDqG,IAAK,WACH,YAA4B3D,IAAxB,KAAKkJ,gBAGF,KAAKA,eAAelB,WAE7BpE,IAAK,SAAUhE,GAGR,KAAKsJ,iBAMV,KAAKA,eAAelB,UAAYpI,MAIpC6F,EAASnI,UAAUkM,QAAU1C,EAAY0C,QACzC/D,EAASnI,UAAU4O,WAAapF,EAAYqF,UAC5C1G,EAASnI,UAAUmM,SAAW,SAAU1G,EAAKmC,GAC3C,KAAK+G,MACL/G,EAAGnC;;ACjpBL,aAIA,IAAA,EAAA,QAAA,wBAIA,EAAA,OAAA,MAAA,SAAA,GACA,IAAA,EAAA,GACA,IAAA,IAAA,KAAA,EACA,EAAA,KAAA,GACA,OAAA,GAIA,OAAA,QAAA,EAGA,IAAA,EAAA,OAAA,OAAA,QAAA,iBACA,EAAA,SAAA,QAAA,YAGA,IAAA,EAAA,QAAA,sBACA,EAAA,QAAA,sBAEA,EAAA,SAAA,EAAA,GAKA,IADA,IAAA,EAAA,EAAA,EAAA,WACA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CACA,IAAA,EAAA,EAAA,GACA,EAAA,UAAA,KAAA,EAAA,UAAA,GAAA,EAAA,UAAA,IAIA,SAAA,EAAA,GACA,KAAA,gBAAA,GAAA,OAAA,IAAA,EAAA,GAEA,EAAA,KAAA,KAAA,GACA,EAAA,KAAA,KAAA,GAEA,IAAA,IAAA,EAAA,WAAA,KAAA,UAAA,GAEA,IAAA,IAAA,EAAA,WAAA,KAAA,UAAA,GAEA,KAAA,eAAA,EACA,IAAA,IAAA,EAAA,gBAAA,KAAA,eAAA,GAEA,KAAA,KAAA,MAAA,GAcA,SAAA,IAGA,KAAA,eAAA,KAAA,eAAA,OAIA,EAAA,SAAA,EAAA,MAGA,SAAA,EAAA,GACA,EAAA,MAtBA,OAAA,eAAA,EAAA,UAAA,wBAAA,CAIA,YAAA,EACA,IAAA,WACA,OAAA,KAAA,eAAA,iBAmBA,OAAA,eAAA,EAAA,UAAA,YAAA,CACA,IAAA,WACA,YAAA,IAAA,KAAA,qBAAA,IAAA,KAAA,iBAGA,KAAA,eAAA,WAAA,KAAA,eAAA,YAEA,IAAA,SAAA,QAGA,IAAA,KAAA,qBAAA,IAAA,KAAA,iBAMA,KAAA,eAAA,UAAA,EACA,KAAA,eAAA,UAAA,MAIA,EAAA,UAAA,SAAA,SAAA,EAAA,GACA,KAAA,KAAA,MACA,KAAA,MAEA,EAAA,SAAA,EAAA;;;AC5GA,aAIA,IAAA,EAAA,QAAA,eAAA,OAGA,EAAA,EAAA,YAAA,SAAA,GAEA,QADA,EAAA,GAAA,IACA,EAAA,eACA,IAAA,MAAA,IAAA,OAAA,IAAA,QAAA,IAAA,QAAA,IAAA,SAAA,IAAA,SAAA,IAAA,OAAA,IAAA,QAAA,IAAA,UAAA,IAAA,WAAA,IAAA,MACA,OAAA,EACA,QACA,OAAA,IAIA,SAAA,EAAA,GACA,IAAA,EAAA,MAAA,OAEA,IADA,IAAA,IAEA,OAAA,GACA,IAAA,OACA,IAAA,QACA,MAAA,OACA,IAAA,OACA,IAAA,QACA,IAAA,UACA,IAAA,WACA,MAAA,UACA,IAAA,SACA,IAAA,SACA,MAAA,SACA,IAAA,SACA,IAAA,QACA,IAAA,MACA,OAAA,EACA,QACA,GAAA,EAAA,OACA,GAAA,GAAA,GAAA,cACA,GAAA,GAOA,SAAA,EAAA,GACA,IAAA,EAAA,EAAA,GACA,GAAA,iBAAA,IAAA,EAAA,aAAA,IAAA,EAAA,IAAA,MAAA,IAAA,MAAA,qBAAA,GACA,OAAA,GAAA,EAOA,SAAA,EAAA,GAEA,IAAA,EACA,OAFA,KAAA,SAAA,EAAA,GAEA,KAAA,UACA,IAAA,UACA,KAAA,KAAA,EACA,KAAA,IAAA,EACA,EAAA,EACA,MACA,IAAA,OACA,KAAA,SAAA,EACA,EAAA,EACA,MACA,IAAA,SACA,KAAA,KAAA,EACA,KAAA,IAAA,EACA,EAAA,EACA,MACA,QAGA,OAFA,KAAA,MAAA,OACA,KAAA,IAAA,GAGA,KAAA,SAAA,EACA,KAAA,UAAA,EACA,KAAA,SAAA,EAAA,YAAA,GAoCA,SAAA,EAAA,GACA,OAAA,GAAA,IAAA,EAAA,GAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,GAAA,GAAA,EACA,GAAA,GAAA,GAAA,GAAA,EAMA,SAAA,EAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,OAAA,EACA,GAAA,EAAA,EAAA,OAAA,EACA,IAAA,EAAA,EAAA,EAAA,IACA,OAAA,GAAA,GACA,EAAA,IAAA,EAAA,SAAA,EAAA,GACA,KAEA,EAAA,IAAA,IAAA,EAAA,GACA,EAAA,EAAA,EAAA,MACA,GACA,EAAA,IAAA,EAAA,SAAA,EAAA,GACA,KAEA,EAAA,IAAA,IAAA,EAAA,GACA,EAAA,EAAA,EAAA,MACA,GACA,EAAA,IACA,IAAA,EAAA,EAAA,EAAA,EAAA,SAAA,EAAA,GAEA,GAEA,EAWA,SAAA,EAAA,EAAA,EAAA,GACA,GAAA,MAAA,IAAA,EAAA,IAEA,OADA,EAAA,SAAA,EACA,IAEA,GAAA,EAAA,SAAA,GAAA,EAAA,OAAA,EAAA,CACA,GAAA,MAAA,IAAA,EAAA,IAEA,OADA,EAAA,SAAA,EACA,IAEA,GAAA,EAAA,SAAA,GAAA,EAAA,OAAA,GACA,MAAA,IAAA,EAAA,IAEA,OADA,EAAA,SAAA,EACA,KAOA,SAAA,EAAA,GACA,IAAA,EAAA,KAAA,UAAA,KAAA,SACA,EAAA,EAAA,KAAA,EAAA,GACA,YAAA,IAAA,EAAA,EACA,KAAA,UAAA,EAAA,QACA,EAAA,KAAA,KAAA,SAAA,EAAA,EAAA,KAAA,UACA,KAAA,SAAA,SAAA,KAAA,SAAA,EAAA,KAAA,aAEA,EAAA,KAAA,KAAA,SAAA,EAAA,EAAA,EAAA,aACA,KAAA,UAAA,EAAA,SAMA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,KAAA,EAAA,GACA,IAAA,KAAA,SAAA,OAAA,EAAA,SAAA,OAAA,GACA,KAAA,UAAA,EACA,IAAA,EAAA,EAAA,QAAA,EAAA,KAAA,UAEA,OADA,EAAA,KAAA,KAAA,SAAA,EAAA,GACA,EAAA,SAAA,OAAA,EAAA,GAKA,SAAA,EAAA,GACA,IAAA,EAAA,GAAA,EAAA,OAAA,KAAA,MAAA,GAAA,GACA,OAAA,KAAA,SAAA,EAAA,IACA,EAOA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,OAAA,GAAA,GAAA,EAAA,CACA,IAAA,EAAA,EAAA,SAAA,UAAA,GACA,GAAA,EAAA,CACA,IAAA,EAAA,EAAA,WAAA,EAAA,OAAA,GACA,GAAA,GAAA,OAAA,GAAA,MAKA,OAJA,KAAA,SAAA,EACA,KAAA,UAAA,EACA,KAAA,SAAA,GAAA,EAAA,EAAA,OAAA,GACA,KAAA,SAAA,GAAA,EAAA,EAAA,OAAA,GACA,EAAA,MAAA,GAAA,GAGA,OAAA,EAKA,OAHA,KAAA,SAAA,EACA,KAAA,UAAA,EACA,KAAA,SAAA,GAAA,EAAA,EAAA,OAAA,GACA,EAAA,SAAA,UAAA,EAAA,EAAA,OAAA,GAKA,SAAA,EAAA,GACA,IAAA,EAAA,GAAA,EAAA,OAAA,KAAA,MAAA,GAAA,GACA,GAAA,KAAA,SAAA,CACA,IAAA,EAAA,KAAA,UAAA,KAAA,SACA,OAAA,EAAA,KAAA,SAAA,SAAA,UAAA,EAAA,GAEA,OAAA,EAGA,SAAA,EAAA,EAAA,GACA,IAAA,GAAA,EAAA,OAAA,GAAA,EACA,OAAA,IAAA,EAAA,EAAA,SAAA,SAAA,IACA,KAAA,SAAA,EAAA,EACA,KAAA,UAAA,EACA,IAAA,EACA,KAAA,SAAA,GAAA,EAAA,EAAA,OAAA,IAEA,KAAA,SAAA,GAAA,EAAA,EAAA,OAAA,GACA,KAAA,SAAA,GAAA,EAAA,EAAA,OAAA,IAEA,EAAA,SAAA,SAAA,EAAA,EAAA,OAAA,IAGA,SAAA,EAAA,GACA,IAAA,EAAA,GAAA,EAAA,OAAA,KAAA,MAAA,GAAA,GACA,OAAA,KAAA,SAAA,EAAA,KAAA,SAAA,SAAA,SAAA,EAAA,EAAA,KAAA,UACA,EAIA,SAAA,EAAA,GACA,OAAA,EAAA,SAAA,KAAA,UAGA,SAAA,EAAA,GACA,OAAA,GAAA,EAAA,OAAA,KAAA,MAAA,GAAA,GAzNA,QAAA,cAAA,EA6BA,EAAA,UAAA,MAAA,SAAA,GACA,GAAA,IAAA,EAAA,OAAA,MAAA,GACA,IAAA,EACA,EACA,GAAA,KAAA,SAAA,CAEA,QAAA,KADA,EAAA,KAAA,SAAA,IACA,MAAA,GACA,EAAA,KAAA,SACA,KAAA,SAAA,OAEA,EAAA,EAEA,OAAA,EAAA,EAAA,OAAA,EAAA,EAAA,KAAA,KAAA,EAAA,GAAA,KAAA,KAAA,EAAA,GACA,GAAA,IAGA,EAAA,UAAA,IAAA,EAGA,EAAA,UAAA,KAAA,EAGA,EAAA,UAAA,SAAA,SAAA,GACA,GAAA,KAAA,UAAA,EAAA,OAEA,OADA,EAAA,KAAA,KAAA,SAAA,KAAA,UAAA,KAAA,SAAA,EAAA,KAAA,UACA,KAAA,SAAA,SAAA,KAAA,SAAA,EAAA,KAAA,WAEA,EAAA,KAAA,KAAA,SAAA,KAAA,UAAA,KAAA,SAAA,EAAA,EAAA,QACA,KAAA,UAAA,EAAA;;;;;ACo3BA,IAAA,EAAA,UAAA,GAAA,EAAA,QAAA,WAj+BA,EAAA,QAAA,wBAGA,OAAA,QAAA,EAGA,IAIA,EAJA,EAAA,QAAA,WAOA,EAAA,cAAA,EAGA,IAAA,EAAA,QAAA,UAAA,aAEA,EAAA,SAAA,EAAA,GACA,OAAA,EAAA,UAAA,GAAA,QAKA,EAAA,QAAA,6BAKA,EAAA,QAAA,eAAA,OACA,QAAA,IAAA,EAAA,EAAA,oBAAA,OAAA,OAAA,oBAAA,KAAA,KAAA,IAAA,YAAA,aACA,SAAA,EAAA,GACA,OAAA,EAAA,KAAA,GAEA,SAAA,EAAA,GACA,OAAA,EAAA,SAAA,IAAA,aAAA,EAMA,IAAA,EAAA,OAAA,OAAA,QAAA,iBACA,EAAA,SAAA,QAAA,YAIA,IAAA,EAAA,QAAA,QACA,OAAA,EAEA,EADA,GAAA,EAAA,SACA,EAAA,SAAA,UAEA,aAIA,IAEA,EAFA,EAAA,QAAA,iCACA,EAAA,QAAA,8BAGA,EAAA,SAAA,EAAA,GAEA,IAAA,EAAA,CAAA,QAAA,QAAA,UAAA,QAAA,UAEA,SAAA,EAAA,EAAA,EAAA,GAGA,GAAA,mBAAA,EAAA,gBAAA,OAAA,EAAA,gBAAA,EAAA,GAMA,EAAA,SAAA,EAAA,QAAA,GAAA,EAAA,EAAA,QAAA,IAAA,EAAA,QAAA,GAAA,QAAA,GAAA,EAAA,QAAA,GAAA,CAAA,EAAA,EAAA,QAAA,IAAA,EAAA,GAAA,EAAA,GAGA,SAAA,EAAA,EAAA,GAGA,EAAA,GAAA,GAOA,IAAA,EAAA,aATA,EAAA,GAAA,QAAA,qBAaA,KAAA,aAAA,EAAA,WAEA,IAAA,KAAA,WAAA,KAAA,cAAA,EAAA,oBAIA,IAAA,EAAA,EAAA,cACA,EAAA,EAAA,sBACA,EAAA,KAAA,WAAA,GAAA,MAEA,KAAA,cAAA,GAAA,IAAA,EAAA,EAAA,IAAA,GAAA,IAAA,GAAA,EAAA,EAGA,KAAA,cAAA,KAAA,MAAA,KAAA,eAKA,KAAA,OAAA,IAAA,EACA,KAAA,OAAA,EACA,KAAA,MAAA,KACA,KAAA,WAAA,EACA,KAAA,QAAA,KACA,KAAA,OAAA,EACA,KAAA,YAAA,EACA,KAAA,SAAA,EAMA,KAAA,MAAA,EAIA,KAAA,cAAA,EACA,KAAA,iBAAA,EACA,KAAA,mBAAA,EACA,KAAA,iBAAA,EAGA,KAAA,WAAA,EAKA,KAAA,gBAAA,EAAA,iBAAA,OAGA,KAAA,WAAA,EAGA,KAAA,aAAA,EAEA,KAAA,QAAA,KACA,KAAA,SAAA,KACA,EAAA,WACA,IAAA,EAAA,QAAA,mBAAA,eACA,KAAA,QAAA,IAAA,EAAA,EAAA,UACA,KAAA,SAAA,EAAA,UAIA,SAAA,EAAA,GAGA,GAFA,EAAA,GAAA,QAAA,sBAEA,gBAAA,GAAA,OAAA,IAAA,EAAA,GAEA,KAAA,eAAA,IAAA,EAAA,EAAA,MAGA,KAAA,UAAA,EAEA,IACA,mBAAA,EAAA,OAAA,KAAA,MAAA,EAAA,MAEA,mBAAA,EAAA,UAAA,KAAA,SAAA,EAAA,UAGA,EAAA,KAAA,MA2DA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACA,IAKA,EALA,EAAA,EAAA,eACA,OAAA,GACA,EAAA,SAAA,EACA,EAAA,EAAA,KAGA,IAAA,EAAA,EAAA,EAAA,IACA,EACA,EAAA,KAAA,QAAA,GACA,EAAA,YAAA,GAAA,EAAA,OAAA,GACA,iBAAA,GAAA,EAAA,YAAA,OAAA,eAAA,KAAA,EAAA,YACA,EAAA,EAAA,IAGA,EACA,EAAA,WAAA,EAAA,KAAA,QAAA,IAAA,MAAA,qCAAA,EAAA,EAAA,EAAA,GAAA,GACA,EAAA,MACA,EAAA,KAAA,QAAA,IAAA,MAAA,6BAEA,EAAA,SAAA,EACA,EAAA,UAAA,GACA,EAAA,EAAA,QAAA,MAAA,GACA,EAAA,YAAA,IAAA,EAAA,OAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,IAEA,EAAA,EAAA,EAAA,GAAA,KAGA,IACA,EAAA,SAAA,IAIA,OAAA,EAAA,GAGA,SAAA,EAAA,EAAA,EAAA,EAAA,GACA,EAAA,SAAA,IAAA,EAAA,SAAA,EAAA,MACA,EAAA,KAAA,OAAA,GACA,EAAA,KAAA,KAGA,EAAA,QAAA,EAAA,WAAA,EAAA,EAAA,OACA,EAAA,EAAA,OAAA,QAAA,GAAA,EAAA,OAAA,KAAA,GAEA,EAAA,cAAA,EAAA,IAEA,EAAA,EAAA,GAGA,SAAA,EAAA,EAAA,GACA,IAAA,EAIA,OAHA,EAAA,IAAA,iBAAA,QAAA,IAAA,GAAA,EAAA,aACA,EAAA,IAAA,UAAA,oCAEA,EAUA,SAAA,EAAA,GACA,OAAA,EAAA,QAAA,EAAA,cAAA,EAAA,OAAA,EAAA,eAAA,IAAA,EAAA,QA1HA,OAAA,eAAA,EAAA,UAAA,YAAA,CACA,IAAA,WACA,YAAA,IAAA,KAAA,gBAGA,KAAA,eAAA,WAEA,IAAA,SAAA,GAGA,KAAA,iBAMA,KAAA,eAAA,UAAA,MAIA,EAAA,UAAA,QAAA,EAAA,QACA,EAAA,UAAA,WAAA,EAAA,UACA,EAAA,UAAA,SAAA,SAAA,EAAA,GACA,KAAA,KAAA,MACA,EAAA,IAOA,EAAA,UAAA,KAAA,SAAA,EAAA,GACA,IACA,EADA,EAAA,KAAA,eAgBA,OAbA,EAAA,WAUA,GAAA,EATA,iBAAA,KACA,EAAA,GAAA,EAAA,mBACA,EAAA,WACA,EAAA,EAAA,KAAA,EAAA,GACA,EAAA,IAEA,GAAA,GAMA,EAAA,KAAA,EAAA,GAAA,EAAA,IAIA,EAAA,UAAA,QAAA,SAAA,GACA,OAAA,EAAA,KAAA,EAAA,MAAA,GAAA,IAwEA,EAAA,UAAA,SAAA,WACA,OAAA,IAAA,KAAA,eAAA,SAIA,EAAA,UAAA,YAAA,SAAA,GAIA,OAHA,IAAA,EAAA,QAAA,mBAAA,eACA,KAAA,eAAA,QAAA,IAAA,EAAA,GACA,KAAA,eAAA,SAAA,EACA,MAIA,IAAA,EAAA,QACA,SAAA,EAAA,GAcA,OAbA,GAAA,EACA,EAAA,GAIA,IACA,GAAA,IAAA,EACA,GAAA,IAAA,EACA,GAAA,IAAA,EACA,GAAA,IAAA,EACA,GAAA,IAAA,GACA,KAEA,EAKA,SAAA,EAAA,EAAA,GACA,OAAA,GAAA,GAAA,IAAA,EAAA,QAAA,EAAA,MAAA,EACA,EAAA,WAAA,EACA,GAAA,EAEA,EAAA,SAAA,EAAA,OAAA,EAAA,OAAA,KAAA,KAAA,OAAA,EAAA,QAGA,EAAA,EAAA,gBAAA,EAAA,cAAA,EAAA,IACA,GAAA,EAAA,OAAA,EAEA,EAAA,MAIA,EAAA,QAHA,EAAA,cAAA,EACA,IA0GA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,MAAA,CACA,GAAA,EAAA,QAAA,CACA,IAAA,EAAA,EAAA,QAAA,MACA,GAAA,EAAA,SACA,EAAA,OAAA,KAAA,GACA,EAAA,QAAA,EAAA,WAAA,EAAA,EAAA,QAGA,EAAA,OAAA,EAGA,EAAA,IAMA,SAAA,EAAA,GACA,IAAA,EAAA,EAAA,eACA,EAAA,cAAA,EACA,EAAA,kBACA,EAAA,eAAA,EAAA,SACA,EAAA,iBAAA,EACA,EAAA,KAAA,EAAA,SAAA,EAAA,GAAA,EAAA,IAIA,SAAA,EAAA,GACA,EAAA,iBACA,EAAA,KAAA,YACA,EAAA,GASA,SAAA,EAAA,EAAA,GACA,EAAA,cACA,EAAA,aAAA,EACA,EAAA,SAAA,EAAA,EAAA,IAIA,SAAA,EAAA,EAAA,GAEA,IADA,IAAA,EAAA,EAAA,QACA,EAAA,UAAA,EAAA,UAAA,EAAA,OAAA,EAAA,OAAA,EAAA,gBACA,EAAA,wBACA,EAAA,KAAA,GACA,IAAA,EAAA,SAEA,EAAA,EAAA,OAEA,EAAA,aAAA,EAkJA,SAAA,EAAA,GACA,OAAA,WACA,IAAA,EAAA,EAAA,eACA,EAAA,cAAA,EAAA,YACA,EAAA,YAAA,EAAA,aACA,IAAA,EAAA,YAAA,EAAA,EAAA,UACA,EAAA,SAAA,EACA,EAAA,KAgFA,SAAA,EAAA,GACA,EAAA,4BACA,EAAA,KAAA,GAeA,SAAA,EAAA,EAAA,GACA,EAAA,kBACA,EAAA,iBAAA,EACA,EAAA,SAAA,EAAA,EAAA,IAIA,SAAA,EAAA,EAAA,GACA,EAAA,UACA,EAAA,iBACA,EAAA,KAAA,IAGA,EAAA,iBAAA,EACA,EAAA,WAAA,EACA,EAAA,KAAA,UACA,EAAA,GACA,EAAA,UAAA,EAAA,SAAA,EAAA,KAAA,GAaA,SAAA,EAAA,GACA,IAAA,EAAA,EAAA,eAEA,IADA,EAAA,OAAA,EAAA,SACA,EAAA,SAAA,OAAA,EAAA,UAmFA,SAAA,EAAA,EAAA,GAEA,OAAA,IAAA,EAAA,OAAA,MAGA,EAAA,WAAA,EAAA,EAAA,OAAA,SAAA,GAAA,GAAA,EAAA,QAEA,EAAA,EAAA,QAAA,EAAA,OAAA,KAAA,IAAA,IAAA,EAAA,OAAA,OAAA,EAAA,OAAA,KAAA,KAAA,EAAA,OAAA,OAAA,EAAA,QACA,EAAA,OAAA,SAGA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,SAGA,GAVA,IAAA,EAgBA,SAAA,EAAA,EAAA,EAAA,GACA,IAAA,EAYA,OAXA,EAAA,EAAA,KAAA,KAAA,QAEA,EAAA,EAAA,KAAA,KAAA,MAAA,EAAA,GACA,EAAA,KAAA,KAAA,EAAA,KAAA,KAAA,MAAA,IAGA,EAFA,IAAA,EAAA,KAAA,KAAA,OAEA,EAAA,QAGA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAEA,EAOA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,KACA,EAAA,EACA,EAAA,EAAA,KAEA,IADA,GAAA,EAAA,OACA,EAAA,EAAA,MAAA,CACA,IAAA,EAAA,EAAA,KACA,EAAA,EAAA,EAAA,OAAA,EAAA,OAAA,EAGA,GAFA,IAAA,EAAA,OAAA,GAAA,EAAA,GAAA,EAAA,MAAA,EAAA,GAEA,KADA,GAAA,GACA,CACA,IAAA,EAAA,UACA,EACA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,OAEA,EAAA,KAAA,EACA,EAAA,KAAA,EAAA,MAAA,IAEA,QAEA,EAGA,OADA,EAAA,QAAA,EACA,EAMA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,YAAA,GACA,EAAA,EAAA,KACA,EAAA,EAGA,IAFA,EAAA,KAAA,KAAA,GACA,GAAA,EAAA,KAAA,OACA,EAAA,EAAA,MAAA,CACA,IAAA,EAAA,EAAA,KACA,EAAA,EAAA,EAAA,OAAA,EAAA,OAAA,EAGA,GAFA,EAAA,KAAA,EAAA,EAAA,OAAA,EAAA,EAAA,GAEA,KADA,GAAA,GACA,CACA,IAAA,EAAA,UACA,EACA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,OAEA,EAAA,KAAA,EACA,EAAA,KAAA,EAAA,MAAA,IAEA,QAEA,EAGA,OADA,EAAA,QAAA,EACA,EAGA,SAAA,EAAA,GACA,IAAA,EAAA,EAAA,eAIA,GAAA,EAAA,OAAA,EAAA,MAAA,IAAA,MAAA,8CAEA,EAAA,aACA,EAAA,OAAA,EACA,EAAA,SAAA,EAAA,EAAA,IAIA,SAAA,EAAA,EAAA,GAEA,EAAA,YAAA,IAAA,EAAA,SACA,EAAA,YAAA,EACA,EAAA,UAAA,EACA,EAAA,KAAA,QAIA,SAAA,EAAA,EAAA,GACA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IACA,GAAA,EAAA,KAAA,EAAA,OAAA,EAEA,OAAA,EApoBA,EAAA,UAAA,KAAA,SAAA,GACA,EAAA,OAAA,GACA,EAAA,SAAA,EAAA,IACA,IAAA,EAAA,KAAA,eACA,EAAA,EAOA,GALA,IAAA,IAAA,EAAA,iBAAA,GAKA,IAAA,GAAA,EAAA,eAAA,EAAA,QAAA,EAAA,eAAA,EAAA,OAGA,OAFA,EAAA,qBAAA,EAAA,OAAA,EAAA,OACA,IAAA,EAAA,QAAA,EAAA,MAAA,EAAA,MAAA,EAAA,MACA,KAMA,GAAA,KAHA,EAAA,EAAA,EAAA,KAGA,EAAA,MAEA,OADA,IAAA,EAAA,QAAA,EAAA,MACA,KA0BA,IA4BA,EA5BA,EAAA,EAAA,aAiDA,OAhDA,EAAA,gBAAA,IAGA,IAAA,EAAA,QAAA,EAAA,OAAA,EAAA,EAAA,gBAEA,EAAA,6BADA,GAAA,GAMA,EAAA,OAAA,EAAA,QAEA,EAAA,mBADA,GAAA,GAEA,IACA,EAAA,WACA,EAAA,SAAA,EACA,EAAA,MAAA,EAEA,IAAA,EAAA,SAAA,EAAA,cAAA,GAEA,KAAA,MAAA,EAAA,eACA,EAAA,MAAA,EAGA,EAAA,UAAA,EAAA,EAAA,EAAA,KAMA,QAFA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,OAGA,EAAA,cAAA,EACA,EAAA,GAEA,EAAA,QAAA,EAGA,IAAA,EAAA,SAGA,EAAA,QAAA,EAAA,cAAA,GAGA,IAAA,GAAA,EAAA,OAAA,EAAA,OAGA,OAAA,GAAA,KAAA,KAAA,OAAA,GAEA,GAkEA,EAAA,UAAA,MAAA,SAAA,GACA,KAAA,KAAA,QAAA,IAAA,MAAA,gCAGA,EAAA,UAAA,KAAA,SAAA,EAAA,GACA,IAAA,EAAA,KACA,EAAA,KAAA,eAEA,OAAA,EAAA,YACA,KAAA,EACA,EAAA,MAAA,EACA,MACA,KAAA,EACA,EAAA,MAAA,CAAA,EAAA,MAAA,GACA,MACA,QACA,EAAA,MAAA,KAAA,GAGA,EAAA,YAAA,EACA,EAAA,wBAAA,EAAA,WAAA,GAEA,IAEA,IAFA,IAAA,IAAA,EAAA,MAAA,IAAA,EAAA,QAAA,IAAA,EAAA,OAEA,EAAA,EAIA,SAAA,EAAA,EAAA,GACA,EAAA,YACA,IAAA,GACA,IAAA,IAAA,EAAA,aACA,EAAA,YAAA,EAoBA,EAAA,WAEA,EAAA,eAAA,QAAA,GACA,EAAA,eAAA,SAAA,GACA,EAAA,eAAA,QAAA,GACA,EAAA,eAAA,QAAA,GACA,EAAA,eAAA,SAAA,GACA,EAAA,eAAA,MAAA,GACA,EAAA,eAAA,MAAA,GACA,EAAA,eAAA,OAAA,GAEA,GAAA,GAOA,EAAA,YAAA,EAAA,iBAAA,EAAA,eAAA,WAAA,KAhCA,SAAA,IACA,EAAA,SACA,EAAA,MAfA,EAAA,WAAA,EAAA,SAAA,GAAA,EAAA,KAAA,MAAA,GAEA,EAAA,GAAA,SAAA,GAoBA,IAAA,EAAA,EAAA,GACA,EAAA,GAAA,QAAA,GAEA,IAAA,GAAA,EA2BA,IAAA,GAAA,EAEA,SAAA,EAAA,GACA,EAAA,UACA,GAAA,GAEA,IADA,EAAA,MAAA,IACA,KAKA,IAAA,EAAA,YAAA,EAAA,QAAA,GAAA,EAAA,WAAA,IAAA,IAAA,EAAA,EAAA,MAAA,MAAA,IACA,EAAA,8BAAA,EAAA,YACA,EAAA,aACA,GAAA,GAEA,EAAA,SAMA,SAAA,EAAA,GACA,EAAA,UAAA,GACA,IACA,EAAA,eAAA,QAAA,GACA,IAAA,EAAA,EAAA,UAAA,EAAA,KAAA,QAAA,GAOA,SAAA,IACA,EAAA,eAAA,SAAA,GACA,IAGA,SAAA,IACA,EAAA,YACA,EAAA,eAAA,QAAA,GACA,IAIA,SAAA,IACA,EAAA,UACA,EAAA,OAAA,GAYA,OA1DA,EAAA,GAAA,OAAA,GA6BA,EAAA,EAAA,QAAA,GAOA,EAAA,KAAA,QAAA,GAMA,EAAA,KAAA,SAAA,GAQA,EAAA,KAAA,OAAA,GAGA,EAAA,UACA,EAAA,eACA,EAAA,UAGA,GAeA,EAAA,UAAA,OAAA,SAAA,GACA,IAAA,EAAA,KAAA,eACA,EAAA,CAAA,YAAA,GAGA,GAAA,IAAA,EAAA,WAAA,OAAA,KAGA,GAAA,IAAA,EAAA,WAEA,OAAA,GAAA,IAAA,EAAA,MAAA,MAEA,IAAA,EAAA,EAAA,OAGA,EAAA,MAAA,KACA,EAAA,WAAA,EACA,EAAA,SAAA,EACA,GAAA,EAAA,KAAA,SAAA,KAAA,GACA,MAKA,IAAA,EAAA,CAEA,IAAA,EAAA,EAAA,MACA,EAAA,EAAA,WACA,EAAA,MAAA,KACA,EAAA,WAAA,EACA,EAAA,SAAA,EAEA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IACA,EAAA,GAAA,KAAA,SAAA,KAAA,CAAA,YAAA,IACA,OAAA,KAIA,IAAA,EAAA,EAAA,EAAA,MAAA,GACA,OAAA,IAAA,EAAA,MAEA,EAAA,MAAA,OAAA,EAAA,GACA,EAAA,YAAA,EACA,IAAA,EAAA,aAAA,EAAA,MAAA,EAAA,MAAA,IAEA,EAAA,KAAA,SAAA,KAAA,GAEA,OAKA,EAAA,UAAA,GAAA,SAAA,EAAA,GACA,IAAA,EAAA,EAAA,UAAA,GAAA,KAAA,KAAA,EAAA,GAEA,GAAA,SAAA,GAEA,IAAA,KAAA,eAAA,SAAA,KAAA,cACA,GAAA,aAAA,EAAA,CACA,IAAA,EAAA,KAAA,eACA,EAAA,YAAA,EAAA,oBACA,EAAA,kBAAA,EAAA,cAAA,EACA,EAAA,iBAAA,EACA,EAAA,QAEA,EAAA,QACA,EAAA,MAFA,EAAA,SAAA,EAAA,OAOA,OAAA,GAEA,EAAA,UAAA,YAAA,EAAA,UAAA,GASA,EAAA,UAAA,OAAA,WACA,IAAA,EAAA,KAAA,eAMA,OALA,EAAA,UACA,EAAA,UACA,EAAA,SAAA,EACA,EAAA,KAAA,IAEA,MAuBA,EAAA,UAAA,MAAA,WAOA,OANA,EAAA,wBAAA,KAAA,eAAA,UACA,IAAA,KAAA,eAAA,UACA,EAAA,SACA,KAAA,eAAA,SAAA,EACA,KAAA,KAAA,UAEA,MAYA,EAAA,UAAA,KAAA,SAAA,GACA,IAAA,EAAA,KAEA,EAAA,KAAA,eACA,GAAA,EA4BA,IAAA,IAAA,KA1BA,EAAA,GAAA,MAAA,WAEA,GADA,EAAA,eACA,EAAA,UAAA,EAAA,MAAA,CACA,IAAA,EAAA,EAAA,QAAA,MACA,GAAA,EAAA,QAAA,EAAA,KAAA,GAGA,EAAA,KAAA,QAGA,EAAA,GAAA,OAAA,SAAA,IACA,EAAA,gBACA,EAAA,UAAA,EAAA,EAAA,QAAA,MAAA,IAGA,EAAA,YAAA,MAAA,KAAA,EAAA,YAAA,GAAA,EAAA,UAEA,EAAA,KAAA,KAEA,GAAA,EACA,EAAA,YAMA,OACA,IAAA,KAAA,IAAA,mBAAA,EAAA,KACA,KAAA,GAAA,SAAA,GACA,OAAA,WACA,OAAA,EAAA,GAAA,MAAA,EAAA,YAFA,CAIA,IAKA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IACA,EAAA,GAAA,EAAA,GAAA,KAAA,KAAA,KAAA,KAAA,EAAA,KAaA,OARA,KAAA,MAAA,SAAA,GACA,EAAA,gBAAA,GACA,IACA,GAAA,EACA,EAAA,WAIA,MAGA,OAAA,eAAA,EAAA,UAAA,wBAAA,CAIA,YAAA,EACA,IAAA,WACA,OAAA,KAAA,eAAA,iBAKA,EAAA,UAAA;;AC1zBA,aAEA,OAAA,QAAA,EAEA,IAAA,EAAA,QAAA,oBAGA,EAAA,OAAA,OAAA,QAAA,iBAMA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,KAAA,gBACA,EAAA,cAAA,EAEA,IAAA,EAAA,EAAA,QAEA,IAAA,EACA,OAAA,KAAA,KAAA,QAAA,IAAA,MAAA,yCAGA,EAAA,WAAA,KACA,EAAA,QAAA,KAEA,MAAA,GACA,KAAA,KAAA,GAEA,EAAA,GAEA,IAAA,EAAA,KAAA,eACA,EAAA,SAAA,GACA,EAAA,cAAA,EAAA,OAAA,EAAA,gBACA,KAAA,MAAA,EAAA,eAIA,SAAA,EAAA,GACA,KAAA,gBAAA,GAAA,OAAA,IAAA,EAAA,GAEA,EAAA,KAAA,KAAA,GAEA,KAAA,gBAAA,CACA,eAAA,EAAA,KAAA,MACA,eAAA,EACA,cAAA,EACA,QAAA,KACA,WAAA,KACA,cAAA,MAIA,KAAA,eAAA,cAAA,EAKA,KAAA,eAAA,MAAA,EAEA,IACA,mBAAA,EAAA,YAAA,KAAA,WAAA,EAAA,WAEA,mBAAA,EAAA,QAAA,KAAA,OAAA,EAAA,QAIA,KAAA,GAAA,YAAA,GAGA,SAAA,IACA,IAAA,EAAA,KAEA,mBAAA,KAAA,OACA,KAAA,OAAA,SAAA,EAAA,GACA,EAAA,EAAA,EAAA,KAGA,EAAA,KAAA,KAAA,MA2DA,SAAA,EAAA,EAAA,EAAA,GACA,GAAA,EAAA,OAAA,EAAA,KAAA,QAAA,GAOA,GALA,MAAA,GACA,EAAA,KAAA,GAIA,EAAA,eAAA,OAAA,MAAA,IAAA,MAAA,8CAEA,GAAA,EAAA,gBAAA,aAAA,MAAA,IAAA,MAAA,kDAEA,OAAA,EAAA,KAAA,MA7IA,EAAA,SAAA,QAAA,YAGA,EAAA,SAAA,EAAA,GAuEA,EAAA,UAAA,KAAA,SAAA,EAAA,GAEA,OADA,KAAA,gBAAA,eAAA,EACA,EAAA,UAAA,KAAA,KAAA,KAAA,EAAA,IAaA,EAAA,UAAA,WAAA,SAAA,EAAA,EAAA,GACA,MAAA,IAAA,MAAA,oCAGA,EAAA,UAAA,OAAA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,KAAA,gBAIA,GAHA,EAAA,QAAA,EACA,EAAA,WAAA,EACA,EAAA,cAAA,GACA,EAAA,aAAA,CACA,IAAA,EAAA,KAAA,gBACA,EAAA,eAAA,EAAA,cAAA,EAAA,OAAA,EAAA,gBAAA,KAAA,MAAA,EAAA,iBAOA,EAAA,UAAA,MAAA,SAAA,GACA,IAAA,EAAA,KAAA,gBAEA,OAAA,EAAA,YAAA,EAAA,UAAA,EAAA,cACA,EAAA,cAAA,EACA,KAAA,WAAA,EAAA,WAAA,EAAA,cAAA,EAAA,iBAIA,EAAA,eAAA,GAIA,EAAA,UAAA,SAAA,SAAA,EAAA,GACA,IAAA,EAAA,KAEA,EAAA,UAAA,SAAA,KAAA,KAAA,EAAA,SAAA,GACA,EAAA,GACA,EAAA,KAAA;;AC3KA,aAEA,OAAA,QAAA,EAEA,IAAA,EAAA,QAAA,uBAGA,EAAA,OAAA,OAAA,QAAA,iBAMA,SAAA,EAAA,GACA,KAAA,gBAAA,GAAA,OAAA,IAAA,EAAA,GAEA,EAAA,KAAA,KAAA,GARA,EAAA,SAAA,QAAA,YAGA,EAAA,SAAA,EAAA,GAQA,EAAA,UAAA,WAAA,SAAA,EAAA,EAAA,GACA,EAAA,KAAA;;AC7CA,QAAA,OAAA,QAAA,QAAA,6BACA,QAAA,OAAA,QACA,QAAA,SAAA,QACA,QAAA,SAAA,QAAA,6BACA,QAAA,OAAA,QAAA,2BACA,QAAA,UAAA,QAAA,8BACA,QAAA,YAAA,QAAA;;ACNA,OAAA,QAAA,QAAA;;ACAA,OAAA,QAAA,QAAA;;ACAA,OAAA,QAAA,QAAA,cAAA;;ACAA,OAAA,QAAA,QAAA,cAAA;;ACqBA,OAAA,QAAA,EAEA,IAAA,EAAA,QAAA,UAAA,aACA,EAAA,QAAA,YAiBA,SAAA,IACA,EAAA,KAAA,MAhBA,EAAA,EAAA,GACA,EAAA,SAAA,QAAA,+BACA,EAAA,SAAA,QAAA,+BACA,EAAA,OAAA,QAAA,6BACA,EAAA,UAAA,QAAA,gCACA,EAAA,YAAA,QAAA,kCAGA,EAAA,OAAA,EAWA,EAAA,UAAA,KAAA,SAAA,EAAA,GACA,IAAA,EAAA,KAEA,SAAA,EAAA,GACA,EAAA,WACA,IAAA,EAAA,MAAA,IAAA,EAAA,OACA,EAAA,QAOA,SAAA,IACA,EAAA,UAAA,EAAA,QACA,EAAA,SAJA,EAAA,GAAA,OAAA,GAQA,EAAA,GAAA,QAAA,GAIA,EAAA,UAAA,IAAA,IAAA,EAAA,MACA,EAAA,GAAA,MAAA,GACA,EAAA,GAAA,QAAA,IAGA,IAAA,GAAA,EACA,SAAA,IACA,IACA,GAAA,EAEA,EAAA,OAIA,SAAA,IACA,IACA,GAAA,EAEA,mBAAA,EAAA,SAAA,EAAA,WAIA,SAAA,EAAA,GAEA,GADA,IACA,IAAA,EAAA,cAAA,KAAA,SACA,MAAA,EAQA,SAAA,IACA,EAAA,eAAA,OAAA,GACA,EAAA,eAAA,QAAA,GAEA,EAAA,eAAA,MAAA,GACA,EAAA,eAAA,QAAA,GAEA,EAAA,eAAA,QAAA,GACA,EAAA,eAAA,QAAA,GAEA,EAAA,eAAA,MAAA,GACA,EAAA,eAAA,QAAA,GAEA,EAAA,eAAA,QAAA,GAWA,OA5BA,EAAA,GAAA,QAAA,GACA,EAAA,GAAA,QAAA,GAmBA,EAAA,GAAA,MAAA,GACA,EAAA,GAAA,QAAA,GAEA,EAAA,GAAA,QAAA,GAEA,EAAA,KAAA,OAAA,GAGA;;;AC7HA,aACA,IAAImD,EAASpB,QAAQ,eAAeoB,OAChCkG,EAAYtH,QAAQ,UAAUsH,UAC9BtG,EAAWhB,QAAQ,YAEvB,SAASuH,EAA0BC,EAAKC,GACtC,IAAKrG,EAAOU,SAAS0F,IAAuB,iBAARA,EAClC,MAAM,IAAIhM,UAAUiM,EAAS,iCAIjC,SAASC,EAAUC,GACjBL,EAAUnQ,KAAK,MAEf,KAAKyQ,OAASxG,EAAOyG,YAAYF,GACjC,KAAKG,WAAaH,EAClB,KAAKI,aAAe,EACpB,KAAKC,QAAU,CAAC,EAAG,EAAG,EAAG,GAEzB,KAAKC,YAAa,EAGpBjH,EAAS0G,EAAUJ,GAEnBI,EAASlP,UAAU0P,WAAa,SAAUhI,EAAOC,EAAUE,GACzD,IAAIjB,EAAQ,KACZ,IACE,KAAK+I,OAAOjI,EAAOC,GACnB,MAAOlC,GACPmB,EAAQnB,EAGVoC,EAASjB,IAGXsI,EAASlP,UAAU4P,OAAS,SAAU/H,GACpC,IAAIjB,EAAQ,KACZ,IACE,KAAK7G,KAAK,KAAK8P,UACf,MAAOpK,GACPmB,EAAQnB,EAGVoC,EAASjB,IAGXsI,EAASlP,UAAU2P,OAAS,SAAUG,EAAMnI,GAE1C,GADAoH,EAAyBe,EAAM,QAC3B,KAAKL,WAAY,MAAM,IAAIpR,MAAM,yBAChCuK,EAAOU,SAASwG,KAAOA,EAAOlH,EAAOO,KAAK2G,EAAMnI,IAKrD,IAFA,IAAIoI,EAAQ,KAAKX,OACbY,EAAS,EACN,KAAKT,aAAeO,EAAK3U,OAAS6U,GAAU,KAAKV,YAAY,CAClE,IAAK,IAAIxP,EAAI,KAAKyP,aAAczP,EAAI,KAAKwP,YAAaS,EAAMjQ,KAAOgQ,EAAKE,KACxE,KAAKC,UACL,KAAKV,aAAe,EAEtB,KAAOS,EAASF,EAAK3U,QAAQ4U,EAAM,KAAKR,gBAAkBO,EAAKE,KAG/D,IAAK,IAAIE,EAAI,EAAGC,EAAsB,EAAdL,EAAK3U,OAAYgV,EAAQ,IAAKD,EACpD,KAAKV,QAAQU,IAAMC,GACnBA,EAAS,KAAKX,QAAQU,GAAK,WAAgB,GAC/B,IAAG,KAAKV,QAAQU,IAAM,WAAeC,GAGnD,OAAO,MAGTjB,EAASlP,UAAUiQ,QAAU,WAC3B,MAAM,IAAI5R,MAAM,+BAGlB6Q,EAASlP,UAAU6P,OAAS,SAAUlI,GACpC,GAAI,KAAK8H,WAAY,MAAM,IAAIpR,MAAM,yBACrC,KAAKoR,YAAa,EAElB,IAAII,EAAS,KAAKO,eACD1N,IAAbiF,IAAwBkI,EAASA,EAAO7U,SAAS2M,IAGrD,KAAKyH,OAAOiB,KAAK,GACjB,KAAKd,aAAe,EACpB,IAAK,IAAIzP,EAAI,EAAGA,EAAI,IAAKA,EAAG,KAAK0P,QAAQ1P,GAAK,EAE9C,OAAO+P,GAGTX,EAASlP,UAAUoQ,QAAU,WAC3B,MAAM,IAAI/R,MAAM,+BAGlBF,OAAOxB,QAAUuS;;;AC9FjB,aACA,IAAA,EAAA,QAAA,YACA,EAAA,QAAA,aACA,EAAA,QAAA,egBAAA,IACA,KAAA,aAAA,KACA,KAAA,OAAA,KAAA,EAAA,KAAA,aAAA,IACA,KAAA,UACA,KAAA,aAAA,GAGA,KAAA,OAAA,KAAA,EAAA,KAAA,aAAA,IACA,KAAA,OAAA,cAAA,KAAA,QAAA,GAAA,IACA,KAAA,OAAA,cAAA,KAAA,QAAA,GAAA,IACA,KAAA,UAGA,IAAA,EAAA,EAAA,YAAA,IAKA,OAJA,EAAA,aAAA,KAAA,GAAA,GACA,EAAA,aAAA,KAAA,GAAA,GACA,EAAA,aAAA,KAAA,GAAA,GACA,EAAA,aAAA,KAAA,GAAA,IACA,GAuBA,OAAA,QAAA;;;ACjJA,aACA,IAAA,EAAA,QAAA,UAAA,OACA,EAAA,QAAA,YACA,EAAA,QAAA,aAEA,EAAA,IAAA,MAAA,IAEA,EAAA,CACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GACA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EACA,EAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GACA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,IAGA,EAAA,CACA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GACA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EACA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GACA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GACA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,IAGA,EAAA,CACA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,GAAA,GACA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EACA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAGA,EAAA,CACA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,EACA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GACA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EACA,GAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EACA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAAA,IAGA,EAAA,CAAA,EAAA,WAAA,WAAA,WAAA,YACA,EAAA,CAAA,WAAA,WAAA,WAAA,WAAA,GAEA,SAAA,IACA,EAAA,KAAA,KAAA,IAGA,KAAA,GAAA,WACA,KAAA,GAAA,WACA,KAAA,GAAA,WACA,KAAA,GAAA,UACA,KAAA,GAAA,WAwFA,SAAA,EAAA,EAAA,GACA,OAAA,GAAA,EAAA,IAAA,GAAA,EAGA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACA,OAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAGA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACA,OAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAGA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACA,OAAA,EAAA,IAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAGA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACA,OAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAGA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACA,OAAA,EAAA,GAAA,GAAA,GAAA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EA1GA,EAAA,EAAA,GAEA,EAAA,UAAA,QAAA,WAEA,IADA,IAAA,EAAA,EACA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,GAAA,KAAA,OAAA,YAAA,EAAA,GAeA,IAbA,IAAA,EAAA,EAAA,KAAA,GACA,EAAA,EAAA,KAAA,GACA,EAAA,EAAA,KAAA,GACA,EAAA,EAAA,KAAA,GACA,EAAA,EAAA,KAAA,GAEA,EAAA,EAAA,KAAA,GACA,EAAA,EAAA,KAAA,GACA,EAAA,EAAA,KAAA,GACA,EAAA,EAAA,KAAA,GACA,EAAA,EAAA,KAAA,GAGA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CACA,IAAA,EACA,EACA,EAAA,IACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,IACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,KACA,EAAA,IACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,IACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,KACA,EAAA,IACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,IACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,KACA,EAAA,IACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,IACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,MAEA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,IACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,KAGA,EAAA,EACA,EAAA,EACA,EAAA,EAAA,EAAA,IACA,EAAA,EACA,EAAA,EAEA,EAAA,EACA,EAAA,EACA,EAAA,EAAA,EAAA,IACA,EAAA,EACA,EAAA,EAIA,IAAA,EAAA,KAAA,GAAA,EAAA,EAAA,EACA,KAAA,GAAA,KAAA,GAAA,EAAA,EAAA,EACA,KAAA,GAAA,KAAA,GAAA,EAAA,EAAA,EACA,KAAA,GAAA,KAAA,GAAA,EAAA,EAAA,EACA,KAAA,GAAA,KAAA,GAAA,EAAA,EAAA,EACA,KAAA,GAAA,GAGA,EAAA,UAAA,QAAA,WAEA,KAAA,OAAA,KAAA,gBAAA,IACA,KAAA,aAAA,KACA,KAAA,OAAA,KAAA,EAAA,KAAA,aAAA,IACA,KAAA,UACA,KAAA,aAAA,GAGA,KAAA,OAAA,KAAA,EAAA,KAAA,aAAA,IACA,KAAA,OAAA,cAAA,KAAA,QAAA,GAAA,IACA,KAAA,OAAA,cAAA,KAAA,QAAA,GAAA,IACA,KAAA,UAGA,IAAA,EAAA,EAAA,MAAA,EAAA,MAAA,IAAA,IAAA,EAAA,IAMA,OALA,EAAA,aAAA,KAAA,GAAA,GACA,EAAA,aAAA,KAAA,GAAA,GACA,EAAA,aAAA,KAAA,GAAA,GACA,EAAA,aAAA,KAAA,GAAA,IACA,EAAA,aAAA,KAAA,GAAA,IACA,GA2BA,OAAA,QAAA;;;AClKA,IAAA,EAAA,QAAA,eAAA,OAGA,SAAA,EAAA,EAAA,GACA,KAAA,OAAA,EAAA,MAAA,GACA,KAAA,WAAA,EACA,KAAA,WAAA,EACA,KAAA,KAAA,EAGA,EAAA,UAAA,OAAA,SAAA,EAAA,GACA,iBAAA,IACA,EAAA,GAAA,OACA,EAAA,EAAA,KAAA,EAAA,IAQA,IALA,IAAA,EAAA,KAAA,OACA,EAAA,KAAA,WACA,EAAA,EAAA,OACA,EAAA,KAAA,KAEA,EAAA,EAAA,EAAA,GAAA,CAIA,IAHA,IAAA,EAAA,EAAA,EACA,EAAA,KAAA,IAAA,EAAA,EAAA,EAAA,GAEA,EAAA,EAAA,EAAA,EAAA,IACA,EAAA,EAAA,GAAA,EAAA,EAAA,GAIA,GAAA,GADA,GAAA,GAGA,GAAA,GACA,KAAA,QAAA,GAKA,OADA,KAAA,MAAA,EACA,MAGA,EAAA,UAAA,OAAA,SAAA,GACA,IAAA,EAAA,KAAA,KAAA,KAAA,WAEA,KAAA,OAAA,GAAA,IAIA,KAAA,OAAA,KAAA,EAAA,EAAA,GAEA,GAAA,KAAA,aACA,KAAA,QAAA,KAAA,QACA,KAAA,OAAA,KAAA,IAGA,IAAA,EAAA,EAAA,KAAA,KAGA,GAAA,GAAA,WACA,KAAA,OAAA,cAAA,EAAA,KAAA,WAAA,OAGA,CACA,IAAA,GAAA,WAAA,KAAA,EACA,GAAA,EAAA,GAAA,WAEA,KAAA,OAAA,cAAA,EAAA,KAAA,WAAA,GACA,KAAA,OAAA,cAAA,EAAA,KAAA,WAAA,GAGA,KAAA,QAAA,KAAA,QACA,IAAA,EAAA,KAAA,QAEA,OAAA,EAAA,EAAA,SAAA,GAAA,GAGA,EAAA,UAAA,QAAA,WACA,MAAA,IAAA,MAAA,4CAGA,OAAA,QAAA;;;ACxEA,IAAA,EAAA,QAAA,YACA,EAAA,QAAA,UACA,EAAA,QAAA,eAAA,OAEA,EAAA,CACA,WAAA,YAAA,YAAA,WAGA,EAAA,IAAA,MAAA,IAEA,SAAA,IACA,KAAA,OACA,KAAA,GAAA,EAEA,EAAA,KAAA,KAAA,GAAA,IAeA,SAAA,EAAA,GACA,OAAA,GAAA,EAAA,IAAA,GAGA,SAAA,EAAA,GACA,OAAA,GAAA,GAAA,IAAA,EAGA,SAAA,EAAA,EAAA,EAAA,EAAA,GACA,OAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EACA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAvBA,EAAA,EAAA,GAEA,EAAA,UAAA,KAAA,WAOA,OANA,KAAA,GAAA,WACA,KAAA,GAAA,WACA,KAAA,GAAA,WACA,KAAA,GAAA,UACA,KAAA,GAAA,WAEA,MAiBA,EAAA,UAAA,QAAA,SAAA,GASA,IARA,IAAA,EAAA,KAAA,GAEA,EAAA,EAAA,KAAA,GACA,EAAA,EAAA,KAAA,GACA,EAAA,EAAA,KAAA,GACA,EAAA,EAAA,KAAA,GACA,EAAA,EAAA,KAAA,GAEA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,GAAA,EAAA,YAAA,EAAA,GACA,KAAA,EAAA,KAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAEA,IAAA,IAAA,EAAA,EAAA,EAAA,KAAA,EAAA,CACA,IAAA,KAAA,EAAA,IACA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAEA,EAAA,EACA,EAAA,EACA,EAAA,EAAA,GACA,EAAA,EACA,EAAA,EAGA,KAAA,GAAA,EAAA,KAAA,GAAA,EACA,KAAA,GAAA,EAAA,KAAA,GAAA,EACA,KAAA,GAAA,EAAA,KAAA,GAAA,EACA,KAAA,GAAA,EAAA,KAAA,GAAA,EACA,KAAA,GAAA,EAAA,KAAA,GAAA,GAGA,EAAA,UAAA,MAAA,WACA,IAAA,EAAA,EAAA,YAAA,IAQA,OANA,EAAA,aAAA,EAAA,KAAA,GAAA,GACA,EAAA,aAAA,EAAA,KAAA,GAAA,GACA,EAAA,aAAA,EAAA,KAAA,GAAA,GACA,EAAA,aAAA,EAAA,KAAA,GAAA,IACA,EAAA,aAAA,EAAA,KAAA,GAAA,IAEA,GAGA,OAAA,QAAA;;;ACpFA,IAAA,EAAA,QAAA,YACA,EAAA,QAAA,UACA,EAAA,QAAA,eAAA,OAEA,EAAA,CACA,WAAA,YAAA,YAAA,WAGA,EAAA,IAAA,MAAA,IAEA,SAAA,IACA,KAAA,OACA,KAAA,GAAA,EAEA,EAAA,KAAA,KAAA,GAAA,IAeA,SAAA,EAAA,GACA,OAAA,GAAA,EAAA,IAAA,GAGA,SAAA,EAAA,GACA,OAAA,GAAA,EAAA,IAAA,GAGA,SAAA,EAAA,GACA,OAAA,GAAA,GAAA,IAAA,EAGA,SAAA,EAAA,EAAA,EAAA,EAAA,GACA,OAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EACA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EA3BA,EAAA,EAAA,GAEA,EAAA,UAAA,KAAA,WAOA,OANA,KAAA,GAAA,WACA,KAAA,GAAA,WACA,KAAA,GAAA,WACA,KAAA,GAAA,UACA,KAAA,GAAA,WAEA,MAqBA,EAAA,UAAA,QAAA,SAAA,GASA,IARA,IAAA,EAAA,KAAA,GAEA,EAAA,EAAA,KAAA,GACA,EAAA,EAAA,KAAA,GACA,EAAA,EAAA,KAAA,GACA,EAAA,EAAA,KAAA,GACA,EAAA,EAAA,KAAA,GAEA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,GAAA,EAAA,YAAA,EAAA,GACA,KAAA,EAAA,KAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,KAEA,IAAA,IAAA,EAAA,EAAA,EAAA,KAAA,EAAA,CACA,IAAA,KAAA,EAAA,IACA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAEA,EAAA,EACA,EAAA,EACA,EAAA,EAAA,GACA,EAAA,EACA,EAAA,EAGA,KAAA,GAAA,EAAA,KAAA,GAAA,EACA,KAAA,GAAA,EAAA,KAAA,GAAA,EACA,KAAA,GAAA,EAAA,KAAA,GAAA,EACA,KAAA,GAAA,EAAA,KAAA,GAAA,EACA,KAAA,GAAA,EAAA,KAAA,GAAA,GAGA,EAAA,UAAA,MAAA,WACA,IAAA,EAAA,EAAA,YAAA,IAQA,OANA,EAAA,aAAA,EAAA,KAAA,GAAA,GACA,EAAA,aAAA,EAAA,KAAA,GAAA,GACA,EAAA,aAAA,EAAA,KAAA,GAAA,GACA,EAAA,aAAA,EAAA,KAAA,GAAA,IACA,EAAA,aAAA,EAAA,KAAA,GAAA,IAEA,GAGA,OAAA,QAAA;;;AC1FA,IAAA,EAAA,QAAA,YACA,EAAA,QAAA,UACA,EAAA,QAAA,eAAA,OAEA,EAAA,CACA,WAAA,WAAA,WAAA,WACA,UAAA,WAAA,WAAA,WACA,WAAA,UAAA,UAAA,WACA,WAAA,WAAA,WAAA,WACA,WAAA,WAAA,UAAA,UACA,UAAA,WAAA,WAAA,WACA,WAAA,WAAA,WAAA,WACA,WAAA,WAAA,UAAA,UACA,UAAA,UAAA,WAAA,WACA,WAAA,WAAA,WAAA,WACA,WAAA,WAAA,WAAA,WACA,WAAA,WAAA,WAAA,UACA,UAAA,UAAA,UAAA,UACA,UAAA,WAAA,WAAA,WACA,WAAA,WAAA,WAAA,WACA,WAAA,WAAA,WAAA,YAGA,EAAA,IAAA,MAAA,IAEA,SAAA,IACA,KAAA,OAEA,KAAA,GAAA,EAEA,EAAA,KAAA,KAAA,GAAA,IAkBA,SAAA,EAAA,EAAA,EAAA,GACA,OAAA,EAAA,GAAA,EAAA,GAGA,SAAA,EAAA,EAAA,EAAA,GACA,OAAA,EAAA,EAAA,GAAA,EAAA,GAGA,SAAA,EAAA,GACA,OAAA,IAAA,EAAA,GAAA,KAAA,IAAA,GAAA,GAAA,KAAA,IAAA,GAAA,GAAA,IAGA,SAAA,EAAA,GACA,OAAA,IAAA,EAAA,GAAA,KAAA,IAAA,GAAA,GAAA,KAAA,IAAA,GAAA,GAAA,GAGA,SAAA,EAAA,GACA,OAAA,IAAA,EAAA,GAAA,KAAA,IAAA,GAAA,GAAA,IAAA,IAAA,EAGA,SAAA,EAAA,GACA,OAAA,IAAA,GAAA,GAAA,KAAA,IAAA,GAAA,GAAA,IAAA,IAAA,GApCA,EAAA,EAAA,GAEA,EAAA,UAAA,KAAA,WAUA,OATA,KAAA,GAAA,WACA,KAAA,GAAA,WACA,KAAA,GAAA,WACA,KAAA,GAAA,WACA,KAAA,GAAA,WACA,KAAA,GAAA,WACA,KAAA,GAAA,UACA,KAAA,GAAA,WAEA,MA2BA,EAAA,UAAA,QAAA,SAAA,GAYA,IAXA,IAAA,EAAA,KAAA,GAEA,EAAA,EAAA,KAAA,GACA,EAAA,EAAA,KAAA,GACA,EAAA,EAAA,KAAA,GACA,EAAA,EAAA,KAAA,GACA,EAAA,EAAA,KAAA,GACA,EAAA,EAAA,KAAA,GACA,EAAA,EAAA,KAAA,GACA,EAAA,EAAA,KAAA,GAEA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,GAAA,EAAA,YAAA,EAAA,GACA,KAAA,EAAA,KAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,IAAA,EAEA,IAAA,IAAA,EAAA,EAAA,EAAA,KAAA,EAAA,CACA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EACA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAEA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EAAA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EAAA,EAAA,EAGA,KAAA,GAAA,EAAA,KAAA,GAAA,EACA,KAAA,GAAA,EAAA,KAAA,GAAA,EACA,KAAA,GAAA,EAAA,KAAA,GAAA,EACA,KAAA,GAAA,EAAA,KAAA,GAAA,EACA,KAAA,GAAA,EAAA,KAAA,GAAA,EACA,KAAA,GAAA,EAAA,KAAA,GAAA,EACA,KAAA,GAAA,EAAA,KAAA,GAAA,EACA,KAAA,GAAA,EAAA,KAAA,GAAA,GAGA,EAAA,UAAA,MAAA,WACA,IAAA,EAAA,EAAA,YAAA,IAWA,OATA,EAAA,aAAA,KAAA,GAAA,GACA,EAAA,aAAA,KAAA,GAAA,GACA,EAAA,aAAA,KAAA,GAAA,GACA,EAAA,aAAA,KAAA,GAAA,IACA,EAAA,aAAA,KAAA,GAAA,IACA,EAAA,aAAA,KAAA,GAAA,IACA,EAAA,aAAA,KAAA,GAAA,IACA,EAAA,aAAA,KAAA,GAAA,IAEA,GAGA,OAAA,QAAA;;;AC9HA,IAAA,EAAA,QAAA,YACA,EAAA,QAAA,YACA,EAAA,QAAA,UACA,EAAA,QAAA,eAAA,OAEA,EAAA,IAAA,MAAA,IAEA,SAAA,IACA,KAAA,OAEA,KAAA,GAAA,EAEA,EAAA,KAAA,KAAA,GAAA,IAGA,EAAA,EAAA,GAEA,EAAA,UAAA,KAAA,WAUA,OATA,KAAA,GAAA,WACA,KAAA,GAAA,UACA,KAAA,GAAA,UACA,KAAA,GAAA,WACA,KAAA,GAAA,WACA,KAAA,GAAA,WACA,KAAA,GAAA,WACA,KAAA,GAAA,WAEA,MAGA,EAAA,UAAA,MAAA,WACA,IAAA,EAAA,EAAA,YAAA,IAUA,OARA,EAAA,aAAA,KAAA,GAAA,GACA,EAAA,aAAA,KAAA,GAAA,GACA,EAAA,aAAA,KAAA,GAAA,GACA,EAAA,aAAA,KAAA,GAAA,IACA,EAAA,aAAA,KAAA,GAAA,IACA,EAAA,aAAA,KAAA,GAAA,IACA,EAAA,aAAA,KAAA,GAAA,IAEA,GAGA,OAAA,QAAA;;;ACpDA,IAAA,EAAA,QAAA,YACA,EAAA,QAAA,UACA,EAAA,QAAA,eAAA,OAEA,EAAA,CACA,WAAA,WAAA,WAAA,UACA,WAAA,WAAA,WAAA,WACA,UAAA,WAAA,WAAA,WACA,WAAA,WAAA,WAAA,WACA,WAAA,WAAA,UAAA,WACA,UAAA,WAAA,WAAA,WACA,WAAA,WAAA,WAAA,UACA,WAAA,UAAA,WAAA,WACA,WAAA,WAAA,WAAA,UACA,UAAA,WAAA,UAAA,WACA,UAAA,WAAA,WAAA,WACA,WAAA,WAAA,WAAA,WACA,WAAA,WAAA,WAAA,UACA,WAAA,WAAA,WAAA,WACA,WAAA,WAAA,WAAA,WACA,UAAA,WAAA,UAAA,UACA,UAAA,WAAA,UAAA,WACA,WAAA,WAAA,WAAA,WACA,WAAA,WAAA,WAAA,WACA,WAAA,WAAA,WAAA,UACA,WAAA,WAAA,WAAA,WACA,WAAA,WAAA,WAAA,UACA,WAAA,WAAA,WAAA,WACA,WAAA,WAAA,UAAA,UACA,UAAA,WAAA,UAAA,WACA,UAAA,WAAA,UAAA,WACA,UAAA,WAAA,WAAA,WACA,WAAA,WAAA,WAAA,WACA,WAAA,WAAA,WAAA,WACA,WAAA,WAAA,WAAA,UACA,WAAA,UAAA,WAAA,WACA,WAAA,WAAA,WAAA,WACA,WAAA,WAAA,WAAA,UACA,WAAA,WAAA,WAAA,WACA,UAAA,WAAA,UAAA,WACA,UAAA,WAAA,UAAA,UACA,UAAA,UAAA,UAAA,WACA,WAAA,UAAA,WAAA,WACA,WAAA,WAAA,WAAA,WACA,WAAA,UAAA,WAAA,YAGA,EAAA,IAAA,MAAA,KAEA,SAAA,IACA,KAAA,OACA,KAAA,GAAA,EAEA,EAAA,KAAA,KAAA,IAAA,KA2BA,SAAA,EAAA,EAAA,EAAA,GACA,OAAA,EAAA,GAAA,EAAA,GAGA,SAAA,EAAA,EAAA,EAAA,GACA,OAAA,EAAA,EAAA,GAAA,EAAA,GAGA,SAAA,EAAA,EAAA,GACA,OAAA,IAAA,GAAA,GAAA,IAAA,IAAA,EAAA,GAAA,KAAA,IAAA,EAAA,GAAA,IAGA,SAAA,EAAA,EAAA,GACA,OAAA,IAAA,GAAA,GAAA,KAAA,IAAA,GAAA,GAAA,KAAA,IAAA,EAAA,GAAA,IAGA,SAAA,EAAA,EAAA,GACA,OAAA,IAAA,EAAA,GAAA,KAAA,IAAA,EAAA,GAAA,IAAA,IAAA,EAGA,SAAA,EAAA,EAAA,GACA,OAAA,IAAA,EAAA,GAAA,KAAA,IAAA,EAAA,GAAA,KAAA,IAAA,EAAA,GAAA,IAGA,SAAA,EAAA,EAAA,GACA,OAAA,IAAA,GAAA,GAAA,KAAA,IAAA,GAAA,GAAA,GAAA,IAAA,EAGA,SAAA,EAAA,EAAA,GACA,OAAA,IAAA,GAAA,GAAA,KAAA,IAAA,GAAA,GAAA,IAAA,IAAA,EAAA,GAAA,IAGA,SAAA,EAAA,EAAA,GACA,OAAA,IAAA,EAAA,IAAA,EAAA,EAAA,EAzDA,EAAA,EAAA,GAEA,EAAA,UAAA,KAAA,WAmBA,OAlBA,KAAA,IAAA,WACA,KAAA,IAAA,WACA,KAAA,IAAA,WACA,KAAA,IAAA,WACA,KAAA,IAAA,WACA,KAAA,IAAA,WACA,KAAA,IAAA,UACA,KAAA,IAAA,WAEA,KAAA,IAAA,WACA,KAAA,IAAA,WACA,KAAA,IAAA,WACA,KAAA,IAAA,WACA,KAAA,IAAA,WACA,KAAA,IAAA,UACA,KAAA,IAAA,WACA,KAAA,IAAA,UAEA,MAuCA,EAAA,UAAA,QAAA,SAAA,GAqBA,IApBA,IAAA,EAAA,KAAA,GAEA,EAAA,EAAA,KAAA,IACA,EAAA,EAAA,KAAA,IACA,EAAA,EAAA,KAAA,IACA,EAAA,EAAA,KAAA,IACA,EAAA,EAAA,KAAA,IACA,EAAA,EAAA,KAAA,IACA,EAAA,EAAA,KAAA,IACA,EAAA,EAAA,KAAA,IAEA,EAAA,EAAA,KAAA,IACA,EAAA,EAAA,KAAA,IACA,EAAA,EAAA,KAAA,IACA,EAAA,EAAA,KAAA,IACA,EAAA,EAAA,KAAA,IACA,EAAA,EAAA,KAAA,IACA,EAAA,EAAA,KAAA,IACA,EAAA,EAAA,KAAA,IAEA,EAAA,EAAA,EAAA,GAAA,GAAA,EACA,EAAA,GAAA,EAAA,YAAA,EAAA,GACA,EAAA,EAAA,GAAA,EAAA,YAAA,EAAA,EAAA,GAEA,KAAA,EAAA,IAAA,GAAA,EAAA,CACA,IAAA,EAAA,EAAA,EAAA,IACA,EAAA,EAAA,EAAA,GAAA,GACA,EAAA,EAAA,EAAA,GACA,EAAA,EAAA,EAAA,GAIA,EAAA,EAFA,EAAA,EAAA,EAAA,GACA,EAAA,EAAA,EAAA,EAAA,IAEA,EAAA,EAAA,EAAA,GAGA,EAAA,EAAA,EAAA,IACA,EAAA,EAAA,EAAA,GAAA,GAEA,EAAA,EAAA,EAAA,IACA,EAAA,EAAA,EAAA,GAAA,GAEA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAIA,GAFA,EAAA,EAAA,EAAA,EADA,EAAA,EAAA,EAAA,EACA,GAAA,GAEA,EAAA,EADA,EAAA,EAAA,EAAA,EACA,GAAA,EAEA,EAAA,GAAA,EACA,EAAA,EAAA,GAAA,EAGA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,GAAA,EAAA,CACA,EAAA,EAAA,GACA,EAAA,EAAA,EAAA,GAEA,IAAA,EAAA,EAAA,EAAA,EAAA,GACA,EAAA,EAAA,EAAA,EAAA,GAEA,EAAA,EAAA,EAAA,GACA,EAAA,EAAA,EAAA,GACA,EAAA,EAAA,EAAA,GACA,EAAA,EAAA,EAAA,GAGA,EAAA,EAAA,GACA,EAAA,EAAA,EAAA,GAEA,EAAA,EAAA,EAAA,EAAA,GACA,EAAA,EAAA,EAAA,EAAA,GAEA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAMA,GAFA,GAFA,EAAA,EAAA,EAAA,EADA,EAAA,EAAA,EAAA,EACA,GAAA,GAEA,EAAA,EADA,EAAA,EAAA,EAAA,EACA,GAAA,GAEA,EAAA,EADA,EAAA,EAAA,EAAA,EACA,GAAA,EAGA,IAAA,GAAA,EAAA,EAAA,EACA,GAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAEA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EAEA,EAAA,EAAA,EAAA,EADA,EAAA,EAAA,EAAA,EACA,GAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,EAEA,EAAA,EAAA,GAAA,EADA,EAAA,EAAA,GAAA,EACA,GAAA,EAGA,KAAA,IAAA,KAAA,IAAA,EAAA,EACA,KAAA,IAAA,KAAA,IAAA,EAAA,EACA,KAAA,IAAA,KAAA,IAAA,EAAA,EACA,KAAA,IAAA,KAAA,IAAA,EAAA,EACA,KAAA,IAAA,KAAA,IAAA,EAAA,EACA,KAAA,IAAA,KAAA,IAAA,EAAA,EACA,KAAA,IAAA,KAAA,IAAA,EAAA,EACA,KAAA,IAAA,KAAA,IAAA,EAAA,EAEA,KAAA,IAAA,KAAA,IAAA,EAAA,EAAA,KAAA,IAAA,GAAA,EACA,KAAA,IAAA,KAAA,IAAA,EAAA,EAAA,KAAA,IAAA,GAAA,EACA,KAAA,IAAA,KAAA,IAAA,EAAA,EAAA,KAAA,IAAA,GAAA,EACA,KAAA,IAAA,KAAA,IAAA,EAAA,EAAA,KAAA,IAAA,GAAA,EACA,KAAA,IAAA,KAAA,IAAA,EAAA,EAAA,KAAA,IAAA,GAAA,EACA,KAAA,IAAA,KAAA,IAAA,EAAA,EAAA,KAAA,IAAA,GAAA,EACA,KAAA,IAAA,KAAA,IAAA,EAAA,EAAA,KAAA,IAAA,GAAA,EACA,KAAA,IAAA,KAAA,IAAA,EAAA,EAAA,KAAA,IAAA,GAAA,GAGA,EAAA,UAAA,MAAA,WACA,IAAA,EAAA,EAAA,YAAA,IAEA,SAAA,EAAA,EAAA,EAAA,GACA,EAAA,aAAA,EAAA,GACA,EAAA,aAAA,EAAA,EAAA,GAYA,OATA,EAAA,KAAA,IAAA,KAAA,IAAA,GACA,EAAA,KAAA,IAAA,KAAA,IAAA,GACA,EAAA,KAAA,IAAA,KAAA,IAAA,IACA,EAAA,KAAA,IAAA,KAAA,IAAA,IACA,EAAA,KAAA,IAAA,KAAA,IAAA,IACA,EAAA,KAAA,IAAA,KAAA,IAAA,IACA,EAAA,KAAA,IAAA,KAAA,IAAA,IACA,EAAA,KAAA,IAAA,KAAA,IAAA,IAEA,GAGA,OAAA,QAAA;;;ACnQA,IAAA,EAAA,QAAA,YACA,EAAA,QAAA,YACA,EAAA,QAAA,UACA,EAAA,QAAA,eAAA,OAEA,EAAA,IAAA,MAAA,KAEA,SAAA,IACA,KAAA,OACA,KAAA,GAAA,EAEA,EAAA,KAAA,KAAA,IAAA,KAGA,EAAA,EAAA,GAEA,EAAA,UAAA,KAAA,WAmBA,OAlBA,KAAA,IAAA,WACA,KAAA,IAAA,WACA,KAAA,IAAA,WACA,KAAA,IAAA,UACA,KAAA,IAAA,WACA,KAAA,IAAA,WACA,KAAA,IAAA,WACA,KAAA,IAAA,WAEA,KAAA,IAAA,WACA,KAAA,IAAA,UACA,KAAA,IAAA,UACA,KAAA,IAAA,WACA,KAAA,IAAA,WACA,KAAA,IAAA,WACA,KAAA,IAAA,WACA,KAAA,IAAA,WAEA,MAGA,EAAA,UAAA,MAAA,WACA,IAAA,EAAA,EAAA,YAAA,IAEA,SAAA,EAAA,EAAA,EAAA,GACA,EAAA,aAAA,EAAA,GACA,EAAA,aAAA,EAAA,EAAA,GAUA,OAPA,EAAA,KAAA,IAAA,KAAA,IAAA,GACA,EAAA,KAAA,IAAA,KAAA,IAAA,GACA,EAAA,KAAA,IAAA,KAAA,IAAA,IACA,EAAA,KAAA,IAAA,KAAA,IAAA,IACA,EAAA,KAAA,IAAA,KAAA,IAAA,IACA,EAAA,KAAA,IAAA,KAAA,IAAA,IAEA,GAGA,OAAA,QAAA;;ACxDA,IAAA,EAAA,OAAA,QAAA,SAAA,GACA,EAAA,EAAA,cAEA,IAAA,EAAA,EAAA,GACA,IAAA,EAAA,MAAA,IAAA,MAAA,EAAA,+CAEA,OAAA,IAAA,GAGA,EAAA,IAAA,QAAA,SACA,EAAA,KAAA,QAAA,UACA,EAAA,OAAA,QAAA,YACA,EAAA,OAAA,QAAA,YACA,EAAA,OAAA,QAAA,YACA,EAAA,OAAA,QAAA;;;ACdA,IAAA,EAAA,QAAA,eAAA,OACA,EAAA,QAAA,UAAA,UACA,EAAA,QAAA,kBAAA,cACA,EAAA,QAAA,YAEA,SAAA,EAAA,GACA,EAAA,KAAA,MACA,KAAA,SAAA,iBAAA,EACA,KAAA,SACA,KAAA,GAAA,KAAA,eAEA,KAAA,MAAA,KAAA,eAEA,KAAA,SACA,KAAA,QAAA,KAAA,OACA,KAAA,OAAA,MAEA,KAAA,SAAA,KACA,KAAA,UAAA,KAEA,EAAA,EAAA,GAEA,EAAA,UAAA,OAAA,SAAA,EAAA,EAAA,GACA,iBAAA,IACA,EAAA,EAAA,KAAA,EAAA,IAGA,IAAA,EAAA,KAAA,QAAA,GACA,OAAA,KAAA,SAAA,MAEA,IACA,EAAA,KAAA,UAAA,EAAA,IAGA,IAGA,EAAA,UAAA,eAAA,aACA,EAAA,UAAA,WAAA,WACA,MAAA,IAAA,MAAA,gDAGA,EAAA,UAAA,WAAA,WACA,MAAA,IAAA,MAAA,gDAGA,EAAA,UAAA,OAAA,WACA,MAAA,IAAA,MAAA,2CAGA,EAAA,UAAA,WAAA,SAAA,EAAA,EAAA,GACA,IAAA,EACA,IACA,KAAA,SACA,KAAA,QAAA,GAEA,KAAA,KAAA,KAAA,QAAA,IAEA,MAAA,GACA,EAAA,EACA,QACA,EAAA,KAGA,EAAA,UAAA,OAAA,SAAA,GACA,IAAA,EACA,IACA,KAAA,KAAA,KAAA,WACA,MAAA,GACA,EAAA,EAGA,EAAA,IAEA,EAAA,UAAA,eAAA,SAAA,GACA,IAAA,EAAA,KAAA,WAAA,EAAA,MAAA,GAIA,OAHA,IACA,EAAA,KAAA,UAAA,EAAA,GAAA,IAEA,GAGA,EAAA,UAAA,UAAA,SAAA,EAAA,EAAA,GAMA,GALA,KAAA,WACA,KAAA,SAAA,IAAA,EAAA,GACA,KAAA,UAAA,GAGA,KAAA,YAAA,EAAA,MAAA,IAAA,MAAA,0BAEA,IAAA,EAAA,KAAA,SAAA,MAAA,GAKA,OAJA,IACA,GAAA,KAAA,SAAA,OAGA,GAGA,OAAA,QAAA;;AClGA,aACA,IAAA,EAAA,QAAA,YACA,EAAA,QAAA,UACA,EAAA,QAAA,aACA,EAAA,QAAA,UACA,EAAA,QAAA,eAEA,SAAA,EAAA,GACA,EAAA,KAAA,KAAA,UAEA,KAAA,MAAA,EAGA,EAAA,EAAA,GAEA,EAAA,UAAA,QAAA,SAAA,GACA,KAAA,MAAA,OAAA,IAGA,EAAA,UAAA,OAAA,WACA,OAAA,KAAA,MAAA,UAGA,OAAA,QAAA,SAAA,GAEA,MAAA,SADA,EAAA,EAAA,eACA,IAAA,EACA,WAAA,GAAA,cAAA,EAAA,IAAA,EAEA,IAAA,EAAA,EAAA;;;AC5BA,aACA,IAAA,EAAA,QAAA,YACA,EAAA,QAAA,eAAA,OAEA,EAAA,QAAA,eAEA,EAAA,EAAA,MAAA,KACA,EAAA,GAEA,SAAA,EAAA,EAAA,GACA,EAAA,KAAA,KAAA,UACA,iBAAA,IACA,EAAA,EAAA,KAAA,IAGA,KAAA,KAAA,EACA,KAAA,KAAA,EAEA,EAAA,OAAA,EACA,EAAA,EAAA,GACA,EAAA,OAAA,IACA,EAAA,EAAA,OAAA,CAAA,EAAA,GAAA,IAMA,IAHA,IAAA,EAAA,KAAA,MAAA,EAAA,YAAA,GACA,EAAA,KAAA,MAAA,EAAA,YAAA,GAEA,EAAA,EAAA,EAAA,EAAA,IACA,EAAA,GAAA,GAAA,EAAA,GACA,EAAA,GAAA,GAAA,EAAA,GAGA,KAAA,MAAA,CAAA,GAGA,EAAA,EAAA,GAEA,EAAA,UAAA,QAAA,SAAA,GACA,KAAA,MAAA,KAAA,IAGA,EAAA,UAAA,OAAA,WACA,IAAA,EAAA,KAAA,KAAA,EAAA,OAAA,KAAA,QACA,OAAA,KAAA,KAAA,EAAA,OAAA,CAAA,KAAA,MAAA,MAEA,OAAA,QAAA;;AC7CA,IAAA,EAAA,QAAA,UAEA,OAAA,QAAA,SAAA,GACA,OAAA,IAAA,GAAA,OAAA,GAAA;;;ACHA,aACA,IAAA,EAAA,QAAA,YACA,EAAA,QAAA,YACA,EAAA,QAAA,eACA,EAAA,QAAA,eAAA,OACA,EAAA,QAAA,mBACA,EAAA,QAAA,aAEA,EAAA,QAAA,UAEA,EAAA,EAAA,MAAA,KAEA,SAAA,EAAA,EAAA,GACA,EAAA,KAAA,KAAA,UACA,iBAAA,IACA,EAAA,EAAA,KAAA,IAGA,IAAA,EAAA,WAAA,GAAA,WAAA,EAAA,IAAA,IAEA,KAAA,KAAA,EACA,KAAA,KAAA,EACA,EAAA,OAAA,GAEA,GADA,WAAA,EAAA,IAAA,EAAA,EAAA,IACA,OAAA,GAAA,SACA,EAAA,OAAA,IACA,EAAA,EAAA,OAAA,CAAA,EAAA,GAAA,IAMA,IAHA,IAAA,EAAA,KAAA,MAAA,EAAA,YAAA,GACA,EAAA,KAAA,MAAA,EAAA,YAAA,GAEA,EAAA,EAAA,EAAA,EAAA,IACA,EAAA,GAAA,GAAA,EAAA,GACA,EAAA,GAAA,GAAA,EAAA,GAEA,KAAA,MAAA,WAAA,EAAA,IAAA,EAAA,EAAA,GACA,KAAA,MAAA,OAAA,GAGA,EAAA,EAAA,GAEA,EAAA,UAAA,QAAA,SAAA,GACA,KAAA,MAAA,OAAA,IAGA,EAAA,UAAA,OAAA,WACA,IAAA,EAAA,KAAA,MAAA,SAEA,OADA,WAAA,KAAA,KAAA,IAAA,EAAA,EAAA,KAAA,OACA,OAAA,KAAA,OAAA,OAAA,GAAA,UAGA,OAAA,QAAA,SAAA,EAAA,GAEA,MAAA,YADA,EAAA,EAAA,gBACA,cAAA,EACA,IAAA,EAAA,SAAA,GAEA,QAAA,EACA,IAAA,EAAA,EAAA,GAEA,IAAA,EAAA,EAAA;;AC5DA/Q,OAAOxB,QAAQ,CAAC2T,wBAAwB,CAACC,KAAK,MAAMC,KAAK,SAASC,GAAG,0CAA0C,aAAa,CAACF,KAAK,YAAYC,KAAK,SAASC,GAAG,0CAA0CC,wBAAwB,CAACH,KAAK,MAAMC,KAAK,SAASC,GAAG,0CAA0C,aAAa,CAACF,KAAK,YAAYC,KAAK,SAASC,GAAG,0CAA0CE,wBAAwB,CAACJ,KAAK,MAAMC,KAAK,SAASC,GAAG,0CAA0C,aAAa,CAACF,KAAK,YAAYC,KAAK,SAASC,GAAG,0CAA0CG,wBAAwB,CAACL,KAAK,MAAMC,KAAK,SAASC,GAAG,0CAA0C,aAAa,CAACF,KAAK,YAAYC,KAAK,SAASC,GAAG,0CAA0C,WAAW,CAACF,KAAK,MAAMC,KAAK,OAAOC,GAAG,kCAAkC,kBAAkB,CAACF,KAAK,QAAQC,KAAK,OAAOC,GAAG,IAAII,OAAO,CAACN,KAAK,QAAQC,KAAK,SAASC,GAAG,IAAIK,OAAO,CAACP,KAAK,QAAQC,KAAK,SAASC,GAAG,IAAIM,OAAO,CAACR,KAAK,QAAQC,KAAK,SAASC,GAAG,IAAIO,OAAO,CAACT,KAAK,QAAQC,KAAK,SAASC,GAAG,IAAI,UAAU,CAACF,KAAK,MAAMC,KAAK,OAAOC,GAAG,IAAI,WAAW,CAACF,KAAK,MAAMC,KAAK,OAAOC,GAAG,IAAIQ,IAAI,CAACV,KAAK,MAAMC,KAAK,OAAOC,GAAG,IAAI,kBAAkB,CAACF,KAAK,MAAMC,KAAK,SAASC,GAAG,IAAI,aAAa,CAACF,KAAK,MAAMC,KAAK,SAASC,GAAG,IAAI,kBAAkB,CAACF,KAAK,MAAMC,KAAK,SAASC,GAAG,IAAI,aAAa,CAACF,KAAK,MAAMC,KAAK,SAASC,GAAG,IAAI,kBAAkB,CAACF,KAAK,MAAMC,KAAK,SAASC,GAAG,IAAI,aAAa,CAACF,KAAK,MAAMC,KAAK,SAASC,GAAG,IAAI,kBAAkB,CAACF,KAAK,MAAMC,KAAK,SAASC,GAAG,IAAI,aAAa,CAACF,KAAK,MAAMC,KAAK,SAASC,GAAG,IAAI,gBAAgB,CAACF,KAAK,MAAMC,KAAK,SAASC,GAAG,IAAIS,iBAAiB,CAACX,KAAK,MAAMC,KAAK,SAASC,GAAG,kCAAkC,gBAAgB,CAACF,KAAK,MAAMC,KAAK,SAASC,GAAG,kCAAkCU,qBAAqB,CAACZ,KAAK,MAAMC,KAAK,MAAMC,GAAG,wCAAwC,UAAU,CAACF,KAAK,MAAMC,KAAK,MAAMC,GAAG;;ACA51D,aAEAtS,OAAOxB,QAAU6K,QAAQ;;ACFzB,IAAI4J,EAAY5V,KAAKC,IAAI,EAAG,IAAM,EAElC0C,OAAOxB,QAAU,SAAU0U,EAAYC,GACrC,GAA0B,iBAAfD,EACT,MAAM,IAAIrO,UAAU,2BAGtB,GAAIqO,EAAa,EACf,MAAM,IAAIrO,UAAU,kBAGtB,GAAsB,iBAAXsO,EACT,MAAM,IAAItO,UAAU,2BAGtB,GAAIsO,EAAS,GAAKA,EAASF,GAAaE,GAAWA,EACjD,MAAM,IAAItO,UAAU;;;;ACLQ,IAX5B6H,EAW4B,EAAA,UAAA,GAAA,EAAA,QAAA,WAThC,GAAI/B,EAAO5K,SAAW4K,EAAO5K,QAAQqT,QACnC1G,EAAkB,aACb,GAAI/B,EAAO5K,SAAW4K,EAAO5K,QAAQmC,QAAS,CACnD,IAAImR,EAAgBC,SAASvT,EAAQmC,QAAQpF,MAAM,KAAK,GAAGqB,MAAM,GAAI,IAErEuO,EAAkB2G,GAAiB,EAAI,QAAU,cAEjD3G,EAAkB,QAEpB1M,OAAOxB,QAAUkO;;;ACXjB,IAAIjC,EAASpB,QAAQ,eAAeoB,OAEpCzK,OAAOxB,QAAU,SAAU+U,EAAO/J,EAAU1G,GAC1C,GAAI2H,EAAOU,SAASoI,GAClB,OAAOA,EACF,GAAqB,iBAAVA,EAChB,OAAO9I,EAAOO,KAAKuI,EAAO/J,GACrB,GAAIgK,YAAYC,OAAOF,GAC5B,OAAO9I,EAAOO,KAAKuI,EAAMnE,QAEzB,MAAM,IAAIvK,UAAU/B,EAAO;;;ACV/B,IAAI4Q,EAAMrK,QAAQ,mBACdsK,EAAYtK,QAAQ,aACpBuK,EAAMvK,QAAQ,UACdoB,EAASpB,QAAQ,eAAeoB,OAEhCoJ,EAAkBxK,QAAQ,kBAC1BqD,EAAkBrD,QAAQ,sBAC1ByK,EAAWzK,QAAQ,eAEnB0K,EAAQtJ,EAAOuJ,MAAM,KACrBC,EAAQ,CACVP,IAAK,GACLQ,KAAM,GACNvB,OAAQ,GACRD,OAAQ,GACRE,OAAQ,GACRC,OAAQ,GACRsB,OAAQ,GACRC,UAAW,IAGb,SAASC,EAAMC,EAAKtL,EAAKuL,GACvB,IAAIlC,EAAOmC,EAAUF,GACjBG,EAAqB,WAARH,GAA4B,WAARA,EAAoB,IAAM,GAE3DtL,EAAIhM,OAASyX,EACfzL,EAAMqJ,EAAKrJ,GACFA,EAAIhM,OAASyX,IACtBzL,EAAMyB,EAAOxJ,OAAO,CAAC+H,EAAK+K,GAAQU,IAKpC,IAFA,IAAIC,EAAOjK,EAAOyG,YAAYuD,EAAYR,EAAMK,IAC5CK,EAAOlK,EAAOyG,YAAYuD,EAAYR,EAAMK,IACvC3S,EAAI,EAAGA,EAAI8S,EAAW9S,IAC7B+S,EAAK/S,GAAc,GAATqH,EAAIrH,GACdgT,EAAKhT,GAAc,GAATqH,EAAIrH,GAGhB,IAAIiT,EAAQnK,EAAOyG,YAAYuD,EAAYF,EAAU,GACrDG,EAAK7N,KAAK+N,EAAO,EAAG,EAAGH,GACvB,KAAKG,MAAQA,EACb,KAAKC,MAAQH,EACb,KAAKC,KAAOA,EACZ,KAAKL,IAAMA,EACX,KAAKG,UAAYA,EACjB,KAAKpC,KAAOA,EACZ,KAAKyC,KAAOb,EAAMK,GAUpB,SAASE,EAAWF,GAQlB,MAAY,WAARA,GAA4B,cAARA,EAJxB,SAAqB3C,GACnB,OAAO,IAAIgC,GAAYnC,OAAOG,GAAMD,UAI1B,QAAR4C,EAAsBZ,EAR1B,SAAkB/B,GAChB,OAAOiC,EAAIU,GAAK9C,OAAOG,GAAMD,UAWjC,SAASqD,EAAQC,EAAUC,EAAM/B,EAAYC,EAAQzB,GACnDmC,EAAgBX,EAAYC,GAM5B,IAAI+B,EAAO,IAAIb,EAFf3C,EAASA,GAAU,OAHnBsD,EAAWlB,EAASkB,EAAUtI,EAAiB,aAC/CuI,EAAOnB,EAASmB,EAAMvI,EAAiB,SAII1P,QAEvCmY,EAAK1K,EAAOyG,YAAYiC,GACxBiC,EAAS3K,EAAOyG,YAAY+D,EAAKjY,OAAS,GAC9CiY,EAAKpO,KAAKuO,EAAQ,EAAG,EAAGH,EAAKjY,QAM7B,IAJA,IAAIqY,EAAU,EACVC,EAAOrB,EAAMvC,GACbvC,EAAI9R,KAAKkY,KAAKpC,EAASmC,GAElB3T,EAAI,EAAGA,GAAKwN,EAAGxN,IAAK,CAC3ByT,EAAOI,cAAc7T,EAAGsT,EAAKjY,QAK7B,IAHA,IAAIyY,EAAIP,EAAK9T,IAAIgU,EAAQF,EAAKN,OAC1Bc,EAAID,EAEC1D,EAAI,EAAGA,EAAImB,EAAYnB,IAAK,CACnC2D,EAAIR,EAAK9T,IAAIsU,EAAGR,EAAKL,OACrB,IAAK,IAAIc,EAAI,EAAGA,EAAIL,EAAMK,IAAKF,EAAEE,IAAMD,EAAEC,GAG3CF,EAAE5O,KAAKsO,EAAIE,GACXA,GAAWC,EAGb,OAAOH,EApDTd,EAAKxS,UAAUT,IAAM,SAAUuQ,EAAM+C,GAInC,OAHA/C,EAAK9K,KAAK6N,EAAM,KAAKD,WACb,KAAKpC,KAAKqC,GAChB7N,KAAK,KAAK8N,KAAM,KAAKF,WAChB,KAAKpC,KAAK,KAAKsC,OAmDxB3U,OAAOxB,QAAUuW;;;;ACahB,IA9GGa,EAkCApU,EA4EH,EAAA,UAAA,GArHGiJ,EAASpB,QAAQ,eAAeoB,OAEhCoJ,EAAkBxK,QAAQ,kBAC1BqD,EAAkBrD,QAAQ,sBAC1BwD,EAAOxD,QAAQ,UACfyK,EAAWzK,QAAQ,eAGnBwM,EAASlL,EAAOmL,QAAUnL,EAAOmL,OAAOD,OACxCE,EAAY,CACdnC,IAAK,QACL,QAAS,QACTM,KAAM,QACNxB,OAAQ,UACR,UAAW,UACXE,OAAQ,UACR,UAAW,UACX,UAAW,UACXC,OAAQ,WAENmD,EAAS,GACb,SAASC,EAAaC,GACpB,GAAIvL,EAAO5K,UAAY4K,EAAO5K,QAAQqT,QACpC,OAAOlM,QAAQC,SAAQ,GAEzB,IAAK0O,IAAWA,EAAOM,YAAcN,EAAOO,WAC1C,OAAOlP,QAAQC,SAAQ,GAEzB,QAAqB5C,IAAjByR,EAAOE,GACT,OAAOF,EAAOE,GAGhB,IAAIG,EAAOC,EADXV,EAAWA,GAAYnL,EAAOuJ,MAAM,GACD4B,EAAU,GAAI,IAAKM,GACnDK,KAAK,WACJ,OAAO,IACNC,MAAM,WACP,OAAO,IAGX,OADAR,EAAOE,GAAQG,EACRA,EAGT,SAASI,IACP,OAAIjV,IAIFA,EADEmJ,EAAO5K,SAAW4K,EAAO5K,QAAQyB,SACxBmJ,EAAO5K,QAAQyB,SACjBmJ,EAAO+L,eACL/L,EAAO+L,eACT/L,EAAOgM,aACLhM,EAAOgM,aAEPhM,EAAOrK,YAItB,SAASgW,EAAetB,EAAUC,EAAM/B,EAAYlW,EAAQkZ,GAC1D,OAAOL,EAAOM,UACZ,MAAOnB,EAAU,CAAElS,KAAM,WAAY,EAAO,CAAC,eAC7CyT,KAAK,SAAUvN,GACf,OAAO6M,EAAOO,WAAW,CACvBtT,KAAM,SACNmS,KAAMA,EACN/B,WAAYA,EACZb,KAAM,CACJvP,KAAMoT,IAEPlN,EAAKhM,GAAU,KACjBuZ,KAAK,SAAUK,GAChB,OAAOnM,EAAOO,KAAK4L,KAIvB,SAASC,EAAgBC,EAASpN,GAChCoN,EAAQP,KAAK,SAAUzG,GACrB2G,GAAAA,CAAc,WACZ/M,EAAS,KAAMoG,MAEhB,SAAUvP,GACXkW,GAAAA,CAAc,WACZ/M,EAASnJ,OAIfP,OAAOxB,QAAU,SAAUwW,EAAUC,EAAM/B,EAAYC,EAAQzB,EAAQhI,GAC/C,mBAAXgI,IACThI,EAAWgI,EACXA,OAASnN,GAIX,IAAI2R,EAAOH,GADXrE,EAASA,GAAU,QACSnB,eAE5B,GAAK2F,GAAkC,mBAAnBvL,EAAOzD,QAA3B,CAgBA,GAHA2M,EAAgBX,EAAYC,GAC5B6B,EAAWlB,EAASkB,EAAUtI,EAAiB,YAC/CuI,EAAOnB,EAASmB,EAAMvI,EAAiB,QACf,mBAAbhD,EAAyB,MAAM,IAAIxJ,MAAM,kCAEpD2W,EAAeZ,EAAYC,GAAMK,KAAK,SAAUQ,GAC9C,OAAIA,EAAaT,EAActB,EAAUC,EAAM/B,EAAYC,EAAQ+C,GAE5DrJ,EAAKmI,EAAUC,EAAM/B,EAAYC,EAAQzB,KAC9ChI,QArBF+M,GAAAA,CAAc,WACZ,IAAI3G,EACJ,IACEA,EAAMjD,EAAKmI,EAAUC,EAAM/B,EAAYC,EAAQzB,GAC/C,MAAOnR,GACP,OAAOmJ,EAASnJ,GAElBmJ,EAAS,KAAMoG;;ACtGrBtR,QAAQuW,OAAS1L,QAAQ,eACzB7K,QAAQwY,WAAa3N,QAAQ;;ACD7B,aAEA,QAAA,aAAA,SAAA,EAAA,GAKA,OAJA,EAAA,EAAA,IAAA,GACA,EAAA,EAAA,IAAA,GACA,EAAA,EAAA,IAAA,EACA,EAAA,EAAA,MACA,GAGA,QAAA,cAAA,SAAA,EAAA,EAAA,GACA,EAAA,EAAA,GAAA,IAAA,GACA,EAAA,EAAA,GAAA,IAAA,GAAA,IACA,EAAA,EAAA,GAAA,IAAA,EAAA,IACA,EAAA,EAAA,GAAA,IAAA,GAGA,QAAA,GAAA,SAAA,EAAA,EAAA,EAAA,GAIA,IAHA,IAAA,EAAA,EACA,EAAA,EAEA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,CACA,IAAA,IAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EACA,IAAA,EACA,GAAA,IAAA,EAAA,EAAA,EAEA,IAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EACA,IAAA,EACA,GAAA,IAAA,EAAA,EAAA,EAIA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,CACA,IAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EACA,IAAA,EACA,GAAA,IAAA,EAAA,EAAA,EAEA,IAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EACA,IAAA,EACA,GAAA,IAAA,EAAA,EAAA,EAIA,EAAA,EAAA,GAAA,IAAA,EACA,EAAA,EAAA,GAAA,IAAA,GAGA,QAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAIA,IAHA,IAAA,EAAA,EACA,EAAA,EAEA,EAAA,EAAA,EAAA,EAAA,IACA,IAAA,IAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EACA,IAAA,EACA,GAAA,IAAA,EAAA,EAAA,EACA,IAAA,EACA,GAAA,IAAA,EAAA,EAAA,EAGA,IAAA,EAAA,EAAA,EAAA,EAAA,IACA,IAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EACA,IAAA,EACA,GAAA,IAAA,EAAA,EAAA,EACA,IAAA,EACA,GAAA,IAAA,EAAA,EAAA,EAIA,EAAA,EAAA,GAAA,IAAA,EACA,EAAA,EAAA,GAAA,IAAA,GAGA,QAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAQA,IAPA,IAAA,EAAA,EACA,EAAA,EAMA,EAAA,EAAA,GAAA,EAAA,IAAA,CACA,IAAA,IAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EACA,IAAA,EACA,GAAA,GAAA,EAAA,EAAA,EAEA,IAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EACA,IAAA,EACA,GAAA,GAAA,EAAA,EAAA,EAGA,IAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EACA,IAAA,EACA,GAAA,GAAA,EAAA,EAAA,EAOA,IAAA,EAAA,EAAA,GAAA,EAAA,IAAA,CACA,IAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EACA,IAAA,EACA,GAAA,GAAA,EAAA,EAAA,EAEA,IAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EACA,IAAA,EACA,GAAA,GAAA,EAAA,EAAA,EAGA,IAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EACA,IAAA,EACA,GAAA,GAAA,EAAA,EAAA,EAGA,EAAA,EAAA,GAAA,IAAA,EACA,EAAA,EAAA,GAAA,IAAA,GAGA,QAAA,OAAA,SAAA,EAAA,GACA,OAAA,GAAA,EAAA,UAAA,IAAA,GAAA,GAGA,IAAA,EAAA,CAEA,GAAA,GAAA,GAAA,EAAA,GAAA,GAAA,GAAA,EACA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GACA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,GAGA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,GAAA,GACA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EACA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,IAGA,QAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAKA,IAJA,IAAA,EAAA,EACA,EAAA,EAEA,EAAA,EAAA,SAAA,EACA,EAAA,EAAA,EAAA,EAAA,IACA,IAAA,EACA,GAAA,IAAA,EAAA,GAAA,EAEA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IACA,IAAA,EACA,GAAA,IAAA,EAAA,GAAA,EAGA,EAAA,EAAA,GAAA,IAAA,EACA,EAAA,EAAA,GAAA,IAAA,GAGA,QAAA,OAAA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,EACA,EAAA,EAEA,GAAA,EAAA,IAAA,EAAA,IAAA,GACA,IAAA,IAAA,EAAA,GAAA,GAAA,GAAA,GAAA,EACA,IAAA,EACA,GAAA,IAAA,EAAA,GAEA,IAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EACA,GAAA,IAAA,EAAA,GACA,IAAA,EAEA,IAAA,GAAA,IAAA,EAAA,IAAA,GAEA,EAAA,EAAA,GAAA,IAAA,EACA,EAAA,EAAA,GAAA,IAAA,GAGA,IAAA,EAAA,CACA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,EACA,EAAA,GAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EACA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAEA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GACA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EACA,EAAA,GAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EACA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAEA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GACA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EACA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EACA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAEA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EACA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EACA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAEA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EACA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,GACA,GAAA,EAAA,EA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ACA,oEAEA,CACA,mEACA,oEAEA,CACA,kEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,mEAEA,CACA,mEACA,oEAEA,CACA,kEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,sEAIA,IAAA,CACA,IAAA,EACA,OAAA,CACA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,mEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,mEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,mEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,mEAEA,CACA,mEACA,oEAEA,CACA,kEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,mEAEA,CACA,mEACA,mEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,mEAEA,CACA,mEACA,oEAEA,CACA,mEACA,mEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,kEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,mEAEA,CACA,mEACA,mEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,kEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,mEAEA,CACA,mEACA,oEAEA,CACA,mEACA,mEAEA,CACA,mEACA,oEAEA,CACA,kEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,iEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,kEACA,oEAEA,CACA,mEACA,mEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,mEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,mEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,mEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,mEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA;;ACvwBA,aAEA,IAsKA,EAtKA,EAAA,QAEA,EAAA,QAAA,WACA,EAAA,QAAA,WACA,EAAA,QAAA,WAEA,EAAA,EAAA,OAEA,SAAA,EAAA,GACA,UAAA,EAAA,KACA,KAAA,MAAA,IAAA,EAAA,MAAA,GACA,YAAA,EAAA,KACA,KAAA,MAAA,IAAA,EAAA,QAAA,GAEA,KAAA,MAAA,IAAA,EAAA,KAAA,GACA,KAAA,EAAA,KAAA,MAAA,EACA,KAAA,EAAA,KAAA,MAAA,EACA,KAAA,KAAA,EAAA,KAEA,EAAA,KAAA,EAAA,WAAA,iBACA,EAAA,KAAA,EAAA,IAAA,KAAA,GAAA,aAAA,2BAIA,SAAA,EAAA,EAAA,GACA,OAAA,eAAA,EAAA,EAAA,CACA,cAAA,EACA,YAAA,EACA,IAAA,WACA,IAAA,EAAA,IAAA,EAAA,GAMA,OALA,OAAA,eAAA,EAAA,EAAA,CACA,cAAA,EACA,YAAA,EACA,MAAA,IAEA,KAbA,EAAA,YAAA,EAkBA,EAAA,OAAA,CACA,KAAA,QACA,MAAA,OACA,EAAA,wDACA,EAAA,wDACA,EAAA,wDACA,EAAA,wDACA,KAAA,EAAA,OACA,MAAA,EACA,EAAA,CACA,wDACA,2DAIA,EAAA,OAAA,CACA,KAAA,QACA,MAAA,OACA,EAAA,iEACA,EAAA,iEACA,EAAA,iEACA,EAAA,iEACA,KAAA,EAAA,OACA,MAAA,EACA,EAAA,CACA,iEACA,oEAIA,EAAA,OAAA,CACA,KAAA,QACA,MAAA,KACA,EAAA,0EACA,EAAA,0EACA,EAAA,0EACA,EAAA,0EACA,KAAA,EAAA,OACA,MAAA,EACA,EAAA,CACA,0EACA,6EAIA,EAAA,OAAA,CACA,KAAA,QACA,MAAA,KACA,EAAA,8GAEA,EAAA,8GAEA,EAAA,8GAEA,EAAA,8GAEA,KAAA,EAAA,OACA,MAAA,EACA,EAAA,CACA,8GAEA,iHAKA,EAAA,OAAA,CACA,KAAA,QACA,MAAA,KACA,EAAA,2JAGA,EAAA,2JAGA,EAAA,2JAGA,EAAA,2JAGA,KAAA,EAAA,OACA,MAAA,EACA,EAAA,CACA,2JAGA,8JAMA,EAAA,aAAA,CACA,KAAA,OACA,MAAA,SACA,EAAA,sEACA,EAAA,QACA,EAAA,IACA,EAAA,sEACA,KAAA,EAAA,OACA,MAAA,EACA,EAAA,CACA,OAIA,EAAA,UAAA,CACA,KAAA,UACA,MAAA,SACA,EAAA,sEACA,EAAA,KACA,EAAA,IAEA,EAAA,sEACA,EAAA,sEACA,KAAA,EAAA,OACA,MAAA,EACA,EAAA,CACA,mEAGA,sEAKA,IACA,EAAA,QAAA,2BACA,MAAA,GACA,OAAA,EAGA,EAAA,YAAA,CACA,KAAA,QACA,MAAA,OACA,EAAA,0EACA,EAAA,IACA,EAAA,IACA,EAAA,0EACA,EAAA,IACA,KAAA,EAAA,OAGA,KAAA,mEACA,OAAA,mEACA,MAAA,CACA,CACA,EAAA,mCACA,EAAA,qCAEA,CACA,EAAA,oCACA,EAAA,qCAIA,MAAA,EACA,EAAA,CACA,mEACA,mEACA;;AC3MA,aAEA,IAAA,EAAA,QAAA,WACA,EAAA,QAAA,6BACA,EAAA,QAAA,uBAEA,SAAA,EAAA,GACA,KAAA,gBAAA,GACA,OAAA,IAAA,EAAA,GACA,KAAA,KAAA,EAAA,KACA,KAAA,aAAA,EAAA,WAEA,KAAA,OAAA,KAAA,KAAA,QACA,KAAA,WAAA,EAAA,YAAA,KAAA,KAAA,aAEA,KAAA,QAAA,KACA,KAAA,eAAA,KACA,KAAA,EAAA,KACA,KAAA,EAAA,KAEA,IAAA,EAAA,EAAA,QAAA,EAAA,QAAA,EAAA,YAAA,OACA,EAAA,EAAA,QAAA,EAAA,MAAA,EAAA,UAAA,OACA,EAAA,EAAA,QAAA,EAAA,KAAA,EAAA,SAAA,OACA,EAAA,EAAA,QAAA,KAAA,WAAA,EACA,mCAAA,KAAA,WAAA,SACA,KAAA,MAAA,EAAA,EAAA,GAEA,OAAA,QAAA,EAEA,EAAA,UAAA,MAAA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,OAAA,GAAA,OAAA,GAEA,KAAA,EAAA,IAAA,MAAA,KAAA,OAAA,GACA,KAAA,EAAA,IAAA,MAAA,KAAA,OAAA,GACA,IAAA,IAAA,EAAA,EAAA,EAAA,KAAA,EAAA,OAAA,IACA,KAAA,EAAA,GAAA,EACA,KAAA,EAAA,GAAA,EAGA,KAAA,QAAA,GACA,KAAA,QAAA,EACA,KAAA,eAAA,iBAGA,EAAA,UAAA,MAAA,WACA,OAAA,IAAA,EAAA,KAAA,KAAA,KAAA,KAAA,IAGA,EAAA,UAAA,QAAA,SAAA,GACA,IAAA,EAAA,KAAA,QACA,OAAA,KAAA,GACA,OAAA,CAAA,IACA,IACA,EAAA,EAAA,OAAA,IACA,KAAA,EAAA,EAAA,SACA,KAAA,EAAA,KAAA,QAAA,OAAA,KAAA,GAAA,SACA,IAGA,KAAA,EAAA,KAAA,QACA,OAAA,KAAA,GACA,OAAA,CAAA,IACA,OAAA,GACA,SACA,KAAA,EAAA,KAAA,QAAA,OAAA,KAAA,GAAA,WAGA,EAAA,UAAA,OAAA,SAAA,EAAA,EAAA,EAAA,GAEA,iBAAA,IACA,EAAA,EACA,EAAA,EACA,EAAA,MAGA,EAAA,EAAA,QAAA,EAAA,GACA,EAAA,EAAA,QAAA,EAAA,GAEA,EAAA,EAAA,QAAA,KAAA,WAAA,EACA,mCAAA,KAAA,WAAA,SAEA,KAAA,QAAA,EAAA,OAAA,GAAA,KACA,KAAA,QAAA,GAGA,EAAA,UAAA,SAAA,SAAA,EAAA,EAAA,EAAA,GACA,GAAA,KAAA,QAAA,KAAA,eACA,MAAA,IAAA,MAAA,sBAGA,iBAAA,IACA,EAAA,EACA,EAAA,EACA,EAAA,MAIA,IACA,EAAA,EAAA,QAAA,EAAA,GAAA,OACA,KAAA,QAAA,IAIA,IADA,IAAA,EAAA,GACA,EAAA,OAAA,GACA,KAAA,EAAA,KAAA,QAAA,OAAA,KAAA,GAAA,SACA,EAAA,EAAA,OAAA,KAAA,GAGA,IAAA,EAAA,EAAA,MAAA,EAAA,GAGA,OAFA,KAAA,QAAA,GACA,KAAA,UACA,EAAA,OAAA,EAAA;;AC/GA,aAEA,IAAA,EAAA,QAAA,SACA,EAAA,QAAA,YACA,EAAA,EAAA,OAEA,SAAA,EAAA,EAAA,GACA,KAAA,GAAA,EACA,KAAA,KAAA,KACA,KAAA,IAAA,KAGA,EAAA,MACA,KAAA,eAAA,EAAA,KAAA,EAAA,SACA,EAAA,KACA,KAAA,cAAA,EAAA,IAAA,EAAA,QAEA,OAAA,QAAA,EAEA,EAAA,WAAA,SAAA,EAAA,EAAA,GACA,OAAA,aAAA,EACA,EAEA,IAAA,EAAA,EAAA,CACA,IAAA,EACA,OAAA,KAIA,EAAA,YAAA,SAAA,EAAA,EAAA,GACA,OAAA,aAAA,EACA,EAEA,IAAA,EAAA,EAAA,CACA,KAAA,EACA,QAAA,KAIA,EAAA,UAAA,SAAA,WACA,IAAA,EAAA,KAAA,YAEA,OAAA,EAAA,aACA,CAAA,QAAA,EAAA,OAAA,sBACA,EAAA,WAEA,EAAA,IAAA,KAAA,GAAA,MAAA,GAAA,aAGA,CAAA,QAAA,EAAA,OAAA,MAFA,CAAA,QAAA,EAAA,OAAA,uBAFA,CAAA,QAAA,EAAA,OAAA,8BAOA,EAAA,UAAA,UAAA,SAAA,EAAA,GAUA,MARA,iBAAA,IACA,EAAA,EACA,EAAA,MAGA,KAAA,MACA,KAAA,IAAA,KAAA,GAAA,EAAA,IAAA,KAAA,OAEA,EAGA,KAAA,IAAA,OAAA,EAAA,GAFA,KAAA,KAKA,EAAA,UAAA,WAAA,SAAA,GACA,MAAA,QAAA,EACA,KAAA,KAAA,SAAA,GAAA,GAEA,KAAA,MAGA,EAAA,UAAA,eAAA,SAAA,EAAA,GACA,KAAA,KAAA,IAAA,EAAA,EAAA,GAAA,IAIA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,GAAA,MAAA,IAGA,EAAA,UAAA,cAAA,SAAA,EAAA,GACA,GAAA,EAAA,GAAA,EAAA,EAWA,MAPA,SAAA,KAAA,GAAA,MAAA,KACA,EAAA,EAAA,EAAA,qBACA,UAAA,KAAA,GAAA,MAAA,MACA,YAAA,KAAA,GAAA,MAAA,MACA,EAAA,EAAA,GAAA,EAAA,EAAA,qCAEA,KAAA,IAAA,KAAA,GAAA,MAAA,MAAA,EAAA,EAAA,EAAA,IAGA,KAAA,IAAA,KAAA,GAAA,MAAA,YAAA,EAAA,IAIA,EAAA,UAAA,OAAA,SAAA,GAIA,OAHA,EAAA,YACA,EAAA,EAAA,WAAA,8BAEA,EAAA,IAAA,KAAA,MAAA,QAIA,EAAA,UAAA,KAAA,SAAA,EAAA,EAAA,GACA,OAAA,KAAA,GAAA,KAAA,EAAA,KAAA,EAAA,IAGA,EAAA,UAAA,OAAA,SAAA,EAAA,GACA,OAAA,KAAA,GAAA,OAAA,EAAA,EAAA,OAGA,EAAA,UAAA,QAAA,WACA,MAAA,eAAA,KAAA,MAAA,KAAA,KAAA,SAAA,GAAA,IACA,UAAA,KAAA,KAAA,KAAA,IAAA,WAAA;;ACvHA,aAEA,IAAA,EAAA,QAAA,SAEA,EAAA,QAAA,YACA,EAAA,EAAA,OAEA,SAAA,EAAA,EAAA,GACA,GAAA,aAAA,EACA,OAAA,EAEA,KAAA,WAAA,EAAA,KAGA,EAAA,EAAA,GAAA,EAAA,EAAA,4BACA,KAAA,EAAA,IAAA,EAAA,EAAA,EAAA,IACA,KAAA,EAAA,IAAA,EAAA,EAAA,EAAA,SACA,IAAA,EAAA,cACA,KAAA,cAAA,KAEA,KAAA,cAAA,EAAA,eAIA,SAAA,IACA,KAAA,MAAA,EAGA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,EAAA,SACA,KAAA,IAAA,GACA,OAAA,EAEA,IAAA,EAAA,GAAA,EAGA,GAAA,IAAA,GAAA,EAAA,EACA,OAAA,EAIA,IADA,IAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,IAAA,IACA,IAAA,EACA,GAAA,EAAA,GACA,KAAA,EAIA,QAAA,GAAA,OAIA,EAAA,MAAA,EACA,GAGA,SAAA,EAAA,GAGA,IAFA,IAAA,EAAA,EACA,EAAA,EAAA,OAAA,GACA,EAAA,MAAA,IAAA,EAAA,EAAA,KAAA,EAAA,GACA,IAEA,OAAA,IAAA,EACA,EAEA,EAAA,MAAA,GA4DA,SAAA,EAAA,EAAA,GACA,GAAA,EAAA,IACA,EAAA,KAAA,OADA,CAIA,IAAA,EAAA,GAAA,KAAA,IAAA,GAAA,KAAA,MAAA,GAEA,IADA,EAAA,KAAA,IAAA,KACA,GACA,EAAA,KAAA,KAAA,GAAA,GAAA,KAEA,EAAA,KAAA,IAjHA,OAAA,QAAA,EA8CA,EAAA,UAAA,WAAA,SAAA,EAAA,GACA,EAAA,EAAA,QAAA,EAAA,GACA,IAAA,EAAA,IAAA,EACA,GAAA,KAAA,EAAA,EAAA,SACA,OAAA,EAEA,IAAA,EAAA,EAAA,EAAA,GACA,IAAA,IAAA,EACA,OAAA,EAEA,GAAA,EAAA,EAAA,QAAA,EAAA,OACA,OAAA,EAEA,GAAA,IAAA,EAAA,EAAA,SACA,OAAA,EAEA,IAAA,EAAA,EAAA,EAAA,GACA,IAAA,IAAA,EACA,OAAA,EAEA,IAAA,EAAA,EAAA,MAAA,EAAA,MAAA,EAAA,EAAA,OAEA,GADA,EAAA,OAAA,EACA,IAAA,EAAA,EAAA,SACA,OAAA,EAEA,IAAA,EAAA,EAAA,EAAA,GACA,IAAA,IAAA,EACA,OAAA,EAEA,GAAA,EAAA,SAAA,EAAA,EAAA,MACA,OAAA,EAEA,IAAA,EAAA,EAAA,MAAA,EAAA,MAAA,EAAA,EAAA,OACA,GAAA,IAAA,EAAA,GAAA,CACA,KAAA,IAAA,EAAA,IAIA,OAAA,EAHA,EAAA,EAAA,MAAA,GAMA,GAAA,IAAA,EAAA,GAAA,CACA,KAAA,IAAA,EAAA,IAIA,OAAA,EAHA,EAAA,EAAA,MAAA,GAWA,OAJA,KAAA,EAAA,IAAA,EAAA,GACA,KAAA,EAAA,IAAA,EAAA,GACA,KAAA,cAAA,MAEA,GAgBA,EAAA,UAAA,MAAA,SAAA,GACA,IAAA,EAAA,KAAA,EAAA,UACA,EAAA,KAAA,EAAA,UAYA,IATA,IAAA,EAAA,KACA,EAAA,CAAA,GAAA,OAAA,IAEA,IAAA,EAAA,KACA,EAAA,CAAA,GAAA,OAAA,IAEA,EAAA,EAAA,GACA,EAAA,EAAA,KAEA,EAAA,IAAA,IAAA,EAAA,KACA,EAAA,EAAA,MAAA,GAEA,IAAA,EAAA,CAAA,GACA,EAAA,EAAA,EAAA,SACA,EAAA,EAAA,OAAA,IACA,KAAA,GACA,EAAA,EAAA,EAAA,QACA,IAAA,EAAA,EAAA,OAAA,GACA,EAAA,CAAA,IAGA,OAFA,EAAA,EAAA,EAAA,QACA,EAAA,EAAA,OAAA,GACA,EAAA,OAAA,EAAA;;ACpKA,aAEA,IAAA,EAAA,QAAA,SACA,EAAA,QAAA,aACA,EAAA,QAAA,YACA,EAAA,QAAA,aACA,EAAA,QAAA,WACA,EAAA,EAAA,OAEA,EAAA,QAAA,SACA,EAAA,QAAA,eAEA,SAAA,EAAA,GACA,KAAA,gBAAA,GACA,OAAA,IAAA,EAAA,GAGA,iBAAA,IACA,EAAA,OAAA,UAAA,eAAA,KAAA,EAAA,GACA,iBAAA,GAEA,EAAA,EAAA,IAIA,aAAA,EAAA,cACA,EAAA,CAAA,MAAA,IAEA,KAAA,MAAA,EAAA,MAAA,MACA,KAAA,EAAA,KAAA,MAAA,EACA,KAAA,GAAA,KAAA,EAAA,MAAA,GACA,KAAA,EAAA,KAAA,MAAA,EAGA,KAAA,EAAA,EAAA,MAAA,EACA,KAAA,EAAA,WAAA,EAAA,MAAA,EAAA,YAAA,GAGA,KAAA,KAAA,EAAA,MAAA,EAAA,MAAA,KAEA,OAAA,QAAA,EAEA,EAAA,UAAA,QAAA,SAAA,GACA,OAAA,IAAA,EAAA,KAAA,IAGA,EAAA,UAAA,eAAA,SAAA,EAAA,GACA,OAAA,EAAA,YAAA,KAAA,EAAA,IAGA,EAAA,UAAA,cAAA,SAAA,EAAA,GACA,OAAA,EAAA,WAAA,KAAA,EAAA,IAGA,EAAA,UAAA,WAAA,SAAA,GACA,IACA,EAAA,IAcA,IAXA,IAAA,EAAA,IAAA,EAAA,CACA,KAAA,KAAA,KACA,KAAA,EAAA,KACA,QAAA,EAAA,SAAA,OACA,QAAA,EAAA,SAAA,EAAA,KAAA,KAAA,cACA,WAAA,EAAA,SAAA,EAAA,YAAA,OACA,MAAA,KAAA,EAAA,YAGA,EAAA,KAAA,EAAA,aACA,EAAA,KAAA,EAAA,IAAA,IAAA,EAAA,MACA,CACA,IAAA,EAAA,IAAA,EAAA,EAAA,SAAA,IACA,KAAA,EAAA,IAAA,GAAA,GAIA,OADA,EAAA,MAAA,GACA,KAAA,eAAA,KAIA,EAAA,UAAA,aAAA,SAAA,EAAA,GACA,IAAA,EAAA,EAAA,EAAA,aAAA,KAAA,EAAA,YAGA,OAFA,EAAA,IACA,EAAA,EAAA,MAAA,KACA,GAAA,EAAA,IAAA,KAAA,IAAA,EACA,EAAA,IAAA,KAAA,GAEA,GAGA,EAAA,UAAA,KAAA,SAAA,EAAA,EAAA,EAAA,GACA,iBAAA,IACA,EAAA,EACA,EAAA,MAEA,IACA,EAAA,IAEA,EAAA,KAAA,eAAA,EAAA,GACA,EAAA,KAAA,aAAA,IAAA,EAAA,EAAA,KAqBA,IAlBA,IAAA,EAAA,KAAA,EAAA,aACA,EAAA,EAAA,aAAA,QAAA,KAAA,GAGA,EAAA,EAAA,QAAA,KAAA,GAGA,EAAA,IAAA,EAAA,CACA,KAAA,KAAA,KACA,QAAA,EACA,MAAA,EACA,KAAA,EAAA,KACA,QAAA,EAAA,SAAA,SAIA,EAAA,KAAA,EAAA,IAAA,IAAA,EAAA,IAEA,EAAA,GAAA,IAAA,CACA,IAAA,EAAA,EAAA,EACA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,SAAA,KAAA,EAAA,eAEA,MADA,EAAA,KAAA,aAAA,GAAA,IACA,KAAA,IAAA,GAAA,EAAA,IAAA,IAAA,GAAA,CAGA,IAAA,EAAA,KAAA,EAAA,IAAA,GACA,IAAA,EAAA,aAAA,CAGA,IAAA,EAAA,EAAA,OACA,EAAA,EAAA,KAAA,KAAA,GACA,GAAA,IAAA,EAAA,KAAA,GAAA,CAGA,IAAA,EAAA,EAAA,KAAA,KAAA,GAAA,IAAA,EAAA,IAAA,EAAA,cAAA,KAAA,IAEA,GAAA,KADA,EAAA,EAAA,KAAA,KAAA,IACA,KAAA,GAAA,CAGA,IAAA,GAAA,EAAA,OAAA,QAAA,EAAA,IACA,IAAA,EAAA,IAAA,GAAA,EAAA,GAQA,OALA,EAAA,WAAA,EAAA,IAAA,KAAA,IAAA,IACA,EAAA,KAAA,EAAA,IAAA,GACA,GAAA,GAGA,IAAA,EAAA,CAAA,EAAA,EAAA,EAAA,EAAA,cAAA,UAIA,EAAA,UAAA,OAAA,SAAA,EAAA,EAAA,EAAA,GACA,EAAA,KAAA,aAAA,IAAA,EAAA,EAAA,KACA,EAAA,KAAA,cAAA,EAAA,GAIA,IAAA,GAHA,EAAA,IAAA,EAAA,EAAA,QAGA,EACA,EAAA,EAAA,EACA,GAAA,EAAA,KAAA,GAAA,GAAA,EAAA,IAAA,KAAA,IAAA,EACA,OAAA,EACA,GAAA,EAAA,KAAA,GAAA,GAAA,EAAA,IAAA,KAAA,IAAA,EACA,OAAA,EAGA,IAGA,EAHA,EAAA,EAAA,KAAA,KAAA,GACA,EAAA,EAAA,IAAA,GAAA,KAAA,KAAA,GACA,EAAA,EAAA,IAAA,GAAA,KAAA,KAAA,GAGA,OAAA,KAAA,MAAA,gBAWA,EAAA,KAAA,EAAA,QAAA,EAAA,EAAA,YAAA,IACA,cAMA,EAAA,OAAA,KAjBA,EAAA,KAAA,EAAA,OAAA,EAAA,EAAA,YAAA,IACA,cAGA,IAAA,EAAA,OAAA,KAAA,KAAA,GAAA,IAAA,IAgBA,EAAA,UAAA,cAAA,SAAA,EAAA,EAAA,EAAA,GACA,GAAA,EAAA,KAAA,EAAA,4CACA,EAAA,IAAA,EAAA,EAAA,GAEA,IAAA,EAAA,KAAA,EACA,EAAA,IAAA,EAAA,GACA,EAAA,EAAA,EACA,EAAA,EAAA,EAGA,EAAA,EAAA,EACA,EAAA,GAAA,EACA,GAAA,EAAA,IAAA,KAAA,MAAA,EAAA,KAAA,KAAA,MAAA,KAAA,GAAA,EACA,MAAA,IAAA,MAAA,wCAIA,EADA,EACA,KAAA,MAAA,WAAA,EAAA,IAAA,KAAA,MAAA,GAAA,GAEA,KAAA,MAAA,WAAA,EAAA,GAEA,IAAA,EAAA,EAAA,EAAA,KAAA,GACA,EAAA,EAAA,IAAA,GAAA,IAAA,GAAA,KAAA,GACA,EAAA,EAAA,IAAA,GAAA,KAAA,GAIA,OAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAGA,EAAA,UAAA,oBAAA,SAAA,EAAA,EAAA,EAAA,GAEA,GAAA,QADA,EAAA,IAAA,EAAA,EAAA,IACA,cACA,OAAA,EAAA,cAEA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IAAA,CACA,IAAA,EACA,IACA,EAAA,KAAA,cAAA,EAAA,EAAA,GACA,MAAA,GACA,SAGA,GAAA,EAAA,GAAA,GACA,OAAA,EAEA,MAAA,IAAA,MAAA;;ACjPA,aAEA,IAAA,EAAA,QAAA,YACA,EAAA,EAAA,OACA,EAAA,EAAA,WACA,EAAA,EAAA,eAWA,SAAA,EAAA,EAAA,GACA,KAAA,MAAA,EACA,KAAA,QAAA,EAAA,EAAA,QACA,EAAA,QAAA,EAAA,KACA,KAAA,KAAA,EAAA,IAEA,KAAA,UAAA,EAAA,EAAA,KAGA,EAAA,WAAA,SAAA,EAAA,GACA,OAAA,aAAA,EACA,EACA,IAAA,EAAA,EAAA,CAAA,IAAA,KAGA,EAAA,WAAA,SAAA,EAAA,GACA,OAAA,aAAA,EACA,EACA,IAAA,EAAA,EAAA,CAAA,OAAA,KAGA,EAAA,UAAA,OAAA,WACA,OAAA,KAAA,SAGA,EAAA,EAAA,WAAA,WACA,OAAA,KAAA,MAAA,YAAA,KAAA,SAGA,EAAA,EAAA,MAAA,WACA,OAAA,KAAA,UACA,KAAA,MAAA,YAAA,KAAA,WACA,KAAA,MAAA,EAAA,IAAA,KAAA,UAGA,EAAA,EAAA,YAAA,WACA,IAAA,EAAA,KAAA,MACA,EAAA,KAAA,OACA,EAAA,EAAA,eAAA,EAEA,EAAA,EAAA,MAAA,EAAA,EAAA,gBAKA,OAJA,EAAA,IAAA,IACA,EAAA,IAAA,IACA,EAAA,IAAA,GAEA,IAGA,EAAA,EAAA,OAAA,WACA,OAAA,KAAA,MAAA,UAAA,KAAA,eAGA,EAAA,EAAA,OAAA,WACA,OAAA,KAAA,MAAA,OAAA,OAAA,KAAA,UAAA,WAGA,EAAA,EAAA,gBAAA,WACA,OAAA,KAAA,OAAA,MAAA,KAAA,MAAA,kBAGA,EAAA,UAAA,KAAA,SAAA,GAEA,OADA,EAAA,KAAA,QAAA,2BACA,KAAA,MAAA,KAAA,EAAA,OAGA,EAAA,UAAA,OAAA,SAAA,EAAA,GACA,OAAA,KAAA,MAAA,OAAA,EAAA,EAAA,OAGA,EAAA,UAAA,UAAA,SAAA,GAEA,OADA,EAAA,KAAA,QAAA,0BACA,EAAA,OAAA,KAAA,SAAA,IAGA,EAAA,UAAA,UAAA,SAAA,GACA,OAAA,EAAA,OAAA,KAAA,WAAA,IAGA,OAAA,QAAA;;AC9FA,aAEA,IAAA,EAAA,QAAA,SACA,EAAA,QAAA,YACA,EAAA,EAAA,OACA,EAAA,EAAA,eACA,EAAA,EAAA,WAUA,SAAA,EAAA,EAAA,GACA,KAAA,MAAA,EAEA,iBAAA,IACA,EAAA,EAAA,IAEA,MAAA,QAAA,KACA,EAAA,CACA,EAAA,EAAA,MAAA,EAAA,EAAA,gBACA,EAAA,EAAA,MAAA,EAAA,kBAIA,EAAA,EAAA,GAAA,EAAA,EAAA,4BAEA,EAAA,QAAA,EAAA,KACA,KAAA,GAAA,EAAA,GACA,EAAA,aAAA,IACA,KAAA,GAAA,EAAA,GAEA,KAAA,UAAA,MAAA,QAAA,EAAA,GAAA,EAAA,EAAA,EAAA,SACA,KAAA,UAAA,MAAA,QAAA,EAAA,GAAA,EAAA,EAAA,EAAA,SAGA,EAAA,EAAA,IAAA,WACA,OAAA,KAAA,MAAA,UAAA,KAAA,cAGA,EAAA,EAAA,IAAA,WACA,OAAA,KAAA,MAAA,YAAA,KAAA,cAGA,EAAA,EAAA,WAAA,WACA,OAAA,KAAA,MAAA,YAAA,KAAA,OAGA,EAAA,EAAA,WAAA,WACA,OAAA,KAAA,MAAA,UAAA,KAAA,OAGA,EAAA,UAAA,QAAA,WACA,OAAA,KAAA,WAAA,OAAA,KAAA,aAGA,EAAA,UAAA,MAAA,WACA,OAAA,EAAA,OAAA,KAAA,UAAA,OAAA,eAGA,OAAA,QAAA;;AChEA,aAEA,IAAA,EAAA,QAAA,WACA,EAAA,QAAA,aACA,EAAA,QAAA,YACA,EAAA,EAAA,OACA,EAAA,EAAA,WACA,EAAA,QAAA,SACA,EAAA,QAAA,eAEA,SAAA,EAAA,GAGA,GAFA,EAAA,YAAA,EAAA,qCAEA,gBAAA,GACA,OAAA,IAAA,EAAA,GAEA,EAAA,EAAA,GAAA,MACA,KAAA,MAAA,EACA,KAAA,EAAA,EAAA,EACA,KAAA,EAAA,WAAA,EAAA,EAAA,YAAA,GAEA,KAAA,WAAA,EAAA,QAAA,YACA,KAAA,eAAA,KAAA,KAAA,EAAA,EAAA,YAAA,GACA,KAAA,KAAA,EAAA,OAGA,OAAA,QAAA,EAOA,EAAA,UAAA,KAAA,SAAA,EAAA,GACA,EAAA,EAAA,GACA,IAAA,EAAA,KAAA,cAAA,GACA,EAAA,KAAA,QAAA,EAAA,gBAAA,GACA,EAAA,KAAA,EAAA,IAAA,GACA,EAAA,KAAA,YAAA,GACA,EAAA,KAAA,QAAA,EAAA,EAAA,WAAA,GACA,IAAA,EAAA,QACA,EAAA,EAAA,IAAA,GAAA,KAAA,KAAA,MAAA,GACA,OAAA,KAAA,cAAA,CAAA,EAAA,EAAA,EAAA,EAAA,SAAA,KASA,EAAA,UAAA,OAAA,SAAA,EAAA,EAAA,GAGA,GAFA,EAAA,EAAA,IACA,EAAA,KAAA,cAAA,IACA,IAAA,IAAA,EAAA,MAAA,MAAA,IAAA,EAAA,IAAA,QACA,OAAA,EAEA,IAAA,EAAA,KAAA,cAAA,GACA,EAAA,KAAA,QAAA,EAAA,WAAA,EAAA,WAAA,GACA,EAAA,KAAA,EAAA,IAAA,EAAA,KAEA,OADA,EAAA,IAAA,IAAA,EAAA,MAAA,IAAA,IACA,GAAA,IAGA,EAAA,UAAA,QAAA,WAEA,IADA,IAAA,EAAA,KAAA,OACA,EAAA,EAAA,EAAA,UAAA,OAAA,IACA,EAAA,OAAA,UAAA,IACA,OAAA,EAAA,UAAA,EAAA,UAAA,KAAA,KAAA,MAAA,IAGA,EAAA,UAAA,cAAA,SAAA,GACA,OAAA,EAAA,WAAA,KAAA,IAGA,EAAA,UAAA,cAAA,SAAA,GACA,OAAA,EAAA,WAAA,KAAA,IAGA,EAAA,UAAA,cAAA,SAAA,GACA,OAAA,aAAA,EACA,EACA,IAAA,EAAA,KAAA,IAWA,EAAA,UAAA,YAAA,SAAA,GACA,IAAA,EAAA,EAAA,OAAA,QAAA,KAAA,KAAA,gBAEA,OADA,EAAA,KAAA,eAAA,IAAA,EAAA,OAAA,QAAA,IAAA,EACA,GAGA,EAAA,UAAA,YAAA,SAAA,GAGA,IAAA,GAFA,EAAA,EAAA,WAAA,IAEA,OAAA,EACA,EAAA,EAAA,MAAA,EAAA,GAAA,QAAA,IAAA,EAAA,IACA,EAAA,IAAA,IAAA,EAAA,IAEA,EAAA,EAAA,UAAA,GACA,OAAA,KAAA,MAAA,WAAA,EAAA,IAGA,EAAA,UAAA,UAAA,SAAA,GACA,OAAA,EAAA,QAAA,KAAA,KAAA,iBAGA,EAAA,UAAA,UAAA,SAAA,GACA,OAAA,EAAA,UAAA,IAGA,EAAA,UAAA,QAAA,SAAA,GACA,OAAA,aAAA,KAAA;;ACvHA,aAEA,IAAA,EAAA,QAEA,EAAA,QAAA,QAAA,mBAAA,QACA,EAAA,MAAA,QAAA,oBACA,EAAA,KAAA,QAAA,WACA,EAAA,MAAA,QAAA,oBACA,EAAA,OAAA,QAAA,qBAGA,EAAA,GAAA,QAAA,iBACA,EAAA,MAAA,QAAA;;AEZA,IAAA,QAAA,SAAA,EAAA,GACA,GAAA,EAAA,QAAA,OAAA,EAAA,QAAA,GACA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IACA,GAAA,EAAA,KAAA,EAAA,OAAA,EAEA,OAAA,GAEA,YAAA,SAAA,GACA,GAAA,OAAA,KAAA,OAAA,OAAA,KAAA,GAEA,IAAA,EAAA,GACA,IAAA,IAAA,KAAA,EAAA,EAAA,KAAA,GACA,OAAA,GAIA,QAAA,SAAA,EAAA,GACA,GAAA,EAAA,QAAA,OAAA,EAAA,QAAA,GACA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IACA,EAAA,EAAA,GAAA,EAAA,IAIA,WAAA,WACA,IAEA,OADA,OAAA,eAAA,GAAA,IAAA,IACA,SAAA,EAAA,EAAA,GACA,OAAA,eAAA,EAAA,EAAA,CACA,UAAA,EACA,YAAA,EACA,cAAA,EACA,MAAA,KAGA,MAAA,GACA,OAAA,SAAA,EAAA,EAAA,GACA,EAAA,GAAA,IAbA,GAkBA,QAAA,CAAA,QAAA,UAAA,OAAA,QAAA,YAAA,WACA,WAAA,OAAA,OAAA,MAAA,SAAA,SAAA,aACA,iBAAA,SAAA,SAAA,cAAA,YAAA,WACA,YAAA,qBAAA,YAAA,qBAAA,SACA,OAAA,WAAA,QAAA,aAAA,WAAA,YAAA,YAEA,SAAA,WACA,QAAA,UAAA,GAEA,IAAA,OAAA,QAAA,OAAA,SAAA,GACA,KAAA,gBAAA,QAAA,OAAA,IAAA,OAAA,GACA,KAAA,KAAA,GAGA,OAAA,UAAA,aAAA,SAAA,GACA,KAAA,aAAA,SACA,MAAA,IAAA,UAAA,+BAGA,IAAA,EAAA,SAAA,cAAA,UACA,EAAA,QAAA,EAAA,MAAA,IACA,EAAA,MAAA,QAAA,OAEA,SAAA,KAAA,YAAA,GAEA,IAAA,EAAA,EAAA,cACA,EAAA,EAAA,KAAA,EAAA,EAAA,YAEA,GAAA,IAEA,EAAA,KAAA,EAAA,QACA,EAAA,EAAA,MAGA,QAAA,YAAA,GAAA,SAAA,GACA,EAAA,GAAA,EAAA,KAEA,QAAA,QAAA,SAAA,GACA,EAAA,KACA,EAAA,GAAA,EAAA,MAIA,IAAA,EAAA,YAAA,GAEA,EAAA,EAAA,KAAA,EAAA,KAAA,MAmBA,OAjBA,QAAA,YAAA,GAAA,SAAA,IAIA,KAAA,IAAA,IAAA,QAAA,EAAA,MACA,EAAA,GAAA,EAAA,MAIA,QAAA,QAAA,SAAA,GACA,KAAA,GACA,WAAA,EAAA,EAAA,EAAA,MAIA,SAAA,KAAA,YAAA,GAEA,GAGA,OAAA,UAAA,iBAAA,WACA,OAAA,KAAA,KAAA,OAGA,OAAA,UAAA,gBAAA,SAAA,GACA,IAAA,EAAA,OAAA,cAAA,GACA,EAAA,KAAA,aAAA,GAQA,OANA,GACA,QAAA,YAAA,GAAA,SAAA,GACA,EAAA,GAAA,EAAA,KAIA,GAGA,QAAA,YAAA,OAAA,WAAA,SAAA,GACA,QAAA,GAAA,OAAA,GAAA,SAAA,GACA,IAAA,EAAA,OAAA,GACA,OAAA,EAAA,GAAA,MAAA,EAAA,GAAA,MAAA,KAAA,UAAA,OAIA,QAAA,UAAA,SAAA,GACA,OAAA,aAAA,SAGA,QAAA,aAAA,SAAA,GACA,OAAA,QAAA,OAAA,IAGA,QAAA,cAAA,OAAA,cAAA,SAAA,GACA,IAAA,EAAA,IAAA,QAMA,MALA,iBAAA,GACA,QAAA,YAAA,GAAA,SAAA,GACA,EAAA,GAAA,EAAA,KAGA;;ACnJA,IAAA,EAAA,QAAA,WACA,EAAA,QAAA,YAEA,EAAA,QAMA,SAAA,EAAA,EAAA,GACA,KAAA,KAAA,EACA,KAAA,KAAA,EAEA,KAAA,SAAA,GACA,KAAA,SAAA,GATA,EAAA,OAAA,SAAA,EAAA,GACA,OAAA,IAAA,EAAA,EAAA,IAWA,EAAA,UAAA,aAAA,SAAA,GACA,IAAA,EACA,IACA,EAAA,QAAA,MAAA,iBACA,aAAA,KAAA,KAAA,8CAIA,MAAA,GACA,EAAA,SAAA,GACA,KAAA,WAAA,IAQA,OALA,EAAA,EAAA,GACA,EAAA,UAAA,WAAA,SAAA,GACA,EAAA,KAAA,KAAA,IAGA,IAAA,EAAA,OAGA,EAAA,UAAA,YAAA,SAAA,GAKA,OAJA,EAAA,GAAA,MAEA,KAAA,SAAA,eAAA,KACA,KAAA,SAAA,GAAA,KAAA,aAAA,EAAA,SAAA,KACA,KAAA,SAAA,IAGA,EAAA,UAAA,OAAA,SAAA,EAAA,EAAA,GACA,OAAA,KAAA,YAAA,GAAA,OAAA,EAAA,IAGA,EAAA,UAAA,YAAA,SAAA,GAKA,OAJA,EAAA,GAAA,MAEA,KAAA,SAAA,eAAA,KACA,KAAA,SAAA,GAAA,KAAA,aAAA,EAAA,SAAA,KACA,KAAA,SAAA,IAGA,EAAA,UAAA,OAAA,SAAA,EAAA,EAAA,GACA,OAAA,KAAA,YAAA,GAAA,OAAA,EAAA;;AC3DA,IAAA,EAAA,QAAA,YAEA,SAAA,EAAA,GACA,KAAA,eAAA,CACA,IAAA,KACA,KAAA,GACA,QAAA,GAAA,GACA,OAAA,IA6FA,SAAA,EAAA,EAAA,GACA,KAAA,KAAA,EACA,KAAA,QAAA,GA5FA,QAAA,SAAA,EAEA,EAAA,UAAA,QAAA,SAAA,GACA,OAAA,aAAA,GAGA,EAAA,UAAA,KAAA,WACA,IAAA,EAAA,KAAA,eAEA,MAAA,CAAA,IAAA,EAAA,IAAA,QAAA,EAAA,KAAA,SAGA,EAAA,UAAA,QAAA,SAAA,GACA,IAAA,EAAA,KAAA,eAEA,EAAA,IAAA,EAAA,IACA,EAAA,KAAA,EAAA,KAAA,MAAA,EAAA,EAAA,UAGA,EAAA,UAAA,SAAA,SAAA,GACA,OAAA,KAAA,eAAA,KAAA,KAAA,IAGA,EAAA,UAAA,QAAA,SAAA,GACA,IAAA,EAAA,KAAA,eAEA,EAAA,KAAA,EAAA,KAAA,MAAA,EAAA,EAAA,IAGA,EAAA,UAAA,SAAA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,KAAA,eAEA,KAAA,QAAA,GACA,OAAA,EAAA,MACA,EAAA,IAAA,GAAA,IAGA,EAAA,UAAA,KAAA,WACA,OAAA,KAAA,eAAA,KAAA,KAAA,MAGA,EAAA,UAAA,YAAA,WACA,IAAA,EAAA,KAAA,eAEA,EAAA,EAAA,IAEA,OADA,EAAA,IAAA,GACA,GAGA,EAAA,UAAA,YAAA,SAAA,GACA,IAAA,EAAA,KAAA,eAEA,EAAA,EAAA,IAEA,OADA,EAAA,IAAA,EACA,GAGA,EAAA,UAAA,MAAA,SAAA,GACA,IAAA,EACA,EAAA,KAAA,eAEA,EAAA,aAAA,EASA,GAPA,EADA,EACA,EAEA,IAAA,EAAA,EAAA,KAAA,IAAA,SAAA,GACA,MAAA,IAAA,KAAA,UAAA,GAAA,MACA,KAAA,IAAA,EAAA,SAAA,EAAA,EAAA,QAGA,EAAA,QAAA,QACA,MAAA,EAKA,OAHA,GACA,EAAA,OAAA,KAAA,GAEA,GAGA,EAAA,UAAA,WAAA,SAAA,GACA,IAAA,EAAA,KAAA,eACA,OAAA,EAAA,QAAA,QAGA,CACA,OAAA,KAAA,QAAA,GAAA,KAAA,EACA,OAAA,EAAA,QAJA,GAYA,EAAA,EAAA,OAEA,EAAA,UAAA,QAAA,SAAA,GAKA,GAJA,KAAA,QAAA,EAAA,SAAA,KAAA,MAAA,aACA,MAAA,mBACA,MAAA,kBAAA,KAAA,IAEA,KAAA,MACA,IAEA,MAAA,IAAA,MAAA,KAAA,SACA,MAAA,GACA,KAAA,MAAA,EAAA,MAGA,OAAA;;;ACvHA,IAAA,EAAA,QAAA,YACA,EAAA,QAAA,WAAA,SACA,EAAA,QAAA,UAAA,OAEA,SAAA,EAAA,EAAA,GACA,EAAA,KAAA,KAAA,GACA,EAAA,SAAA,IAKA,KAAA,KAAA,EACA,KAAA,OAAA,EACA,KAAA,OAAA,EAAA,QANA,KAAA,MAAA,oBAyDA,SAAA,EAAA,EAAA,GACA,GAAA,MAAA,QAAA,GACA,KAAA,OAAA,EACA,KAAA,MAAA,EAAA,IAAA,SAAA,GAIA,OAHA,aAAA,IACA,EAAA,IAAA,EAAA,EAAA,IACA,KAAA,QAAA,EAAA,OACA,GACA,WACA,GAAA,iBAAA,EAAA,CACA,KAAA,GAAA,GAAA,GAAA,KACA,OAAA,EAAA,MAAA,gCACA,KAAA,MAAA,EACA,KAAA,OAAA,OACA,GAAA,iBAAA,EACA,KAAA,MAAA,EACA,KAAA,OAAA,EAAA,WAAA,OACA,CAAA,IAAA,EAAA,SAAA,GAIA,OAAA,EAAA,MAAA,4BAAA,GAHA,KAAA,MAAA,EACA,KAAA,OAAA,EAAA,QApEA,EAAA,EAAA,GACA,QAAA,cAAA,EAEA,EAAA,UAAA,KAAA,WACA,MAAA,CAAA,OAAA,KAAA,OAAA,SAAA,EAAA,UAAA,KAAA,KAAA,QAGA,EAAA,UAAA,QAAA,SAAA,GAEA,IAAA,EAAA,IAAA,EAAA,KAAA,MAOA,OANA,EAAA,OAAA,EAAA,OACA,EAAA,OAAA,KAAA,OAEA,KAAA,OAAA,EAAA,OACA,EAAA,UAAA,QAAA,KAAA,KAAA,EAAA,UAEA,GAGA,EAAA,UAAA,QAAA,WACA,OAAA,KAAA,SAAA,KAAA,QAGA,EAAA,UAAA,UAAA,SAAA,GACA,OAAA,KAAA,OAAA,GAAA,KAAA,OACA,KAAA,KAAA,UAAA,KAAA,UAAA,GAEA,KAAA,MAAA,GAAA,0BAGA,EAAA,UAAA,KAAA,SAAA,EAAA,GACA,KAAA,KAAA,OAAA,GAAA,KAAA,QACA,OAAA,KAAA,MAAA,GAAA,yBAEA,IAAA,EAAA,IAAA,EAAA,KAAA,MAQA,OALA,EAAA,eAAA,KAAA,eAEA,EAAA,OAAA,KAAA,OACA,EAAA,OAAA,KAAA,OAAA,EACA,KAAA,QAAA,EACA,GAGA,EAAA,UAAA,IAAA,SAAA,GACA,OAAA,KAAA,KAAA,MAAA,EAAA,EAAA,OAAA,KAAA,OAAA,KAAA,SA2BA,QAAA,cAAA,EAEA,EAAA,UAAA,KAAA,SAAA,EAAA,GAMA,OALA,IACA,EAAA,IAAA,EAAA,KAAA,SACA,IACA,EAAA,GAEA,IAAA,KAAA,OACA,GAEA,MAAA,QAAA,KAAA,OACA,KAAA,MAAA,QAAA,SAAA,GACA,EAAA,KAAA,EAAA,GACA,GAAA,EAAA,UAGA,iBAAA,KAAA,MACA,EAAA,GAAA,KAAA,MACA,iBAAA,KAAA,MACA,EAAA,MAAA,KAAA,MAAA,GACA,EAAA,SAAA,KAAA,QACA,KAAA,MAAA,KAAA,EAAA,GACA,GAAA,KAAA,QAGA;;AClHA,IAAA,EAAA,QAAA,WAAA,SACA,EAAA,QAAA,WAAA,cACA,EAAA,QAAA,WAAA,cACA,EAAA,QAAA,uBAGA,EAAA,CACA,MAAA,QAAA,MAAA,QAAA,QAAA,OACA,UAAA,UAAA,QAAA,OAAA,MAAA,UACA,SAAA,SAAA,UAAA,SAAA,WAAA,SAAA,YACA,SAAA,SAAA,WAAA,SAAA,SAAA,UAAA,YAIA,EAAA,CACA,MAAA,MAAA,MAAA,WAAA,WAAA,WAAA,MAAA,SACA,MAAA,YACA,OAAA,GAGA,EAAA,CACA,WAAA,aAAA,OACA,aAAA,eAAA,cACA,cAAA,aAAA,cAAA,cAEA,mBAAA,aAAA,eAAA,cACA,cAAA,aAAA,eAGA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,GACA,KAAA,WAAA,EAEA,EAAA,IAAA,EAEA,EAAA,OAAA,GAAA,KACA,EAAA,SAAA,KAGA,EAAA,IAAA,KACA,EAAA,KAAA,KACA,EAAA,YAAA,KACA,EAAA,OAAA,KACA,EAAA,UAAA,EACA,EAAA,KAAA,EACA,EAAA,KAAA,EACA,EAAA,IAAA,KACA,EAAA,WAAA,KACA,EAAA,IAAA,KACA,EAAA,QAAA,KACA,EAAA,SAAA,KACA,EAAA,SAAA,KACA,EAAA,SAAA,KAGA,EAAA,SACA,EAAA,SAAA,GACA,KAAA,SAGA,OAAA,QAAA,EAEA,IAAA,EAAA,CACA,MAAA,SAAA,WAAA,MAAA,OAAA,cAAA,SACA,WAAA,MAAA,MAAA,MAAA,aAAA,MAAA,UAAA,WACA,WAAA,YAGA,EAAA,UAAA,MAAA,WACA,IAAA,EAAA,KAAA,WACA,EAAA,GACA,EAAA,QAAA,SAAA,GACA,EAAA,GAAA,EAAA,KAEA,IAAA,EAAA,IAAA,KAAA,YAAA,EAAA,QAEA,OADA,EAAA,WAAA,EACA,GAGA,EAAA,UAAA,MAAA,WACA,IAAA,EAAA,KAAA,WACA,EAAA,QAAA,SAAA,GACA,KAAA,GAAA,WACA,IAAA,EAAA,IAAA,KAAA,YAAA,MAEA,OADA,EAAA,SAAA,KAAA,GACA,EAAA,GAAA,MAAA,EAAA,aAEA,OAGA,EAAA,UAAA,MAAA,SAAA,GACA,IAAA,EAAA,KAAA,WAEA,EAAA,OAAA,EAAA,QACA,EAAA,KAAA,MAGA,EAAA,SAAA,EAAA,SAAA,OAAA,SAAA,GACA,OAAA,EAAA,WAAA,SAAA,MACA,MACA,EAAA,MAAA,EAAA,SAAA,OAAA,EAAA,sCAGA,EAAA,UAAA,SAAA,SAAA,GACA,IAAA,EAAA,KAAA,WAGA,EAAA,EAAA,OAAA,SAAA,GACA,OAAA,aAAA,KAAA,aACA,MACA,EAAA,EAAA,OAAA,SAAA,GACA,QAAA,aAAA,KAAA,cACA,MAEA,IAAA,EAAA,SACA,EAAA,OAAA,EAAA,UACA,EAAA,SAAA,EAGA,EAAA,QAAA,SAAA,GACA,EAAA,WAAA,OAAA,MACA,OAEA,IAAA,EAAA,SACA,EAAA,OAAA,EAAA,MACA,EAAA,KAAA,EACA,EAAA,YAAA,EAAA,IAAA,SAAA,GACA,GAAA,iBAAA,GAAA,EAAA,cAAA,OACA,OAAA,EAEA,IAAA,EAAA,GAOA,OANA,OAAA,KAAA,GAAA,QAAA,SAAA,GACA,IAAA,EAAA,KACA,GAAA,GACA,IAAA,EAAA,EAAA,GACA,EAAA,GAAA,IAEA,MASA,EAAA,QAAA,SAAA,GACA,EAAA,UAAA,GAAA,WACA,IAAA,EAAA,KAAA,WACA,MAAA,IAAA,MAAA,EAAA,kCAAA,EAAA,QAQA,EAAA,QAAA,SAAA,GACA,EAAA,UAAA,GAAA,WACA,IAAA,EAAA,KAAA,WACA,EAAA,MAAA,UAAA,MAAA,KAAA,WAOA,OALA,EAAA,OAAA,EAAA,KACA,EAAA,IAAA,EAEA,KAAA,SAAA,GAEA,QAIA,EAAA,UAAA,IAAA,SAAA,GACA,EAAA,GACA,IAAA,EAAA,KAAA,WAKA,OAHA,EAAA,OAAA,EAAA,KACA,EAAA,IAAA,EAEA,MAGA,EAAA,UAAA,SAAA,WAKA,OAJA,KAAA,WAEA,UAAA,EAEA,MAGA,EAAA,UAAA,IAAA,SAAA,GACA,IAAA,EAAA,KAAA,WAMA,OAJA,EAAA,OAAA,EAAA,SACA,EAAA,QAAA,EACA,EAAA,UAAA,EAEA,MAGA,EAAA,UAAA,SAAA,SAAA,GACA,IAAA,EAAA,KAAA,WAKA,OAHA,EAAA,OAAA,EAAA,UAAA,OAAA,EAAA,UACA,EAAA,SAAA,EAEA,MAGA,EAAA,UAAA,SAAA,SAAA,GACA,IAAA,EAAA,KAAA,WAKA,OAHA,EAAA,OAAA,EAAA,UAAA,OAAA,EAAA,UACA,EAAA,SAAA,EAEA,MAGA,EAAA,UAAA,IAAA,WACA,IAAA,EAAA,KAAA,WACA,EAAA,MAAA,UAAA,MAAA,KAAA,WAOA,OALA,EAAA,KAAA,EAEA,IAAA,EAAA,QACA,KAAA,SAAA,GAEA,MAGA,EAAA,UAAA,IAAA,SAAA,GACA,IAAA,EAAA,KAAA,WAKA,OAHA,EAAA,OAAA,EAAA,KACA,EAAA,IAAA,EAEA,MAGA,EAAA,UAAA,IAAA,WAKA,OAJA,KAAA,WAEA,KAAA,EAEA,MAGA,EAAA,UAAA,OAAA,SAAA,GACA,IAAA,EAAA,KAAA,WAQA,OANA,EAAA,OAAA,EAAA,QACA,EAAA,OAAA,EACA,KAAA,SAAA,OAAA,KAAA,GAAA,IAAA,SAAA,GACA,OAAA,EAAA,MAGA,MAGA,EAAA,UAAA,SAAA,SAAA,GACA,IAAA,EAAA,KAAA,WAKA,OAHA,EAAA,OAAA,EAAA,KACA,EAAA,SAAA,EAEA,MAOA,EAAA,UAAA,QAAA,SAAA,EAAA,GACA,IAAA,EAAA,KAAA,WAGA,GAAA,OAAA,EAAA,OACA,OAAA,EAAA,WAAA,EAAA,SAAA,GAAA,QAAA,EAAA,IAEA,IAuCA,EAvCA,EAAA,EAAA,QACA,GAAA,EAEA,EAAA,KAKA,GAJA,OAAA,EAAA,MACA,EAAA,EAAA,SAAA,EAAA,MAGA,EAAA,SAAA,CACA,IAAA,EAAA,KAQA,GAPA,OAAA,EAAA,SACA,EAAA,EAAA,SACA,OAAA,EAAA,SACA,EAAA,EAAA,SACA,OAAA,EAAA,MACA,EAAA,EAAA,KAEA,OAAA,GAAA,EAAA,KAgBA,GAFA,EAAA,KAAA,SAAA,EAAA,EAAA,EAAA,KAEA,EAAA,QAAA,GACA,OAAA,MAjBA,CAEA,IAAA,EAAA,EAAA,OACA,IACA,OAAA,EAAA,OACA,KAAA,eAAA,EAAA,IAAA,EAAA,GAEA,KAAA,cAAA,EAAA,GACA,GAAA,EACA,MAAA,GACA,GAAA,EAEA,EAAA,QAAA,IAcA,GAHA,EAAA,KAAA,IACA,EAAA,EAAA,eAEA,EAAA,CAEA,GAAA,OAAA,EAAA,SAAA,CACA,IAAA,EAAA,KAAA,WAAA,EAAA,EAAA,UACA,GAAA,EAAA,QAAA,GACA,OAAA,EACA,EAAA,EAGA,IAAA,EAAA,EAAA,OAGA,GAAA,OAAA,EAAA,KAAA,OAAA,EAAA,OAAA,CACA,GAAA,EAAA,IACA,EAAA,EAAA,OACA,IAAA,EAAA,KAAA,WACA,EACA,OAAA,EAAA,SAAA,EAAA,SAAA,EAAA,IACA,EAAA,KAEA,GAAA,EAAA,QAAA,GACA,OAAA,EAEA,EAAA,IACA,EAAA,EAAA,IAAA,GAEA,EAAA,EAiBA,GAdA,GAAA,EAAA,OAAA,OAAA,EAAA,KACA,EAAA,MAAA,EAAA,OAAA,EAAA,EAAA,OAAA,UAEA,GAAA,EAAA,OAAA,OAAA,EAAA,KACA,EAAA,MAAA,EAAA,OAAA,EAAA,OAAA,EAAA,OAAA,WAIA,EADA,EAAA,IACA,EACA,OAAA,EAAA,OACA,KAAA,eAAA,EAAA,IAAA,EAAA,GAEA,KAAA,cAAA,EAAA,GAEA,EAAA,QAAA,GACA,OAAA,EAYA,GATA,EAAA,KAAA,OAAA,EAAA,QAAA,OAAA,EAAA,UACA,EAAA,SAAA,QAAA,SAAA,GAGA,EAAA,QAAA,EAAA,KAKA,EAAA,WAAA,WAAA,EAAA,KAAA,WAAA,EAAA,KAAA,CACA,IAAA,EAAA,IAAA,EAAA,GACA,EAAA,KAAA,QAAA,EAAA,SAAA,EAAA,eAAA,KACA,QAAA,EAAA,IAcA,OATA,EAAA,KAAA,IACA,EAAA,EAAA,YAAA,IAGA,OAAA,EAAA,KAAA,OAAA,IAAA,IAAA,EAEA,OAAA,GACA,EAAA,QAAA,GAFA,EAAA,SAAA,EAAA,EAAA,IAAA,GAIA,GAGA,EAAA,UAAA,eAAA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,KAAA,WAEA,MAAA,QAAA,GAAA,QAAA,EACA,KACA,UAAA,GAAA,UAAA,EACA,KAAA,YAAA,EAAA,EAAA,EAAA,KAAA,GAAA,GACA,OAAA,KAAA,GACA,KAAA,WAAA,EAAA,EAAA,GACA,UAAA,GAAA,EAAA,KACA,KAAA,aAAA,EAAA,EAAA,KAAA,GAAA,EAAA,KAAA,GAAA,GACA,UAAA,EACA,KAAA,aAAA,EAAA,KAAA,KAAA,GACA,YAAA,GAAA,YAAA,EACA,KAAA,YAAA,EAAA,EAAA,GACA,UAAA,EACA,KAAA,YAAA,EAAA,GACA,SAAA,EACA,KAAA,YAAA,EAAA,GACA,YAAA,EACA,KAAA,WAAA,EAAA,EAAA,GACA,QAAA,GAAA,SAAA,EACA,KAAA,WAAA,EAAA,EAAA,MAAA,EAAA,KAAA,GAAA,GAEA,OAAA,EAAA,IACA,KAAA,QAAA,EAAA,IAAA,EAAA,eAAA,KACA,QAAA,EAAA,GAEA,EAAA,MAAA,gBAAA,IAIA,EAAA,UAAA,QAAA,SAAA,EAAA,GAEA,IAAA,EAAA,KAAA,WASA,OAPA,EAAA,WAAA,KAAA,KAAA,EAAA,GACA,EAAA,OAAA,EAAA,WAAA,WAAA,QACA,EAAA,WAAA,EAAA,WAAA,WAAA,SAAA,GACA,EAAA,WAAA,EAAA,WAAA,WAAA,WACA,EAAA,WAAA,EAAA,WAAA,QACA,EAAA,WAAA,WAAA,SAAA,EAAA,UAEA,EAAA,YAGA,EAAA,UAAA,cAAA,SAAA,EAAA,GACA,IAAA,EAAA,KAAA,WACA,EAAA,KACA,GAAA,EAmBA,OAjBA,OAAA,KAAA,EAAA,QAAA,KAAA,SAAA,GACA,IAAA,EAAA,EAAA,OACA,EAAA,EAAA,OAAA,GACA,IACA,IAAA,EAAA,EAAA,QAAA,EAAA,GACA,GAAA,EAAA,QAAA,GACA,OAAA,EAEA,EAAA,CAAA,KAAA,EAAA,MAAA,GACA,GAAA,EACA,MAAA,GAEA,OADA,EAAA,QAAA,IACA,EAEA,OAAA,GACA,MAEA,EAGA,EAFA,EAAA,MAAA,uBASA,EAAA,UAAA,qBAAA,SAAA,GACA,OAAA,IAAA,EAAA,EAAA,KAAA,WAGA,EAAA,UAAA,QAAA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,KAAA,WACA,GAAA,OAAA,EAAA,SAAA,EAAA,UAAA,EAAA,CAGA,IAAA,EAAA,KAAA,aAAA,EAAA,EAAA,GACA,QAAA,IAAA,IAGA,KAAA,aAAA,EAAA,EAAA,GAGA,OAAA,IAGA,EAAA,UAAA,aAAA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,KAAA,WAGA,GAAA,OAAA,EAAA,OACA,OAAA,EAAA,SAAA,GAAA,QAAA,EAAA,GAAA,IAAA,GAEA,IAAA,EAAA,KAMA,GAHA,KAAA,SAAA,EAGA,EAAA,eAAA,IAAA,EAAA,CACA,GAAA,OAAA,EAAA,QAGA,OAFA,EAAA,EAAA,QAMA,IAAA,EAAA,KACA,GAAA,EACA,GAAA,EAAA,IAEA,EAAA,KAAA,qBAAA,QACA,GAAA,EAAA,OACA,EAAA,KAAA,cAAA,EAAA,QACA,GAAA,EAAA,SACA,EAAA,KAAA,QAAA,EAAA,SAAA,GAAA,QAAA,EAAA,GACA,GAAA,OACA,GAAA,EAAA,SACA,EAAA,EAAA,SAAA,IAAA,SAAA,GACA,GAAA,UAAA,EAAA,WAAA,IACA,OAAA,EAAA,QAAA,KAAA,EAAA,GAEA,GAAA,OAAA,EAAA,WAAA,IACA,OAAA,EAAA,MAAA,2BACA,IAAA,EAAA,EAAA,SAAA,EAAA,WAAA,KAEA,GAAA,iBAAA,EACA,OAAA,EAAA,MAAA,2CAEA,IAAA,EAAA,EAAA,QAAA,EAAA,EAAA,WAAA,KAAA,EAAA,GAGA,OAFA,EAAA,SAAA,GAEA,GACA,MAAA,OAAA,SAAA,GACA,OAAA,IAEA,EAAA,KAAA,qBAAA,QAEA,GAAA,UAAA,EAAA,KAAA,UAAA,EAAA,IAAA,CAEA,IAAA,EAAA,MAAA,IAAA,EAAA,KAAA,OACA,OAAA,EAAA,MAAA,uBAAA,EAAA,KAEA,IAAA,MAAA,QAAA,GACA,OAAA,EAAA,MAAA,sCAEA,IAAA,EAAA,KAAA,QACA,EAAA,WAAA,SAAA,KACA,EAAA,KAAA,qBAAA,EAAA,IAAA,SAAA,GACA,IAAA,EAAA,KAAA,WAEA,OAAA,KAAA,QAAA,EAAA,KAAA,GAAA,GAAA,QAAA,EAAA,IACA,SACA,OAAA,EAAA,IACA,EAAA,KAAA,QAAA,EAAA,IAAA,GAAA,QAAA,EAAA,IAEA,EAAA,KAAA,iBAAA,EAAA,IAAA,GACA,GAAA,GAMA,IAAA,EAAA,KAAA,OAAA,EAAA,OAAA,CACA,IAAA,EAAA,OAAA,EAAA,SAAA,EAAA,SAAA,EAAA,IACA,EAAA,OAAA,EAAA,SAAA,YAAA,UAEA,OAAA,EACA,OAAA,EAAA,KACA,EAAA,MAAA,wCAEA,OAAA,EAAA,MACA,EAAA,KAAA,iBAAA,EAAA,EAAA,EAAA,IAQA,OAHA,OAAA,EAAA,WACA,EAAA,KAAA,iBAAA,EAAA,UAAA,EAAA,UAAA,IAEA,GAGA,EAAA,UAAA,cAAA,SAAA,EAAA,GACA,IAAA,EAAA,KAAA,WAEA,EAAA,EAAA,OAAA,EAAA,MAOA,OANA,GACA,GACA,EACA,EAAA,KAAA,iBACA,KAAA,UAAA,OAAA,KAAA,EAAA,UAEA,EAAA,QAAA,EAAA,MAAA,IAGA,EAAA,UAAA,iBAAA,SAAA,EAAA,GACA,IAAA,EAAA,KAAA,WAEA,GAAA,OAAA,KAAA,GACA,OAAA,KAAA,WAAA,EAAA,GACA,GAAA,UAAA,GAAA,EAAA,KACA,OAAA,KAAA,aAAA,EAAA,EAAA,YAAA,GAAA,EAAA,KAAA,IACA,GAAA,UAAA,EACA,OAAA,KAAA,aAAA,EAAA,KAAA,MACA,GAAA,YAAA,GAAA,YAAA,EACA,OAAA,KAAA,YAAA,EAAA,GACA,GAAA,UAAA,EACA,OAAA,KAAA,cACA,GAAA,QAAA,GAAA,SAAA,EACA,OAAA,KAAA,WAAA,EAAA,EAAA,MAAA,EAAA,YAAA,IACA,GAAA,SAAA,EACA,OAAA,KAAA,YAAA,GACA,GAAA,YAAA,EACA,OAAA,KAAA,WAAA,EAAA,GAEA,MAAA,IAAA,MAAA,oBAAA,IAGA,EAAA,UAAA,UAAA,SAAA,GACA,MAAA,YAAA,KAAA,IAGA,EAAA,UAAA,YAAA,SAAA,GACA,MAAA,oCAAA,KAAA;;ACxnBA,IAAA,EAAA,QAEA,EAAA,SAAA,QAAA,cAAA,SACA,EAAA,cAAA,QAAA,YAAA,cACA,EAAA,cAAA,QAAA,YAAA,cACA,EAAA,KAAA,QAAA;;ACLA,IAAA,EAAA,QAAA,gBAEA,QAAA,SAAA,CACA,EAAA,YACA,EAAA,cACA,EAAA,UACA,EAAA,WAEA,QAAA,eAAA,EAAA,SAAA,QAAA,UAEA,QAAA,IAAA,CACA,EAAA,MACA,EAAA,OACA,EAAA,MACA,EAAA,SACA,EAAA,SACA,EAAA,QACA,EAAA,QACA,EAAA,UACA,EAAA,WACA,EAAA,OACA,GAAA,OACA,GAAA,QACA,GAAA,UACA,GAAA,cACA,GAAA,MACA,GAAA,MACA,GAAA,SACA,GAAA,WACA,GAAA,SACA,GAAA,WACA,GAAA,SACA,GAAA,UACA,GAAA,UACA,GAAA,WACA,GAAA,YACA,GAAA,SACA,GAAA,SACA,GAAA,UACA,GAAA,UAEA,QAAA,UAAA,EAAA,SAAA,QAAA;;ACzCA,IAAA,EAAA,QAGA,EAAA,SAAA,SAAA,GACA,IAAA,EAAA,GAWA,OATA,OAAA,KAAA,GAAA,QAAA,SAAA,IAEA,EAAA,IAAA,IACA,GAAA,GAEA,IAAA,EAAA,EAAA,GACA,EAAA,GAAA,IAGA,GAGA,EAAA,IAAA,QAAA;;AClBA,IAAA,EAAA,QAAA,YAEA,EAAA,QAAA,cACA,EAAA,EAAA,KACA,EAAA,EAAA,OAGA,EAAA,EAAA,UAAA,IAEA,SAAA,EAAA,GACA,KAAA,IAAA,MACA,KAAA,KAAA,EAAA,KACA,KAAA,OAAA,EAGA,KAAA,KAAA,IAAA,EACA,KAAA,KAAA,MAAA,EAAA,MAaA,SAAA,EAAA,GACA,EAAA,KAAA,KAAA,KAAA,MAAA,GAsOA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,UAAA,GACA,GAAA,EAAA,QAAA,GACA,OAAA,EAEA,IAAA,EAAA,EAAA,SAAA,GAAA,GACA,EAAA,IAAA,GAAA,GAGA,GAAA,KAAA,GAAA,GAAA,CACA,IAAA,EAAA,EAEA,IADA,EAAA,EACA,MAAA,IAAA,IAAA,CAEA,GADA,EAAA,EAAA,UAAA,GACA,EAAA,QAAA,GACA,OAAA,EAEA,IAAA,EACA,GAAA,IAAA,QAGA,GAAA,GAIA,MAAA,CACA,IAAA,EACA,UAAA,EACA,IAAA,EACA,OANA,EAAA,IAAA,IAUA,SAAA,EAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,UAAA,GACA,GAAA,EAAA,QAAA,GACA,OAAA,EAGA,IAAA,GAAA,MAAA,EACA,OAAA,KAGA,GAAA,IAAA,IAAA,GAEA,OAAA,EAIA,IAAA,EAAA,IAAA,EACA,GAAA,EAAA,EACA,OAAA,EAAA,MAAA,6BAEA,EAAA,EACA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IAAA,CACA,IAAA,EACA,IAAA,EAAA,EAAA,UAAA,GACA,GAAA,EAAA,QAAA,GACA,OAAA,EACA,GAAA,EAGA,OAAA,EAhTA,OAAA,QAAA,EAEA,EAAA,UAAA,OAAA,SAAA,EAAA,GAIA,OAHA,aAAA,EAAA,gBACA,EAAA,IAAA,EAAA,cAAA,EAAA,IAEA,KAAA,KAAA,QAAA,EAAA,IAQA,EAAA,EAAA,EAAA,MAEA,EAAA,UAAA,SAAA,SAAA,EAAA,EAAA,GACA,GAAA,EAAA,UACA,OAAA,EAEA,IAAA,EAAA,EAAA,OACA,EAAA,EAAA,EAAA,wBAAA,EAAA,KACA,OAAA,EAAA,QAAA,GACA,GAEA,EAAA,QAAA,GAEA,EAAA,MAAA,GAAA,EAAA,SAAA,GACA,EAAA,OAAA,OAAA,GAAA,IAGA,EAAA,UAAA,WAAA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,EACA,4BAAA,EAAA,KACA,GAAA,EAAA,QAAA,GACA,OAAA,EAEA,IAAA,EAAA,EAAA,EACA,EAAA,UACA,4BAAA,EAAA,KAGA,GAAA,EAAA,QAAA,GACA,OAAA,EAEA,IAAA,GACA,EAAA,MAAA,GACA,EAAA,SAAA,GACA,EAAA,OAAA,OAAA,EACA,OAAA,EAAA,MAAA,yBAAA,EAAA,KAGA,GAAA,EAAA,WAAA,OAAA,EACA,OAAA,EAAA,KAAA,EAAA,6BAAA,EAAA,KAGA,IAAA,EAAA,EAAA,OACA,EAAA,KAAA,cACA,EACA,2CAAA,KAAA,IAAA,KACA,OAAA,EAAA,QAAA,GACA,GAEA,EAAA,EAAA,OAAA,EAAA,OACA,EAAA,QAAA,GACA,EAAA,KAAA,EAAA,6BAAA,EAAA,OAGA,EAAA,UAAA,cAAA,SAAA,EAAA,GACA,OAAA,CACA,IAAA,EAAA,EAAA,EAAA,GACA,GAAA,EAAA,QAAA,GACA,OAAA,EACA,IAIA,EAJA,EAAA,EAAA,EAAA,EAAA,UAAA,GACA,GAAA,EAAA,QAAA,GACA,OAAA,EASA,GALA,EADA,EAAA,WAAA,OAAA,EACA,EAAA,KAAA,GAEA,KAAA,cAAA,EAAA,GAGA,EAAA,QAAA,GACA,OAAA,EAEA,GAAA,QAAA,EAAA,OACA,QAIA,EAAA,UAAA,YAAA,SAAA,EAAA,EAAA,EACA,GAEA,IADA,IAAA,EAAA,IACA,EAAA,WAAA,CACA,IAAA,EAAA,KAAA,SAAA,EAAA,OACA,GAAA,EAAA,QAAA,GACA,OAAA,EAEA,IAAA,EAAA,EAAA,OAAA,EAAA,MAAA,GACA,GAAA,EAAA,QAAA,IAAA,EACA,MACA,EAAA,KAAA,GAEA,OAAA,GAGA,EAAA,UAAA,WAAA,SAAA,EAAA,GACA,GAAA,WAAA,EAAA,CACA,IAAA,EAAA,EAAA,YACA,OAAA,EAAA,QAAA,GACA,EACA,CAAA,OAAA,EAAA,KAAA,EAAA,OACA,GAAA,WAAA,EAAA,CACA,IAAA,EAAA,EAAA,MACA,GAAA,EAAA,OAAA,GAAA,EACA,OAAA,EAAA,MAAA,mDAGA,IADA,IAAA,EAAA,GACA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,IACA,GAAA,OAAA,aAAA,EAAA,aAAA,EAAA,IAEA,OAAA,EACA,GAAA,WAAA,EAAA,CACA,IAAA,EAAA,EAAA,MAAA,SAAA,SACA,OAAA,KAAA,UAAA,GAIA,EAHA,EAAA,MAAA,0DAIA,GAAA,WAAA,EACA,OAAA,EAAA,MACA,GAAA,YAAA,EACA,OAAA,EAAA,MACA,GAAA,aAAA,EAAA,CACA,IAAA,EAAA,EAAA,MAAA,SAAA,SACA,OAAA,KAAA,YAAA,GAIA,EAHA,EAAA,MAAA,4DAIA,MAAA,OAAA,KAAA,GACA,EAAA,MAAA,WAEA,EAAA,MAAA,4BAAA,EAAA,iBAIA,EAAA,UAAA,aAAA,SAAA,EAAA,EAAA,GAIA,IAHA,IAAA,EACA,EAAA,GACA,EAAA,GACA,EAAA,WAAA,CACA,IAAA,EAAA,EAAA,YACA,IAAA,EACA,GAAA,IAAA,EACA,IAAA,IAAA,KACA,EAAA,KAAA,GACA,EAAA,GAGA,IAAA,GACA,EAAA,KAAA,GAEA,IAAA,EAAA,EAAA,GAAA,GAAA,EACA,EAAA,EAAA,GAAA,GAOA,GAJA,EADA,EACA,EAEA,CAAA,EAAA,GAAA,OAAA,EAAA,MAAA,IAEA,EAAA,CACA,IAAA,EAAA,EAAA,EAAA,KAAA,WACA,IAAA,IACA,EAAA,EAAA,EAAA,KAAA,YACA,IAAA,IACA,EAAA,GAGA,OAAA,GAGA,EAAA,UAAA,YAAA,SAAA,EAAA,GACA,IAAA,EAAA,EAAA,MAAA,WACA,GAAA,YAAA,EACA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,GACA,EAAA,EAAA,EAAA,MAAA,EAAA,GACA,EAAA,EAAA,EAAA,MAAA,EAAA,GACA,EAAA,EAAA,EAAA,MAAA,EAAA,IACA,EAAA,EAAA,EAAA,MAAA,GAAA,IACA,EAAA,EAAA,EAAA,MAAA,GAAA,QACA,CAAA,GAAA,YAAA,EAYA,OAAA,EAAA,MAAA,YAAA,EAAA,8BAXA,EAAA,EAAA,EAAA,MAAA,EAAA,GACA,EAAA,EAAA,EAAA,MAAA,EAAA,GACA,EAAA,EAAA,EAAA,MAAA,EAAA,GACA,EAAA,EAAA,EAAA,MAAA,EAAA,GACA,EAAA,EAAA,EAAA,MAAA,EAAA,IACA,EAAA,EAAA,EAAA,MAAA,GAAA,IAEA,EADA,EAAA,GACA,IAAA,EAEA,KAAA,EAKA,OAAA,KAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAGA,EAAA,UAAA,YAAA,SAAA,GACA,OAAA,MAGA,EAAA,UAAA,YAAA,SAAA,GACA,IAAA,EAAA,EAAA,YACA,OAAA,EAAA,QAAA,GACA,EAEA,IAAA,GAGA,EAAA,UAAA,WAAA,SAAA,EAAA,GAEA,IAAA,EAAA,EAAA,MACA,EAAA,IAAA,EAAA,GAKA,OAHA,IACA,EAAA,EAAA,EAAA,SAAA,MAAA,GAEA,GAGA,EAAA,UAAA,KAAA,SAAA,EAAA,GAGA,MAFA,mBAAA,IACA,EAAA,EAAA,IACA,EAAA,YAAA,OAAA;;;AC/PA,IAAA,EAAA,QAAA,YACA,EAAA,QAAA,UAAA,OAEA,EAAA,QAAA,SAEA,SAAA,EAAA,GACA,EAAA,KAAA,KAAA,GACA,KAAA,IAAA,MAEA,EAAA,EAAA,GACA,OAAA,QAAA,EAEA,EAAA,UAAA,OAAA,SAAA,EAAA,GAQA,IAPA,IAAA,EAAA,EAAA,WAAA,MAAA,YAEA,EAAA,EAAA,MAAA,cAEA,EAAA,kCACA,GAAA,EACA,GAAA,EACA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CACA,IAAA,EAAA,EAAA,GAAA,MAAA,GACA,GAAA,OAAA,GAGA,EAAA,KAAA,EAAA,CAGA,IAAA,IAAA,EAIA,CACA,GAAA,QAAA,EAAA,GACA,MACA,EAAA,EACA,MAPA,GAAA,UAAA,EAAA,GACA,MACA,EAAA,GAQA,IAAA,IAAA,IAAA,IAAA,EACA,MAAA,IAAA,MAAA,8BAAA,GAEA,IAAA,EAAA,EAAA,MAAA,EAAA,EAAA,GAAA,KAAA,IAEA,EAAA,QAAA,oBAAA,IAEA,IAAA,EAAA,IAAA,EAAA,EAAA,UACA,OAAA,EAAA,UAAA,OAAA,KAAA,KAAA,EAAA;;AC/CA,IAAA,EAAA,QAEA,EAAA,IAAA,QAAA,SACA,EAAA,IAAA,QAAA;;;ACHA,IAAA,EAAA,QAAA,YACA,EAAA,QAAA,UAAA,OAEA,EAAA,QAAA,cACA,EAAA,EAAA,KAGA,EAAA,EAAA,UAAA,IAEA,SAAA,EAAA,GACA,KAAA,IAAA,MACA,KAAA,KAAA,EAAA,KACA,KAAA,OAAA,EAGA,KAAA,KAAA,IAAA,EACA,KAAA,KAAA,MAAA,EAAA,MAUA,SAAA,EAAA,GACA,EAAA,KAAA,KAAA,KAAA,MAAA,GAmHA,SAAA,EAAA,GACA,OAAA,EAAA,GACA,IAAA,EAEA,EA4HA,SAAA,EAAA,EAAA,EAAA,EAAA,GACA,IAAA,EAOA,GALA,UAAA,EACA,EAAA,MACA,UAAA,IACA,EAAA,OAEA,EAAA,UAAA,eAAA,GACA,EAAA,EAAA,UAAA,OACA,CAAA,GAAA,iBAAA,IAAA,EAAA,KAAA,EAGA,OAAA,EAAA,MAAA,gBAAA,GAFA,EAAA,EAIA,OAAA,GAAA,GACA,EAAA,MAAA,yCAEA,IACA,GAAA,IAEA,GAAA,EAAA,eAAA,GAAA,cAAA,GAjRA,OAAA,QAAA,EAEA,EAAA,UAAA,OAAA,SAAA,EAAA,GACA,OAAA,KAAA,KAAA,QAAA,EAAA,GAAA,QAQA,EAAA,EAAA,EAAA,MAEA,EAAA,UAAA,iBAAA,SAAA,EACA,EACA,EACA,GACA,IAgBA,EAhBA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,UAGA,GAAA,EAAA,OAAA,IAIA,OAHA,EAAA,IAAA,EAAA,IACA,GAAA,EACA,EAAA,GAAA,EAAA,OACA,KAAA,qBAAA,CAAA,EAAA,IAMA,IADA,IAAA,EAAA,EACA,EAAA,EAAA,OAAA,GAAA,IAAA,IAAA,EACA,KAEA,EAAA,IAAA,EAAA,EAAA,IACA,GAAA,EACA,EAAA,GAAA,IAAA,EAEA,EAAA,EAAA,EAAA,IAAA,IAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IAAA,IAAA,EACA,EAAA,GAAA,IAAA,EAEA,OAAA,KAAA,qBAAA,CAAA,EAAA,KAGA,EAAA,UAAA,WAAA,SAAA,EAAA,GACA,GAAA,WAAA,EACA,OAAA,KAAA,qBAAA,CAAA,EAAA,EAAA,OAAA,EAAA,OACA,GAAA,WAAA,EAAA,CAEA,IADA,IAAA,EAAA,IAAA,EAAA,EAAA,EAAA,QACA,EAAA,EAAA,EAAA,EAAA,OAAA,IACA,EAAA,cAAA,EAAA,WAAA,GAAA,EAAA,GAEA,OAAA,KAAA,qBAAA,GACA,MAAA,WAAA,EACA,KAAA,UAAA,GAIA,KAAA,qBAAA,GAHA,KAAA,SAAA,MAAA,kEAIA,aAAA,EACA,KAAA,YAAA,GAQA,KAAA,qBAAA,GAPA,KAAA,SAAA,MAAA,qNAQA,OAAA,KAAA,GACA,KAAA,qBAAA,GACA,YAAA,EACA,KAAA,qBAAA,GAEA,KAAA,SAAA,MAAA,4BAAA,EACA,iBAIA,EAAA,UAAA,aAAA,SAAA,EAAA,EAAA,GACA,GAAA,iBAAA,EAAA,CACA,IAAA,EACA,OAAA,KAAA,SAAA,MAAA,+CACA,IAAA,EAAA,eAAA,GACA,OAAA,KAAA,SAAA,MAAA,iCACA,EAAA,EAAA,GAAA,MAAA,YACA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IACA,EAAA,IAAA,OACA,GAAA,MAAA,QAAA,GAAA,CACA,EAAA,EAAA,QACA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IACA,EAAA,IAAA,EAGA,IAAA,MAAA,QAAA,GACA,OAAA,KAAA,SAAA,MAAA,kDACA,KAAA,UAAA,IAGA,IAAA,EAAA,CACA,GAAA,EAAA,IAAA,GACA,OAAA,KAAA,SAAA,MAAA,+BACA,EAAA,OAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,IAIA,IAAA,EAAA,EACA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CACA,IAAA,EAAA,EAAA,GACA,IAAA,IAAA,GAAA,IAAA,IAAA,EACA,IAGA,IAAA,EAAA,IAAA,EAAA,GACA,EAAA,EAAA,OAAA,EACA,IAAA,EAAA,EAAA,OAAA,EAAA,GAAA,EAAA,IAAA,CACA,EAAA,EAAA,GAEA,IADA,EAAA,KAAA,IAAA,GACA,IAAA,GAAA,GACA,EAAA,KAAA,IAAA,IAAA,EAGA,OAAA,KAAA,qBAAA,IAUA,EAAA,UAAA,YAAA,SAAA,EAAA,GACA,IAAA,EACA,EAAA,IAAA,KAAA,GA0BA,MAxBA,YAAA,EACA,EAAA,CACA,EAAA,EAAA,eACA,EAAA,EAAA,cAAA,GACA,EAAA,EAAA,cACA,EAAA,EAAA,eACA,EAAA,EAAA,iBACA,EAAA,EAAA,iBACA,KACA,KAAA,IACA,YAAA,EACA,EAAA,CACA,EAAA,EAAA,cAAA,KACA,EAAA,EAAA,cAAA,GACA,EAAA,EAAA,cACA,EAAA,EAAA,eACA,EAAA,EAAA,iBACA,EAAA,EAAA,iBACA,KACA,KAAA,IAEA,KAAA,SAAA,MAAA,YAAA,EAAA,8BAGA,KAAA,WAAA,EAAA,WAGA,EAAA,UAAA,YAAA,WACA,OAAA,KAAA,qBAAA,KAGA,EAAA,UAAA,WAAA,SAAA,EAAA,GACA,GAAA,iBAAA,EAAA,CACA,IAAA,EACA,OAAA,KAAA,SAAA,MAAA,+CACA,IAAA,EAAA,eAAA,GACA,OAAA,KAAA,SAAA,MAAA,+BACA,KAAA,UAAA,IAEA,EAAA,EAAA,GAIA,GAAA,iBAAA,IAAA,EAAA,SAAA,GAAA,CACA,IAAA,EAAA,EAAA,WACA,EAAA,MAAA,IAAA,EAAA,IACA,EAAA,QAAA,GAEA,EAAA,IAAA,EAAA,GAGA,GAAA,EAAA,SAAA,GAAA,CACA,IAAA,EAAA,EAAA,OACA,IAAA,EAAA,QACA,IAEA,IAAA,EAAA,IAAA,EAAA,GAIA,OAHA,EAAA,KAAA,GACA,IAAA,EAAA,SACA,EAAA,GAAA,GACA,KAAA,qBAAA,GAGA,GAAA,EAAA,IACA,OAAA,KAAA,qBAAA,GAEA,GAAA,EAAA,IACA,OAAA,KAAA,qBAAA,CAAA,EAAA,IAEA,EAAA,EACA,IADA,IACA,EAAA,EAAA,GAAA,IAAA,IAAA,EACA,IAGA,IAAA,GADA,EAAA,IAAA,MAAA,IACA,OAAA,EAAA,GAAA,EAAA,IACA,EAAA,GAAA,IAAA,EACA,IAAA,EAMA,OAJA,IAAA,EAAA,IACA,EAAA,QAAA,GAGA,KAAA,qBAAA,IAAA,EAAA,KAGA,EAAA,UAAA,YAAA,SAAA,GACA,OAAA,KAAA,qBAAA,EAAA,IAAA,IAGA,EAAA,UAAA,KAAA,SAAA,EAAA,GAGA,MAFA,mBAAA,IACA,EAAA,EAAA,IACA,EAAA,YAAA,OAAA,MAGA,EAAA,UAAA,aAAA,SAAA,EAAA,EAAA,GACA,IACA,EADA,EAAA,KAAA,WAEA,GAAA,OAAA,EAAA,QACA,OAAA,EAEA,IAAA,EAAA,EAAA,OAIA,QAHA,IAAA,EAAA,gBACA,EAAA,cAAA,KAAA,aAAA,EAAA,QAAA,EAAA,GAAA,QAEA,EAAA,SAAA,EAAA,cAAA,OACA,OAAA,EAEA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IACA,GAAA,EAAA,KAAA,EAAA,cAAA,GACA,OAAA,EAEA,OAAA;;ACzQA,IAAA,EAAA,QAAA,YAEA,EAAA,QAAA,SAEA,SAAA,EAAA,GACA,EAAA,KAAA,KAAA,GACA,KAAA,IAAA,MAEA,EAAA,EAAA,GACA,OAAA,QAAA,EAEA,EAAA,UAAA,OAAA,SAAA,EAAA,GAKA,IAJA,IAEA,EAFA,EAAA,UAAA,OAAA,KAAA,KAAA,GAEA,SAAA,UACA,EAAA,CAAA,cAAA,EAAA,MAAA,SACA,EAAA,EAAA,EAAA,EAAA,OAAA,GAAA,GACA,EAAA,KAAA,EAAA,MAAA,EAAA,EAAA,KAEA,OADA,EAAA,KAAA,YAAA,EAAA,MAAA,SACA,EAAA,KAAA;;ACnBA,IAAA,EAAA,QAEA,EAAA,IAAA,QAAA,SACA,EAAA,IAAA,QAAA;;ACHA,IAAA,EAAA,QAEA,EAAA,OAAA,QAAA,SAEA,EAAA,OAAA,QAAA,cAAA,OACA,EAAA,KAAA,QAAA,eACA,EAAA,UAAA,QAAA,oBACA,EAAA,SAAA,QAAA,mBACA,EAAA,SAAA,QAAA;;ACLA,aAEA,IAAI4N,EAAM5N,QAAQ,WAEd6N,EAAOD,EAAIE,OAAO,OAAQ,WAC7B,KAAKC,OAAO,CACXC,QAAS,KAAKC,UACdC,YAAa,KAAKC,cAIhBC,EAAqBR,EAAIE,OAAO,qBAAsB,WACzD,KAAKO,MAAMxM,IACV,KAAKlC,IAAI,QAAQ2O,QACjB,KAAK3O,IAAI,SAAS4O,SAIhBC,EAAsBZ,EAAIE,OAAO,sBAAuB,WAC3D,KAAKO,MAAMxM,IACV,KAAKlC,IAAI,aAAa2O,QACtB,KAAK3O,IAAI,cAAc8O,WACvB,KAAK9O,IAAI,SAAS2O,QAAQG,cAIxBC,EAAuBd,EAAIE,OAAO,uBAAwB,WAC7D,KAAKO,MAAMxM,IACV,KAAKlC,IAAI,aAAagP,IAAIH,GAC1B,KAAK7O,IAAI,oBAAoBiP,YAI3BC,EAA4BjB,EAAIE,OAAO,4BAA6B,WACvE,KAAKgB,MAAMV,KAGRW,EAAcnB,EAAIE,OAAO,cAAe,WAC3C,KAAKkB,MAAMH,KAGRI,EAAOrB,EAAIE,OAAO,OAAQ,WAC7B,KAAKC,OAAO,CACXmB,YAAa,KAAKP,IAAII,OAIpBI,EAAWvB,EAAIE,OAAO,WAAY,WACrC,KAAKO,MAAMxM,IACV,KAAKlC,IAAI,aAAagP,IAAId,GAC1B,KAAKlO,IAAI,YAAYgP,IAAId,MAIvBuB,EAAYxB,EAAIE,OAAO,YAAa,WACvC,KAAKO,MAAMxM,IACV,KAAKlC,IAAI,UAAU2O,QACnB,KAAK3O,IAAI,YAAY0P,OAAOC,KAAI,GAChC,KAAK3P,IAAI,aAAa4P,YAIpBC,EAAiB5B,EAAIE,OAAO,iBAAkB,WACjD,KAAKO,MAAMxM,IACV,KAAKlC,IAAI,WAAW8P,SAAS,GAAQ,MAAIhB,WACzC,KAAK9O,IAAI,gBAAqB,MAC9B,KAAKA,IAAI,aAAagP,IAAIH,GAC1B,KAAK7O,IAAI,UAAUgP,IAAIM,GACvB,KAAKtP,IAAI,YAAYgP,IAAIQ,GACzB,KAAKxP,IAAI,WAAWgP,IAAIM,GACxB,KAAKtP,IAAI,wBAAwBgP,IAAID,GACrC,KAAK/O,IAAI,kBAAkB+P,SAAS,GAAGd,SAASH,WAChD,KAAK9O,IAAI,mBAAmB+P,SAAS,GAAGd,SAASH,WACjD,KAAK9O,IAAI,cAAc8P,SAAS,GAAGT,MAAMI,GAAWX,cAIlDkB,EAAkB/B,EAAIE,OAAO,kBAAmB,WACnD,KAAKO,MAAMxM,IACV,KAAKlC,IAAI,kBAAkBgP,IAAIa,GAC/B,KAAK7P,IAAI,sBAAsBgP,IAAIH,GACnC,KAAK7O,IAAI,kBAAkBiP,YAI7BjY,OAAOxB,QAAUwa;;ACrFjB,aAEA,IAAIC,EAAO5P,QAAQ,WAEnB7K,QAAQ0a,YAAc7P,QAAQ,iBAE9B,IAAI8P,EAAgBF,EAAK9B,OAAO,gBAAiB,WAChD,KAAKO,MAAMxM,IACV,KAAKlC,IAAI,WAAgB,MACzB,KAAKA,IAAI,WAAgB,MACzB,KAAKA,IAAI,kBAAuB,MAChC,KAAKA,IAAI,mBAAwB,MACjC,KAAKA,IAAI,UAAe,MACxB,KAAKA,IAAI,UAAe,MACxB,KAAKA,IAAI,aAAkB,MAC3B,KAAKA,IAAI,aAAkB,MAC3B,KAAKA,IAAI,eAAoB,SAG/BxK,QAAQ2a,cAAgBA,EAExB,IAAIC,EAAeH,EAAK9B,OAAO,eAAgB,WAC9C,KAAKO,MAAMxM,IACV,KAAKlC,IAAI,WAAgB,MACzB,KAAKA,IAAI,kBAAuB,SAGlCxK,QAAQ4a,aAAeA,EAEvB,IAAIvB,EAAsBoB,EAAK9B,OAAO,sBAAuB,WAC5D,KAAKO,MAAMxM,IACV,KAAKlC,IAAI,aAAa2O,QACtB,KAAK3O,IAAI,QAAQqQ,QAAQvB,WACzB,KAAK9O,IAAI,SAAS2O,QAAQG,WAC1B,KAAK9O,IAAI,UAAU0O,MAAMxM,IACxB,KAAKlC,IAAI,KAAU,MACnB,KAAKA,IAAI,KAAU,MACnB,KAAKA,IAAI,KAAU,OAClB8O,cAIAwB,EAAYL,EAAK9B,OAAO,uBAAwB,WACnD,KAAKO,MAAMxM,IACV,KAAKlC,IAAI,aAAagP,IAAIH,GAC1B,KAAK7O,IAAI,oBAAoBiP,YAG/BzZ,QAAQ8a,UAAYA,EAEpB,IAAIC,EAAiBN,EAAK9B,OAAO,iBAAkB,WAClD,KAAKO,MAAMxM,IACV,KAAKlC,IAAI,WAAgB,MACzB,KAAKA,IAAI,aAAagP,IAAIH,GAC1B,KAAK7O,IAAI,qBAAqB4P,YAGhCpa,QAAQgb,WAAaD,EACrB,IAAIE,EAA0BR,EAAK9B,OAAO,0BAA2B,WACpE,KAAKO,MAAMxM,IACV,KAAKlC,IAAI,aAAa0O,MAAMxM,IAC3B,KAAKlC,IAAI,MAAM2O,QACf,KAAK3O,IAAI,WAAW0O,MAAMxM,IACzB,KAAKlC,IAAI,OAAO0O,MAAMxM,IACrB,KAAKlC,IAAI,MAAM2O,QACf,KAAK3O,IAAI,aAAa0O,MAAMxM,IAC3B,KAAKlC,IAAI,QAAQ4P,SACjB,KAAK5P,IAAI,SAAc,QAGzB,KAAKA,IAAI,UAAU0O,MAAMxM,IACxB,KAAKlC,IAAI,QAAQ2O,QACjB,KAAK3O,IAAI,MAAM4P,YAIlB,KAAK5P,IAAI,qBAAqB4P,YAIhCpa,QAAQkb,oBAAsBD,EAE9B,IAAIE,EAAgBV,EAAK9B,OAAO,gBAAiB,WAChD,KAAKO,MAAMxM,IACV,KAAKlC,IAAI,WAAgB,MACzB,KAAKA,IAAI,KAAU,MACnB,KAAKA,IAAI,KAAU,MACnB,KAAKA,IAAI,KAAU,MACnB,KAAKA,IAAI,WAAgB,MACzB,KAAKA,IAAI,YAAiB,SAG5BxK,QAAQmb,cAAgBA,EAExBnb,QAAQob,SAAWX,EAAK9B,OAAO,WAAY,WAC1C,KAAU,QAGX,IAAI0C,EAAeZ,EAAK9B,OAAO,eAAgB,WAC9C,KAAKC,OAAO,CACX0C,WAAY,KAAKnC,YAIfoC,EAAed,EAAK9B,OAAO,eAAgB,WAC9C,KAAKO,MAAMxM,IACV,KAAKlC,IAAI,WAAgB,MACzB,KAAKA,IAAI,cAAc4P,SACvB,KAAK5P,IAAI,cAAc8O,WAAWgB,SAAS,GAAGd,IAAI6B,GAClD,KAAK7Q,IAAI,aAAa8O,WAAWgB,SAAS,GAAGb,YAG/CzZ,QAAQub,aAAeA,EAEvBvb,QAAQwb,UAAYf,EAAK9B,OAAO,YAAa,WAC5C,KAAKO,MAAMxM,IACV,KAAKlC,IAAI,KAAU,MACnB,KAAKA,IAAI,KAAU;;ACxHrBhJ,OAAOxB,QAAQ,CAAC,yBAAyB,cAAc,yBAAyB,cAAc,yBAAyB,cAAc,yBAAyB,cAAc,0BAA0B,cAAc,0BAA0B,cAAc,0BAA0B,cAAc,0BAA0B,cAAc,0BAA0B,cAAc,0BAA0B,cAAc,0BAA0B,cAAc,0BAA0B;;;AEA9d,aAGA,IAAIyb,EAAW,wHACXC,EAAa,8CACbC,EAAY,iFACZC,EAAM/Q,QAAQ,kBACdgR,EAAUhR,QAAQ,kBAClBoB,EAASpB,QAAQ,eAAeoB,OACpCzK,OAAOxB,QAAU,SAAU8b,EAAMtF,GAChC,IAEIuF,EAFAvR,EAAMsR,EAAKzd,WACX2d,EAAQxR,EAAIwR,MAAMP,GAEtB,GAAKO,EAGE,CACN,IAAIC,EAAQ,MAAQD,EAAM,GACtBE,EAAKjQ,EAAOO,KAAKwP,EAAM,GAAI,OAC3BG,EAAalQ,EAAOO,KAAKwP,EAAM,GAAGrd,QAAQ,UAAW,IAAK,UAC1Dyd,EAAYR,EAAIpF,EAAU0F,EAAGvc,MAAM,EAAG,GAAImV,SAASkH,EAAM,GAAI,KAAKxR,IAClE8G,EAAM,GACN+K,EAASR,EAAQS,iBAAiBL,EAAOG,EAAWF,GACxD5K,EAAIlO,KAAKiZ,EAAOrJ,OAAOmJ,IACvB7K,EAAIlO,KAAKiZ,EAAc,SACvBN,EAAY9P,EAAOxJ,OAAO6O,OAZf,CACX,IAAIiL,EAAS/R,EAAIwR,MAAML,GACvBI,EAAY9P,EAAOO,KAAK+P,EAAO,GAAG5d,QAAQ,UAAW,IAAK,UAa3D,MAAO,CACN6d,IAFShS,EAAIwR,MAAMN,GAAY,GAG/BvI,KAAM4I;;;AC9BR,aAEA,IAAItB,EAAO5P,QAAQ,UACf4R,EAAQ5R,QAAQ,gBAChB6R,EAAU7R,QAAQ,aAClBgR,EAAUhR,QAAQ,kBAClB8R,EAAS9R,QAAQ,UACjBoB,EAASpB,QAAQ,eAAeoB,OAEpC,SAAS2Q,EAAQzJ,EAAMqD,GACtB,IAAIC,EAAOtD,EAAK0J,UAAUD,QAAQE,IAAIC,UAAUtG,KAC5CuG,EAAQlI,SAAS3B,EAAK0J,UAAUD,QAAQE,IAAIC,UAAUC,MAAM3e,WAAY,IACxEqZ,EAAO+E,EAAMtJ,EAAK0J,UAAUD,QAAQP,OAAO3E,KAAKuF,KAAK,MACrDf,EAAK/I,EAAK0J,UAAUD,QAAQP,OAAOH,GACnCC,EAAahJ,EAAK+J,kBAClBvI,EAASG,SAAS4C,EAAKpZ,MAAM,KAAK,GAAI,IAAM,EAC5CkM,EAAMmS,EAAOnE,WAAWhC,EAAUC,EAAMuG,EAAOrI,EAAQ,QACvD0H,EAASR,EAAQS,iBAAiB5E,EAAMlN,EAAK0R,GAC7C5K,EAAM,GAGV,OAFAA,EAAIlO,KAAKiZ,EAAOrJ,OAAOmJ,IACvB7K,EAAIlO,KAAKiZ,EAAc,SAChBpQ,EAAOxJ,OAAO6O,GAGtB,SAAS6L,EAAUvM,GAClB,IAAI4F,EACkB,iBAAX5F,GAAwB3E,EAAOU,SAASiE,KAClD4F,EAAW5F,EAAOwM,WAClBxM,EAASA,EAAOpG,KAEK,iBAAXoG,IACVA,EAAS3E,EAAOO,KAAKoE,IAGtB,IAIIyM,EAASC,EAJTC,EAAWb,EAAQ9L,EAAQ4F,GAE3B/P,EAAO8W,EAASf,IAChBrJ,EAAOoK,EAASpK,KAEpB,OAAQ1M,GACP,IAAK,cACJ6W,EAAQ7C,EAAKC,YAAY8C,OAAOrK,EAAM,OAAOsK,eAAeC,qBAE7D,IAAK,aAKJ,OAJKJ,IACJA,EAAQ7C,EAAKK,UAAU0C,OAAOrK,EAAM,QAErCkK,EAAUC,EAAMT,UAAUA,UAAUI,KAAK,MAExC,IAAK,uBACJ,OAAOxC,EAAKG,aAAa4C,OAAOF,EAAMK,iBAAiBxK,KAAM,OAC9D,IAAK,oBAEJ,OADAmK,EAAMJ,kBAAoBI,EAAMK,iBACzB,CACNlX,KAAM,KACN0M,KAAMmK,GAER,IAAK,oBAEJ,OADAA,EAAMT,UAAUe,OAAOC,QAAUpD,EAAKW,SAASoC,OAAOF,EAAMK,iBAAiBxK,KAAM,OAC5E,CACN1M,KAAM,MACN0M,KAAMmK,EAAMT,UAAUe,QAExB,QAAS,MAAM,IAAIlc,MAAM,kBAAoB2b,GAG/C,IAAK,wBAEJlK,EAAOyJ,EADPzJ,EAAOsH,EAAKS,oBAAoBsC,OAAOrK,EAAM,OACxBqD,GAEtB,IAAK,cAGJ,OADA6G,GADAC,EAAQ7C,EAAKO,WAAWwC,OAAOrK,EAAM,QACrB0J,UAAUA,UAAUI,KAAK,MAExC,IAAK,uBACJ,OAAOxC,EAAKE,cAAc6C,OAAOF,EAAMJ,kBAAmB,OAC3D,IAAK,oBACJ,MAAO,CACNY,MAAOR,EAAMT,UAAUiB,MACvBC,WAAYtD,EAAKc,aAAaiC,OAAOF,EAAMJ,kBAAmB,OAAOa,YAEvE,IAAK,oBAEJ,OADAT,EAAMT,UAAUe,OAAOI,SAAWvD,EAAKW,SAASoC,OAAOF,EAAMJ,kBAAmB,OACzE,CACNzW,KAAM,MACNmX,OAAQN,EAAMT,UAAUe,QAE1B,QAAS,MAAM,IAAIlc,MAAM,kBAAoB2b,GAG/C,IAAK,iBACJ,OAAO5C,EAAKG,aAAa4C,OAAOrK,EAAM,OACvC,IAAK,kBACJ,OAAOsH,EAAKE,cAAc6C,OAAOrK,EAAM,OACxC,IAAK,kBACJ,MAAO,CACN1M,KAAM,MACNmX,OAAQnD,EAAKU,cAAcqC,OAAOrK,EAAM,QAE1C,IAAK,iBAEJ,MAAO,CACN2K,OAFD3K,EAAOsH,EAAKc,aAAaiC,OAAOrK,EAAM,QAEzB8K,WAAWtY,MACvBoY,WAAY5K,EAAK4K,YAEnB,QAAS,MAAM,IAAIrc,MAAM,oBAAsB+E,IAGjD0W,EAAU3B,UAAYf,EAAKe,UAE3Bha,OAAOxB,QAAUmd;;AC9GjB3b,OAAOxB,QAAQ,CAAC,eAAe,YAAY,eAAe,OAAO,sBAAsB,OAAO,sBAAsB,OAAO,eAAe,OAAO,eAAe;;;ACAhK,aAGA,IAAIiM,EAASpB,QAAQ,eAAeoB,OAChCiS,EAAarT,QAAQ,eACrBsT,EAAMtT,QAAQ,kBACduT,EAAKvT,QAAQ,YAAYwT,GACzBC,EAAKzT,QAAQ,SACbsS,EAAYtS,QAAQ,cACpB0T,EAAS1T,QAAQ,iBAEjB2T,EAAoB,EAExB,SAAS5K,EAAKC,EAAMrJ,EAAKiU,EAAUC,EAAUlC,GAC3C,IAAImC,EAAOxB,EAAU3S,GACrB,GAAImU,EAAKb,MAAO,CAEd,GAAiB,UAAbY,GAAqC,cAAbA,EAA4B,MAAM,IAAIhd,MAAM,0BACxE,OAAOkd,EAAO/K,EAAM8K,GACf,GAAkB,QAAdA,EAAKlY,KAAgB,CAC9B,GAAiB,QAAbiY,EAAsB,MAAM,IAAIhd,MAAM,0BAC1C,OAAOmd,EAAQhL,EAAM8K,EAAMF,GAE7B,GAAiB,QAAbC,GAAmC,cAAbA,EAA4B,MAAM,IAAIhd,MAAM,0BACtE,QAAoBqE,IAAhByE,EAAIsU,SAAyBtU,EAAIsU,UAAYN,EAAqB,MAAM,IAAI9c,MAAM,uCAEtFmS,EAAO5H,EAAOxJ,OAAO,CAAC+Z,EAAK3I,IAG3B,IAFA,IAAItV,EAAMogB,EAAKI,QAAQC,aACnBC,EAAM,CAAC,EAAG,GACPpL,EAAKrV,OAASygB,EAAIzgB,OAAS,EAAID,GAAO0gB,EAAI7b,KAAK,KACtD6b,EAAI7b,KAAK,GAET,IADA,IAAID,GAAK,IACAA,EAAI0Q,EAAKrV,QAAUygB,EAAI7b,KAAKyQ,EAAK1Q,IAG1C,OADUgb,EAAIc,EAAKN,GAIrB,SAASC,EAAO/K,EAAM8K,GACpB,IAAIO,EAAUX,EAAOI,EAAKb,MAAMb,KAAK,MACrC,IAAKiC,EAAW,MAAM,IAAIxd,MAAM,iBAAmBid,EAAKb,MAAMb,KAAK,MAEnE,IAEI3L,EAFQ,IAAI8M,EAAGc,GACHC,eAAeR,EAAKZ,YACtBnK,KAAKC,GAEnB,OAAO5H,EAAOO,KAAK8E,EAAI8N,SAGzB,SAASP,EAAQhL,EAAM8K,EAAMjH,GAU3B,IATA,IAKIP,EALAkI,EAAIV,EAAKf,OAAOI,SAChBsB,EAAIX,EAAKf,OAAO0B,EAChBC,EAAIZ,EAAKf,OAAO2B,EAChBC,EAAIb,EAAKf,OAAO4B,EAChBC,EAAI,IAAInB,EAAG,GAEXoB,EAAIC,EAAS9L,EAAM0L,GAAGK,IAAIL,GAC1BM,GAAI,EACJC,EAAKC,EAAOV,EAAGE,EAAG1L,EAAM6D,IACf,IAANmI,GAELJ,EAAIO,EAAMR,EADVrI,EAAI8I,EAAQV,EAAGO,EAAIpI,GACH4H,EAAGC,GAED,KADlBM,EAAI1I,EAAE+I,KAAKX,GAAGY,KAAKT,EAAEU,IAAIf,EAAEgB,IAAIZ,KAAKG,IAAIL,IAClCe,KAAK,KACTT,GAAI,EACJJ,EAAI,IAAInB,EAAG,IAGf,OAAOc,EAAMK,EAAGI,GAGlB,SAAST,EAAMK,EAAGI,GAChBJ,EAAIA,EAAEc,UACNV,EAAIA,EAAEU,UAGK,IAAPd,EAAE,KAAaA,EAAI,CAAC,GAAGhd,OAAOgd,IACvB,IAAPI,EAAE,KAAaA,EAAI,CAAC,GAAGpd,OAAOod,IAElC,IACIzH,EAAM,CACR,GAFUqH,EAAEjhB,OAASqhB,EAAErhB,OAAS,EAEnB,EAAMihB,EAAEjhB,QAGvB,OADA4Z,EAAMA,EAAI3V,OAAOgd,EAAG,CAAC,EAAMI,EAAErhB,QAASqhB,GAC/B5T,EAAOO,KAAK4L,GAGrB,SAAS2H,EAAOV,EAAGE,EAAG1L,EAAM6D,GAE1B,IADA2H,EAAIpT,EAAOO,KAAK6S,EAAEkB,YACZ/hB,OAAS+gB,EAAEP,aAAc,CAC7B,IAAIwB,EAAQvU,EAAOuJ,MAAM+J,EAAEP,aAAeK,EAAE7gB,QAC5C6gB,EAAIpT,EAAOxJ,OAAO,CAAC+d,EAAOnB,IAE5B,IAAIoB,EAAO5M,EAAKrV,OACZkiB,EAAQC,EAAY9M,EAAM0L,GAC1BqB,EAAI3U,EAAOuJ,MAAMiL,GACrBG,EAAElN,KAAK,GACP,IAAIyD,EAAIlL,EAAOuJ,MAAMiL,GAKrB,OAJAtJ,EAAI+G,EAAWxG,EAAMP,GAAGnE,OAAO4N,GAAG5N,OAAO/G,EAAOO,KAAK,CAAC,KAAKwG,OAAOqM,GAAGrM,OAAO0N,GAAOxN,SACnF0N,EAAI1C,EAAWxG,EAAMP,GAAGnE,OAAO4N,GAAG1N,SAG3B,CAAEiE,EAFTA,EAAI+G,EAAWxG,EAAMP,GAAGnE,OAAO4N,GAAG5N,OAAO/G,EAAOO,KAAK,CAAC,KAAKwG,OAAOqM,GAAGrM,OAAO0N,GAAOxN,SAEpE0N,EADfA,EAAI1C,EAAWxG,EAAMP,GAAGnE,OAAO4N,GAAG1N,UAIpC,SAASyM,EAASkB,EAAOtB,GACvB,IAAIuB,EAAO,IAAIxC,EAAGuC,GACdtW,GAASsW,EAAMriB,QAAU,GAAK+gB,EAAEwB,YAEpC,OADIxW,EAAQ,GAAKuW,EAAKE,MAAMzW,GACrBuW,EAGT,SAASH,EAAYG,EAAMvB,GAEzBuB,GADAA,EAAOnB,EAASmB,EAAMvB,IACVK,IAAIL,GAChB,IAAIjO,EAAMrF,EAAOO,KAAKsU,EAAKP,WAC3B,GAAIjP,EAAI9S,OAAS+gB,EAAEP,aAAc,CAC/B,IAAIwB,EAAQvU,EAAOuJ,MAAM+J,EAAEP,aAAe1N,EAAI9S,QAC9C8S,EAAMrF,EAAOxJ,OAAO,CAAC+d,EAAOlP,IAE9B,OAAOA,EAGT,SAAS2O,EAAQV,EAAGO,EAAIpI,GACtB,IAAIuJ,EACA9J,EAEJ,EAAG,CAGD,IAFA8J,EAAIhV,EAAOuJ,MAAM,GAEC,EAAXyL,EAAEziB,OAAa+gB,EAAEwB,aACtBjB,EAAGc,EAAI1C,EAAWxG,EAAMoI,EAAG3I,GAAGnE,OAAO8M,EAAGc,GAAG1N,SAC3C+N,EAAIhV,EAAOxJ,OAAO,CAACwe,EAAGnB,EAAGc,IAG3BzJ,EAAIwI,EAASsB,EAAG1B,GAChBO,EAAG3I,EAAI+G,EAAWxG,EAAMoI,EAAG3I,GAAGnE,OAAO8M,EAAGc,GAAG5N,OAAO/G,EAAOO,KAAK,CAAC,KAAK0G,SACpE4M,EAAGc,EAAI1C,EAAWxG,EAAMoI,EAAG3I,GAAGnE,OAAO8M,EAAGc,GAAG1N,gBACtB,IAAdiE,EAAE+J,IAAI3B,IAEf,OAAOpI,EAGT,SAAS6I,EAAMR,EAAGrI,EAAGmI,EAAGC,GACtB,OAAOC,EAAE2B,MAAM7C,EAAG8C,KAAK9B,IAAI+B,OAAOlK,GAAGmK,UAAU1B,IAAIL,GAGrD/d,OAAOxB,QAAU4T,EACjBpS,OAAOxB,QAAQ+f,OAASA,EACxBve,OAAOxB,QAAQigB,QAAUA;;;ACrJzB,aAGA,IAAIhU,EAASpB,QAAQ,eAAeoB,OAChCqS,EAAKzT,QAAQ,SACbuT,EAAKvT,QAAQ,YAAYwT,GACzBlB,EAAYtS,QAAQ,cACpB0T,EAAS1T,QAAQ,iBAErB,SAAS0W,EAAOC,EAAK3N,EAAMrJ,EAAKkU,EAAUlC,GACxC,IAAIiF,EAAMtE,EAAU3S,GACpB,GAAiB,OAAbiX,EAAIhb,KAAe,CAErB,GAAiB,UAAbiY,GAAqC,cAAbA,EAA4B,MAAM,IAAIhd,MAAM,yBACxE,OAAOggB,EAASF,EAAK3N,EAAM4N,GACtB,GAAiB,QAAbA,EAAIhb,KAAgB,CAC7B,GAAiB,QAAbiY,EAAsB,MAAM,IAAIhd,MAAM,yBAC1C,OAAOigB,EAAUH,EAAK3N,EAAM4N,GAE9B,GAAiB,QAAb/C,GAAmC,cAAbA,EAA4B,MAAM,IAAIhd,MAAM,yBAEtEmS,EAAO5H,EAAOxJ,OAAO,CAAC+Z,EAAK3I,IAI3B,IAHA,IAAItV,EAAMkjB,EAAI1C,QAAQC,aAClBC,EAAM,CAAC,GACP2C,EAAS,EACN/N,EAAKrV,OAASygB,EAAIzgB,OAAS,EAAID,GACpC0gB,EAAI7b,KAAK,KACTwe,GAAU,EAEZ3C,EAAI7b,KAAK,GAET,IADA,IAAID,GAAK,IACAA,EAAI0Q,EAAKrV,QAChBygB,EAAI7b,KAAKyQ,EAAK1Q,IAEhB8b,EAAMhT,EAAOO,KAAKyS,GAClB,IAAI4C,EAAMvD,EAAG8C,KAAKK,EAAI1C,SAGtByC,GAFAA,EAAM,IAAIlD,EAAGkD,GAAKL,MAAMU,IAEdR,OAAO,IAAI/C,EAAGmD,EAAIK,iBAC5BN,EAAMvV,EAAOO,KAAKgV,EAAIF,UAAUf,WAChC,IAAIjP,EAAMsQ,EAAS,EAAI,EAAI,EAK3B,IAJArjB,EAAMM,KAAKkjB,IAAIP,EAAIhjB,OAAQygB,EAAIzgB,QAC3BgjB,EAAIhjB,SAAWygB,EAAIzgB,SAAU8S,EAAM,GAEvCnO,GAAK,IACIA,EAAI5E,GAAO+S,GAAOkQ,EAAIre,GAAK8b,EAAI9b,GACxC,OAAe,IAARmO,EAGT,SAASoQ,EAASF,EAAK3N,EAAM4N,GAC3B,IAAIvC,EAAUX,EAAOkD,EAAItO,KAAK0J,UAAUiB,MAAMb,KAAK,MACnD,IAAKiC,EAAW,MAAM,IAAIxd,MAAM,iBAAmB+f,EAAItO,KAAK0J,UAAUiB,MAAMb,KAAK,MAEjF,IAAIa,EAAQ,IAAIM,EAAGc,GACf8C,EAASP,EAAItO,KAAK+J,kBAAkB/J,KAExC,OAAO2K,EAAMyD,OAAO1N,EAAM2N,EAAKQ,GAGjC,SAASL,EAAUH,EAAK3N,EAAM4N,GAC5B,IAAInC,EAAImC,EAAItO,KAAKmM,EACbC,EAAIkC,EAAItO,KAAKoM,EACbC,EAAIiC,EAAItO,KAAKqM,EACbyC,EAAIR,EAAItO,KAAK0K,QACbqE,EAAW/E,EAAU3B,UAAUgC,OAAOgE,EAAK,OAC3C3B,EAAIqC,EAASrC,EACbJ,EAAIyC,EAASzC,EACjB0C,EAAWtC,EAAGN,GACd4C,EAAW1C,EAAGF,GACd,IAAI6C,EAAQ9D,EAAG8C,KAAK9B,GAChBpY,EAAI2Y,EAAEK,KAAKX,GAOf,OAAoB,IANZC,EAAE2B,MAAMiB,GACbf,OAAO,IAAI/C,EAAGzK,GAAMwM,IAAInZ,GAAG0Y,IAAIL,IAC/B+B,UACAjB,IAAI4B,EAAEd,MAAMiB,GAAOf,OAAO5B,EAAEY,IAAInZ,GAAG0Y,IAAIL,IAAI+B,WAC3C1B,IAAIN,GACJM,IAAIL,GACE2B,IAAIzB,GAGf,SAAS0C,EAAWE,EAAG9C,GACrB,GAAI8C,EAAE/B,KAAK,IAAM,EAAK,MAAM,IAAI5e,MAAM,eACtC,GAAI2gB,EAAEnB,IAAI3B,IAAM,EAAK,MAAM,IAAI7d,MAAM,eAGvCF,OAAOxB,QAAUuhB;;;ACrFjB,aAEA,IAAItV,EAASpB,QAAQ,eAAeoB,OAChCqW,EAAazX,QAAQ,eACrBmC,EAASnC,QAAQ,mBACjBgB,EAAWhB,QAAQ,YACnB+I,EAAO/I,QAAQ,UACf0W,EAAS1W,QAAQ,YAEjB0X,EAAa1X,QAAQ,qBAMzB,SAAS2X,EAAK3F,GACZ7P,EAAOxB,SAASxJ,KAAK,MAErB,IAAImR,EAAOoP,EAAW1F,GACtB,IAAK1J,EAAQ,MAAM,IAAIzR,MAAM,0BAE7B,KAAK+gB,UAAYtP,EAAKU,KACtB,KAAK6O,MAAQJ,EAAWnP,EAAKU,MAC7B,KAAK8O,KAAOxP,EAAKW,GACjB,KAAK8O,UAAYzP,EAAKS,KAuBxB,SAASiP,EAAOhG,GACd7P,EAAOxB,SAASxJ,KAAK,MAErB,IAAImR,EAAOoP,EAAW1F,GACtB,IAAK1J,EAAQ,MAAM,IAAIzR,MAAM,0BAE7B,KAAKghB,MAAQJ,EAAWnP,EAAKU,MAC7B,KAAK8O,KAAOxP,EAAKW,GACjB,KAAK8O,UAAYzP,EAAKS,KAuBxB,SAASkP,EAAWjG,GAClB,OAAO,IAAI2F,EAAK3F,GAGlB,SAASkG,EAAalG,GACpB,OAAO,IAAIgG,EAAOhG,GAzEpBvX,OAAOmF,KAAK8X,GAAYS,QAAQ,SAAUxY,GACxC+X,EAAW/X,GAAKsJ,GAAK7H,EAAOO,KAAK+V,EAAW/X,GAAKsJ,GAAI,OACrDyO,EAAW/X,EAAIuH,eAAiBwQ,EAAW/X,KAc7CqB,EAAS2W,EAAMxV,EAAOxB,UAEtBgX,EAAKnf,UAAU+L,OAAS,SAAgB+D,EAAM5B,EAAG0R,GAC/C,KAAKP,MAAM1P,OAAOG,GAClB8P,KAGFT,EAAKnf,UAAU2P,OAAS,SAAgBG,EAAM+P,GAG5C,OAFA,KAAKR,MAAM1P,OAAuB,iBAATG,EAAoBlH,EAAOO,KAAK2G,EAAM+P,GAAO/P,GAE/D,MAGTqP,EAAKnf,UAAUuQ,KAAO,SAAoBpJ,EAAK0Y,GAC7C,KAAKlR,MACL,IAAI6B,EAAO,KAAK6O,MAAMxP,SAClBsO,EAAM5N,EAAKC,EAAMrJ,EAAK,KAAKiY,UAAW,KAAKG,UAAW,KAAKD,MAE/D,OAAOO,EAAM1B,EAAInjB,SAAS6kB,GAAO1B,GAanC3V,EAASgX,EAAQ7V,EAAOxB,UAExBqX,EAAOxf,UAAU+L,OAAS,SAAgB+D,EAAM5B,EAAG0R,GACjD,KAAKP,MAAM1P,OAAOG,GAClB8P,KAGFJ,EAAOxf,UAAU2P,OAAS,SAAgBG,EAAM+P,GAG9C,OAFA,KAAKR,MAAM1P,OAAuB,iBAATG,EAAoBlH,EAAOO,KAAK2G,EAAM+P,GAAO/P,GAE/D,MAGT0P,EAAOxf,UAAUke,OAAS,SAAsB/W,EAAKgX,EAAK0B,GACxD,IAAIC,EAA2B,iBAAR3B,EAAmBvV,EAAOO,KAAKgV,EAAK0B,GAAO1B,EAElE,KAAKxP,MACL,IAAI6B,EAAO,KAAK6O,MAAMxP,SACtB,OAAOqO,EAAO4B,EAAWtP,EAAMrJ,EAAK,KAAKoY,UAAW,KAAKD,OAW3DnhB,OAAOxB,QAAU,CACfwiB,KAAMM,EACND,OAAQE,EACRD,WAAYA,EACZC,aAAcA;;;AEkChB,IAAA,EAAA,QAAA,UAAA,OA5HA,EAAA,QAAA,YACA,EAAA,QAAA,SAEA,OAAA,QAAA,SAAA,GACA,OAAA,IAAA,EAAA,IAGA,IAAA,EAAA,CACA,UAAA,CACA,KAAA,YACA,WAAA,IAEA,UAAA,CACA,KAAA,OACA,WAAA,IAEA,WAAA,CACA,KAAA,OACA,WAAA,IAEA,WAAA,CACA,KAAA,OACA,WAAA,IAEA,QAAA,CACA,KAAA,UACA,WAAA,IAEA,UAAA,CACA,KAAA,OACA,WAAA,IAEA,UAAA,CACA,KAAA,OACA,WAAA,KAUA,SAAA,EAAA,GACA,KAAA,UAAA,EAAA,GACA,KAAA,YACA,KAAA,UAAA,CACA,KAAA,IAGA,KAAA,MAAA,IAAA,EAAA,GAAA,KAAA,UAAA,MACA,KAAA,UAAA,EAwDA,SAAA,EAAA,EAAA,EAAA,GACA,MAAA,QAAA,KACA,EAAA,EAAA,WAEA,IAAA,EAAA,IAAA,EAAA,GACA,GAAA,GAAA,EAAA,OAAA,EAAA,CACA,IAAA,EAAA,IAAA,EAAA,EAAA,EAAA,QACA,EAAA,KAAA,GACA,EAAA,EAAA,OAAA,CAAA,EAAA,IAEA,OAAA,EAGA,EAAA,SAAA,GAFA,EAjFA,EAAA,KAAA,EAAA,UACA,EAAA,KAAA,EAAA,UAAA,EAAA,WACA,EAAA,KAAA,EAAA,UAAA,EAAA,WACA,EAAA,KAAA,EAAA,UACA,EAAA,KAAA,EAAA,UAaA,EAAA,UAAA,aAAA,SAAA,EAAA,GAEA,OADA,KAAA,KAAA,KAAA,MAAA,aACA,KAAA,aAAA,EAAA,IAGA,EAAA,UAAA,cAAA,SAAA,EAAA,EAAA,GAOA,OANA,EAAA,GAAA,OACA,EAAA,SAAA,KACA,EAAA,IAAA,EAAA,EAAA,IAIA,EAFA,KAAA,MAAA,cAAA,GAAA,YACA,IAAA,KAAA,KAAA,cAAA,OACA,EAAA,KAAA,UAAA,aAGA,EAAA,UAAA,aAAA,SAAA,EAAA,GACA,IAAA,EAAA,KAAA,KAAA,UAAA,eAAA,GAAA,GAQA,MAPA,WAAA,IACA,EAAA,EAAA,OAAA,GAAA,EACA,EAAA,GAAA,EAEA,EAAA,GAAA,GAGA,EAAA,EAAA,IAGA,EAAA,UAAA,cAAA,SAAA,GACA,OAAA,EAAA,KAAA,KAAA,aAAA,IAGA,EAAA,UAAA,aAAA,SAAA,EAAA,GAMA,OALA,EAAA,GAAA,OACA,EAAA,SAAA,KACA,EAAA,IAAA,EAAA,EAAA,IAEA,KAAA,KAAA,cAAA,GACA,MAGA,EAAA,UAAA,cAAA,SAAA,EAAA,GACA,EAAA,GAAA,OACA,EAAA,SAAA,KACA,EAAA,IAAA,EAAA,EAAA,IAGA,IAAA,EAAA,IAAA,EAAA,GAIA,OAHA,EAAA,EAAA,SAAA,IACA,KAAA,KAAA,KAAA,MAAA,aACA,KAAA,KAAA,eAAA,GACA;;;ACzGA,IAAA,EAAA,QAAA,eACA,EAAA,QAAA,eAAA,OAaA,SAAA,EAAA,GACA,IAAA,EAAA,EAAA,YAAA,GAEA,OADA,EAAA,cAAA,EAAA,GACA,EAdA,OAAA,QAAA,SAAA,EAAA,GAIA,IAHA,IAEA,EAFA,EAAA,EAAA,MAAA,GACA,EAAA,EAEA,EAAA,OAAA,GACA,EAAA,EAAA,KACA,EAAA,EAAA,OAAA,CAAA,EAAA,EAAA,QAAA,OAAA,GAAA,OAAA,GAAA,WAEA,OAAA,EAAA,MAAA,EAAA;;ACXA,OAAA,QAAA,SAAA,EAAA,GAGA,IAFA,IAAA,EAAA,EAAA,OACA,GAAA,IACA,EAAA,GACA,EAAA,IAAA,EAAA,GAEA,OAAA;;;AENA,IAAA,EAAA,QAAA,SACA,EAAA,QAAA,eAAA,OAEA,SAAA,EAAA,EAAA,GACA,OAAA,EAAA,KAAA,EACA,MAAA,EAAA,KAAA,EAAA,UACA,OAAA,IAAA,EAAA,EAAA,iBACA,UACA,WAGA,OAAA,QAAA;;;ACXA,IAAA,EAAA,QAAA,cACA,EAAA,QAAA,eACA,EAAA,QAAA,eACA,EAAA,QAAA,SACA,EAAA,QAAA,SACA,EAAA,QAAA,SACA,EAAA,QAAA,gBACA,EAAA,QAAA,kBACA,EAAA,QAAA,eAAA,OAgCA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,QAAA,aACA,EAAA,EAAA,OACA,EAAA,EAAA,QAAA,OAAA,EAAA,MAAA,IAAA,SACA,EAAA,EAAA,OACA,EAAA,EAAA,EACA,GAAA,EAAA,EAAA,EAAA,EACA,MAAA,IAAA,MAAA,oBAEA,IAAA,EAAA,EAAA,MAAA,EAAA,EAAA,EAAA,GACA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,GACA,EAAA,EAAA,EAAA,OAAA,CAAA,EAAA,EAAA,EAAA,MAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,IACA,EAAA,EAAA,EAAA,EAAA,EAAA,IACA,OAAA,IAAA,EAAA,EAAA,OAAA,CAAA,EAAA,MAAA,GAAA,EAAA,GAAA,IAEA,SAAA,EAAA,EAAA,EAAA,GACA,IAKA,EALA,EAAA,EAAA,OACA,EAAA,EAAA,QAAA,aACA,GAAA,EAAA,EAAA,GACA,MAAA,IAAA,MAAA,oBAQA,OAJA,EADA,EACA,EAAA,MAAA,EAAA,EAAA,EAAA,KAEA,EAAA,EAAA,EAAA,GAEA,IAAA,EAAA,EAAA,OAAA,CAAA,EAAA,KAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,MAAA,GAAA,GAAA,IAEA,SAAA,EAAA,GAMA,IALA,IAIA,EAJA,EAAA,EAAA,YAAA,GACA,EAAA,EACA,EAAA,EAAA,EAAA,GACA,EAAA,EAEA,EAAA,GACA,IAAA,EAAA,SACA,EAAA,EAAA,EAAA,GACA,EAAA,IAEA,EAAA,EAAA,QAEA,EAAA,KAAA,GAGA,OAAA,EA5EA,OAAA,QAAA,SAAA,EAAA,EAAA,GACA,IAAA,EAEA,EADA,EAAA,QACA,EAAA,QACA,EACA,EAEA,EAEA,IACA,EADA,EAAA,EAAA,GAEA,GAAA,IAAA,EACA,EAAA,EAAA,EAAA,QACA,GAAA,IAAA,EACA,EAAA,EAAA,EAAA,EAAA,OACA,CAAA,GAAA,IAAA,EAMA,MAAA,IAAA,MAAA,mBAJA,IADA,EAAA,IAAA,EAAA,IACA,IAAA,EAAA,UAAA,EACA,MAAA,IAAA,MAAA,6BAKA,OAAA,EACA,EAAA,EAAA,GAEA,EAAA,EAAA;;;ACpCA,IAAA,EAAA,QAAA,cACA,EAAA,QAAA,SACA,EAAA,QAAA,SACA,EAAA,QAAA,SACA,EAAA,QAAA,kBACA,EAAA,QAAA,eACA,EAAA,QAAA,gBACA,EAAA,QAAA,eAAA,OAoCA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,QAAA,aACA,EAAA,EAAA,QAAA,OAAA,EAAA,MAAA,IAAA,SACA,EAAA,EAAA,OACA,GAAA,IAAA,EAAA,GACA,MAAA,IAAA,MAAA,oBAEA,IAAA,EAAA,EAAA,MAAA,EAAA,EAAA,GACA,EAAA,EAAA,MAAA,EAAA,GACA,EAAA,EAAA,EAAA,EAAA,EAAA,IACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IACA,GAAA,EAAA,EAAA,EAAA,MAAA,EAAA,IACA,MAAA,IAAA,MAAA,oBAGA,IADA,IAAA,EAAA,EACA,IAAA,EAAA,IACA,IAEA,GAAA,IAAA,EAAA,KACA,MAAA,IAAA,MAAA,oBAEA,OAAA,EAAA,MAAA,GAGA,SAAA,EAAA,EAAA,EAAA,GAIA,IAHA,IAAA,EAAA,EAAA,MAAA,EAAA,GACA,EAAA,EACA,EAAA,EACA,IAAA,EAAA,MACA,GAAA,GAAA,EAAA,OAAA,CACA,IACA,MAGA,IAAA,EAAA,EAAA,MAAA,EAAA,EAAA,GAQA,IANA,SAAA,EAAA,SAAA,SAAA,GAAA,SAAA,EAAA,SAAA,QAAA,IACA,IAEA,EAAA,OAAA,GACA,IAEA,EACA,MAAA,IAAA,MAAA,oBAEA,OAAA,EAAA,MAAA,GAEA,SAAA,EAAA,EAAA,GACA,EAAA,EAAA,KAAA,GACA,EAAA,EAAA,KAAA,GACA,IAAA,EAAA,EACA,EAAA,EAAA,OACA,EAAA,SAAA,EAAA,SACA,IACA,EAAA,KAAA,IAAA,EAAA,OAAA,EAAA,SAGA,IADA,IAAA,GAAA,IACA,EAAA,GACA,GAAA,EAAA,GAAA,EAAA,GAEA,OAAA,EA9FA,OAAA,QAAA,SAAA,EAAA,EAAA,GACA,IAAA,EAEA,EADA,EAAA,QACA,EAAA,QACA,EACA,EAEA,EAGA,IAKA,EALA,EAAA,EAAA,GACA,EAAA,EAAA,QAAA,aACA,GAAA,EAAA,OAAA,GAAA,IAAA,EAAA,GAAA,IAAA,EAAA,UAAA,EACA,MAAA,IAAA,MAAA,oBAIA,EADA,EACA,EAAA,IAAA,EAAA,GAAA,GAEA,EAAA,EAAA,GAEA,IAAA,EAAA,EAAA,MAAA,EAAA,EAAA,QAEA,GADA,EAAA,EAAA,OAAA,CAAA,EAAA,GAAA,GACA,IAAA,EACA,OAAA,EAAA,EAAA,GACA,GAAA,IAAA,EACA,OAAA,EAAA,EAAA,EAAA,GACA,GAAA,IAAA,EACA,OAAA,EAEA,MAAA,IAAA,MAAA;;ACvCA,QAAA,cAAA,QAAA,mBACA,QAAA,eAAA,QAAA,oBAEA,QAAA,eAAA,SAAA,EAAA,GACA,OAAA,QAAA,cAAA,EAAA,GAAA,IAGA,QAAA,cAAA,SAAA,EAAA,GACA,OAAA,QAAA,eAAA,EAAA,GAAA;;;;;ACmGA,IAAA,EAAA,UAAA,GAAA,EAAA,QAAA,WAzGA,SAASK,IACP,MAAM,IAAI1hB,MAAM,8GAElB,IAAI2hB,EAAaxY,QAAQ,eACrByY,EAAczY,QAAQ,eACtBoB,EAASoX,EAAWpX,OACpBsX,EAAmBF,EAAWG,WAC9BlM,EAASnL,EAAOmL,QAAUnL,EAAOsX,SACjCC,EAAa7kB,KAAKC,IAAI,EAAG,IAAM,EACnC,SAAS6kB,EAActQ,EAAQ7U,GAC7B,GAAsB,iBAAX6U,GAAuBA,GAAWA,EAC3C,MAAM,IAAIhN,UAAU,2BAGtB,GAAIgN,EAASqQ,GAAcrQ,EAAS,EAClC,MAAM,IAAIhN,UAAU,2BAGtB,GAAIgN,EAASkQ,GAAoBlQ,EAAS7U,EACxC,MAAM,IAAIoL,WAAW,uBAIzB,SAASga,EAAYtN,EAAMjD,EAAQ7U,GACjC,GAAoB,iBAAT8X,GAAqBA,GAASA,EACvC,MAAM,IAAIjQ,UAAU,yBAGtB,GAAIiQ,EAAOoN,GAAcpN,EAAO,EAC9B,MAAM,IAAIjQ,UAAU,yBAGtB,GAAIiQ,EAAOjD,EAAS7U,GAAU8X,EAAOiN,EACnC,MAAM,IAAI3Z,WAAW,oBAUzB,SAASia,EAAYC,EAAKzQ,EAAQiD,EAAMrL,GACtC,KAAKgB,EAAOU,SAASmX,IAAUA,aAAe3X,EAAOG,YACnD,MAAM,IAAIjG,UAAU,iDAGtB,GAAsB,mBAAXgN,EACTpI,EAAKoI,EACLA,EAAS,EACTiD,EAAOwN,EAAItlB,YACN,GAAoB,mBAAT8X,EAChBrL,EAAKqL,EACLA,EAAOwN,EAAItlB,OAAS6U,OACf,GAAkB,mBAAPpI,EAChB,MAAM,IAAI5E,UAAU,oCAItB,OAFAsd,EAAatQ,EAAQyQ,EAAItlB,QACzBolB,EAAWtN,EAAMjD,EAAQyQ,EAAItlB,QACtBulB,EAAWD,EAAKzQ,EAAQiD,EAAMrL,GAGvC,SAAS8Y,EAAYD,EAAKzQ,EAAQiD,EAAMrL,GAEpC,IAAI+Y,EAASF,EAAIlT,OACbqT,EAAO,IAAI3X,WAAW0X,EAAQ3Q,EAAQiD,GAE1C,OADAgB,EAAO4M,gBAAgBD,GACnBhZ,OACF1J,EAAQyB,SAAS,WACfiI,EAAG,KAAM6Y,KAINA,EAgBX,SAASK,EAAgBL,EAAKzQ,EAAQiD,GAIpC,QAHsB,IAAXjD,IACTA,EAAS,KAENpH,EAAOU,SAASmX,IAAUA,aAAe3X,EAAOG,YACnD,MAAM,IAAIjG,UAAU,iDAStB,OANAsd,EAAatQ,EAAQyQ,EAAItlB,aAEZuH,IAATuQ,IAAoBA,EAAOwN,EAAItlB,OAAS6U,GAE5CuQ,EAAWtN,EAAMjD,EAAQyQ,EAAItlB,QAEtBulB,EAAWD,EAAKzQ,EAAQiD,GApE5BgB,GAAUA,EAAO4M,iBACpBlkB,QAAQ6jB,WAAaA,EACrB7jB,QAAQmkB,eAAiBA,IAEzBnkB,QAAQ6jB,WAAaT,EACrBpjB,QAAQmkB,eAAiBf;;AC3C3B,aAEA,QAAA,YAAA,QAAA,IAAA,QAAA,kBAAA,QAAA,KAAA,QAAA,eACA,QAAA,WAAA,QAAA,KAAA,QAAA,eACA,QAAA,WAAA,QAAA,KAAA,QAAA,eAEA,IAAA,EAAA,QAAA,yBACA,EAAA,OAAA,KAAA,GACA,EAAA,CAAA,OAAA,SAAA,SAAA,SAAA,SAAA,MAAA,UAAA,OAAA,GACA,QAAA,UAAA,WACA,OAAA,GAGA,IAAA,EAAA,QAAA,UACA,QAAA,OAAA,EAAA,OACA,QAAA,WAAA,EAAA,WAEA,IAAA,EAAA,QAAA,qBAEA,QAAA,OAAA,EAAA,OACA,QAAA,aAAA,EAAA,aACA,QAAA,SAAA,EAAA,SACA,QAAA,eAAA,EAAA,eACA,QAAA,SAAA,EAAA,SACA,QAAA,eAAA,EAAA,eACA,QAAA,WAAA,EAAA,WACA,QAAA,iBAAA,EAAA,iBACA,QAAA,WAAA,EAAA,WACA,QAAA,YAAA,EAAA,YAEA,IAAA,EAAA,QAAA,kBAEA,QAAA,mBAAA,EAAA,mBACA,QAAA,yBAAA,EAAA,yBACA,QAAA,iBAAA,EAAA,iBACA,QAAA,oBAAA,EAAA,oBACA,QAAA,cAAA,EAAA,cAEA,IAAA,EAAA,QAAA,mBAEA,QAAA,WAAA,EAAA,WACA,QAAA,KAAA,EAAA,KACA,QAAA,aAAA,EAAA,aACA,QAAA,OAAA,EAAA,OAEA,QAAA,WAAA,QAAA,eAEA,IAAA,EAAA,QAAA,kBAEA,QAAA,cAAA,EAAA,cACA,QAAA,eAAA,EAAA,eACA,QAAA,cAAA,EAAA,cACA,QAAA,eAAA,EAAA,eAeA,IAAA,EAAA,QAAA,cAEA,QAAA,WAAA,EAAA,WACA,QAAA,eAAA,EAAA,eAEA,QAAA,kBAAA,WACA,MAAA,IAAA,MAAA,CACA,kDACA,0BACA,0DACA,KAAA,QAGA,QAAA,UAAA,CACA,0BAAA,EACA,qBAAA,EACA,6BAAA,EACA,0BAAA,EACA,YAAA,EACA,aAAA,EACA,kBAAA,EACA,mBAAA,EACA,eAAA,EACA,uBAAA,EACA,iBAAA,EACA,sBAAA,EACA,4BAAA,EACA,8BAAA,EACA,wBAAA;;ACjFA,aAde,SAAAjiB,EAASijB,GAOtB,IANA,IAEIC,EAFAlhB,GAAK,EACLiF,EAAIgc,EAAQ5lB,OAEZ6jB,EAAI+B,EAAQhc,EAAI,GAChBkc,EAAO,IAEFnhB,EAAIiF,GACXic,EAAIhC,EACJA,EAAI+B,EAAQjhB,GACZmhB,GAAQD,EAAE,GAAKhC,EAAE,GAAKgC,EAAE,GAAKhC,EAAE,GAGjC,OAAOiC,EAAO,EAChB,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA;;ACKA,aAnBe,SAAAnjB,EAASijB,GAUtB,IATA,IAIIC,EAEAE,EANAphB,GAAK,EACLiF,EAAIgc,EAAQ5lB,OACZ6gB,EAAI,EACJ4C,EAAI,EAEJI,EAAI+B,EAAQhc,EAAI,GAEhB+O,EAAI,IAEChU,EAAIiF,GACXic,EAAIhC,EACJA,EAAI+B,EAAQjhB,GACZgU,GAAKoN,EAAIF,EAAE,GAAKhC,EAAE,GAAKA,EAAE,GAAKgC,EAAE,GAChChF,IAAMgF,EAAE,GAAKhC,EAAE,IAAMkC,EACrBtC,IAAMoC,EAAE,GAAKhC,EAAE,IAAMkC,EAGvB,MAAe,CAAClF,GAATlI,GAAK,GAAW8K,EAAI9K,GAC7B,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA;;ACbA,aAFe,SAAAhW,EAASkjB,EAAGhC,EAAGkC,GAC5B,OAAQlC,EAAE,GAAKgC,EAAE,KAAOE,EAAE,GAAKF,EAAE,KAAOhC,EAAE,GAAKgC,EAAE,KAAOE,EAAE,GAAKF,EAAE,IACnE,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA;;AC0CA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,EAhDA,IAAAG,EAAAC,EAAA5Z,QAAA,eAA+B,SAAA4Z,EAAA1iB,GAAAA,OAAAA,GAAAA,EAAA2iB,WAAA3iB,EAAAX,CAAAA,QAAAW,GAE/B,SAAS4iB,EAAmBN,EAAGhC,GAC7B,OAAOgC,EAAE,GAAKhC,EAAE,IAAMgC,EAAE,GAAKhC,EAAE,GAMjC,SAASuC,EAAwBC,GAC/B,IAEc1hB,EAFRiF,EAAIyc,EAAOrmB,OACbsmB,EAAU,CAAC,EAAG,GACdxO,EAAO,EAEX,IAAKnT,EAAI,EAAGA,EAAIiF,IAAKjF,EAAG,CACtB,KAAOmT,EAAO,IAAK,EAAAyO,EAAK,SAACF,EAAOC,EAAQxO,EAAO,IAAKuO,EAAOC,EAAQxO,EAAO,IAAKuO,EAAO1hB,KAAO,KAAKmT,EAClGwO,EAAQxO,KAAUnT,EAGpB,OAAO2hB,EAAQnlB,MAAM,EAAG2W,GAGX,SAAAnV,EAAS0jB,GACtB,IAAKzc,EAAIyc,EAAOrmB,QAAU,EAAG,OAAO,KAEpC,IAAI2E,EACAiF,EACA4c,EAAe,IAAI9hB,MAAMkF,GACzB6c,EAAgB,IAAI/hB,MAAMkF,GAE9B,IAAKjF,EAAI,EAAGA,EAAIiF,IAAKjF,EAAG6hB,EAAa7hB,GAAK,EAAE0hB,EAAO1hB,GAAG,IAAK0hB,EAAO1hB,GAAG,GAAIA,GAEzE,IADA6hB,EAAaE,KAAKP,GACbxhB,EAAI,EAAGA,EAAIiF,IAAKjF,EAAG8hB,EAAc9hB,GAAK,CAAC6hB,EAAa7hB,GAAG,IAAK6hB,EAAa7hB,GAAG,IAEjF,IAAIgiB,EAAeP,EAAwBI,GACvCI,EAAeR,EAAwBK,GAGvCI,EAAWD,EAAa,KAAOD,EAAa,GAC5CG,EAAYF,EAAaA,EAAa5mB,OAAS,KAAO2mB,EAAaA,EAAa3mB,OAAS,GACzF+mB,EAAO,GAIX,IAAKpiB,EAAIgiB,EAAa3mB,OAAS,EAAG2E,GAAK,IAAKA,EAAGoiB,EAAKniB,KAAKyhB,EAAOG,EAAaG,EAAahiB,IAAI,KAC9F,IAAKA,GAAKkiB,EAAUliB,EAAIiiB,EAAa5mB,OAAS8mB,IAAaniB,EAAGoiB,EAAKniB,KAAKyhB,EAAOG,EAAaI,EAAajiB,IAAI,KAE7G,OAAOoiB;;AChCT,aAfe,SAAApkB,EAASijB,EAASoB,GAQ/B,IAPA,IAIIC,EAAIC,EAJJtd,EAAIgc,EAAQ5lB,OACZ8gB,EAAI8E,EAAQhc,EAAI,GAChBiX,EAAImG,EAAM,GAAIvD,EAAIuD,EAAM,GACxBG,EAAKrG,EAAE,GAAIsG,EAAKtG,EAAE,GAElBuG,GAAS,EAEJ1iB,EAAI,EAAGA,EAAIiF,IAAKjF,EACPsiB,GAAhBnG,EAAI8E,EAAQjhB,IAAW,IAAIuiB,EAAKpG,EAAE,IACvB2C,GAAQ2D,EAAK3D,GAAQ5C,GAAKsG,EAAKF,IAAOxD,EAAIyD,IAAOE,EAAKF,GAAMD,IAAKI,GAAUA,GACtFF,EAAKF,EAAIG,EAAKF,EAGhB,OAAOG,EACT,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA;;ACOA,aAtBe,SAAA1kB,EAASijB,GAUtB,IATA,IAGI0B,EACAC,EAJA5iB,GAAK,EACLiF,EAAIgc,EAAQ5lB,OACZ6jB,EAAI+B,EAAQhc,EAAI,GAGhB4d,EAAK3D,EAAE,GACP4D,EAAK5D,EAAE,GACP6D,EAAY,IAEP/iB,EAAIiF,GACX0d,EAAKE,EACLD,EAAKE,EAILH,GAFAE,GADA3D,EAAI+B,EAAQjhB,IACL,GAGP4iB,GAFAE,EAAK5D,EAAE,GAGP6D,GAAarnB,KAAKsnB,MAAML,EAAIC,GAG9B,OAAOG,EACT,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA;;AClBqD,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,OAAA,eAAA,QAAA,cAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,WAAA,OAAA,eAAA,QAAA,kBAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,WAAA,OAAA,eAAA,QAAA,kBAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,WAAA,OAAA,eAAA,QAAA,cAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,WAAA,OAAA,eAAA,QAAA,gBAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,WAJrD,IAAAE,EAAA3B,EAAA5Z,QAAA,cACAwb,EAAA5B,EAAA5Z,QAAA,kBACAyb,EAAA7B,EAAA5Z,QAAA,cACA0b,EAAA9B,EAAA5Z,QAAA,kBACAgI,EAAA4R,EAAA5Z,QAAA,gBAAqD,SAAA4Z,EAAA1iB,GAAAA,OAAAA,GAAAA,EAAA2iB,WAAA3iB,EAAAX,CAAAA,QAAAW;;;;;;;;AC8iCrD,IAAA,EAAA,EAAA,UAAA,GAAA,EAAA,8FAAA,EAAA,QAAA,WAAA,EAAA,gFAAA,EAAA,QAAA,UAAA,OAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,KAAA,EAAA,QAAA,UAAA,EAljCA,IAAAykB,EAAA3b,QAAA,2BACAA,QAAA,oCACA,IAAA4b,EAAAhC,EAAA5Z,QAAA,eACA6b,EAAA7b,QAAA,oBACA8b,EAAAlC,EAAA5Z,QAAA,SACA+b,EAAAnC,EAAA5Z,QAAA,OACAgc,EAAApC,EAAA5Z,QAAA,WACAic,EAAAC,EAAAlc,QAAA,eAAwC,SAAAmc,EAAAjlB,GAAAklB,GAAAA,mBAAAA,QAAAxH,OAAAA,KAAAA,IAAAA,EAAAwH,IAAAA,QAAAhG,EAAAgG,IAAAA,QAAAD,OAAAA,EAAAA,SAAAjlB,GAAAA,OAAAA,EAAAkf,EAAAxB,IAAA1d,GAAA,SAAAglB,EAAAhlB,EAAA0d,GAAAA,IAAAA,GAAA1d,GAAAA,EAAA2iB,WAAA3iB,OAAAA,EAAAA,GAAAA,OAAAA,GAAAA,iBAAAA,GAAAA,mBAAAA,EAAAX,MAAAA,CAAAA,QAAAW,GAAAkf,IAAAA,EAAA+F,EAAAvH,GAAAwB,GAAAA,GAAAA,EAAAiG,IAAAnlB,GAAAkf,OAAAA,EAAAvX,IAAA3H,GAAAqG,IAAAA,EAAA+e,CAAAA,UAAA9C,MAAAA,EAAA/e,OAAAkE,gBAAAlE,OAAA8hB,yBAAAC,IAAAA,IAAAA,KAAAtlB,EAAAslB,GAAAA,YAAAA,GAAAC,GAAAA,eAAAtlB,KAAAD,EAAAslB,GAAAlkB,CAAAA,IAAAA,EAAAkhB,EAAA/e,OAAA8hB,yBAAArlB,EAAAslB,GAAAlkB,KAAAA,IAAAA,EAAAuG,KAAAvG,EAAAwG,KAAArE,OAAAkE,eAAApB,EAAAif,EAAAlkB,GAAAiF,EAAAif,GAAAtlB,EAAAslB,GAAAjf,OAAAA,EAAAhH,QAAAW,EAAAkf,GAAAA,EAAAtX,IAAA5H,EAAAqG,GAAAA,EAAA,SAAAqc,EAAA1iB,GAAAA,OAAAA,GAAAA,EAAA2iB,WAAA3iB,EAAAX,CAAAA,QAAAW,GAExC,SAASwlB,IACPA,EAAsB,WACpB,OAAOvnB,GAET,IAAIA,EAAU,GACZwnB,EAAKliB,OAAOjC,UACZokB,EAASD,EAAGF,eACZI,EAAU,mBAAqBlW,OAASA,OAAS,GACjDmW,EAAiBD,EAAQE,UAAY,aACrCC,EAAsBH,EAAQI,eAAiB,kBAC/CC,EAAoBL,EAAQM,aAAe,gBAC7C,SAASrP,EAAOjM,EAAKlC,EAAK7E,GACxB,OAAOL,OAAOkE,eAAekD,EAAKlC,EAAK,CACrC7E,MAAOA,EACP8D,YAAY,EACZwe,cAAc,EACd/Y,UAAU,IACRxC,EAAIlC,GAEV,IACEmO,EAAO,GAAI,IACX,MAAO7P,GACP6P,EAAS,SAAUjM,EAAKlC,EAAK7E,GAC3B,OAAO+G,EAAIlC,GAAO7E,GAGtB,SAASuiB,EAAKC,EAASC,EAAS/b,EAAMgc,GACpC,IAAIC,EAAiBF,GAAWA,EAAQ/kB,qBAAqBklB,EAAYH,EAAUG,EACjFC,EAAYljB,OAAOwB,OAAOwhB,EAAejlB,WACzC+G,EAAU,IAAIqe,EAAQJ,GAAe,IACvC,OAAOG,EAAUE,QAAU,SAAUP,EAAS9b,EAAMjC,GAClD,IAAI1C,EAAQ,iBACZ,OAAO,SAAUihB,EAAQrf,GACvB,GAAI,cAAgB5B,EAAO,MAAM,IAAIhG,MAAM,gCAC3C,GAAI,cAAgBgG,EAAO,CACzB,GAAI,UAAYihB,EAAQ,MAAMrf,EAC9B,OAAOsf,IAET,IAAKxe,EAAQue,OAASA,EAAQve,EAAQd,IAAMA,IAAO,CACjD,IAAIuf,EAAWze,EAAQye,SACvB,GAAIA,EAAU,CACZ,IAAIC,EAAiBC,EAAoBF,EAAUze,GACnD,GAAI0e,EAAgB,CAClB,GAAIA,IAAmBE,EAAkB,SACzC,OAAOF,GAGX,GAAI,SAAW1e,EAAQue,OAAQve,EAAQ6e,KAAO7e,EAAQ8e,MAAQ9e,EAAQd,SAAS,GAAI,UAAYc,EAAQue,OAAQ,CAC7G,GAAI,mBAAqBjhB,EAAO,MAAMA,EAAQ,YAAa0C,EAAQd,IACnEc,EAAQ+e,kBAAkB/e,EAAQd,SAC7B,WAAac,EAAQue,QAAUve,EAAQgf,OAAO,SAAUhf,EAAQd,KACvE5B,EAAQ,YACR,IAAI2hB,EAASC,EAASnB,EAAS9b,EAAMjC,GACrC,GAAI,WAAaif,EAAO5iB,KAAM,CAC5B,GAAIiB,EAAQ0C,EAAQ6Y,KAAO,YAAc,iBAAkBoG,EAAO/f,MAAQ0f,EAAkB,SAC5F,MAAO,CACLrjB,MAAO0jB,EAAO/f,IACd2Z,KAAM7Y,EAAQ6Y,MAGlB,UAAYoG,EAAO5iB,OAASiB,EAAQ,YAAa0C,EAAQue,OAAS,QAASve,EAAQd,IAAM+f,EAAO/f,OA9B3E,CAiCzB6e,EAAS9b,EAAMjC,GAAUoe,EAE7B,SAASc,EAASC,EAAI7c,EAAKpD,GACzB,IACE,MAAO,CACL7C,KAAM,SACN6C,IAAKigB,EAAGvnB,KAAK0K,EAAKpD,IAEpB,MAAOR,GACP,MAAO,CACLrC,KAAM,QACN6C,IAAKR,IAIX9I,EAAQkoB,KAAOA,EACf,IAAIc,EAAmB,GACvB,SAAST,KACT,SAASiB,KACT,SAASC,KACT,IAAIC,EAAoB,GACxB/Q,EAAO+Q,EAAmB/B,EAAgB,WACxC,OAAO,OAET,IAAIgC,EAAWrkB,OAAOuE,eACpB+f,EAA0BD,GAAYA,EAASA,EAASE,EAAO,MACjED,GAA2BA,IAA4BpC,GAAMC,EAAOzlB,KAAK4nB,EAAyBjC,KAAoB+B,EAAoBE,GAC1I,IAAIE,EAAKL,EAA2BpmB,UAAYklB,EAAUllB,UAAYiC,OAAOwB,OAAO4iB,GACpF,SAASK,EAAsB1mB,GAC7B,CAAC,OAAQ,QAAS,UAAU2f,QAAQ,SAAU2F,GAC5ChQ,EAAOtV,EAAWslB,EAAQ,SAAUrf,GAClC,OAAO,KAAKof,QAAQC,EAAQrf,OAIlC,SAAS0gB,EAAcxB,EAAWyB,GAkBhC,IAAIC,EACJ,KAAKxB,QAAU,SAAUC,EAAQrf,GAC/B,SAAS6gB,IACP,OAAO,IAAIF,EAAY,SAAUthB,EAASC,IApB9C,SAASwhB,EAAOzB,EAAQrf,EAAKX,EAASC,GACpC,IAAIygB,EAASC,EAASd,EAAUG,GAASH,EAAWlf,GACpD,GAAI,UAAY+f,EAAO5iB,KAAM,CAC3B,IAAI3F,EAASuoB,EAAO/f,IAClB3D,EAAQ7E,EAAO6E,MACjB,OAAOA,GAAS,iBAAmBA,GAAS8hB,EAAOzlB,KAAK2D,EAAO,WAAaskB,EAAYthB,QAAQhD,EAAM0kB,SAAStS,KAAK,SAAUpS,GAC5HykB,EAAO,OAAQzkB,EAAOgD,EAASC,IAC9B,SAAUE,GACXshB,EAAO,QAASthB,EAAKH,EAASC,KAC3BqhB,EAAYthB,QAAQhD,GAAOoS,KAAK,SAAUuS,GAC7CxpB,EAAO6E,MAAQ2kB,EAAW3hB,EAAQ7H,IACjC,SAAUmJ,GACX,OAAOmgB,EAAO,QAASngB,EAAOtB,EAASC,KAG3CA,EAAOygB,EAAO/f,KAMV8gB,CAAOzB,EAAQrf,EAAKX,EAASC,KAGjC,OAAOshB,EAAkBA,EAAkBA,EAAgBnS,KAAKoS,EAA4BA,GAA8BA,KAG9H,SAASpB,EAAoBF,EAAUze,GACrC,IAAIue,EAASE,EAASjB,SAASxd,EAAQue,QACvC,QAAI5iB,IAAc4iB,EAAQ,CACxB,GAAIve,EAAQye,SAAW,KAAM,UAAYze,EAAQue,OAAQ,CACvD,GAAIE,EAASjB,SAAS2C,SAAWngB,EAAQue,OAAS,SAAUve,EAAQd,SAAMvD,EAAWgjB,EAAoBF,EAAUze,GAAU,UAAYA,EAAQue,QAAS,OAAOK,EACjK5e,EAAQue,OAAS,QAASve,EAAQd,IAAM,IAAIjD,UAAU,kDAExD,OAAO2iB,EAET,IAAIK,EAASC,EAASX,EAAQE,EAASjB,SAAUxd,EAAQd,KACzD,GAAI,UAAY+f,EAAO5iB,KAAM,OAAO2D,EAAQue,OAAS,QAASve,EAAQd,IAAM+f,EAAO/f,IAAKc,EAAQye,SAAW,KAAMG,EACjH,IAAIwB,EAAOnB,EAAO/f,IAClB,OAAOkhB,EAAOA,EAAKvH,MAAQ7Y,EAAQye,EAAS4B,YAAcD,EAAK7kB,MAAOyE,EAAQtK,KAAO+oB,EAAS6B,QAAS,WAAatgB,EAAQue,SAAWve,EAAQue,OAAS,OAAQve,EAAQd,SAAMvD,GAAYqE,EAAQye,SAAW,KAAMG,GAAoBwB,GAAQpgB,EAAQue,OAAS,QAASve,EAAQd,IAAM,IAAIjD,UAAU,oCAAqC+D,EAAQye,SAAW,KAAMG,GAErW,SAAS2B,EAAaC,GACpB,IAAIvf,EAAQ,CACVwf,OAAQD,EAAK,IAEf,KAAKA,IAASvf,EAAMyf,SAAWF,EAAK,IAAK,KAAKA,IAASvf,EAAM0f,WAAaH,EAAK,GAAIvf,EAAM2f,SAAWJ,EAAK,IAAK,KAAKK,WAAW7nB,KAAKiI,GAErI,SAAS6f,EAAc7f,GACrB,IAAIge,EAAShe,EAAM8f,YAAc,GACjC9B,EAAO5iB,KAAO,gBAAiB4iB,EAAO/f,IAAK+B,EAAM8f,WAAa9B,EAEhE,SAASZ,EAAQJ,GACf,KAAK4C,WAAa,CAAC,CACjBJ,OAAQ,SACNxC,EAAYrF,QAAQ2H,EAAc,MAAO,KAAKS,OAAM,GAE1D,SAASvB,EAAOwB,GACd,GAAIA,EAAU,CACZ,IAAIC,EAAiBD,EAAS1D,GAC9B,GAAI2D,EAAgB,OAAOA,EAAetpB,KAAKqpB,GAC/C,GAAI,mBAAqBA,EAASvrB,KAAM,OAAOurB,EAC/C,IAAK3lB,MAAM2lB,EAAS7sB,QAAS,CAC3B,IAAI2E,GAAK,EACPrD,EAAO,SAASA,IACd,OAASqD,EAAIkoB,EAAS7sB,QAAS,GAAIipB,EAAOzlB,KAAKqpB,EAAUloB,GAAI,OAAOrD,EAAK6F,MAAQ0lB,EAASloB,GAAIrD,EAAKmjB,MAAO,EAAInjB,EAC9G,OAAOA,EAAK6F,WAAQI,EAAWjG,EAAKmjB,MAAO,EAAInjB,GAEnD,OAAOA,EAAKA,KAAOA,GAGvB,MAAO,CACLA,KAAM8oB,GAGV,SAASA,IACP,MAAO,CACLjjB,WAAOI,EACPkd,MAAM,GAGV,OAAOuG,EAAkBnmB,UAAYomB,EAA4B9Q,EAAOmR,EAAI,cAAeL,GAA6B9Q,EAAO8Q,EAA4B,cAAeD,GAAoBA,EAAkB+B,YAAc5S,EAAO8Q,EAA4B1B,EAAmB,qBAAsB/nB,EAAQwrB,oBAAsB,SAAUC,GAChV,IAAIC,EAAO,mBAAqBD,GAAUA,EAAOE,YACjD,QAASD,IAASA,IAASlC,GAAqB,uBAAyBkC,EAAKH,aAAeG,EAAKpnB,QACjGtE,EAAQ4rB,KAAO,SAAUH,GAC1B,OAAOnmB,OAAOumB,eAAiBvmB,OAAOumB,eAAeJ,EAAQhC,IAA+BgC,EAAOtE,UAAYsC,EAA4B9Q,EAAO8S,EAAQ1D,EAAmB,sBAAuB0D,EAAOpoB,UAAYiC,OAAOwB,OAAOgjB,GAAK2B,GACzOzrB,EAAQ8rB,MAAQ,SAAUxiB,GAC3B,MAAO,CACL+gB,QAAS/gB,IAEVygB,EAAsBC,EAAc3mB,WAAYsV,EAAOqR,EAAc3mB,UAAWwkB,EAAqB,WACtG,OAAO,OACL7nB,EAAQgqB,cAAgBA,EAAehqB,EAAQ+rB,MAAQ,SAAU5D,EAASC,EAAS/b,EAAMgc,EAAa4B,QACxG,IAAWA,IAAgBA,EAAcvhB,SACzC,IAAIsjB,EAAO,IAAIhC,EAAc9B,EAAKC,EAASC,EAAS/b,EAAMgc,GAAc4B,GACxE,OAAOjqB,EAAQwrB,oBAAoBpD,GAAW4D,EAAOA,EAAKlsB,OAAOiY,KAAK,SAAUjX,GAC9E,OAAOA,EAAOmiB,KAAOniB,EAAO6E,MAAQqmB,EAAKlsB,UAE1CiqB,EAAsBD,GAAKnR,EAAOmR,EAAI/B,EAAmB,aAAcpP,EAAOmR,EAAInC,EAAgB,WACnG,OAAO,OACLhP,EAAOmR,EAAI,WAAY,WACzB,MAAO,uBACL9pB,EAAQyK,KAAO,SAAUiH,GAC3B,IAAIjH,EAAO,GACX,IAAK,IAAID,KAAOkH,EAAQjH,EAAKrH,KAAKoH,GAClC,OAAOC,EAAKwhB,UAAW,SAASnsB,IAC9B,KAAO2K,EAAKjM,QAAS,CACnB,IAAIgM,EAAMC,EAAKjC,MACf,GAAIgC,KAAOkH,EAAQ,OAAO5R,EAAK6F,MAAQ6E,EAAK1K,EAAKmjB,MAAO,EAAInjB,EAE9D,OAAOA,EAAKmjB,MAAO,EAAInjB,IAExBE,EAAQ6pB,OAASA,EAAQpB,EAAQplB,UAAY,CAC9CsoB,YAAalD,EACb2C,MAAO,SAAUc,GACf,GAAI,KAAKrsB,KAAO,EAAG,KAAKC,KAAO,EAAG,KAAKmpB,KAAO,KAAKC,WAAQnjB,EAAW,KAAKkd,MAAO,EAAI,KAAK4F,SAAW,KAAM,KAAKF,OAAS,OAAQ,KAAKrf,SAAMvD,EAAW,KAAKklB,WAAWjI,QAAQkI,IAAiBgB,EAAe,IAAK,IAAI5nB,KAAQ,KAAM,MAAQA,EAAK6nB,OAAO,IAAM1E,EAAOzlB,KAAK,KAAMsC,KAAUoB,OAAOpB,EAAK3E,MAAM,MAAQ,KAAK2E,QAAQyB,IAEtUqmB,KAAM,WACJ,KAAKnJ,MAAO,EACZ,IAAIoJ,EAAa,KAAKpB,WAAW,GAAGE,WACpC,GAAI,UAAYkB,EAAW5lB,KAAM,MAAM4lB,EAAW/iB,IAClD,OAAO,KAAKgjB,MAEdnD,kBAAmB,SAAUoD,GAC3B,GAAI,KAAKtJ,KAAM,MAAMsJ,EACrB,IAAIniB,EAAU,KACd,SAASoiB,EAAOC,EAAKC,GACnB,OAAOrD,EAAO5iB,KAAO,QAAS4iB,EAAO/f,IAAMijB,EAAWniB,EAAQtK,KAAO2sB,EAAKC,IAAWtiB,EAAQue,OAAS,OAAQve,EAAQd,SAAMvD,KAAc2mB,EAE5I,IAAK,IAAIvpB,EAAI,KAAK8nB,WAAWzsB,OAAS,EAAG2E,GAAK,IAAKA,EAAG,CACpD,IAAIkI,EAAQ,KAAK4f,WAAW9nB,GAC1BkmB,EAAShe,EAAM8f,WACjB,GAAI,SAAW9f,EAAMwf,OAAQ,OAAO2B,EAAO,OAC3C,GAAInhB,EAAMwf,QAAU,KAAKhrB,KAAM,CAC7B,IAAI8sB,EAAWlF,EAAOzlB,KAAKqJ,EAAO,YAChCuhB,EAAanF,EAAOzlB,KAAKqJ,EAAO,cAClC,GAAIshB,GAAYC,EAAY,CAC1B,GAAI,KAAK/sB,KAAOwL,EAAMyf,SAAU,OAAO0B,EAAOnhB,EAAMyf,UAAU,GAC9D,GAAI,KAAKjrB,KAAOwL,EAAM0f,WAAY,OAAOyB,EAAOnhB,EAAM0f,iBACjD,GAAI4B,GACT,GAAI,KAAK9sB,KAAOwL,EAAMyf,SAAU,OAAO0B,EAAOnhB,EAAMyf,UAAU,OACzD,CACL,IAAK8B,EAAY,MAAM,IAAIlrB,MAAM,0CACjC,GAAI,KAAK7B,KAAOwL,EAAM0f,WAAY,OAAOyB,EAAOnhB,EAAM0f,gBAK9D3B,OAAQ,SAAU3iB,EAAM6C,GACtB,IAAK,IAAInG,EAAI,KAAK8nB,WAAWzsB,OAAS,EAAG2E,GAAK,IAAKA,EAAG,CACpD,IAAIkI,EAAQ,KAAK4f,WAAW9nB,GAC5B,GAAIkI,EAAMwf,QAAU,KAAKhrB,MAAQ4nB,EAAOzlB,KAAKqJ,EAAO,eAAiB,KAAKxL,KAAOwL,EAAM0f,WAAY,CACjG,IAAI8B,EAAexhB,EACnB,OAGJwhB,IAAiB,UAAYpmB,GAAQ,aAAeA,IAASomB,EAAahC,QAAUvhB,GAAOA,GAAOujB,EAAa9B,aAAe8B,EAAe,MAC7I,IAAIxD,EAASwD,EAAeA,EAAa1B,WAAa,GACtD,OAAO9B,EAAO5iB,KAAOA,EAAM4iB,EAAO/f,IAAMA,EAAKujB,GAAgB,KAAKlE,OAAS,OAAQ,KAAK7oB,KAAO+sB,EAAa9B,WAAY/B,GAAoB,KAAK8D,SAASzD,IAE5JyD,SAAU,SAAUzD,EAAQ2B,GAC1B,GAAI,UAAY3B,EAAO5iB,KAAM,MAAM4iB,EAAO/f,IAC1C,MAAO,UAAY+f,EAAO5iB,MAAQ,aAAe4iB,EAAO5iB,KAAO,KAAK3G,KAAOupB,EAAO/f,IAAM,WAAa+f,EAAO5iB,MAAQ,KAAK6lB,KAAO,KAAKhjB,IAAM+f,EAAO/f,IAAK,KAAKqf,OAAS,SAAU,KAAK7oB,KAAO,OAAS,WAAaupB,EAAO5iB,MAAQukB,IAAa,KAAKlrB,KAAOkrB,GAAWhC,GAEtQ1d,OAAQ,SAAUyf,GAChB,IAAK,IAAI5nB,EAAI,KAAK8nB,WAAWzsB,OAAS,EAAG2E,GAAK,IAAKA,EAAG,CACpD,IAAIkI,EAAQ,KAAK4f,WAAW9nB,GAC5B,GAAIkI,EAAM0f,aAAeA,EAAY,OAAO,KAAK+B,SAASzhB,EAAM8f,WAAY9f,EAAM2f,UAAWE,EAAc7f,GAAQ2d,IAGvHhR,MAAO,SAAU6S,GACf,IAAK,IAAI1nB,EAAI,KAAK8nB,WAAWzsB,OAAS,EAAG2E,GAAK,IAAKA,EAAG,CACpD,IAAIkI,EAAQ,KAAK4f,WAAW9nB,GAC5B,GAAIkI,EAAMwf,SAAWA,EAAQ,CAC3B,IAAIxB,EAAShe,EAAM8f,WACnB,GAAI,UAAY9B,EAAO5iB,KAAM,CAC3B,IAAIsmB,EAAS1D,EAAO/f,IACpB4hB,EAAc7f,GAEhB,OAAO0hB,GAGX,MAAM,IAAIrrB,MAAM,0BAElBsrB,cAAe,SAAU3B,EAAUZ,EAAYC,GAC7C,OAAO,KAAK7B,SAAW,CACrBjB,SAAUiC,EAAOwB,GACjBZ,WAAYA,EACZC,QAASA,GACR,SAAW,KAAK/B,SAAW,KAAKrf,SAAMvD,GAAYijB,IAEtDhpB,EAEL,SAASitB,EAAmBC,EAAKvkB,EAASC,EAAQukB,EAAOC,EAAQ5iB,EAAKlB,GACpE,IACE,IAAIkhB,EAAO0C,EAAI1iB,GAAKlB,GAChB3D,EAAQ6kB,EAAK7kB,MACjB,MAAOsE,GAEP,YADArB,EAAOqB,GAGLugB,EAAKvH,KACPta,EAAQhD,GAER+C,QAAQC,QAAQhD,GAAOoS,KAAKoV,EAAOC,GAGvC,SAASC,EAAkB9D,GACzB,OAAO,WACL,IAAIld,EAAO,KACTpJ,EAAOxD,UACT,OAAO,IAAIiJ,QAAQ,SAAUC,EAASC,GACpC,IAAIskB,EAAM3D,EAAGjmB,MAAM+I,EAAMpJ,GACzB,SAASkqB,EAAMxnB,GACbsnB,EAAmBC,EAAKvkB,EAASC,EAAQukB,EAAOC,EAAQ,OAAQznB,GAElE,SAASynB,EAAOtkB,GACdmkB,EAAmBC,EAAKvkB,EAASC,EAAQukB,EAAOC,EAAQ,QAAStkB,GAEnEqkB,OAAMpnB,MAIZ,SAASunB,EAAgBC,EAAUC,GACjC,KAAMD,aAAoBC,GACxB,MAAM,IAAInnB,UAAU,qCAGxB,SAASonB,EAAkBzoB,EAAQ0oB,GACjC,IAAK,IAAIvqB,EAAI,EAAGA,EAAIuqB,EAAMlvB,OAAQ2E,IAAK,CACrC,IAAIwqB,EAAaD,EAAMvqB,GACvBwqB,EAAWlkB,WAAakkB,EAAWlkB,aAAc,EACjDkkB,EAAW1F,cAAe,EACtB,UAAW0F,IAAYA,EAAWze,UAAW,GACjD5J,OAAOkE,eAAexE,EAAQ2oB,EAAWnjB,IAAKmjB,IAGlD,SAASC,EAAaJ,EAAaK,EAAYC,GAM7C,OALID,GAAYJ,EAAkBD,EAAYnqB,UAAWwqB,GACrDC,GAAaL,EAAkBD,EAAaM,GAChDxoB,OAAOkE,eAAegkB,EAAa,YAAa,CAC9Cte,UAAU,IAELse,EAET,SAASO,EAAgBrhB,EAAKlC,EAAK7E,GAWjC,OAVI6E,KAAOkC,EACTpH,OAAOkE,eAAekD,EAAKlC,EAAK,CAC9B7E,MAAOA,EACP8D,YAAY,EACZwe,cAAc,EACd/Y,UAAU,IAGZxC,EAAIlC,GAAO7E,EAEN+G,EAET,SAASshB,EAAmB7lB,GAC1B,OAAO8lB,EAAmB9lB,IAAQ+lB,EAAiB/lB,IAAQgmB,EAA4BhmB,IAAQimB,IAEjG,SAASH,EAAmB9lB,GAC1B,GAAIjF,MAAMmrB,QAAQlmB,GAAM,OAAOmmB,EAAkBnmB,GAEnD,SAAS+lB,EAAiBlC,GACxB,GAAsB,oBAAXxa,QAAmD,MAAzBwa,EAAKxa,OAAOoW,WAA2C,MAAtBoE,EAAK,cAAuB,OAAO9oB,MAAMsJ,KAAKwf,GAEtH,SAASmC,EAA4BI,EAAGC,GACtC,GAAKD,EAAL,CACA,GAAiB,iBAANA,EAAgB,OAAOD,EAAkBC,EAAGC,GACvD,IAAIpmB,EAAI9C,OAAOjC,UAAUhF,SAAS2D,KAAKusB,GAAG5uB,MAAM,GAAI,GAEpD,MADU,WAANyI,GAAkBmmB,EAAE5C,cAAavjB,EAAImmB,EAAE5C,YAAYrnB,MAC7C,QAAN8D,GAAqB,QAANA,EAAoBlF,MAAMsJ,KAAK+hB,GACxC,cAANnmB,GAAqB,2CAA2CqmB,KAAKrmB,GAAWkmB,EAAkBC,EAAGC,QAAzG,GAEF,SAASF,EAAkBnmB,EAAK5J,IACnB,MAAPA,GAAeA,EAAM4J,EAAI3J,UAAQD,EAAM4J,EAAI3J,QAC/C,IAAK,IAAI2E,EAAI,EAAGurB,EAAO,IAAIxrB,MAAM3E,GAAM4E,EAAI5E,EAAK4E,IAAKurB,EAAKvrB,GAAKgF,EAAIhF,GACnE,OAAOurB,EAET,SAASN,IACP,MAAM,IAAI/nB,UAAU,wIAGtB,IAAIsoB,EAAuC,oBAAfC,WAA6BA,WAA+B,oBAAXxiB,OAAyBA,YAA2B,IAAXD,EAAyBA,EAAyB,oBAATE,KAAuBA,KAAO,GAE7L,SAASwiB,EAAqBtF,EAAI/nB,GACjC,OAAiC+nB,EAA1B/nB,EAAS,CAAExB,QAAS,IAAiBwB,EAAOxB,SAAUwB,EAAOxB,QAGrE,IAAI8uB,EAAWD,EAAqB,SAASrtB,EAAOxB,GAAS,IAAU+uB,EAAKC,EAALD,EAMjDJ,EANsDK,EAMvC,WAAW,IAAsBC,EAAlBC,GAAkBD,EAA6B,oBAAXE,UAAwBA,SAASC,cAAcD,SAASC,cAAcC,SAAItpB,OAAiC,IAAbupB,IAAyBL,EAAWA,GAAYK,GAAkB,SAASJ,GAAc,IAA6CK,EAAoBC,EAA7DC,OAAmB,KAAjCP,EAAGA,GAAI,IAAsCA,EAAG,GAA8CO,EAAc,MAAE,IAAI/mB,QAAQ,SAASC,EAAQC,GAAQ2mB,EAAoB5mB,EAAQ6mB,EAAmB5mB,IAAU,IAA2B4B,EAAvBklB,EAAgB,GAAW,IAAIllB,KAAOilB,EAAWA,EAAOnI,eAAe9c,KAAMklB,EAAgBllB,GAAKilB,EAAOjlB,IAAO,IAAgImlB,EAA5HC,EAAY,iBAAqBC,GAAmB,EAAUC,GAAsB,EAAUC,GAAoB,EAAqCF,EAAmC,iBAATzjB,OAAkB0jB,EAA6C,mBAAhBE,cAA2BD,EAAqC,iBAAVxuB,GAA8C,iBAAnBA,EAAQoC,UAAoD,iBAAxBpC,EAAQoC,SAASssB,KAAgBN,GAAsBE,IAAqBE,IAAsBD,EAAsB,IAA8JI,EAAMC,EAAUC,EAAeC,EAAWC,EAApMC,EAAgB,GAAgMR,GAA+CQ,EAAvBT,EAAuCU,EAAI,QAACC,QAAQF,GAAiB,IAA2BG,EAAU,IAAKR,EAAM,SAAoBS,EAASC,GAAQ,IAAInoB,EAAIooB,GAAkBF,GAAU,OAAGloB,EAAYmoB,EAAOnoB,EAAIA,EAAIpK,YAAgBgyB,IAAOA,EAAOS,EAAE,SAAKR,IAASA,EAASE,EAAI,SAACG,EAASL,EAAoB,UAAEK,GAAiBN,EAAqB,aAAEM,EAASC,EAAO,KAAK,UAAUR,EAAW,SAAoBO,GAAU,IAAIloB,EAAIynB,EAAMS,GAAS,GAAkE,OAAxDloB,EAAImI,SAAQnI,EAAI,IAAI6D,WAAW7D,IAAMsoB,EAAOtoB,EAAImI,QAAenI,GAASlH,EAAc,KAAE/C,OAAO,IAAGoxB,EAAYruB,EAAc,KAAE,GAAG5C,QAAQ,MAAM,MAAM4C,EAAc,KAAE5B,MAAM,GAAG4B,EAAY,GAAE,oBAAoB,SAASyvB,GAAI,KAAKA,aAAcC,IAAa,MAAMD,IAAOzvB,EAAY,GAAE,qBAAqB2vB,IAAOzB,EAAgB,QAAE,WAAW,MAAO,+BAAwCE,GAAsC,oBAANwB,OAAmBjB,EAAM,SAAoBkB,GAAG,IAAIje,EAAK0d,GAAkBO,GAAG,OAAGje,EAAake,GAAiBle,GAAcge,KAAKC,KAAMhB,EAAW,SAAoBgB,GAAG,IAAIje,EAA+B,OAA1BA,EAAK0d,GAAkBO,IAAmBje,EAA6B,mBAAbme,WAAgC,IAAIhlB,WAAWglB,WAAWF,KAA2BL,EAAqB,iBAA3C5d,EAAKge,KAAKC,EAAE,YAAgDje,IAA6B,oBAAZoe,YAAyBA,WAA8B,oBAARC,QAAyC,oBAAVryB,UAAsBA,QAAQ,IAAGA,QAAQsyB,IAAID,MAAMryB,QAAQC,KAAKD,QAAQ8K,MAAwB,oBAAXynB,SAAuBA,SAASF,SAAgB3B,GAAoBC,KAA0BA,EAAuBS,EAAgBlkB,KAAKslB,SAASC,KAAczC,SAASC,gBAAemB,EAAgBpB,SAASC,cAAcC,KAAQJ,IAAYsB,EAAgBtB,GAAqDsB,EAAH,IAAnCA,EAAgB7xB,QAAQ,SAA8B6xB,EAAgBsB,OAAO,EAAEtB,EAAgBuB,YAAY,KAAK,GAA0B,GAAK5B,EAAM,SAAoB6B,GAAK,IAAI,IAAIC,EAAI,IAAIC,eAA0D,OAAzCD,EAAIE,KAAK,MAAMH,GAAI,GAAOC,EAAIG,KAAK,MAAaH,EAAII,aAAoBtpB,MAAAA,GAAK,IAAIqK,EAAK0d,GAAkBkB,GAAK,GAAG5e,EAAM,OAAOke,GAAiBle,GAAO,MAAMrK,IAAUgnB,IAAuBM,EAAW,SAAoB2B,GAAK,IAAI,IAAIC,EAAI,IAAIC,eAAyF,OAAxED,EAAIE,KAAK,MAAMH,GAAI,GAAOC,EAAIK,aAAa,cAAcL,EAAIG,KAAK,MAAa,IAAI7lB,WAAW0lB,EAAIM,UAAiBxpB,MAAAA,GAAK,IAAIqK,EAAK0d,GAAkBkB,GAAK,GAAG5e,EAAM,OAAOA,EAAM,MAAMrK,KAAQqnB,EAAU,SAAmB4B,EAAIQ,EAAOC,GAAS,IAAIR,EAAI,IAAIC,eAAiBD,EAAIE,KAAK,MAAMH,GAAI,GAAMC,EAAIK,aAAa,cAAcL,EAAIO,OAAO,WAAsB,GAAe,KAAZP,EAAIS,QAAyB,GAAZT,EAAIS,QAAWT,EAAIM,SAAUC,EAAOP,EAAIM,cAA5D,CAA8E,IAAInf,EAAK0d,GAAkBkB,GAAQ5e,EAAMof,EAAOpf,EAAKvC,QAAgB4hB,MAAYR,EAAIQ,QAAQA,EAAQR,EAAIG,KAAK,QAAe,IAAI7gB,EAAIme,EAAc,OAAGtwB,QAAQsyB,IAAI7pB,KAAKzI,SAAa2J,EAAI2mB,EAAiB,UAAGtwB,QAAQC,KAAKwI,KAAKzI,SAAS,IAAIqL,KAAOklB,EAAoBA,EAAgBpI,eAAe9c,KAAMilB,EAAOjlB,GAAKklB,EAAgBllB,IAAOklB,EAAgB,KAAQD,EAAkB,WAAEA,EAAkB,UAAKA,EAAoB,cAAEG,EAAYH,EAAoB,aAAKA,EAAa,MAAEA,EAAa,KAAE,IAAuXiD,EAAsMC,EAAzjBC,EAAY,GAAqXnD,EAAmB,aAAEiD,EAAWjD,EAAmB,YAAKA,EAAsB,eAAEA,EAAsB,cAA0B,iBAAdoD,aAAwB3B,GAAM,mCAAmD,IAAI4B,EAAU,IAAID,YAAYE,MAAM,CAAC,QAAU,KAAK,QAAU,KAAO,QAAU,YAAgBC,GAAM,EAAM,SAASjC,EAAOkC,EAAUC,GAAUD,GAAW/B,GAAM,qBAAqBgC,GAAwG,IAAIC,EAAiC,oBAAdC,YAA0B,IAAIA,YAAY,aAAQrtB,EAAU,SAASstB,EAAkBC,EAAKC,EAAIC,GAA6D,IAA7C,IAAIC,EAAOF,EAAIC,EAAmBE,EAAOH,EAAUD,EAAKI,MAAWA,GAAQD,MAAUC,EAAO,GAAGA,EAAOH,EAAI,IAAID,EAAKK,UAAUR,EAAa,OAAOA,EAAY3V,OAAO8V,EAAKK,SAASJ,EAAIG,IAA2B,IAAX,IAAIE,EAAI,GAASL,EAAIG,GAAO,CAAC,IAAIG,EAAGP,EAAKC,KAAO,GAAQ,IAAHM,EAAL,CAAqD,IAAIC,EAAe,GAAZR,EAAKC,KAAU,GAAa,MAAN,IAAHM,GAAJ,CAAoE,IAAIE,EAAe,GAAZT,EAAKC,KAAsG,IAA1EM,EAAL,MAAN,IAAHA,IAAqB,GAAHA,IAAQ,GAAGC,GAAI,EAAEC,GAAiB,EAAHF,IAAO,GAAGC,GAAI,GAAGC,GAAI,EAAc,GAAZT,EAAKC,MAAiB,MAAOK,GAAKzsB,OAAO6sB,aAAaH,OAAU,CAAC,IAAII,EAAGJ,EAAG,MAAMD,GAAKzsB,OAAO6sB,aAAa,MAAMC,GAAI,GAAG,MAAS,KAAHA,SAAjRL,GAAKzsB,OAAO6sB,cAAiB,GAAHH,IAAQ,EAAEC,QAAnHF,GAAKzsB,OAAO6sB,aAAaH,GAAmV,OAAOD,EAAK,SAASM,EAAaC,EAAIX,GAAgB,OAAOW,EAAId,EAAkBe,EAAOD,EAAIX,GAAgB,GAAI,SAASa,EAAkBT,EAAIN,EAAKgB,EAAOC,GAAiB,KAAKA,EAAgB,GAAG,OAAO,EAA0D,IAAxD,IAAIC,EAASF,EAAWb,EAAOa,EAAOC,EAAgB,EAAUpxB,EAAE,EAAEA,EAAEywB,EAAIp1B,SAAS2E,EAAE,CAAC,IAAIkkB,EAAEuM,EAAIa,WAAWtxB,GAAqF,GAA/EkkB,GAAG,OAAOA,GAAG,QAAkCA,EAAE,QAAU,KAAFA,IAAS,IAAO,KAA9CuM,EAAIa,aAAatxB,IAAsCkkB,GAAG,IAAI,CAAC,GAAGiN,GAAQb,EAAO,MAAMH,EAAKgB,KAAUjN,OAAQ,GAAGA,GAAG,KAAK,CAAC,GAAGiN,EAAO,GAAGb,EAAO,MAAMH,EAAKgB,KAAU,IAAIjN,GAAG,EAAEiM,EAAKgB,KAAU,IAAM,GAAFjN,OAAW,GAAGA,GAAG,MAAM,CAAC,GAAGiN,EAAO,GAAGb,EAAO,MAAMH,EAAKgB,KAAU,IAAIjN,GAAG,GAAGiM,EAAKgB,KAAU,IAAIjN,GAAG,EAAE,GAAGiM,EAAKgB,KAAU,IAAM,GAAFjN,MAAW,CAAC,GAAGiN,EAAO,GAAGb,EAAO,MAAMH,EAAKgB,KAAU,IAAIjN,GAAG,GAAGiM,EAAKgB,KAAU,IAAIjN,GAAG,GAAG,GAAGiM,EAAKgB,KAAU,IAAIjN,GAAG,EAAE,GAAGiM,EAAKgB,KAAU,IAAM,GAAFjN,GAAsB,OAAfiM,EAAKgB,GAAQ,EAASA,EAAOE,EAAU,SAASE,EAAad,EAAIe,EAAOJ,GAAiB,OAAOF,EAAkBT,EAAIQ,EAAOO,EAAOJ,GAAkB,SAASK,EAAgBhB,GAAe,IAAV,IAAIr1B,EAAI,EAAU4E,EAAE,EAAEA,EAAEywB,EAAIp1B,SAAS2E,EAAE,CAAC,IAAIkkB,EAAEuM,EAAIa,WAAWtxB,GAAMkkB,GAAG,OAAOA,GAAG,QAAMA,EAAE,QAAU,KAAFA,IAAS,IAAwB,KAApBuM,EAAIa,aAAatxB,IAAWkkB,GAAG,MAAM9oB,EAAoBA,GAAR8oB,GAAG,KAAU,EAAUA,GAAG,MAAW,EAAY,EAAG,OAAO9oB,EAAK,IAAyrEqS,EAAOikB,EAAMT,EAAOU,EAAOC,EAAQC,EAAOC,EAAQC,EAAQC,EAA/uEC,EAAkC,oBAAdhC,YAA0B,IAAIA,YAAY,iBAAYrtB,EAAU,SAASsvB,EAAclB,EAAIX,GAAiF,IAAjE,IAAIE,EAAOS,EAAQZ,EAAIG,GAAQ,EAAM4B,EAAO/B,EAAIC,EAAe,IAAUD,GAAK+B,IAASP,EAAQxB,MAAOA,EAAkB,IAAdG,EAAOH,GAAK,GAAYY,EAAI,IAAIiB,EAAc,OAAOA,EAAa5X,OAAO4W,EAAOT,SAASQ,EAAIT,IAAmC,IAAnB,IAAIvwB,EAAE,EAAMywB,EAAI,KAAW,CAAC,IAAI2B,EAAST,EAAOX,EAAM,EAAFhxB,GAAK,GAAG,GAAa,GAAVoyB,GAAapyB,GAAGqwB,EAAe,EAAE,OAAOI,IAAMzwB,EAAEywB,GAAKzsB,OAAO6sB,aAAauB,IAAa,SAASC,EAAc5B,EAAIe,EAAOJ,GAA6E,QAAvCxuB,IAAlBwuB,IAA6BA,EAAgB,YAAeA,EAAgB,EAAE,OAAO,EAAuH,IAAlG,IAAIkB,EAASd,EAAWe,GAA3CnB,GAAiB,GAAqE,EAAXX,EAAIp1B,OAAS+1B,EAAgB,EAAEX,EAAIp1B,OAAe2E,EAAE,EAAEA,EAAEuyB,IAAkBvyB,EAAE,CAAC,IAAIoyB,EAAS3B,EAAIa,WAAWtxB,GAAG2xB,EAAOH,GAAQ,GAAGY,EAASZ,GAAQ,EAAuB,OAApBG,EAAOH,GAAQ,GAAG,EAASA,EAAOc,EAAU,SAASE,EAAiB/B,GAAK,OAAkB,EAAXA,EAAIp1B,OAAU,SAASo3B,EAAczB,EAAIX,GAAmC,IAAnB,IAAIrwB,EAAE,EAAMywB,EAAI,KAAWzwB,GAAGqwB,EAAe,IAAG,CAAC,IAAIqC,EAAMb,EAAOb,EAAM,EAAFhxB,GAAK,GAAG,GAAU,GAAP0yB,EAAS,MAAU,KAAF1yB,EAAK0yB,GAAO,MAAM,CAAC,IAAI5B,EAAG4B,EAAM,MAAMjC,GAAKzsB,OAAO6sB,aAAa,MAAMC,GAAI,GAAG,MAAS,KAAHA,QAAgBL,GAAKzsB,OAAO6sB,aAAa6B,GAAS,OAAOjC,EAAK,SAASkC,EAAclC,EAAIe,EAAOJ,GAA6E,QAAvCxuB,IAAlBwuB,IAA6BA,EAAgB,YAAeA,EAAgB,EAAE,OAAO,EAA4D,IAA1D,IAAIkB,EAASd,EAAWjB,EAAO+B,EAASlB,EAAgB,EAAUpxB,EAAE,EAAEA,EAAEywB,EAAIp1B,SAAS2E,EAAE,CAAC,IAAIoyB,EAAS3B,EAAIa,WAAWtxB,GAA8K,GAAxKoyB,GAAU,OAAOA,GAAU,QAA8CA,EAAS,QAAiB,KAATA,IAAgB,IAAmB,KAAxE3B,EAAIa,aAAatxB,IAA6D6xB,EAAOL,GAAQ,GAAGY,GAASZ,GAAQ,GAAY,EAAEjB,EAAO,MAA2B,OAApBsB,EAAOL,GAAQ,GAAG,EAASA,EAAOc,EAAU,SAASM,EAAiBnC,GAAe,IAAV,IAAIr1B,EAAI,EAAU4E,EAAE,EAAEA,EAAEywB,EAAIp1B,SAAS2E,EAAE,CAAC,IAAIoyB,EAAS3B,EAAIa,WAAWtxB,GAAMoyB,GAAU,OAAOA,GAAU,SAAQpyB,EAAE5E,GAAK,EAAG,OAAOA,EAAmZ,SAASy3B,GAA2BlS,GAAKlT,EAAOkT,EAAI2L,EAAc,MAAEoF,EAAM,IAAIoB,UAAUnS,GAAK2L,EAAe,OAAEqF,EAAO,IAAIoB,WAAWpS,GAAK2L,EAAe,OAAEuF,EAAO,IAAImB,WAAWrS,GAAK2L,EAAe,OAAE2E,EAAO,IAAI9nB,WAAWwX,GAAK2L,EAAgB,QAAEsF,EAAQ,IAAIqB,YAAYtS,GAAK2L,EAAgB,QAAEwF,EAAQ,IAAIoB,YAAYvS,GAAK2L,EAAgB,QAAEyF,EAAQ,IAAIoB,aAAaxS,GAAK2L,EAAgB,QAAE0F,EAAQ,IAAIoB,aAAazS,GAAM,IAAyB0S,GAAe,OAAWC,GAAuBhH,EAAuB,gBAAG,UAAgW,SAASiH,GAAqBC,GAAW,KAAMA,EAAUn4B,OAAO,GAAE,CAAC,IAAI0M,EAASyrB,EAAUpsB,QAAQ,GAAoB,mBAAVW,EAAV,CAA2D,IAAI0rB,EAAK1rB,EAAS0rB,KAAsB,iBAAPA,OAAmC7wB,IAAfmF,EAAS5B,IAAiBmmB,EAAkB,UAAEmH,GAAanH,EAAmB,WAAEmH,EAAK1rB,EAAS5B,KAAastB,OAAoB7wB,IAAfmF,EAAS5B,IAAgB,KAAK4B,EAAS5B,UAAvO4B,EAASukB,KAAxckD,EAAtBlD,EAAmB,WAAcA,EAAmB,WAAoB,IAAIoD,YAAYgE,OAAO,CAAC,QAAUJ,GAAvxB,MAA6zB,QAAU,WAA4C7lB,EAAO+hB,EAAW/hB,QAAQ6lB,GAAuB7lB,EAAOoO,WAAWgX,GAA2BplB,GAAQokB,EAAOwB,IAAgB,GAAna,QAAoyB,IAAIM,GAAa,GAAOC,GAAW,GAAOC,GAAW,GAAOC,GAAc,GAAOC,IAAmB,EAA6wBC,GAASt4B,KAAKkC,IAAQq2B,GAAUv4B,KAAKkY,KAASsgB,GAAWx4B,KAAK4O,MAAU6pB,GAASz4B,KAAKkjB,IAAQwV,GAAgB,EAAMC,GAAsB,KAAoD,SAASC,GAAiB3jB,GAAIyjB,KAAqB9H,EAA+B,wBAAGA,EAA+B,uBAAE8H,IAAmB,SAASG,GAAoB5jB,GAA8G,GAA1GyjB,KAAqB9H,EAA+B,wBAAGA,EAA+B,uBAAE8H,IAAsC,GAAjBA,IAAuBC,GAAsB,CAAC,IAAItsB,EAASssB,GAAsBA,GAAsB,KAAKtsB,KAAwE,SAASgmB,GAAMyG,GAASlI,EAAgB,SAAGA,EAAgB,QAAEkI,GAAgB7uB,EAAT6uB,GAAM,IAAa3E,GAAM,EAAK2E,EAAK,SAASA,EAAK,+CAA+C,IAAI51B,EAAE,IAAI8wB,YAAY+E,aAAaD,GAA4B,MAAtBnI,EAAmBztB,GAASA,EAAG,SAAS81B,GAAUjE,EAAIthB,GAAQ,OAAOnL,OAAO9D,UAAUy0B,WAAWlE,EAAIkE,WAAWxlB,GAA8B,IAAtBshB,EAAIl1B,QAAQ4T,GAA3Ymd,EAAwB,gBAAE,GAAGA,EAAwB,gBAAE,GAAiW,IAAIsI,GAAc,wCAAwC,SAASC,GAAUrH,GAAU,OAAOkH,GAAUlH,EAASoH,IAAgB,IAAIE,GAAc,UAAU,SAASC,GAAUvH,GAAU,OAAOkH,GAAUlH,EAASsH,IAAgB,IAAh+WzH,GAA4hwqC2H,GAAeC,GAA6gDC,GAApl8pCC,GAAe,450pCAAs+0pC,SAASC,KAAY,IAAI,GAAG7F,EAAY,OAAO,IAAIpmB,WAAWomB,GAAa,IAAI9B,EAAOC,GAAkByH,IAAgB,GAAG1H,EAAQ,OAAOA,EAAQ,GAAGR,EAAY,OAAOA,EAAWkI,IAAuB,KAAM,kDAA0DxvB,MAAAA,GAAKooB,GAAMpoB,IAA+3D,SAAS0vB,GAAiCC,EAAK9yB,GAA2E,GAApE+yB,GAAQC,SAASC,WAAWH,EAAKC,GAAQC,SAASE,YAAYlzB,GAAU+yB,GAAQC,SAAS/B,KAAM,OAAO,EAAG,GAAS,GAAN6B,EAASC,GAAQC,SAASG,UAAU,WAAiD,IAAIC,EAAyF,EAAvEl6B,KAAK2B,IAAI,EAAEk4B,GAAQC,SAASK,cAAcrzB,EAAM0yB,MAAyBv2B,WAAW42B,GAAQC,SAASM,OAAOF,IAAqBL,GAAQC,SAAShQ,OAAO,eAAgB,GAAS,GAAN8P,EAASC,GAAQC,SAASG,UAAU,WAA0CJ,GAAQQ,sBAAsBR,GAAQC,SAASM,SAAUP,GAAQC,SAAShQ,OAAO,WAAY,GAAS,GAAN8P,EAAQ,CAAC,GAAyB,oBAAftgB,aAA2B,CAAC,IAAIghB,EAAc,GAA2P/vB,iBAAiB,UAAlL,SAASgwB,GAAhE,iBAA0EA,EAAMjmB,MAAhF,iBAAoHimB,EAAMjmB,KAAKnO,SAAsCo0B,EAAMC,kBAAkBF,EAAc5uB,OAAd4uB,MAA0F,GAAMhhB,aAAa,SAAuCye,GAAMuC,EAAc/1B,KAAKwzB,GAAS9G,QAAoD/pB,IAA1B0pB,EAAsB,gBAAcA,EAAsB,cAAE,IAAGA,EAAsB,cAAErsB,KAAKwzB,GAAM0C,YAAY,CAACt0B,OAA5f,kBAAuiBs0B,YAAviB,eAA+kB,MAAQZ,GAAQC,SAASG,UAAU,WAAmD3gB,aAAaugB,GAAQC,SAASM,SAAUP,GAAQC,SAAShQ,OAAO,YAAa,OAAO,EAA9pHqP,GAAUM,MAA75rqC9H,GAAw8rqC8H,GAA1BA,GAAr6rqC7I,EAAmB,WAAUA,EAAmB,WAAEe,GAAKD,GAAyBA,EAAgBC,IAA08vqCuG,GAAW3zB,KAAK,CAACwzB,KAAK,WAAW2C,QAAghDlB,GAArBtI,EAAyC,WAAW,IAAI9O,EAAE1f,EAAgB,SAAI,OAAY,IAAL0f,EAAE,GAAOA,EAAE,GAAG,KAAgC,oBAAVuY,QAA2CA,QAAkC,WAAW,OAAOC,YAAYC,OAAonE,IAAIhB,GAAQ,CAACC,SAAS,CAACG,UAAU,KAAKnQ,OAAO,GAAGgR,yBAAyB,EAAE/C,KAAK,KAAKttB,IAAI,EAAEsvB,WAAW,EAAEC,YAAY,EAAEe,mBAAmB,EAAEv3B,MAAM,GAAGw3B,MAAM,WAAWnB,GAAQC,SAASG,UAAU,KAAKJ,GAAQC,SAASgB,4BAA6BG,OAAO,WAAWpB,GAAQC,SAASgB,2BAA2B,IAAIf,EAAWF,GAAQC,SAASC,WAAeC,EAAYH,GAAQC,SAASE,YAAgBjC,EAAK8B,GAAQC,SAAS/B,KAAK8B,GAAQC,SAAS/B,KAAK,KAA1iF,SAAmCA,EAAKmD,EAAIC,EAAqB1wB,EAAI2wB,GAA8R,IAAIC,EAArRnJ,GAAQ2H,GAAQC,SAAS/B,KAAK,+LAA+L8B,GAAQC,SAAS/B,KAAKA,EAAK8B,GAAQC,SAASrvB,IAAIA,EAA0D4wB,OAAb,IAAN5wB,EAAwC,WAAWmmB,EAAmB,WAAEmH,EAAKttB,IAAmC,WAAWmmB,EAAkB,UAAEmH,IAAS,IAAIuD,EAAezB,GAAQC,SAASgB,yBAAggD,GAAv+CjB,GAAQC,SAASM,OAAO,WAAmC,IAAGjG,EAAa,GAAG0F,GAAQC,SAASt2B,MAAM7D,OAAO,EAAjC,CAAoC,IAAI47B,EAAMC,KAAKX,MAAUY,EAAQ5B,GAAQC,SAASt2B,MAAMkI,QAAkC,GAA1B+vB,EAAQ1D,KAAK0D,EAAQhxB,KAAQovB,GAAQC,SAAS4B,kBAAkB,CAAC,IAAIC,EAAU9B,GAAQC,SAAS4B,kBAAsBz6B,EAAK06B,EAAU,GAAG,EAAEA,EAAU,EAAE37B,KAAK4O,MAAM+sB,GAAcF,EAAQG,QAAS/B,GAAQC,SAAS4B,kBAAkBz6B,GAAYA,GAAU,GAAG44B,GAAQC,SAAS4B,mBAAmB,EAAEC,EAAU16B,GAAM,GAAuH,GAAnHX,QAAQsyB,IAAI,sBAAsB6I,EAAQh2B,KAAK,WAAW+1B,KAAKX,MAAMU,GAAO,OAAO1B,GAAQC,SAAS+B,eAAkBP,EAAezB,GAAQC,SAASgB,yBAAyB,OAAO73B,WAAW42B,GAAQC,SAASM,OAAO,QAAckB,EAAezB,GAAQC,SAASgB,2BAAgCjB,GAAQC,SAASiB,mBAAmBlB,GAAQC,SAASiB,mBAAmB,EAAE,EAAkC,GAA7BlB,GAAQC,SAASC,YAAeF,GAAQC,SAASE,YAAY,GAAGH,GAAQC,SAASiB,mBAAmBlB,GAAQC,SAASE,aAAa,EAAGH,GAAQC,SAASG,aAAyD,GAA7BJ,GAAQC,SAASC,aAAeF,GAAQC,SAASK,cAAcX,MAAuBK,GAAQC,SAASgC,QAAQT,GAAyBC,EAAezB,GAAQC,SAASgB,2BAAgD,iBAANiB,KAAgBA,IAAIC,OAAOD,IAAIC,MAAMC,mBAAkBF,IAAIC,MAAMC,oBAAoBpC,GAAQC,SAASG,gBAAkBmB,IAAgBF,GAAKA,EAAI,EAAEvB,GAAiC,EAAE,IAAIuB,GAAUvB,GAAiC,EAAE,GAAGE,GAAQC,SAASG,aAAgBkB,EAAsB,KAAM,SAA8ce,CAA0BnE,EAAK,GAAE,EAAM8B,GAAQC,SAASrvB,KAAI,GAAMkvB,GAAiCI,EAAWC,GAAaH,GAAQC,SAASG,aAAc4B,aAAa,WAAW,GAAGjL,EAAkB,UAAE,CAAC,IAAItlB,EAAQslB,EAAsB,eAAG,iBAAqB+K,EAAU9B,GAAQC,SAAS4B,kBAAsBS,EAAStC,GAAQC,SAASsC,iBAAoBT,EAAcA,EAAUQ,EAAUvL,EAAkB,UAAEtlB,EAAQ,MAAM6wB,EAASR,GAAW,IAAIQ,EAAS,KAAYvL,EAAkB,UAAEtlB,GAAiBslB,EAAkB,UAAE,MAAQkL,QAAQ,SAAS/D,GAAM,IAAG5D,EAAH,CAAgB,GAAGvD,EAAoB,cAAkD,IAApCA,EAAoB,cAAuB,OAAS,IAAImH,IAAc70B,MAAAA,GAAG,GAAGA,aAAakvB,GAAY,OAAuF,MAAtElvB,GAAc,iBAAJA,GAAcA,EAAEm5B,OAAMpyB,EAAI,qBAAqB,CAAC/G,EAAEA,EAAEm5B,QAAcn5B,EAAO0tB,EAAqB,cAAEA,EAAqB,kBAAO0L,cAAa,EAAMC,aAAY,EAAMC,8BAA8B,GAAGC,QAAQ,GAAGz1B,KAAK,WAAoE,GAArD4pB,EAAuB,iBAAEA,EAAuB,eAAE,KAAMiJ,GAAQ6C,QAAX,CAA0B7C,GAAQ6C,SAAQ,EAAK,IAAI,IAAIC,KAAO9C,GAAQ+C,oBAAmB,EAAY15B,MAAAA,GAAG22B,GAAQ+C,oBAAmB,EAAMt8B,QAAQsyB,IAAI,oEAAqEiH,GAAQgD,YAAmC,oBAAhBC,eAA4BA,eAAyC,oBAAnBC,kBAA+BA,kBAAmBlD,GAAQ+C,mBAA0D,KAAvCt8B,QAAQsyB,IAAI,2BAAgCiH,GAAQmD,UAAyB,oBAARzvB,OAAoBA,OAAO0vB,IAAI1vB,OAAO0vB,IAAI1vB,OAAO2vB,eAAUh2B,EAAc0pB,EAAOuM,sBAA4C,IAApBtD,GAAQmD,YAAyB18B,QAAQsyB,IAAI,kHAAkHhC,EAAOuM,iBAAgB,GAAM,IAAIC,EAAY,CAAGA,UAAyB,SAA+B33B,GAAM,OAAQmrB,EAAOuM,iBAAiB,yBAAyBvN,KAAKnqB,KAAQ23B,EAAoB,OAAE,SAA4BC,EAAU53B,EAAKiuB,EAAOC,GAAS,IAAInQ,EAAE,KAAK,GAAGqW,GAAQ+C,mBAAoB,KAAIpZ,EAAE,IAAImZ,KAAK,CAACU,GAAW,CAACz1B,KAAKiyB,GAAQyD,YAAY73B,MAAagS,OAAO4lB,EAAU19B,SAAQ6jB,EAAE,IAAImZ,KAAK,CAAC,IAAIlvB,WAAW4vB,GAAWtrB,QAAQ,CAACnK,KAAKiyB,GAAQyD,YAAY73B,MAAgBvC,MAAAA,IAAvk2qC,SAASq6B,EAASlJ,GAAUkJ,EAASC,QAAMD,EAASC,MAAM,IAAOD,EAASC,MAAMnJ,KAAOkJ,EAASC,MAAMnJ,GAAM,EAAEpqB,EAAIoqB,IAAw91qCkJ,CAAS,uCAAuCr6B,EAAE,kCAAoC,IAAIsgB,EAAE,CAAC,IAAIia,EAAG,IAAI5D,GAAQgD,YAAcY,EAAGC,OAAO,IAAIjwB,WAAW4vB,GAAWtrB,QAAQyR,EAAEia,EAAGE,UAAW,IAAIzK,EAAI2G,GAAQmD,UAAUY,gBAAgBpa,GAAOqa,EAAI,IAAIC,MAAQD,EAAInK,OAAO,WAAsBxB,EAAO2L,EAAI5P,SAAS,SAASxoB,EAAK,yBAAyB,IAAIs4B,EAAOzN,SAAS0N,cAAc,UAAUD,EAAOE,MAAMJ,EAAII,MAAMF,EAAOG,OAAOL,EAAIK,OAAeH,EAAOI,WAAW,MAAUC,UAAUP,EAAI,EAAE,GAAGjN,EAAwB,gBAAEnrB,GAAMs4B,EAAOlE,GAAQmD,UAAUqB,gBAAgBnL,GAAQQ,GAAOA,EAAO2J,IAAaQ,EAAIlK,QAAQ,SAAqB4G,GAAOj6B,QAAQsyB,IAAI,SAASM,EAAI,yBAA4BS,GAAQA,KAAYkK,EAAIrN,IAAI0C,GAAMtC,EAAuB,eAAErsB,KAAK64B,GAAa,IAAIkB,EAAY,CAAGA,UAAyB,SAA+B74B,GAAM,OAAQmrB,EAAO2N,iBAAiB94B,EAAKutB,QAAQ,IAAI,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,IAAKsL,OAAsB,SAA4BjB,EAAU53B,EAAKiuB,EAAOC,GAAS,IAAIvP,GAAK,EAAM,SAAS3X,EAAOuvB,GAAU5X,IAAYA,GAAK,EAAKwM,EAAwB,gBAAEnrB,GAAMu2B,EAAStI,GAAOA,EAAO2J,IAAY,SAASmB,IAAUpa,IAAYA,GAAK,EAAKwM,EAAwB,gBAAEnrB,GAAM,IAAIg5B,MAAW9K,GAAQA,KAAW,IAAGkG,GAAQ+C,mBAAm/B,OAAO4B,IAAt+B,IAAI,IAAIhb,EAAE,IAAImZ,KAAK,CAACU,GAAW,CAACz1B,KAAKiyB,GAAQyD,YAAY73B,KAAevC,MAAAA,GAAG,OAAOs7B,IAAQ,IAAItL,EAAI2G,GAAQmD,UAAUY,gBAAgBpa,GAAOwY,EAAM,IAAIyC,MAAQzC,EAAMzxB,iBAAiB,iBAAiB,WAAWkC,EAAOuvB,KAAS,GAAOA,EAAMrI,QAAQ,SAAuB4G,GAAUnW,IAAY9jB,QAAQsyB,IAAI,iDAAiDntB,EAAK,mCAAsdu2B,EAAMxL,IAAI,gBAAgB/qB,EAAKutB,QAAQ,GAAG,WAA7d,SAAkB1e,GAAuI,IAAjI,IAAIoqB,EAAK,mEAAmF90B,EAAI,GAAO+0B,EAAS,EAAMC,EAAS,EAAUt6B,EAAE,EAAEA,EAAEgQ,EAAK3U,OAAO2E,IAA8C,IAAzCq6B,EAASA,GAAU,EAAErqB,EAAKhQ,GAAGs6B,GAAU,EAAQA,GAAU,GAAE,CAAC,IAAIC,EAAKF,GAAUC,EAAS,EAAE,GAAGA,GAAU,EAAEh1B,GAAK80B,EAAKG,GAA4H,OAAvG,GAAVD,GAAah1B,GAAK80B,GAAe,EAATC,IAAa,GAAG/0B,GAAKk1B,MAA2B,GAAVF,IAAah1B,GAAK80B,GAAe,GAATC,IAAc,GAAG/0B,GAAjT,KAAkUA,EAA0Dm1B,CAAS1B,GAAW5wB,EAAOuvB,KAASA,EAAMxL,IAAI0C,EAAI2G,GAAQmF,eAAe,WAAWvyB,EAAOuvB,IAAS,OAA6BpL,EAAuB,eAAErsB,KAAK+5B,GAAqR,IAAIP,EAAOnN,EAAe,OAAKmN,IAAQA,EAAOkB,mBAAmBlB,EAA2B,oBAAGA,EAA8B,uBAAGA,EAAiC,0BAAGA,EAA6B,sBAAG,aAAaA,EAAOmB,gBAAgB5O,SAA0B,iBAAGA,SAA6B,oBAAGA,SAAgC,uBAAGA,SAA4B,mBAAG,aAAayN,EAAOmB,gBAAgBnB,EAAOmB,gBAAgBn2B,KAAKunB,UAAUA,SAAS/lB,iBAAiB,oBAAoB40B,GAAkB,GAAO7O,SAAS/lB,iBAAiB,uBAAuB40B,GAAkB,GAAO7O,SAAS/lB,iBAAiB,0BAA0B40B,GAAkB,GAAO7O,SAAS/lB,iBAAiB,sBAAsB40B,GAAkB,GAAUvO,EAA2B,oBAAGmN,EAAOxzB,iBAAiB,QAAQ,SAAS60B,IAAQvF,GAAQ0C,aAAa3L,EAAe,OAAEqO,qBAAoBrO,EAAe,OAAEqO,qBAAqBG,EAAGC,oBAAoB,IAAzqC,SAASF,IAAoBtF,GAAQ0C,YAAYjM,SAA6B,qBAAIM,EAAe,QAAGN,SAAgC,wBAAIM,EAAe,QAAGN,SAAmC,2BAAIM,EAAe,QAAGN,SAA+B,uBAAIM,EAAe,SAA+6B0O,cAAc,SAASvB,EAAOwB,EAASC,EAAYC,GAAwB,GAAGF,GAAU3O,EAAO8O,KAAK3B,GAAQnN,EAAOmN,OAAO,OAAOnN,EAAO8O,IAAI,IAAIA,EAAQC,EAAc,GAAGJ,EAAS,CAAC,IAAIK,EAAkB,CAACC,WAAU,EAAMC,OAAM,EAAMC,aAAa,GAAG,GAAGN,EAAwB,IAAI,IAAIO,KAAaP,EAAwBG,EAAkBI,GAAWP,EAAuBO,GAA4B,oBAALC,KAAkBN,EAAcM,GAAGX,cAAcvB,EAAO6B,MAAqCF,EAAIO,GAAG9B,WAAWwB,GAAeO,YAAeR,EAAI3B,EAAOI,WAAW,MAAO,OAAIuB,GAAmBF,IAAiBD,GAASrN,EAAsB,oBAARgO,MAAoB,4FAA4FtP,EAAO8O,IAAIA,EAAOH,GAASU,GAAGE,mBAAmBR,GAAe/O,EAAO2O,SAASA,EAAS1F,GAAQ2C,8BAA8BrY,QAAQ,SAAS9X,GAAUA,MAAcwtB,GAAQ7yB,QAAe04B,GAA/V,MAAqWU,eAAe,SAASrC,EAAOwB,EAASC,KAAea,6BAA4B,EAAMC,iBAAYp5B,EAAUq5B,kBAAar5B,EAAUs5B,kBAAkB,SAASF,EAAYC,GAAc1G,GAAQyG,YAAYA,EAAYzG,GAAQ0G,aAAaA,OAA6C,IAAtB1G,GAAQyG,cAA0BzG,GAAQyG,aAAY,QAAsC,IAAvBzG,GAAQ0G,eAA2B1G,GAAQ0G,cAAa,GAAM,IAAIxC,EAAOnN,EAAe,OAAE,SAAS6P,IAAmB5G,GAAQyC,cAAa,EAAM,IAAIoE,EAAgB3C,EAAO4C,YAAerQ,SAA4B,mBAAGA,SAA+B,sBAAGA,SAA8B,qBAAGA,SAAkC,yBAAGA,SAAyC,kCAAKoQ,GAAiB3C,EAAO6C,eAAe/G,GAAQ+G,eAAkB/G,GAAQyG,aAAYvC,EAAOkB,qBAAqBpF,GAAQyC,cAAa,EAAQzC,GAAQ0G,aAAc1G,GAAQgH,0BAAiChH,GAAQiH,uBAAuB/C,KAAgB2C,EAAgBC,WAAWI,aAAahD,EAAO2C,GAAiBA,EAAgBC,WAAWK,YAAYN,GAAoB7G,GAAQ0G,aAAc1G,GAAQoH,wBAA+BpH,GAAQiH,uBAAuB/C,IAAanN,EAAqB,cAAEA,EAAqB,aAAEiJ,GAAQyC,cAAiB1L,EAAqB,cAAEA,EAAqB,aAAEiJ,GAAQyC,cAAmBzC,GAAQwG,8BAA6BxG,GAAQwG,6BAA4B,EAAK/P,SAAS/lB,iBAAiB,mBAAmBk2B,GAAiB,GAAOnQ,SAAS/lB,iBAAiB,sBAAsBk2B,GAAiB,GAAOnQ,SAAS/lB,iBAAiB,yBAAyBk2B,GAAiB,GAAOnQ,SAAS/lB,iBAAiB,qBAAqBk2B,GAAiB,IAAQ,IAAIC,EAAgBpQ,SAAS0N,cAAc,OAAOD,EAAO4C,WAAWI,aAAaL,EAAgB3C,GAAQ2C,EAAgBQ,YAAYnD,GAAQ2C,EAAgBF,kBAAkBE,EAAmC,mBAAGA,EAAsC,sBAAGA,EAAqC,sBAAIA,EAAyC,wBAAE,WAAWA,EAAyC,wBAAES,QAA8B,uBAAK,QAAQT,EAAyC,wBAAE,WAAWA,EAAyC,wBAAES,QAA8B,uBAAK,MAAMT,EAAgBF,qBAAsBI,eAAe,WAAW,QAAI/G,GAAQyC,gBAAoChM,SAAyB,gBAAGA,SAA2B,kBAAGA,SAA8B,qBAAGA,SAA2B,kBAAGA,SAAiC,wBAAG,cAAiB7rB,MAAM6rB,SAAS,KAAW,IAAO8Q,QAAQ,EAAEC,0BAA0B,SAAStJ,GAAM,IAAI8C,EAAIW,KAAKX,MAAM,GAAqB,IAAlBhB,GAAQuH,QAAavH,GAAQuH,QAAQvG,EAAI,IAAI,QAAU,KAAMA,EAAI,GAAGhB,GAAQuH,SAASvH,GAAQuH,SAAS,IAAI,GAAK,IAAIE,EAAMthC,KAAK2B,IAAIk4B,GAAQuH,QAAQvG,EAAI,GAAG53B,WAAW80B,EAAKuJ,IAASjH,sBAAsB,SAAStC,GAAwC,mBAAxBsC,uBAAkHkH,EAAlC1H,GAAQwH,2BAA8BtJ,GAAlFsC,sBAAsBtC,IAAoEyJ,aAAa,SAASzJ,GAAM,OAAO,WAAW,IAAI5D,EAAM,OAAO4D,EAAKtzB,MAAM,KAAK7D,aAAe6gC,qBAAoB,EAAKC,qBAAqB,GAAGC,oBAAoB,WAAW9H,GAAQ4H,qBAAoB,GAAQG,qBAAqB,WAA4C,GAAjC/H,GAAQ4H,qBAAoB,EAAQ5H,GAAQ6H,qBAAqB/hC,OAAO,EAAE,CAAC,IAAIm4B,EAAU+B,GAAQ6H,qBAAqB7H,GAAQ6H,qBAAqB,GAAG5J,EAAU3T,QAAQ,SAAS4T,GAAMA,QAAa8J,0BAA0B,SAAS9J,GAAM,OAAO8B,GAAQQ,sBAAsB,WAAclG,IAAgB0F,GAAQ4H,oBAAqB1J,IAAc8B,GAAQ6H,qBAAqBn9B,KAAKwzB,OAAYiH,eAAe,SAASjH,EAAKj0B,GAAS,OAAOb,WAAW,WAAckxB,IAAgB0F,GAAQ4H,oBAAqB1J,IAAc8B,GAAQ6H,qBAAqBn9B,KAAKwzB,KAASj0B,IAAWg+B,gBAAgB,SAAS/J,EAAKj0B,GAAS,OAAOi+B,YAAY,WAAc5N,GAAgB0F,GAAQ4H,qBAAqB1J,KAAUj0B,IAAWw5B,YAAY,SAAS73B,GAAM,MAAO,CAAC,IAAM,aAAa,KAAO,aAAa,IAAM,YAAY,IAAM,YAAY,IAAM,YAAY,IAAM,YAAY,IAAM,cAAcA,EAAKutB,OAAOvtB,EAAKwtB,YAAY,KAAK,KAAM+O,aAAa,SAASjK,GAAUxqB,OAAOy0B,eAAcz0B,OAAOy0B,aAAaC,UAAwB,cAAGA,UAA2B,iBAAG10B,OAAOy0B,aAAajK,IAAQmK,aAAa,SAAS3H,GAAO,OAAOA,EAAiB,WAAGA,EAAoB,cAAGA,EAAuB,iBAAG,GAAI4H,aAAa,SAAS5H,GAAO,OAAOA,EAAiB,WAAGA,EAAoB,cAAGA,EAAuB,iBAAG,GAAI6H,mBAAmB,SAAS7H,GAAO,IAAI8H,EAAM,EAAE,OAAO9H,EAAM3yB,MAAM,IAAI,iBAAiBy6B,EAAM9H,EAAM+H,OAAO,EAAE,MAAM,IAAI,aAAaD,EAAM9H,EAAMgI,WAAW,IAAI,MAAM,IAAI,QAA2B,OAAnBF,EAAM9H,EAAMiI,OAAcjI,EAAMkI,WAAW,KAAK,EAAEJ,GAAO,IAAI,MAAM,KAAK,EAAEA,GAAO,EAAE,MAAM,KAAK,EAAEA,GAAO,GAAG,MAAM,QAAQ,KAAM,wCAAwC9H,EAAMkI,UAAW,MAAM,QAAQ,KAAM,mCAAmClI,EAAM3yB,KAAM,OAAOy6B,GAAQK,OAAO,EAAEC,OAAO,EAAEC,eAAe,EAAEC,eAAe,EAAEC,QAAQ,GAAGC,YAAY,GAAGC,oBAAoB,SAASzI,GAAO,GAAGV,GAAQ0C,YAA4B,aAAZhC,EAAM3yB,MAAmB,iBAAiB2yB,EAAOV,GAAQ+I,eAAe/I,GAAQgJ,eAAe,GAAShJ,GAAQ+I,eAAe/I,GAAQqI,aAAa3H,GAAOV,GAAQgJ,eAAehJ,GAAQsI,aAAa5H,IAAuB,oBAALwB,KAAkBlC,GAAQ6I,OAAO3G,IAAI2G,OAAO7I,GAAQ+I,eAAe/I,GAAQ8I,OAAO5G,IAAI4G,OAAO9I,GAAQgJ,iBAAsBhJ,GAAQ6I,QAAQ7I,GAAQ+I,eAAe/I,GAAQ8I,QAAQ9I,GAAQgJ,oBAAsB,CAAC,IAAII,EAAKrS,EAAe,OAAEsS,wBAA4BC,EAAGvS,EAAe,OAAEqN,MAAU7I,EAAGxE,EAAe,OAAEsN,OAAWkF,OAAgC,IAAjB71B,OAAO61B,QAAsB71B,OAAO61B,QAAQ71B,OAAO81B,YAAgBC,OAAgC,IAAjB/1B,OAAO+1B,QAAsB/1B,OAAO+1B,QAAQ/1B,OAAOg2B,YAAY,GAAgB,eAAbhJ,EAAM3yB,MAAkC,aAAb2yB,EAAM3yB,MAAgC,cAAb2yB,EAAM3yB,KAAmB,CAAC,IAAI47B,EAAMjJ,EAAMiJ,MAAM,QAAWt8B,IAARs8B,EAAmB,OAAQ,IAAIC,EAAUD,EAAME,OAAON,EAAQH,EAAKU,MAAUC,EAAUJ,EAAMK,OAAOP,EAAQL,EAAKa,KAAkFC,EAAO,CAACvjB,EAArFijB,GAAqBN,EAAGF,EAAKhF,MAAoE7a,EAA7DwgB,GAAqBxO,EAAG6N,EAAK/E,QAA6C,GAAgB,eAAb3D,EAAM3yB,KAAqBiyB,GAAQkJ,YAAYS,EAAMQ,YAAYD,EAAOlK,GAAQiJ,QAAQU,EAAMQ,YAAYD,OAAa,GAAgB,aAAbxJ,EAAM3yB,MAAgC,cAAb2yB,EAAM3yB,KAAmB,CAAC,IAAIyJ,EAAKwoB,GAAQiJ,QAAQU,EAAMQ,YAAgB3yB,IAAKA,EAAK0yB,GAAOlK,GAAQkJ,YAAYS,EAAMQ,YAAY3yB,EAAKwoB,GAAQiJ,QAAQU,EAAMQ,YAAYD,EAAQ,OAAQ,IAAIvjB,EAAE+Z,EAAMmJ,OAAON,EAAQH,EAAKU,MAAUvgB,EAAEmX,EAAMsJ,OAAOP,EAAQL,EAAKa,KAAKtjB,GAAK2iB,EAAGF,EAAKhF,MAAO7a,GAAKgS,EAAG6N,EAAK/E,OAAQrE,GAAQ+I,eAAepiB,EAAEqZ,GAAQ6I,OAAO7I,GAAQgJ,eAAezf,EAAEyW,GAAQ8I,OAAO9I,GAAQ6I,OAAOliB,EAAEqZ,GAAQ8I,OAAOvf,IAAK6gB,UAAU,SAAS/Q,EAAIQ,EAAOC,EAAQuQ,GAAU,IAAIC,EAAKD,EAA2C,GAAX,MAAMhR,EAAQ5B,EAAU4B,EAAI,SAASkR,GAAalS,EAAOkS,EAAY,sBAAsBlR,EAAI,8BAA8BQ,EAAO,IAAIjmB,WAAW22B,IAAiBD,GAAItL,MAAwB,SAAS0B,GAAO,IAAG5G,EAA0B,KAAM,sBAAsBT,EAAI,YAAjDS,MAAoEwQ,GAAIvL,MAAqByL,gBAAgB,GAAGC,sBAAsB,WAAW,IAAIvG,EAAOnN,EAAe,OAAEiJ,GAAQwK,gBAAgBlgB,QAAQ,SAAS5c,GAAUA,EAASw2B,EAAOE,MAAMF,EAAOG,WAAaqG,cAAc,SAAStG,EAAMC,EAAOsG,GAAW,IAAIzG,EAAOnN,EAAe,OAAEiJ,GAAQiH,uBAAuB/C,EAAOE,EAAMC,GAAYsG,GAAU3K,GAAQyK,yBAA0BG,cAAc,EAAEC,eAAe,EAAE7D,wBAAwB,WAAW,GAAe,oBAAL9E,IAAiB,CAAC,IAAIzxB,EAAM8rB,EAAQ2F,IAAI4I,QAAQ,GAAGr6B,GAAY,QAAQ6rB,EAAO4F,IAAI4I,QAAQ,GAAGr6B,EAAOuvB,GAAQiH,uBAAuBlQ,EAAe,QAAGiJ,GAAQyK,yBAA0BrD,sBAAsB,WAAW,GAAe,oBAALlF,IAAiB,CAAC,IAAIzxB,EAAM8rB,EAAQ2F,IAAI4I,QAAQ,GAAGr6B,IAAY,QAAS6rB,EAAO4F,IAAI4I,QAAQ,GAAGr6B,EAAOuvB,GAAQiH,uBAAuBlQ,EAAe,QAAGiJ,GAAQyK,yBAA0BxD,uBAAuB,SAAS/C,EAAO6G,EAAQC,GAAYD,GAASC,GAAS9G,EAAO+G,YAAYF,EAAQ7G,EAAOgH,aAAaF,IAAeD,EAAQ7G,EAAO+G,YAAYD,EAAQ9G,EAAOgH,cAAc,IAAI18B,EAAEu8B,EAAYI,EAAEH,EAA4M,GAAjMjU,EAA0B,mBAAGA,EAA0B,kBAAE,IAAMvoB,EAAE28B,EAAEpU,EAA0B,kBAAGvoB,EAAErI,KAAK8B,MAAMkjC,EAAEpU,EAA0B,mBAAUoU,EAAEhlC,KAAK8B,MAAMuG,EAAEuoB,EAA0B,qBAASN,SAA4B,mBAAGA,SAA+B,sBAAGA,SAA8B,qBAAGA,SAAkC,yBAAGA,SAAyC,kCAAKyN,EAAO4C,YAA2B,oBAARgE,OAAoB,CAAC,IAAIM,EAAOjlC,KAAKkjB,IAAIyhB,OAAO1G,MAAM51B,EAAEs8B,OAAOzG,OAAO8G,GAAG38B,EAAErI,KAAK8B,MAAMuG,EAAE48B,GAAQD,EAAEhlC,KAAK8B,MAAMkjC,EAAEC,GAAYpL,GAAQ0G,cAAiBxC,EAAOE,OAAO51B,IAAE01B,EAAOE,MAAM51B,GAAK01B,EAAOG,QAAQ8G,IAAEjH,EAAOG,OAAO8G,QAA0B,IAAdjH,EAAOmH,QAAoBnH,EAAOmH,MAAMC,eAAe,SAASpH,EAAOmH,MAAMC,eAAe,aAAqBpH,EAAOE,OAAO2G,IAAQ7G,EAAOE,MAAM2G,GAAW7G,EAAOG,QAAQ2G,IAAQ9G,EAAOG,OAAO2G,QAAgC,IAAd9G,EAAOmH,QAAuB78B,GAAGu8B,GAASI,GAAGH,GAAS9G,EAAOmH,MAAME,YAAY,QAAQ/8B,EAAE,KAAK,aAAa01B,EAAOmH,MAAME,YAAY,SAASJ,EAAE,KAAK,eAAoBjH,EAAOmH,MAAMC,eAAe,SAASpH,EAAOmH,MAAMC,eAAe,cAAeE,aAAa,GAAGC,sBAAsB,EAAEC,yBAAyB,WAAW,IAAI5X,EAAOkM,GAAQyL,sBAAsD,OAAhCzL,GAAQyL,wBAA+B3X,IAA2nB,SAAS6X,GAAYnR,GAAgC,OAAOA,EAAKv0B,QAA5B,gBAA0C,SAAS0gB,GAAG,IAAI4C,EAAhtB,SAASqiB,EAAS1N,GAA4D,IAAtD0N,EAASC,eAA2C,GAAH,EAAxBD,EAASC,iBAA+C,EAAE,OAAO3N,EAAK,IAAI4N,EAAoB/U,EAAwB,iBAAGA,EAAuB,eAAEsB,EAAOyT,GAAqB,IAAIC,EAASC,KAAY,IAAI,IAAI7kB,EAAE+W,EAAQ/W,EAAEiY,WAAW,SAAOjY,EAAEA,EAAEgS,OAAO,IAAG,IAAItzB,EAAIq2B,EAAgB/U,GAAG,EAAMiE,EAAI6gB,GAAWpmC,GAAKm2B,EAAa7U,EAAEiE,EAAIvlB,GAAK,IAAIk0B,EAAOkS,GAAW,GAAOl8B,EAAI+7B,EAAoB1gB,EAAI,EAAE,EAAE2O,GAAQ,GAAuB,IAApBuC,EAAOvC,GAAQ,IAAQhqB,EAAK,OAAOyrB,EAAazrB,GAAa1G,MAAAA,IAAW,QAAC6iC,GAAMn8B,GAAKo8B,GAAaJ,GAAaH,EAASC,eAAe,KAAID,EAASC,eAAgB,OAAO3N,EAAuG0N,CAASjlB,GAAG,OAAOA,IAAI4C,EAAE5C,EAAE4C,EAAE,KAAK5C,EAAE,MAA4L,SAASylB,KAAa,IAAIC,EAA9M,WAAwB,IAAIj8B,EAAI,IAAIpH,MAAQ,IAAIoH,EAAIoyB,MAAM,CAAC,IAAI,MAAM,IAAIx5B,MAAeK,MAAAA,GAAG+G,EAAI/G,EAAG,IAAI+G,EAAIoyB,MAAO,MAAO,6BAA+B,OAAOpyB,EAAIoyB,MAAM78B,WAAyC2mC,GAAiF,OAA/DvV,EAAwB,kBAAEsV,GAAI,KAAKtV,EAAwB,mBAAW4U,GAAYU,GAAgJ,SAASE,KAA6B,OAAOA,GAA2BC,oBAAoB,EAA4N,SAASC,GAASx/B,GAA4C,OAArCqvB,EAAOoQ,MAAqB,GAAGz/B,EAAaA,EAAmE,IAAI0/B,GAAK,CAACC,UAAU,SAAS3U,GAA0F,MAAhE,gEAAmF4U,KAAK5U,GAAUhxB,MAAM,IAAK6lC,eAAe,SAASC,EAAMC,GAAyB,IAAT,IAAIC,EAAG,EAAUxiC,EAAEsiC,EAAMjnC,OAAO,EAAE2E,GAAG,EAAEA,IAAI,CAAC,IAAI+M,EAAKu1B,EAAMtiC,GAAa,MAAP+M,EAAYu1B,EAAMG,OAAOziC,EAAE,GAAmB,OAAP+M,GAAau1B,EAAMG,OAAOziC,EAAE,GAAGwiC,KAAcA,IAAIF,EAAMG,OAAOziC,EAAE,GAAGwiC,KAAO,GAAGD,EAAgB,KAAKC,EAAGA,IAAMF,EAAMz+B,QAAQ,MAAQ,OAAOy+B,GAAQI,UAAU,SAASrV,GAAM,IAAIsV,EAA4B,MAAjBtV,EAAKrE,OAAO,GAAS4Z,EAAgC,MAAlBvV,EAAKqB,QAAQ,GAA8K,OAArKrB,EAAK6U,GAAKG,eAAehV,EAAKlyB,MAAM,KAAK0nC,OAAO,SAAS1mB,GAAG,QAASA,KAAMwmB,GAAY7oB,KAAK,OAAgB6oB,IAAYtV,EAAK,KAAQA,GAAMuV,IAAevV,GAAM,MAAasV,EAAW,IAAI,IAAItV,GAAOC,QAAQ,SAASD,GAAM,IAAI1vB,EAAOukC,GAAKC,UAAU9U,GAAMzB,EAAKjuB,EAAO,GAAG4D,EAAI5D,EAAO,GAAG,OAAIiuB,GAAOrqB,GAAoBA,IAAKA,EAAIA,EAAImtB,OAAO,EAAEntB,EAAIlG,OAAO,IAAWuwB,EAAKrqB,GAAzD,KAA+DuhC,SAAS,SAASzV,GAAM,GAAU,MAAPA,EAAW,MAAO,IAAI,IAAI0V,EAAU1V,EAAKsB,YAAY,KAAK,OAAgB,IAAboU,EAAsB1V,EAAYA,EAAKqB,OAAOqU,EAAU,IAAKC,QAAQ,SAAS3V,GAAM,OAAO6U,GAAKC,UAAU9U,GAAM,IAAKvT,KAAK,WAAW,IAAImpB,EAAMljC,MAAMG,UAAU1D,MAAMqC,KAAKvC,UAAU,GAAG,OAAO4lC,GAAKQ,UAAUO,EAAMnpB,KAAK,OAAQopB,MAAM,SAAS11B,EAAE8O,GAAG,OAAO4lB,GAAKQ,UAAUl1B,EAAE,IAAI8O,KAAU6mB,GAAQ,CAAC39B,QAAQ,WAAsD,IAA3C,IAAI49B,EAAa,GAAGC,GAAiB,EAAcrjC,EAAE1D,UAAUjB,OAAO,EAAE2E,IAAI,IAAIqjC,EAAiBrjC,IAAI,CAAC,IAAIqtB,EAAKrtB,GAAG,EAAE1D,UAAU0D,GAAGsjC,GAAGjiC,MAAM,GAAiB,iBAAPgsB,EAAiB,MAAM,IAAInqB,UAAU,6CAAmD,IAAImqB,EAAM,MAAO,GAAI+V,EAAa/V,EAAK,IAAI+V,EAAaC,EAAkC,MAAjBhW,EAAKrE,OAAO,GAAiI,OAAQqa,EAAiB,IAAI,KAApJD,EAAalB,GAAKG,eAAee,EAAajoC,MAAM,KAAK0nC,OAAO,SAAS1mB,GAAG,QAASA,KAAMknB,GAAkBvpB,KAAK,OAAoD,KAAMypB,SAAS,SAASl6B,EAAKm6B,GAA0E,SAASC,EAAKz+B,GAAiB,IAAZ,IAAIiyB,EAAM,EAAOA,EAAMjyB,EAAI3J,QAAgC,KAAb2J,EAAIiyB,GAAhBA,KAAwD,IAArB,IAAIpoB,EAAI7J,EAAI3J,OAAO,EAAOwT,GAAK,GAAuB,KAAX7J,EAAI6J,GAAdA,KAA+B,OAAGooB,EAAMpoB,EAAW,GAAU7J,EAAIxI,MAAMy6B,EAAMpoB,EAAIooB,EAAM,GAAtR5tB,EAAK85B,GAAQ39B,QAAQ6D,GAAMqlB,OAAO,GAAG8U,EAAGL,GAAQ39B,QAAQg+B,GAAI9U,OAAO,GAA2W,IAApJ,IAAIgV,EAAUD,EAAKp6B,EAAKlO,MAAM,MAAUwoC,EAAQF,EAAKD,EAAGroC,MAAM,MAAUE,EAAOK,KAAKkjB,IAAI8kB,EAAUroC,OAAOsoC,EAAQtoC,QAAYuoC,EAAgBvoC,EAAe2E,EAAE,EAAEA,EAAE3E,EAAO2E,IAAK,GAAG0jC,EAAU1jC,KAAK2jC,EAAQ3jC,GAAG,CAAC4jC,EAAgB5jC,EAAE,MAAQ,IAAI6jC,EAAY,GAAG,IAAQ7jC,EAAE4jC,EAAgB5jC,EAAE0jC,EAAUroC,OAAO2E,IAAK6jC,EAAY5jC,KAAK,MAAsE,OAA/D4jC,EAAYA,EAAYvkC,OAAOqkC,EAAQnnC,MAAMonC,KAAqC9pB,KAAK,OAAYgqB,GAAI,CAACC,KAAK,GAAGrhC,KAAK,aAAashC,SAAS,aAAaC,SAAS,SAASC,EAAIC,GAAKL,GAAIC,KAAKG,GAAK,CAACE,MAAM,GAAGC,OAAO,GAAGF,IAAIA,GAAKb,GAAGgB,eAAeJ,EAAIJ,GAAIS,aAAcA,WAAW,CAACxV,KAAK,SAASllB,GAAQ,IAAI26B,EAAIV,GAAIC,KAAKl6B,EAAOijB,KAAK2X,MAAM,IAAID,EAAK,MAAM,IAAIlB,GAAGoB,WAAW,IAAK76B,EAAO26B,IAAIA,EAAI36B,EAAO86B,UAAS,GAAQC,MAAM,SAAS/6B,GAAQA,EAAO26B,IAAIL,IAAIU,MAAMh7B,EAAO26B,MAAOK,MAAM,SAASh7B,GAAQA,EAAO26B,IAAIL,IAAIU,MAAMh7B,EAAO26B,MAAOxW,KAAK,SAASnkB,EAAO4D,EAAOyC,EAAO7U,EAAOypC,GAAK,IAAIj7B,EAAO26B,MAAM36B,EAAO26B,IAAIL,IAAIY,SAAU,MAAM,IAAIzB,GAAGoB,WAAW,IAAqB,IAAhB,IAAIM,EAAU,EAAUhlC,EAAE,EAAEA,EAAE3E,EAAO2E,IAAI,CAAC,IAAIrC,EAAO,IAAIA,EAAOkM,EAAO26B,IAAIL,IAAIY,SAASl7B,EAAO26B,KAAY5lC,MAAAA,GAAG,MAAM,IAAI0kC,GAAGoB,WAAW,IAAK,QAAY9hC,IAATjF,GAAgC,IAAZqnC,EAAe,MAAM,IAAI1B,GAAGoB,WAAW,GAAI,GAAG/mC,MAAAA,EAAkC,MAAMqnC,IAAYv3B,EAAOyC,EAAOlQ,GAAGrC,EAAwD,OAA7CqnC,IAAWn7B,EAAOijB,KAAKmY,UAAU/N,KAAKX,OAAcyO,GAAYh5B,MAAM,SAASnC,EAAO4D,EAAOyC,EAAO7U,EAAOypC,GAAK,IAAIj7B,EAAO26B,MAAM36B,EAAO26B,IAAIL,IAAIe,SAAU,MAAM,IAAI5B,GAAGoB,WAAW,IAAK,IAAI,IAAI,IAAI1kC,EAAE,EAAEA,EAAE3E,EAAO2E,IAAK6J,EAAO26B,IAAIL,IAAIe,SAASr7B,EAAO26B,IAAI/2B,EAAOyC,EAAOlQ,IAAYpB,MAAAA,GAAG,MAAM,IAAI0kC,GAAGoB,WAAW,IAAkD,OAA1CrpC,IAAQwO,EAAOijB,KAAKmY,UAAU/N,KAAKX,OAAcv2B,IAAKmlC,gBAAgB,CAACJ,SAAS,SAASP,GAAK,IAAIA,EAAIJ,MAAM/oC,OAAO,CAAC,IAAIsC,EAAO,KAAK,GAAGivB,EAAoB,CAAC,IAAoBjM,EAAI7X,EAAOuJ,MAAMvJ,EAAOuJ,MAAhC,KAA+C,IAAIvJ,EAAnD,KAAuEk8B,EAAU,EAAE,IAAIA,EAAU9X,EAAOkY,SAAShnC,EAAQinC,MAAMC,GAAG3kB,EAAI,EAAtI,IAAgJ,MAAa/hB,MAAAA,GAAG,IAAiC,GAA9BA,EAAE1D,WAAWK,QAAQ,OAA4B,MAAMqD,EAAvBomC,EAAU,EAAgCrnC,EAAbqnC,EAAU,EAAUrkB,EAAInkB,MAAM,EAAEwoC,GAAW9pC,SAAS,SAAuB,SAA8B,oBAAR+N,QAA2C,mBAAfA,OAAOs8B,OAAgE,QAA5C5nC,EAAOsL,OAAOs8B,OAAO,cAA6B5nC,GAAQ,MAAgC,mBAAV6nC,UAAoD,QAA9B7nC,EAAO6nC,cAA6B7nC,GAAQ,MAAO,IAAIA,EAAQ,OAAO,KAAM6mC,EAAIJ,MAAMqB,GAAmB9nC,GAAO,GAAO,OAAO6mC,EAAIJ,MAAMh9B,SAAU89B,SAAS,SAASV,EAAIt1B,GAAc,OAANA,GAAkB,KAANA,GAAUf,EAAI+hB,EAAkBsU,EAAIH,OAAO,IAAIG,EAAIH,OAAO,IAAkB,GAALn1B,GAAOs1B,EAAIH,OAAOpkC,KAAKiP,IAAQ21B,MAAM,SAASL,GAAQA,EAAIH,QAAQG,EAAIH,OAAOhpC,OAAO,IAAG8S,EAAI+hB,EAAkBsU,EAAIH,OAAO,IAAIG,EAAIH,OAAO,MAAOqB,iBAAiB,CAACR,SAAS,SAASV,EAAIt1B,GAAc,OAANA,GAAkB,KAANA,GAAUvJ,EAAIuqB,EAAkBsU,EAAIH,OAAO,IAAIG,EAAIH,OAAO,IAAkB,GAALn1B,GAAOs1B,EAAIH,OAAOpkC,KAAKiP,IAAQ21B,MAAM,SAASL,GAAQA,EAAIH,QAAQG,EAAIH,OAAOhpC,OAAO,IAAGsK,EAAIuqB,EAAkBsU,EAAIH,OAAO,IAAIG,EAAIH,OAAO,OAAYsB,GAAM,CAACC,UAAU,KAAKC,MAAM,SAASA,GAAO,OAAOF,GAAMG,WAAW,KAAK,IAAI,MAAU,IAAKA,WAAW,SAASC,EAAO5kC,EAAKm0B,EAAK4O,GAAK,GAAGZ,GAAG0C,SAAS1Q,IAAOgO,GAAG2C,OAAO3Q,GAAO,MAAM,IAAIgO,GAAGoB,WAAW,IAASiB,GAAMC,YAAWD,GAAMC,UAAU,CAACrkC,IAAI,CAACurB,KAAK,CAACoZ,QAAQP,GAAMQ,SAASD,QAAQE,QAAQT,GAAMQ,SAASC,QAAQC,OAAOV,GAAMQ,SAASE,OAAOC,MAAMX,GAAMQ,SAASG,MAAMC,OAAOZ,GAAMQ,SAASI,OAAOC,OAAOb,GAAMQ,SAASK,OAAOC,MAAMd,GAAMQ,SAASM,MAAMC,QAAQf,GAAMQ,SAASO,QAAQC,QAAQhB,GAAMQ,SAASQ,SAAS98B,OAAO,CAAC+8B,OAAOjB,GAAMpB,WAAWqC,SAASC,KAAK,CAAC/Z,KAAK,CAACoZ,QAAQP,GAAMQ,SAASD,QAAQE,QAAQT,GAAMQ,SAASC,SAASv8B,OAAO,CAAC+8B,OAAOjB,GAAMpB,WAAWqC,OAAO5Y,KAAK2X,GAAMpB,WAAWvW,KAAKhiB,MAAM25B,GAAMpB,WAAWv4B,MAAM86B,SAASnB,GAAMpB,WAAWuC,SAASC,KAAKpB,GAAMpB,WAAWwC,KAAKC,MAAMrB,GAAMpB,WAAWyC,QAAQC,KAAK,CAACna,KAAK,CAACoZ,QAAQP,GAAMQ,SAASD,QAAQE,QAAQT,GAAMQ,SAASC,QAAQc,SAASvB,GAAMQ,SAASe,UAAUr9B,OAAO,IAAIs9B,OAAO,CAACra,KAAK,CAACoZ,QAAQP,GAAMQ,SAASD,QAAQE,QAAQT,GAAMQ,SAASC,SAASv8B,OAAOy5B,GAAG8D,qBAAqB,IAAIta,EAAKwW,GAAGwC,WAAWC,EAAO5kC,EAAKm0B,EAAK4O,GAAqkB,OAA7jBZ,GAAG+D,MAAMva,EAAKwI,OAAOxI,EAAKqZ,SAASR,GAAMC,UAAUrkC,IAAIurB,KAAKA,EAAKyX,WAAWoB,GAAMC,UAAUrkC,IAAIsI,OAAOijB,EAAKwa,SAAS,IAAYhE,GAAGiE,OAAOza,EAAKwI,OAAOxI,EAAKqZ,SAASR,GAAMC,UAAUiB,KAAK/Z,KAAKA,EAAKyX,WAAWoB,GAAMC,UAAUiB,KAAKh9B,OAAOijB,EAAK0a,UAAU,EAAE1a,EAAKwa,SAAS,MAAchE,GAAGmE,OAAO3a,EAAKwI,OAAOxI,EAAKqZ,SAASR,GAAMC,UAAUqB,KAAKna,KAAKA,EAAKyX,WAAWoB,GAAMC,UAAUqB,KAAKp9B,QAAgBy5B,GAAGoE,SAAS5a,EAAKwI,QAAOxI,EAAKqZ,SAASR,GAAMC,UAAUuB,OAAOra,KAAKA,EAAKyX,WAAWoB,GAAMC,UAAUuB,OAAOt9B,QAAQijB,EAAKmY,UAAU/N,KAAKX,MAASwP,IAAQA,EAAOuB,SAASnmC,GAAM2rB,GAAaA,GAAO6a,0BAA0B,SAAS7a,GAAM,GAAGA,EAAKwa,UAAUxa,EAAKwa,SAAS9W,SAAS,CAAY,IAAX,IAAIxrB,EAAI,GAAWhF,EAAE,EAAEA,EAAE8sB,EAAK0a,YAAYxnC,EAAEgF,EAAI/E,KAAK6sB,EAAKwa,SAAStnC,IAAI,OAAOgF,EAAK,OAAO8nB,EAAKwa,UAAWM,wBAAwB,SAAS9a,GAAM,OAAIA,EAAKwa,SAAqCxa,EAAKwa,SAAS9W,SAAgB1D,EAAKwa,SAAS9W,SAAS,EAAE1D,EAAK0a,WAAkB,IAAIr+B,WAAW2jB,EAAKwa,UAAvH,IAAIn+B,WAAW,IAAoH0+B,kBAAkB,SAAS/a,EAAKgb,GAAa,IAAIC,EAAajb,EAAKwa,SAASxa,EAAKwa,SAASjsC,OAAO,EAAE,KAAG0sC,GAAcD,GAAjB,CAAwEA,EAAYpsC,KAAK2B,IAAIyqC,EAAYC,GAAcA,EAAzD,QAA4F,EAAE,SAAS,GAAoB,GAAdA,IAAgBD,EAAYpsC,KAAK2B,IAAIyqC,EAAY,MAAK,IAAIE,EAAYlb,EAAKwa,SAASxa,EAAKwa,SAAS,IAAIn+B,WAAW2+B,GAAgBhb,EAAK0a,UAAU,GAAE1a,EAAKwa,SAAS9gC,IAAIwhC,EAAYxX,SAAS,EAAE1D,EAAK0a,WAAW,KAAYS,kBAAkB,SAASnb,EAAKob,GAAS,GAAGpb,EAAK0a,WAAWU,EAAnB,CAAkC,GAAY,GAATA,EAAgD,OAApCpb,EAAKwa,SAAS,UAAKxa,EAAK0a,UAAU,GAAU,IAAI1a,EAAKwa,UAAUxa,EAAKwa,SAAS9W,SAAS,CAAC,IAAIwX,EAAYlb,EAAKwa,SAAmK,OAA1Jxa,EAAKwa,SAAS,IAAIn+B,WAAW++B,GAAYF,GAAalb,EAAKwa,SAAS9gC,IAAIwhC,EAAYxX,SAAS,EAAE90B,KAAKkjB,IAAIspB,EAAQpb,EAAK0a,kBAAc1a,EAAK0a,UAAUU,GAAmD,GAA/Bpb,EAAKwa,WAASxa,EAAKwa,SAAS,IAAMxa,EAAKwa,SAASjsC,OAAO6sC,EAAQpb,EAAKwa,SAASjsC,OAAO6sC,OAAa,KAAMpb,EAAKwa,SAASjsC,OAAO6sC,GAAQpb,EAAKwa,SAASrnC,KAAK,GAAG6sB,EAAK0a,UAAUU,IAAU/B,SAAS,CAACD,QAAQ,SAASpZ,GAAM,IAAIqb,EAAK,GAAke,OAA/dA,EAAKjE,IAAIZ,GAAGoE,SAAS5a,EAAKwI,MAAMxI,EAAKnc,GAAG,EAAEw3B,EAAKC,IAAItb,EAAKnc,GAAGw3B,EAAK7S,KAAKxI,EAAKwI,KAAK6S,EAAKE,MAAM,EAAEF,EAAKG,IAAI,EAAEH,EAAKI,IAAI,EAAEJ,EAAK1D,KAAK3X,EAAK2X,KAAQnB,GAAG+D,MAAMva,EAAKwI,MAAO6S,EAAKh1B,KAAK,KAAcmwB,GAAGiE,OAAOza,EAAKwI,MAAO6S,EAAKh1B,KAAK2Z,EAAK0a,UAAmBlE,GAAGmE,OAAO3a,EAAKwI,MAAO6S,EAAKh1B,KAAK2Z,EAAKma,KAAK5rC,OAAc8sC,EAAKh1B,KAAK,EAAGg1B,EAAKK,MAAM,IAAItR,KAAKpK,EAAKmY,WAAWkD,EAAKM,MAAM,IAAIvR,KAAKpK,EAAKmY,WAAWkD,EAAKO,MAAM,IAAIxR,KAAKpK,EAAKmY,WAAWkD,EAAKQ,QAAQ,KAAKR,EAAKS,OAAOltC,KAAKkY,KAAKu0B,EAAKh1B,KAAKg1B,EAAKQ,SAAgBR,GAAO/B,QAAQ,SAAStZ,EAAKqb,QAAqBvlC,IAAZulC,EAAK7S,OAAkBxI,EAAKwI,KAAK6S,EAAK7S,WAA0B1yB,IAAjBulC,EAAKlD,YAAuBnY,EAAKmY,UAAUkD,EAAKlD,gBAA0BriC,IAAZulC,EAAKh1B,MAAkBwyB,GAAMsC,kBAAkBnb,EAAKqb,EAAKh1B,OAASkzB,OAAO,SAASN,EAAO5kC,GAAM,MAAMmiC,GAAGuF,cAAc,KAAMvC,MAAM,SAASP,EAAO5kC,EAAKm0B,EAAK4O,GAAK,OAAOyB,GAAMG,WAAWC,EAAO5kC,EAAKm0B,EAAK4O,IAAOqC,OAAO,SAASuC,EAASC,EAAQC,GAAU,GAAG1F,GAAG+D,MAAMyB,EAASxT,MAAM,CAAC,IAAI2T,EAAS,IAAIA,EAAS3F,GAAG4F,WAAWH,EAAQC,GAAiBpqC,MAAAA,IAAI,GAAGqqC,EAAU,IAAI,IAAIjpC,KAAKipC,EAAS3B,SAAU,MAAM,IAAIhE,GAAGoB,WAAW,WAAcoE,EAAS/C,OAAOuB,SAASwB,EAAS3nC,MAAM2nC,EAAS3nC,KAAK6nC,EAASD,EAAQzB,SAAS0B,GAAUF,EAASA,EAAS/C,OAAOgD,GAAUvC,OAAO,SAAST,EAAO5kC,UAAa4kC,EAAOuB,SAASnmC,IAAQslC,MAAM,SAASV,EAAO5kC,GAAM,IAAI2rB,EAAKwW,GAAG4F,WAAWnD,EAAO5kC,GAAM,IAAI,IAAInB,KAAK8sB,EAAKwa,SAAU,MAAM,IAAIhE,GAAGoB,WAAW,WAAYqB,EAAOuB,SAASnmC,IAAQulC,QAAQ,SAAS5Z,GAAM,IAAIqc,EAAQ,CAAC,IAAI,MAAM,IAAI,IAAI9hC,KAAOylB,EAAKwa,SAAcxa,EAAKwa,SAASnjB,eAAe9c,IAAgB8hC,EAAQlpC,KAAKoH,GAAM,OAAO8hC,GAAUxC,QAAQ,SAASZ,EAAOqD,EAAQC,GAAS,IAAIvc,EAAK6Y,GAAMG,WAAWC,EAAOqD,EAAQ,MAAU,GAAqB,OAAlBtc,EAAKma,KAAKoC,EAAevc,GAAOoa,SAAS,SAASpa,GAAM,IAAIwW,GAAGmE,OAAO3a,EAAKwI,MAAO,MAAM,IAAIgO,GAAGoB,WAAW,IAAK,OAAO5X,EAAKma,OAAQ1C,WAAW,CAACvW,KAAK,SAASnkB,EAAO4D,EAAOyC,EAAO7U,EAAO6L,GAAU,IAAIogC,EAASz9B,EAAOijB,KAAKwa,SAAS,GAAGpgC,GAAU2C,EAAOijB,KAAK0a,UAAU,OAAO,EAAE,IAAIr0B,EAAKzX,KAAKkjB,IAAI/U,EAAOijB,KAAK0a,UAAUtgC,EAAS7L,GAAQ,GAAG8X,EAAK,GAAGm0B,EAAS9W,SAAU/iB,EAAOjH,IAAI8gC,EAAS9W,SAAStpB,EAASA,EAASiM,GAAMjD,QAAe,IAAI,IAAIlQ,EAAE,EAAEA,EAAEmT,EAAKnT,IAAIyN,EAAOyC,EAAOlQ,GAAGsnC,EAASpgC,EAASlH,GAAI,OAAOmT,GAAOnH,MAAM,SAASnC,EAAO4D,EAAOyC,EAAO7U,EAAO6L,EAASoiC,GAAuD,GAA5C77B,EAAOA,SAASikB,EAAMjkB,SAAQ67B,GAAO,IAAWjuC,EAAO,OAAO,EAAE,IAAIyxB,EAAKjjB,EAAOijB,KAA+B,GAA1BA,EAAKmY,UAAU/N,KAAKX,MAAS9oB,EAAO+iB,YAAY1D,EAAKwa,UAAUxa,EAAKwa,SAAS9W,UAAU,CAAC,GAAG8Y,EAAkF,OAA1Exc,EAAKwa,SAAS75B,EAAO+iB,SAAStgB,EAAOA,EAAO7U,GAAQyxB,EAAK0a,UAAUnsC,EAAcA,EAAa,GAAoB,IAAjByxB,EAAK0a,WAA0B,IAAXtgC,EAAqF,OAAvE4lB,EAAKwa,SAAS75B,EAAOjR,MAAM0T,EAAOA,EAAO7U,GAAQyxB,EAAK0a,UAAUnsC,EAAcA,EAAa,GAAG6L,EAAS7L,GAAQyxB,EAAK0a,UAA6E,OAAlE1a,EAAKwa,SAAS9gC,IAAIiH,EAAO+iB,SAAStgB,EAAOA,EAAO7U,GAAQ6L,GAAiB7L,EAAuD,GAA9CsqC,GAAMkC,kBAAkB/a,EAAK5lB,EAAS7L,GAAWyxB,EAAKwa,SAAS9W,UAAU/iB,EAAO+iB,SAAU1D,EAAKwa,SAAS9gC,IAAIiH,EAAO+iB,SAAStgB,EAAOA,EAAO7U,GAAQ6L,QAAiB,IAAI,IAAIlH,EAAE,EAAEA,EAAE3E,EAAO2E,IAAK8sB,EAAKwa,SAASpgC,EAASlH,GAAGyN,EAAOyC,EAAOlQ,GAA6D,OAAxD8sB,EAAK0a,UAAU9rC,KAAK2B,IAAIyvB,EAAK0a,UAAUtgC,EAAS7L,GAAeA,GAASurC,OAAO,SAAS/8B,EAAOqG,EAAOq5B,GAAQ,IAAIriC,EAASgJ,EAAuI,GAApH,IAATq5B,EAAYriC,GAAU2C,EAAO3C,SAA2B,IAATqiC,GAAejG,GAAGiE,OAAO19B,EAAOijB,KAAKwI,QAAOpuB,GAAU2C,EAAOijB,KAAK0a,WAAetgC,EAAS,EAAG,MAAM,IAAIo8B,GAAGoB,WAAW,IAAK,OAAOx9B,GAAW4/B,SAAS,SAASj9B,EAAOqG,EAAO7U,GAAQsqC,GAAMkC,kBAAkBh+B,EAAOijB,KAAK5c,EAAO7U,GAAQwO,EAAOijB,KAAK0a,UAAU9rC,KAAK2B,IAAIwM,EAAOijB,KAAK0a,UAAUt3B,EAAO7U,IAAU0rC,KAAK,SAASl9B,EAAO2/B,EAAQnuC,EAAO6L,EAASuiC,EAAKzjC,GAA2B,GAApB4nB,EAAiB,IAAV4b,IAAiBlG,GAAGiE,OAAO19B,EAAOijB,KAAKwI,MAAO,MAAM,IAAIgO,GAAGoB,WAAW,IAAK,IAAI1T,EAAQ0Y,EAAcpC,EAASz9B,EAAOijB,KAAKwa,SAAS,GAAW,EAANthC,GAAUshC,EAAS75B,SAASA,EAAsD,CAAoP,IAAhPvG,EAAS,GAAGA,EAAS7L,EAAOisC,EAASjsC,UAA8BisC,EAAnBA,EAAS9W,SAAmB8W,EAAS9W,SAAStpB,EAASA,EAAS7L,GAAwB0E,MAAMG,UAAU1D,MAAMqC,KAAKyoC,EAASpgC,EAASA,EAAS7L,IAAUquC,GAAU,IAAK1Y,EAAIsS,GAAGqG,UAAUtuC,IAAiB,MAAM,IAAIioC,GAAGoB,WAAW,IAAKhT,EAAMlrB,IAAI8gC,EAAStW,QAA3V0Y,GAAU,EAAM1Y,EAAIsW,EAASsC,WAAoU,MAAO,CAAC5Y,IAAIA,EAAI0Y,UAAUA,IAAa1C,MAAM,SAASn9B,EAAO4D,EAAOyC,EAAO7U,EAAOwuC,GAAW,IAAIvG,GAAGiE,OAAO19B,EAAOijB,KAAKwI,MAAO,MAAM,IAAIgO,GAAGoB,WAAW,IAAK,OAAa,EAAVmF,EAAoB,GAAGlE,GAAMpB,WAAWv4B,MAAMnC,EAAO4D,EAAO,EAAEpS,EAAO6U,GAAO,GAAc,MAAUozB,GAAG,CAAC1X,KAAK,KAAKke,OAAO,GAAGC,QAAQ,GAAGC,QAAQ,GAAGC,UAAU,EAAEC,UAAU,KAAKC,YAAY,IAAIC,aAAY,EAAMC,mBAAkB,EAAKC,iBAAiB,GAAGC,SAAS,CAACC,UAAU,CAACC,KAAK,EAAEC,MAAM,IAAIhG,WAAW,KAAKmE,cAAc,GAAG8B,YAAY,KAAKC,eAAe,EAAEC,cAAc,SAASjsC,GAAG,KAAKA,aAAa0kC,GAAGoB,YAAY,MAAM9lC,EAAE,MAAM+iC,KAAa,OAAOK,GAASpjC,EAAEksC,QAASC,WAAW,SAAS1d,EAAK2d,GAAwD,GAAdA,EAAKA,GAAM,KAA/C3d,EAAK8V,GAAQ39B,QAAQ89B,GAAGjiC,MAAMgsB,IAA6B,MAAO,CAACA,KAAK,GAAGP,KAAK,MAAM,IAAIme,EAAS,CAACC,cAAa,EAAKC,cAAc,GAAG,IAAI,IAAI9jC,KAAO4jC,OAAyBroC,IAAZooC,EAAK3jC,KAAkB2jC,EAAK3jC,GAAK4jC,EAAS5jC,IAAO,GAAG2jC,EAAKG,cAAc,EAAG,MAAM,IAAI7H,GAAGoB,WAAW,IAAoI,IAA/H,IAAIpC,EAAMJ,GAAKG,eAAehV,EAAKlyB,MAAM,KAAK0nC,OAAO,SAAS1mB,GAAG,QAASA,KAAK,GAAWjO,EAAQo1B,GAAG1X,KAASwf,EAAa,IAAYprC,EAAE,EAAEA,EAAEsiC,EAAMjnC,OAAO2E,IAAI,CAAC,IAAIqrC,EAAOrrC,IAAIsiC,EAAMjnC,OAAO,EAAE,GAAGgwC,GAAQL,EAAKjF,OAAQ,MAAiM,GAA1L73B,EAAQo1B,GAAG4F,WAAWh7B,EAAQo0B,EAAMtiC,IAAIorC,EAAalJ,GAAKgB,MAAMkI,EAAa9I,EAAMtiC,IAAOsjC,GAAGgI,aAAap9B,MAAcm9B,GAAQA,GAAQL,EAAKE,gBAAch9B,EAAQA,EAAQq9B,QAAQ3f,OAAWyf,GAAQL,EAAKQ,OAAoB,IAAZ,IAAItnC,EAAM,EAAQo/B,GAAGmE,OAAOv5B,EAAQonB,OAAM,CAAC,IAAI2R,EAAK3D,GAAG4D,SAASkE,GAA0K,GAA5JA,EAAajI,GAAQ39B,QAAQ08B,GAAK5U,QAAQ8d,GAAcnE,GAAgF/4B,EAA/Do1B,GAAGyH,WAAWK,EAAa,CAACD,cAAcH,EAAKG,gBAA+Bre,KAAQ5oB,IAAQ,GAAI,MAAM,IAAIo/B,GAAGoB,WAAW,KAAQ,MAAO,CAACrX,KAAK+d,EAAate,KAAK5e,IAAWu9B,QAAQ,SAAS3e,GAAe,IAAT,IAAIO,IAAgB,CAAC,GAAGiW,GAAGoI,OAAO5e,GAAM,CAAC,IAAI+Y,EAAM/Y,EAAK+Y,MAAM8F,WAAW,OAAIte,EAAiD,MAAxBwY,EAAMA,EAAMxqC,OAAO,GAASwqC,EAAM,IAAIxY,EAAKwY,EAAMxY,EAA9DwY,EAAoExY,EAAKA,EAAKP,EAAK3rB,KAAK,IAAIksB,EAAKP,EAAK3rB,KAAK2rB,EAAKA,EAAKiZ,SAAU6F,SAAS,SAASC,EAAS1qC,GAAiB,IAAX,IAAIuP,EAAK,EAAU1Q,EAAE,EAAEA,EAAEmB,EAAK9F,OAAO2E,IAAK0Q,GAAMA,GAAM,GAAGA,EAAKvP,EAAKmwB,WAAWtxB,GAAG,EAAG,OAAQ6rC,EAASn7B,IAAO,GAAG4yB,GAAG4G,UAAU7uC,QAASywC,YAAY,SAAShf,GAAM,IAAIpc,EAAK4yB,GAAGsI,SAAS9e,EAAKiZ,OAAOp1B,GAAGmc,EAAK3rB,MAAM2rB,EAAKif,UAAUzI,GAAG4G,UAAUx5B,GAAM4yB,GAAG4G,UAAUx5B,GAAMoc,GAAOkf,eAAe,SAASlf,GAAM,IAAIpc,EAAK4yB,GAAGsI,SAAS9e,EAAKiZ,OAAOp1B,GAAGmc,EAAK3rB,MAAM,GAAGmiC,GAAG4G,UAAUx5B,KAAQoc,EAAMwW,GAAG4G,UAAUx5B,GAAMoc,EAAKif,eAAgD,IAA/B,IAAI79B,EAAQo1B,GAAG4G,UAAUx5B,GAAYxC,GAAQ,CAAC,GAAGA,EAAQ69B,YAAYjf,EAAK,CAAC5e,EAAQ69B,UAAUjf,EAAKif,UAAU,MAAO79B,EAAQA,EAAQ69B,YAAc7C,WAAW,SAASnD,EAAO5kC,GAAM,IAAI8qC,EAAQ3I,GAAG4I,UAAUnG,GAAQ,GAAGkG,EAAS,MAAM,IAAI3I,GAAGoB,WAAWuH,EAAQlG,GAA8C,IAArC,IAAIr1B,EAAK4yB,GAAGsI,SAAS7F,EAAOp1B,GAAGxP,GAAc2rB,EAAKwW,GAAG4G,UAAUx5B,GAAMoc,EAAKA,EAAKA,EAAKif,UAAU,CAAC,IAAII,EAASrf,EAAK3rB,KAAK,GAAG2rB,EAAKiZ,OAAOp1B,KAAKo1B,EAAOp1B,IAAIw7B,IAAWhrC,EAAM,OAAO2rB,EAAO,OAAOwW,GAAG+C,OAAON,EAAO5kC,IAAQ2kC,WAAW,SAASC,EAAO5kC,EAAKm0B,EAAKmP,GAAM,IAAI3X,EAAK,IAAIwW,GAAG8I,OAAOrG,EAAO5kC,EAAKm0B,EAAKmP,GAA2B,OAArBnB,GAAGwI,YAAYhf,GAAaA,GAAOuf,YAAY,SAASvf,GAAMwW,GAAG0I,eAAelf,IAAQ4e,OAAO,SAAS5e,GAAM,OAAOA,IAAOA,EAAKiZ,QAASuF,aAAa,SAASxe,GAAM,QAASA,EAAKye,SAAUhE,OAAO,SAASjS,GAAM,OAAsB,QAAT,MAALA,IAAsB+R,MAAM,SAAS/R,GAAM,OAAsB,QAAT,MAALA,IAAsBmS,OAAO,SAASnS,GAAM,OAAsB,QAAT,MAALA,IAAsBoS,SAAS,SAASpS,GAAM,OAAsB,OAAT,MAALA,IAAqB0Q,SAAS,SAAS1Q,GAAM,OAAsB,QAAT,MAALA,IAAsB2Q,OAAO,SAAS3Q,GAAM,OAAsB,OAAT,MAALA,IAAqBgX,SAAS,SAAShX,GAAM,OAAsB,QAAT,MAALA,IAAsBiX,UAAU,CAAC,EAAI,EAAE,GAAK,QAAQ,KAAK,EAAE,EAAI,IAAI,GAAK,IAAI,GAAK,IAAI,KAAK,IAAI,MAAM,IAAI,MAAM,IAAI,EAAI,KAAK,GAAK,KAAK,GAAK,KAAK,KAAK,KAAK,MAAM,KAAK,MAAM,MAAMC,kBAAkB,SAAS/b,GAAK,IAAIzqB,EAAMs9B,GAAGiJ,UAAU9b,GAAK,QAAkB,IAARzqB,EAAqB,MAAM,IAAIzH,MAAM,2BAA2BkyB,GAAM,OAAOzqB,GAAQymC,wBAAwB,SAAS3uC,GAAM,IAAI4uC,EAAM,CAAC,IAAI,IAAI,MAAW,EAAL5uC,GAAiC,OAAjB,IAALA,IAAU4uC,GAAO,KAAYA,GAAQC,gBAAgB,SAAS7f,EAAK4f,GAAO,OAAGpJ,GAAG+G,kBAA0B,IAA4B,IAAtBqC,EAAMnxC,QAAQ,MAAuB,IAAVuxB,EAAKwI,SAAmD,IAAtBoX,EAAMnxC,QAAQ,MAAuB,IAAVuxB,EAAKwI,SAAmD,IAAtBoX,EAAMnxC,QAAQ,MAAuB,GAAVuxB,EAAKwI,MAA2B,EAAnI,GAAuI4W,UAAU,SAAS3qC,GAAK,IAAI0qC,EAAQ3I,GAAGqJ,gBAAgBprC,EAAI,KAAK,OAAG0qC,IAA2B1qC,EAAI4kC,SAASE,OAAuB,EAAT,IAAauG,UAAU,SAASrrC,EAAIJ,GAAM,IAAqC,OAAxBmiC,GAAG4F,WAAW3nC,EAAIJ,GAAa,GAAUvC,MAAAA,IAAI,OAAO0kC,GAAGqJ,gBAAgBprC,EAAI,OAAQsrC,UAAU,SAAStrC,EAAIJ,EAAK2rC,GAAO,IAAIhgB,EAAK,IAAIA,EAAKwW,GAAG4F,WAAW3nC,EAAIJ,GAAavC,MAAAA,GAAG,OAAOA,EAAEksC,MAAO,IAAImB,EAAQ3I,GAAGqJ,gBAAgBprC,EAAI,MAAM,GAAG0qC,EAAS,OAAOA,EAAS,GAAGa,EAAM,CAAC,IAAIxJ,GAAG+D,MAAMva,EAAKwI,MAAO,OAAO,GAAI,GAAGgO,GAAGoI,OAAO5e,IAAOwW,GAAGmI,QAAQ3e,KAAQwW,GAAGjiC,MAAO,OAAO,QAAW,GAAGiiC,GAAG+D,MAAMva,EAAKwI,MAAO,OAAO,GAAK,OAAO,GAAIyX,QAAQ,SAASjgB,EAAK9mB,GAAO,OAAI8mB,EAAoBwW,GAAGmE,OAAO3a,EAAKwI,MAAc,GAAYgO,GAAG+D,MAAMva,EAAKwI,QAA8C,MAApCgO,GAAGmJ,wBAAwBzmC,IAAoB,IAANA,GAAkB,GAAYs9B,GAAGqJ,gBAAgB7f,EAAKwW,GAAGmJ,wBAAwBzmC,IAAlM,IAA4MgnC,aAAa,KAAKC,OAAO,SAASC,EAASC,GAAQD,EAASA,GAAU,EAAEC,EAAOA,GAAQ7J,GAAG0J,aAAa,IAAI,IAAI1H,EAAG4H,EAAS5H,GAAI6H,EAAO7H,IAAM,IAAIhC,GAAG0G,QAAQ1E,GAAK,OAAOA,EAAK,MAAM,IAAIhC,GAAGoB,WAAW,KAAM0I,UAAU,SAAS9H,GAAI,OAAOhC,GAAG0G,QAAQ1E,IAAM+H,aAAa,SAASxjC,EAAOqjC,EAASC,GAAY7J,GAAGgK,WAAUhK,GAAGgK,SAAS,aAAahK,GAAGgK,SAASptC,UAAU,CAACqO,OAAO,CAAChI,IAAI,WAAW,OAAO,KAAKumB,MAAOtmB,IAAI,SAAS0I,GAAK,KAAK4d,KAAK5d,IAAOq+B,OAAO,CAAChnC,IAAI,WAAW,OAA8B,IAAX,QAAX,KAAKP,SAAsBwnC,QAAQ,CAACjnC,IAAI,WAAW,OAA8B,IAAX,QAAX,KAAKP,SAAsBynC,SAAS,CAAClnC,IAAI,WAAW,OAAkB,KAAX,KAAKP,UAAgB,IAAI0nC,EAAU,IAAIpK,GAAGgK,SAAW,IAAI,IAAInxB,KAAKtS,EAAQ6jC,EAAUvxB,GAAGtS,EAAOsS,GAAItS,EAAO6jC,EAAU,IAAIpI,EAAGhC,GAAG2J,OAAOC,EAASC,GAA2C,OAAnCtjC,EAAOy7B,GAAGA,EAAGhC,GAAG0G,QAAQ1E,GAAIz7B,EAAcA,GAAS8jC,YAAY,SAASrI,GAAIhC,GAAG0G,QAAQ1E,GAAI,MAAO8B,kBAAkB,CAACrY,KAAK,SAASllB,GAAQ,IAAI+jC,EAAOtK,GAAGuK,UAAUhkC,EAAOijB,KAAK2X,MAAM56B,EAAO06B,WAAWqJ,EAAOrJ,WAAc16B,EAAO06B,WAAWxV,MAAMllB,EAAO06B,WAAWxV,KAAKllB,IAAW+8B,OAAO,WAAW,MAAM,IAAItD,GAAGoB,WAAW,MAAOoJ,MAAM,SAAS5J,GAAK,OAAOA,GAAK,GAAI6J,MAAM,SAAS7J,GAAK,OAAW,IAAJA,GAAU8J,QAAQ,SAASC,EAAGC,GAAI,OAAOD,GAAI,EAAEC,GAAK5J,eAAe,SAASJ,EAAIC,GAAKb,GAAGyG,QAAQ7F,GAAK,CAACK,WAAWJ,IAAO0J,UAAU,SAAS3J,GAAK,OAAOZ,GAAGyG,QAAQ7F,IAAOiK,UAAU,SAAStI,GAAuC,IAAhC,IAAIiE,EAAO,GAAOsE,EAAM,CAACvI,GAAauI,EAAM/yC,QAAO,CAAC,IAAImI,EAAE4qC,EAAM/oC,MAAMykC,EAAO7pC,KAAKuD,GAAG4qC,EAAMnuC,KAAKE,MAAMiuC,EAAM5qC,EAAEsmC,QAAS,OAAOA,GAASuE,OAAO,SAASC,EAASvmC,GAA+B,mBAAXumC,IAAuBvmC,EAASumC,EAASA,GAAS,GAAOhL,GAAGsH,iBAAoBtH,GAAGsH,eAAe,GAAGjlC,EAAI,YAAY29B,GAAGsH,eAAe,2EAA4E,IAAId,EAAOxG,GAAG6K,UAAU7K,GAAG1X,KAAKia,OAAW0I,EAAU,EAAE,SAASC,EAAWvC,GAA6B,OAApB3I,GAAGsH,iBAAwB7iC,EAASkkC,GAAU,SAASnsB,EAAKmsB,GAAS,GAAGA,EAAS,OAAInsB,EAAK2uB,aAAuD,GAA9C3uB,EAAK2uB,SAAQ,EAAYD,EAAWvC,MAAuBsC,GAAWzE,EAAOzuC,QAAQmzC,EAAW,MAAQ1E,EAAOjqB,QAAQ,SAASgmB,GAAO,IAAIA,EAAMviC,KAAK+qC,OAAQ,OAAOvuB,EAAK,MAAO+lB,EAAMviC,KAAK+qC,OAAOxI,EAAMyI,EAASxuB,MAAW+lB,MAAM,SAASviC,EAAK0nC,EAAKW,GAAY,IAAqD7e,EAAjDlB,EAAkB,MAAb+f,EAAqB+C,GAAQ/C,EAAoB,GAAG/f,GAAM0X,GAAG1X,KAAM,MAAM,IAAI0X,GAAGoB,WAAW,IAAU,IAAI9Y,IAAO8iB,EAAO,CAAC,IAAIrI,EAAO/C,GAAGyH,WAAWY,EAAW,CAACT,cAAa,IAAgD,GAAxCS,EAAWtF,EAAOhZ,KAAKP,EAAKuZ,EAAOvZ,KAAQwW,GAAGgI,aAAaxe,GAAO,MAAM,IAAIwW,GAAGoB,WAAW,IAAK,IAAIpB,GAAG+D,MAAMva,EAAKwI,MAAO,MAAM,IAAIgO,GAAGoB,WAAW,IAAM,IAAImB,EAAM,CAACviC,KAAKA,EAAK0nC,KAAKA,EAAKW,WAAWA,EAAW7B,OAAO,IAAQ6E,EAAUrrC,EAAKuiC,MAAMA,GAA8J,OAAvJ8I,EAAU9I,MAAMA,EAAMA,EAAMja,KAAK+iB,EAAa/iB,EAAM0X,GAAG1X,KAAK+iB,EAAmB7hB,IAAMA,EAAKye,QAAQ1F,EAAS/Y,EAAK+Y,OAAO/Y,EAAK+Y,MAAMiE,OAAO7pC,KAAK4lC,IAAgB8I,GAAYC,QAAQ,SAASjD,GAAY,IAAItF,EAAO/C,GAAGyH,WAAWY,EAAW,CAACT,cAAa,IAAQ,IAAI5H,GAAGgI,aAAajF,EAAOvZ,MAAO,MAAM,IAAIwW,GAAGoB,WAAW,IAAK,IAAI5X,EAAKuZ,EAAOvZ,KAAS+Y,EAAM/Y,EAAKye,QAAYzB,EAAOxG,GAAG6K,UAAUtI,GAAO1jC,OAAOmF,KAAKg8B,GAAG4G,WAAWrqB,QAAQ,SAASnP,GAAqC,IAA/B,IAAIxC,EAAQo1B,GAAG4G,UAAUx5B,GAAYxC,GAAQ,CAAC,IAAIvR,EAAKuR,EAAQ69B,WAA8C,IAAjCjC,EAAOvuC,QAAQ2S,EAAQ23B,QAAavC,GAAG+I,YAAYn+B,GAAUA,EAAQvR,KAASmwB,EAAKye,QAAQ,KAAK,IAAInb,EAAItD,EAAK+Y,MAAMiE,OAAOvuC,QAAQsqC,GAAO/Y,EAAK+Y,MAAMiE,OAAOrH,OAAOrS,EAAI,IAAKiW,OAAO,SAASN,EAAO5kC,GAAM,OAAO4kC,EAAOI,SAASE,OAAON,EAAO5kC,IAAQmlC,MAAM,SAASjZ,EAAKiI,EAAK4O,GAAK,IAAiD6B,EAAtCzC,GAAGyH,WAAW1d,EAAK,CAAC0Y,QAAO,IAAyBjZ,KAAS3rB,EAAK+gC,GAAKY,SAASzV,GAAM,IAAIlsB,GAAa,MAAPA,GAAmB,OAAPA,EAAa,MAAM,IAAImiC,GAAGoB,WAAW,IAAK,IAAIuH,EAAQ3I,GAAGsJ,UAAU7G,EAAO5kC,GAAM,GAAG8qC,EAAS,MAAM,IAAI3I,GAAGoB,WAAWuH,GAAU,IAAIlG,EAAOI,SAASG,MAAO,MAAM,IAAIhD,GAAGoB,WAAW,IAAK,OAAOqB,EAAOI,SAASG,MAAMP,EAAO5kC,EAAKm0B,EAAK4O,IAAOvgC,OAAO,SAAS0pB,EAAKiI,GAA4D,OAAtDA,OAAY1yB,IAAP0yB,EAAiBA,EAAK,IAAIA,GAAM,KAAKA,GAAM,MAAagO,GAAGgD,MAAMjZ,EAAKiI,EAAK,IAAKuZ,MAAM,SAASxhB,EAAKiI,GAA+D,OAAzDA,OAAY1yB,IAAP0yB,EAAiBA,EAAK,IAAIA,GAAM,KAAQA,GAAM,MAAagO,GAAGgD,MAAMjZ,EAAKiI,EAAK,IAAKwZ,UAAU,SAASzhB,EAAKiI,GAAwC,IAAlC,IAAIyZ,EAAK1hB,EAAKlyB,MAAM,KAAS6zC,EAAE,GAAWhvC,EAAE,EAAEA,EAAE+uC,EAAK1zC,SAAS2E,EAAG,GAAI+uC,EAAK/uC,GAAT,CAAqBgvC,GAAG,IAAID,EAAK/uC,GAAG,IAAIsjC,GAAGuL,MAAMG,EAAE1Z,GAAa12B,MAAAA,GAAG,GAAY,IAATA,EAAEksC,MAAU,MAAMlsC,KAAMqwC,MAAM,SAAS5hB,EAAKiI,EAAK4O,GAAgE,YAA3C,IAANA,IAAmBA,EAAI5O,EAAKA,EAAK,KAAKA,GAAM,KAAYgO,GAAGgD,MAAMjZ,EAAKiI,EAAK4O,IAAOyC,QAAQ,SAAS0C,EAAQ6F,GAAS,IAAI/L,GAAQ39B,QAAQ6jC,GAAU,MAAM,IAAI/F,GAAGoB,WAAW,IAAK,IAAoDqB,EAAzCzC,GAAGyH,WAAWmE,EAAQ,CAACnJ,QAAO,IAAyBjZ,KAAK,IAAIiZ,EAAQ,MAAM,IAAIzC,GAAGoB,WAAW,IAAK,IAAI0E,EAAQlH,GAAKY,SAASoM,GAAajD,EAAQ3I,GAAGsJ,UAAU7G,EAAOqD,GAAS,GAAG6C,EAAS,MAAM,IAAI3I,GAAGoB,WAAWuH,GAAU,IAAIlG,EAAOI,SAASQ,QAAS,MAAM,IAAIrD,GAAGoB,WAAW,IAAK,OAAOqB,EAAOI,SAASQ,QAAQZ,EAAOqD,EAAQC,IAAW9C,OAAO,SAAS4I,EAASC,GAAU,IAAmKC,EAAQtG,EAAvKuG,EAAYpN,GAAK5U,QAAQ6hB,GAAcI,EAAYrN,GAAK5U,QAAQ8hB,GAAcI,EAAStN,GAAKY,SAASqM,GAAcnG,EAAS9G,GAAKY,SAASsM,GAAqC,IAAiDC,EAAtC/L,GAAGyH,WAAWoE,EAAS,CAACpJ,QAAO,IAAsBjZ,KAAkDic,EAAtCzF,GAAGyH,WAAWqE,EAAS,CAACrJ,QAAO,IAAsBjZ,KAAYluB,MAAAA,GAAG,MAAM,IAAI0kC,GAAGoB,WAAW,IAAK,IAAI2K,IAAUtG,EAAQ,MAAM,IAAIzF,GAAGoB,WAAW,IAAI,GAAG2K,EAAQxJ,QAAQkD,EAAQlD,MAAO,MAAM,IAAIvC,GAAGoB,WAAW,IAAK,IAAyQuE,EAArQH,EAASxF,GAAG4F,WAAWmG,EAAQG,GAAcjM,EAASJ,GAAQI,SAAS4L,EAASI,GAAa,GAAwB,MAArBhM,EAASva,OAAO,GAAU,MAAM,IAAIsa,GAAGoB,WAAW,IAAqD,GAAwB,OAAxEnB,EAASJ,GAAQI,SAAS6L,EAASE,IAAyBtmB,OAAO,GAAU,MAAM,IAAIsa,GAAGoB,WAAW,IAAkB,IAAIuE,EAAS3F,GAAG4F,WAAWH,EAAQC,GAAiBpqC,MAAAA,IAAI,GAAGkqC,IAAWG,EAAd,CAAgC,IAAI6D,EAAMxJ,GAAG+D,MAAMyB,EAASxT,MAAU2W,EAAQ3I,GAAGuJ,UAAUwC,EAAQG,EAAS1C,GAAO,GAAGb,EAAS,MAAM,IAAI3I,GAAGoB,WAAWuH,GAA+F,GAArFA,EAAQhD,EAAS3F,GAAGuJ,UAAU9D,EAAQC,EAAS8D,GAAOxJ,GAAGsJ,UAAU7D,EAAQC,GAAsB,MAAM,IAAI1F,GAAGoB,WAAWuH,GAAU,IAAIoD,EAAQlJ,SAASI,OAAQ,MAAM,IAAIjD,GAAGoB,WAAW,IAAK,GAAGpB,GAAGgI,aAAaxC,IAAWG,GAAU3F,GAAGgI,aAAarC,GAAW,MAAM,IAAI3F,GAAGoB,WAAW,IAAK,GAAGqE,IAAUsG,IAASpD,EAAQ3I,GAAGqJ,gBAAgB0C,EAAQ,MAAiB,MAAM,IAAI/L,GAAGoB,WAAWuH,GAAW,IAAO3I,GAAGgH,iBAA+B,cAAGhH,GAAGgH,iBAA+B,aAAE6E,EAASC,GAAkBxwC,MAAAA,GAAG+G,EAAI,wCAAwCwpC,EAAS,OAAOC,EAAS,0BAA0BxwC,EAAEoI,SAAUs8B,GAAG0I,eAAelD,GAAU,IAAIuG,EAAQlJ,SAASI,OAAOuC,EAASC,EAAQC,GAAiBpqC,MAAAA,GAAG,MAAMA,EAAU,QAAC0kC,GAAGwI,YAAYhD,GAAW,IAAOxF,GAAGgH,iBAA6B,YAAEhH,GAAGgH,iBAA6B,WAAE6E,EAASC,GAAiBxwC,MAAAA,GAAG+G,EAAI,sCAAsCwpC,EAAS,OAAOC,EAAS,0BAA0BxwC,EAAEoI,YAAYy/B,MAAM,SAASpZ,GAAM,IAAiD0Y,EAAtCzC,GAAGyH,WAAW1d,EAAK,CAAC0Y,QAAO,IAAyBjZ,KAAS3rB,EAAK+gC,GAAKY,SAASzV,GAAUP,EAAKwW,GAAG4F,WAAWnD,EAAO5kC,GAAU8qC,EAAQ3I,GAAGuJ,UAAU9G,EAAO5kC,GAAK,GAAM,GAAG8qC,EAAS,MAAM,IAAI3I,GAAGoB,WAAWuH,GAAU,IAAIlG,EAAOI,SAASM,MAAO,MAAM,IAAInD,GAAGoB,WAAW,IAAK,GAAGpB,GAAGgI,aAAaxe,GAAO,MAAM,IAAIwW,GAAGoB,WAAW,IAAK,IAAOpB,GAAGgH,iBAAiC,gBAAGhH,GAAGgH,iBAAiC,eAAEjd,GAAczuB,MAAAA,GAAG+G,EAAI,0CAA0C0nB,EAAK,0BAA0BzuB,EAAEoI,SAAU++B,EAAOI,SAASM,MAAMV,EAAO5kC,GAAMmiC,GAAG+I,YAAYvf,GAAM,IAAOwW,GAAGgH,iBAA+B,cAAEhH,GAAGgH,iBAA+B,aAAEjd,GAAazuB,MAAAA,GAAG+G,EAAI,wCAAwC0nB,EAAK,0BAA0BzuB,EAAEoI,WAAY0/B,QAAQ,SAASrZ,GAAM,IAAiDP,EAAtCwW,GAAGyH,WAAW1d,EAAK,CAACme,QAAO,IAAuB1e,KAAK,IAAIA,EAAKqZ,SAASO,QAAS,MAAM,IAAIpD,GAAGoB,WAAW,IAAK,OAAO5X,EAAKqZ,SAASO,QAAQ5Z,IAAQ0Z,OAAO,SAASnZ,GAAM,IAAiD0Y,EAAtCzC,GAAGyH,WAAW1d,EAAK,CAAC0Y,QAAO,IAAyBjZ,KAAS3rB,EAAK+gC,GAAKY,SAASzV,GAAUP,EAAKwW,GAAG4F,WAAWnD,EAAO5kC,GAAU8qC,EAAQ3I,GAAGuJ,UAAU9G,EAAO5kC,GAAK,GAAO,GAAG8qC,EAAS,MAAM,IAAI3I,GAAGoB,WAAWuH,GAAU,IAAIlG,EAAOI,SAASK,OAAQ,MAAM,IAAIlD,GAAGoB,WAAW,IAAK,GAAGpB,GAAGgI,aAAaxe,GAAO,MAAM,IAAIwW,GAAGoB,WAAW,IAAK,IAAOpB,GAAGgH,iBAAiC,gBAAGhH,GAAGgH,iBAAiC,eAAEjd,GAAczuB,MAAAA,GAAG+G,EAAI,0CAA0C0nB,EAAK,0BAA0BzuB,EAAEoI,SAAU++B,EAAOI,SAASK,OAAOT,EAAO5kC,GAAMmiC,GAAG+I,YAAYvf,GAAM,IAAOwW,GAAGgH,iBAA+B,cAAEhH,GAAGgH,iBAA+B,aAAEjd,GAAazuB,MAAAA,GAAG+G,EAAI,wCAAwC0nB,EAAK,0BAA0BzuB,EAAEoI,WAAYkgC,SAAS,SAAS7Z,GAAM,IAAmC4Z,EAAxB3D,GAAGyH,WAAW1d,GAAsBP,KAAK,IAAIma,EAAM,MAAM,IAAI3D,GAAGoB,WAAW,IAAK,IAAIuC,EAAKd,SAASe,SAAU,MAAM,IAAI5D,GAAGoB,WAAW,IAAK,OAAOvB,GAAQ39B,QAAQ89B,GAAGmI,QAAQxE,EAAKlB,QAAQkB,EAAKd,SAASe,SAASD,KAASwI,KAAK,SAASpiB,EAAKqiB,GAAY,IAAwD5iB,EAA7CwW,GAAGyH,WAAW1d,EAAK,CAACme,QAAQkE,IAA6B5iB,KAAK,IAAIA,EAAM,MAAM,IAAIwW,GAAGoB,WAAW,IAAK,IAAI5X,EAAKqZ,SAASD,QAAS,MAAM,IAAI5C,GAAGoB,WAAW,IAAK,OAAO5X,EAAKqZ,SAASD,QAAQpZ,IAAQ6iB,MAAM,SAAStiB,GAAM,OAAOiW,GAAGmM,KAAKpiB,GAAK,IAAQuiB,MAAM,SAASviB,EAAKiI,EAAKoa,GAAY,IAAI5iB,EAAuH,KAAnCA,EAA9D,iBAAPO,EAA4BiW,GAAGyH,WAAW1d,EAAK,CAACme,QAAQkE,IAAyB5iB,KAAiBO,GAAe8Y,SAASC,QAAS,MAAM,IAAI9C,GAAGoB,WAAW,IAAK5X,EAAKqZ,SAASC,QAAQtZ,EAAK,CAACwI,KAAU,KAALA,GAAoB,KAAVxI,EAAKwI,KAAW2P,UAAU/N,KAAKX,SAAUsZ,OAAO,SAASxiB,EAAKiI,GAAMgO,GAAGsM,MAAMviB,EAAKiI,GAAK,IAAQwa,OAAO,SAASxK,EAAGhQ,GAAM,IAAIzrB,EAAOy5B,GAAG8J,UAAU9H,GAAI,IAAIz7B,EAAQ,MAAM,IAAIy5B,GAAGoB,WAAW,GAAIpB,GAAGsM,MAAM/lC,EAAOijB,KAAKwI,IAAQya,MAAM,SAAS1iB,EAAKib,EAAIC,EAAImH,GAAY,IAAI5iB,EAAuH,KAAnCA,EAA9D,iBAAPO,EAA4BiW,GAAGyH,WAAW1d,EAAK,CAACme,QAAQkE,IAAyB5iB,KAAiBO,GAAe8Y,SAASC,QAAS,MAAM,IAAI9C,GAAGoB,WAAW,IAAK5X,EAAKqZ,SAASC,QAAQtZ,EAAK,CAACmY,UAAU/N,KAAKX,SAAUyZ,OAAO,SAAS3iB,EAAKib,EAAIC,GAAKjF,GAAGyM,MAAM1iB,EAAKib,EAAIC,GAAI,IAAQ0H,OAAO,SAAS3K,EAAGgD,EAAIC,GAAK,IAAI1+B,EAAOy5B,GAAG8J,UAAU9H,GAAI,IAAIz7B,EAAQ,MAAM,IAAIy5B,GAAGoB,WAAW,GAAIpB,GAAGyM,MAAMlmC,EAAOijB,KAAKwb,EAAIC,IAAO2H,SAAS,SAAS7iB,EAAKjyB,GAAK,GAAGA,EAAI,EAAG,MAAM,IAAIkoC,GAAGoB,WAAW,IAAK,IAAI5X,EAAgH,KAAnCA,EAAvD,iBAAPO,EAA4BiW,GAAGyH,WAAW1d,EAAK,CAACme,QAAO,IAAmB1e,KAAiBO,GAAe8Y,SAASC,QAAS,MAAM,IAAI9C,GAAGoB,WAAW,IAAK,GAAGpB,GAAG+D,MAAMva,EAAKwI,MAAO,MAAM,IAAIgO,GAAGoB,WAAW,IAAK,IAAIpB,GAAGiE,OAAOza,EAAKwI,MAAO,MAAM,IAAIgO,GAAGoB,WAAW,IAAK,IAAIuH,EAAQ3I,GAAGqJ,gBAAgB7f,EAAK,KAAK,GAAGmf,EAAS,MAAM,IAAI3I,GAAGoB,WAAWuH,GAAUnf,EAAKqZ,SAASC,QAAQtZ,EAAK,CAAC3Z,KAAK/X,EAAI6pC,UAAU/N,KAAKX,SAAU4Z,UAAU,SAAS7K,EAAGlqC,GAAK,IAAIyO,EAAOy5B,GAAG8J,UAAU9H,GAAI,IAAIz7B,EAAQ,MAAM,IAAIy5B,GAAGoB,WAAW,GAAI,GAA4B,IAAX,QAAb76B,EAAO7D,OAAoB,MAAM,IAAIs9B,GAAGoB,WAAW,IAAKpB,GAAG4M,SAASrmC,EAAOijB,KAAK1xB,IAAOg1C,MAAM,SAAS/iB,EAAKmb,EAAMC,GAAO,IAAiD3b,EAAtCwW,GAAGyH,WAAW1d,EAAK,CAACme,QAAO,IAAuB1e,KAAKA,EAAKqZ,SAASC,QAAQtZ,EAAK,CAACmY,UAAUvpC,KAAK2B,IAAImrC,EAAMC,MAAW1Z,KAAK,SAAS1B,EAAKrnB,EAAMsvB,EAAK4X,EAASC,GAAQ,GAAU,KAAP9f,EAAW,MAAM,IAAIiW,GAAGoB,WAAW,IAA8J,IAAI5X,EAAK,GAAlGwI,OAAmB,IAAPA,EAAmB,IAAIA,EAAkBA,EAAJ,IAAjHtvB,EAAqB,iBAARA,EAAiBs9B,GAAGkJ,kBAAkBxmC,GAAOA,GAAqE,KAALsvB,EAAU,MAAkB,EAA6B,iBAAPjI,EAAiBP,EAAKO,MAAW,CAACA,EAAK6U,GAAKQ,UAAUrV,GAAM,IAA4DP,EAA7CwW,GAAGyH,WAAW1d,EAAK,CAACme,SAAe,OAANxlC,KAA4B8mB,KAAYluB,MAAAA,KAAK,IAAIyxC,GAAQ,EAAM,GAAS,GAANrqC,EAAU,GAAG8mB,GAAM,GAAS,IAAN9mB,EAAW,MAAM,IAAIs9B,GAAGoB,WAAW,SAAY5X,EAAKwW,GAAGgD,MAAMjZ,EAAKiI,EAAK,GAAG+a,GAAQ,EAAO,IAAIvjB,EAAM,MAAM,IAAIwW,GAAGoB,WAAW,IAA6C,GAArCpB,GAAGoE,SAAS5a,EAAKwI,QAAOtvB,IAAO,KAAe,MAANA,IAAcs9B,GAAG+D,MAAMva,EAAKwI,MAAO,MAAM,IAAIgO,GAAGoB,WAAW,IAAK,IAAI2L,EAAQ,CAAC,IAAIpE,EAAQ3I,GAAGyJ,QAAQjgB,EAAK9mB,GAAO,GAAGimC,EAAS,MAAM,IAAI3I,GAAGoB,WAAWuH,GAAoB,IAANjmC,GAAWs9B,GAAG4M,SAASpjB,EAAK,GAAI9mB,IAAO,OAAkB,IAAI6D,EAAOy5B,GAAG+J,aAAa,CAACvgB,KAAKA,EAAKO,KAAKiW,GAAGmI,QAAQ3e,GAAM9mB,MAAMA,EAAM2+B,UAAS,EAAKz9B,SAAS,EAAEq9B,WAAWzX,EAAKyX,WAAW+L,SAAS,GAAGxpC,OAAM,GAAOomC,EAASC,GAAWtjC,EAAO06B,WAAWxV,MAAMllB,EAAO06B,WAAWxV,KAAKllB,IAAYyiB,EAAqB,cAAW,EAANtmB,IAAcs9B,GAAGiN,YAAUjN,GAAGiN,UAAU,IAAQljB,KAAQiW,GAAGiN,YAAYjN,GAAGiN,UAAUljB,GAAM,EAAE1nB,EAAI,2CAA2C0nB,KAAQ,IAAI,GAAGiW,GAAGgH,iBAA6B,WAAE,CAAC,IAAIkG,EAAc,EAAuB,IAAX,QAANxqC,KAAoBwqC,GAAelN,GAAGiH,SAASC,UAAUC,MAA2B,IAAX,QAANzkC,KAAoBwqC,GAAelN,GAAGiH,SAASC,UAAUE,OAAOpH,GAAGgH,iBAA6B,WAAEjd,EAAKmjB,IAAuB5xC,MAAAA,GAAG+G,EAAI,sCAAsC0nB,EAAK,iCAAiCzuB,EAAEoI,SAAU,OAAO6C,GAAS+6B,MAAM,SAAS/6B,GAAQ,GAAGy5B,GAAGmN,SAAS5mC,GAAS,MAAM,IAAIy5B,GAAGoB,WAAW,GAAO76B,EAAO6mC,WAAS7mC,EAAO6mC,SAAS,MAAK,IAAO7mC,EAAO06B,WAAWK,OAAO/6B,EAAO06B,WAAWK,MAAM/6B,GAAgBjL,MAAAA,GAAG,MAAMA,EAAU,QAAC0kC,GAAGqK,YAAY9jC,EAAOy7B,IAAKz7B,EAAOy7B,GAAG,MAAOmL,SAAS,SAAS5mC,GAAQ,OAAmB,OAAZA,EAAOy7B,IAAYsB,OAAO,SAAS/8B,EAAOqG,EAAOq5B,GAAQ,GAAGjG,GAAGmN,SAAS5mC,GAAS,MAAM,IAAIy5B,GAAGoB,WAAW,GAAI,IAAI76B,EAAO86B,WAAW96B,EAAO06B,WAAWqC,OAAQ,MAAM,IAAItD,GAAGoB,WAAW,IAAK,GAAW,GAAR6E,GAAmB,GAARA,GAAmB,GAARA,EAAW,MAAM,IAAIjG,GAAGoB,WAAW,IAAuF,OAAlF76B,EAAO3C,SAAS2C,EAAO06B,WAAWqC,OAAO/8B,EAAOqG,EAAOq5B,GAAQ1/B,EAAOymC,SAAS,GAAUzmC,EAAO3C,UAAW8mB,KAAK,SAASnkB,EAAO4D,EAAOyC,EAAO7U,EAAO6L,GAAU,GAAG7L,EAAO,GAAG6L,EAAS,EAAG,MAAM,IAAIo8B,GAAGoB,WAAW,IAAK,GAAGpB,GAAGmN,SAAS5mC,GAAS,MAAM,IAAIy5B,GAAGoB,WAAW,GAAI,GAA4B,IAAX,QAAb76B,EAAO7D,OAAoB,MAAM,IAAIs9B,GAAGoB,WAAW,GAAI,GAAGpB,GAAG+D,MAAMx9B,EAAOijB,KAAKwI,MAAO,MAAM,IAAIgO,GAAGoB,WAAW,IAAK,IAAI76B,EAAO06B,WAAWvW,KAAM,MAAM,IAAIsV,GAAGoB,WAAW,IAAK,IAAIiM,OAA0B,IAAXzpC,EAAuB,GAAIypC,GAAwC,IAAI9mC,EAAO86B,SAAU,MAAM,IAAIrB,GAAGoB,WAAW,SAA5Ex9B,EAAS2C,EAAO3C,SAAiE,IAAI89B,EAAUn7B,EAAO06B,WAAWvW,KAAKnkB,EAAO4D,EAAOyC,EAAO7U,EAAO6L,GAAiD,OAAnCypC,IAAQ9mC,EAAO3C,UAAU89B,GAAiBA,GAAYh5B,MAAM,SAASnC,EAAO4D,EAAOyC,EAAO7U,EAAO6L,EAASoiC,GAAQ,GAAGjuC,EAAO,GAAG6L,EAAS,EAAG,MAAM,IAAIo8B,GAAGoB,WAAW,IAAK,GAAGpB,GAAGmN,SAAS5mC,GAAS,MAAM,IAAIy5B,GAAGoB,WAAW,GAAI,GAA4B,IAAX,QAAb76B,EAAO7D,OAAoB,MAAM,IAAIs9B,GAAGoB,WAAW,GAAI,GAAGpB,GAAG+D,MAAMx9B,EAAOijB,KAAKwI,MAAO,MAAM,IAAIgO,GAAGoB,WAAW,IAAK,IAAI76B,EAAO06B,WAAWv4B,MAAO,MAAM,IAAIs3B,GAAGoB,WAAW,IAAQ76B,EAAO86B,UAAuB,KAAb96B,EAAO7D,OAAYs9B,GAAGsD,OAAO/8B,EAAO,EAAE,GAAI,IAAI8mC,OAA0B,IAAXzpC,EAAuB,GAAIypC,GAAwC,IAAI9mC,EAAO86B,SAAU,MAAM,IAAIrB,GAAGoB,WAAW,SAA5Ex9B,EAAS2C,EAAO3C,SAAiE,IAAI0pC,EAAa/mC,EAAO06B,WAAWv4B,MAAMnC,EAAO4D,EAAOyC,EAAO7U,EAAO6L,EAASoiC,GAAYqH,IAAQ9mC,EAAO3C,UAAU0pC,GAAa,IAAO/mC,EAAOwjB,MAAMiW,GAAGgH,iBAAgC,eAAEhH,GAAGgH,iBAAgC,cAAEzgC,EAAOwjB,MAAazuB,MAAAA,GAAG+G,EAAI,yCAAyCkE,EAAOwjB,KAAK,0BAA0BzuB,EAAEoI,SAAU,OAAO4pC,GAAe9J,SAAS,SAASj9B,EAAOqG,EAAO7U,GAAQ,GAAGioC,GAAGmN,SAAS5mC,GAAS,MAAM,IAAIy5B,GAAGoB,WAAW,GAAI,GAAGx0B,EAAO,GAAG7U,GAAQ,EAAG,MAAM,IAAIioC,GAAGoB,WAAW,IAAK,GAA4B,IAAX,QAAb76B,EAAO7D,OAAoB,MAAM,IAAIs9B,GAAGoB,WAAW,GAAI,IAAIpB,GAAGiE,OAAO19B,EAAOijB,KAAKwI,QAAQgO,GAAG+D,MAAMx9B,EAAOijB,KAAKwI,MAAO,MAAM,IAAIgO,GAAGoB,WAAW,IAAK,IAAI76B,EAAO06B,WAAWuC,SAAU,MAAM,IAAIxD,GAAGoB,WAAW,KAAM76B,EAAO06B,WAAWuC,SAASj9B,EAAOqG,EAAO7U,IAAU0rC,KAAK,SAASl9B,EAAO2/B,EAAQnuC,EAAO6L,EAASuiC,EAAKzjC,GAAO,GAAc,IAAL,EAALyjC,IAAyB,IAAL,EAANzjC,IAAuC,IAAX,QAAb6D,EAAO7D,OAAoB,MAAM,IAAIs9B,GAAGoB,WAAW,GAAI,GAA4B,IAAX,QAAb76B,EAAO7D,OAAoB,MAAM,IAAIs9B,GAAGoB,WAAW,GAAI,IAAI76B,EAAO06B,WAAWwC,KAAM,MAAM,IAAIzD,GAAGoB,WAAW,IAAK,OAAO76B,EAAO06B,WAAWwC,KAAKl9B,EAAO2/B,EAAQnuC,EAAO6L,EAASuiC,EAAKzjC,IAASghC,MAAM,SAASn9B,EAAO4D,EAAOyC,EAAO7U,EAAOwuC,GAAW,OAAIhgC,GAASA,EAAO06B,WAAWyC,MAAwBn9B,EAAO06B,WAAWyC,MAAMn9B,EAAO4D,EAAOyC,EAAO7U,EAAOwuC,GAA9D,GAA2EgH,OAAO,SAAShnC,GAAQ,OAAO,GAAIinC,MAAM,SAASjnC,EAAOknC,EAAI5qC,GAAK,IAAI0D,EAAO06B,WAAWuM,MAAO,MAAM,IAAIxN,GAAGoB,WAAW,IAAK,OAAO76B,EAAO06B,WAAWuM,MAAMjnC,EAAOknC,EAAI5qC,IAAO6qC,SAAS,SAAS3jB,EAAK2d,GAAqF,IAA/EA,EAAKA,GAAM,IAAQhlC,MAAMglC,EAAKhlC,OAAO,IAAIglC,EAAKnjC,SAASmjC,EAAKnjC,UAAU,SAA4B,SAAhBmjC,EAAKnjC,UAAmC,WAAhBmjC,EAAKnjC,SAAqB,MAAM,IAAItJ,MAAM,0BAA0BysC,EAAKnjC,SAAS,KAAM,IAAIvC,EAAQuE,EAAOy5B,GAAGvU,KAAK1B,EAAK2d,EAAKhlC,OAAkC3K,EAAlBioC,GAAGmM,KAAKpiB,GAAsBla,KAASwN,EAAI,IAAIxX,WAAW9N,GAA4J,OAApJioC,GAAGtV,KAAKnkB,EAAO8W,EAAI,EAAEtlB,EAAO,GAAsB,SAAhB2vC,EAAKnjC,SAAmBvC,EAAI4qB,EAAkBvP,EAAI,GAA4B,WAAhBqqB,EAAKnjC,WAAqBvC,EAAIqb,GAAK2iB,GAAGsB,MAAM/6B,GAAevE,GAAM2rC,UAAU,SAAS5jB,EAAKrd,EAAKg7B,IAAMA,EAAKA,GAAM,IAAQhlC,MAAMglC,EAAKhlC,OAAO,IAAI,IAAI6D,EAAOy5B,GAAGvU,KAAK1B,EAAK2d,EAAKhlC,MAAMglC,EAAK1V,MAAM,GAAiB,iBAAPtlB,EAAgB,CAAC,IAAI2Q,EAAI,IAAIxX,WAAWsoB,EAAgBzhB,GAAM,GAAOkhC,EAAehgB,EAAkBlhB,EAAK2Q,EAAI,EAAEA,EAAItlB,QAAQioC,GAAGt3B,MAAMnC,EAAO8W,EAAI,EAAEuwB,OAAetuC,EAAUooC,EAAK1B,YAAc,CAAA,IAAGz3B,YAAYC,OAAO9B,GAA4E,MAAM,IAAIzR,MAAM,yBAArF+kC,GAAGt3B,MAAMnC,EAAOmG,EAAK,EAAEA,EAAK6L,gBAAWjZ,EAAUooC,EAAK1B,QAAyDhG,GAAGsB,MAAM/6B,IAAUxI,IAAI,WAAW,OAAOiiC,GAAG6G,aAAc7oC,MAAM,SAAS+rB,GAAM,IAAIgZ,EAAO/C,GAAGyH,WAAW1d,EAAK,CAACme,QAAO,IAAO,GAAiB,OAAdnF,EAAOvZ,KAAa,MAAM,IAAIwW,GAAGoB,WAAW,IAAK,IAAIpB,GAAG+D,MAAMhB,EAAOvZ,KAAKwI,MAAO,MAAM,IAAIgO,GAAGoB,WAAW,IAAK,IAAIuH,EAAQ3I,GAAGqJ,gBAAgBtG,EAAOvZ,KAAK,KAAK,GAAGmf,EAAS,MAAM,IAAI3I,GAAGoB,WAAWuH,GAAU3I,GAAG6G,YAAY9D,EAAOhZ,MAAO8jB,yBAAyB,WAAW7N,GAAGuL,MAAM,QAAQvL,GAAGuL,MAAM,SAASvL,GAAGuL,MAAM,mBAAoBuC,qBAAqB,WAAkX,IAAIC,EAAc,GAAzX/N,GAAGuL,MAAM,QAAQvL,GAAGgB,eAAehB,GAAG0K,QAAQ,EAAE,GAAG,CAAChgB,KAAK,WAAW,OAAO,GAAIhiB,MAAM,SAASnC,EAAO4D,EAAOyC,EAAO7U,EAAOypC,GAAK,OAAOzpC,KAAWioC,GAAG2L,MAAM,YAAY3L,GAAG0K,QAAQ,EAAE,IAAIlK,GAAIG,SAASX,GAAG0K,QAAQ,EAAE,GAAGlK,GAAIqB,iBAAiBrB,GAAIG,SAASX,GAAG0K,QAAQ,EAAE,GAAGlK,GAAI4B,kBAAkBpC,GAAG2L,MAAM,WAAW3L,GAAG0K,QAAQ,EAAE,IAAI1K,GAAG2L,MAAM,YAAY3L,GAAG0K,QAAQ,EAAE,IAAyC,iBAAT75B,QAAsD,mBAA5BA,OAAwB,gBAAe,CAAC,IAAIm9B,EAAa,IAAInoC,WAAW,GAAGkoC,EAAc,WAAgD,OAArCl9B,OAAO4M,gBAAgBuwB,GAAqBA,EAAa,SAAW,GAAG1kB,EAAqB,IAAI,IAAI2kB,EAAcC,EAAQ,QAACH,EAAc,WAAW,OAAOE,EAA2B,YAAE,GAAG,IAAY3yC,MAAAA,IAAcyyC,IAAeA,EAAc,WAAWtjB,GAAM,mBAAoBuV,GAAGmO,aAAa,OAAO,SAASJ,GAAe/N,GAAGmO,aAAa,OAAO,UAAUJ,GAAe/N,GAAGuL,MAAM,YAAYvL,GAAGuL,MAAM,iBAAkB6C,yBAAyB,WAAWpO,GAAGuL,MAAM,SAASvL,GAAGuL,MAAM,cAAcvL,GAAGuL,MAAM,iBAAiBvL,GAAGuC,MAAM,CAACA,MAAM,WAAW,IAAI/Y,EAAKwW,GAAGwC,WAAW,aAAa,KAAK,MAAU,IAAgQ,OAA5PhZ,EAAKqZ,SAAS,CAACE,OAAO,SAASN,EAAO5kC,GAAM,IAAImkC,GAAInkC,EAAS0I,EAAOy5B,GAAG8J,UAAU9H,GAAI,IAAIz7B,EAAO,MAAM,IAAIy5B,GAAGoB,WAAW,GAAG,IAAIp/B,EAAI,CAACygC,OAAO,KAAKF,MAAM,CAAC8F,WAAW,QAAQxF,SAAS,CAACe,SAAS,WAAW,OAAOr9B,EAAOwjB,QAAwB,OAAf/nB,EAAIygC,OAAOzgC,EAAWA,IAAcwnB,IAAQ,GAAG,kBAAmB6kB,sBAAsB,WAAcrlB,EAAc,MAAGgX,GAAGmO,aAAa,OAAO,QAAQnlB,EAAc,OAAUgX,GAAGqD,QAAQ,WAAW,cAAkBra,EAAe,OAAGgX,GAAGmO,aAAa,OAAO,SAAS,KAAKnlB,EAAe,QAAUgX,GAAGqD,QAAQ,WAAW,eAAmBra,EAAe,OAAGgX,GAAGmO,aAAa,OAAO,SAAS,KAAKnlB,EAAe,QAAUgX,GAAGqD,QAAQ,YAAY,eAAgBrD,GAAGvU,KAAK,aAAa,KAAKuU,GAAGvU,KAAK,cAAc,KAAKuU,GAAGvU,KAAK,cAAc,MAAO6iB,iBAAiB,WAActO,GAAGoB,aAAkBpB,GAAGoB,WAAW,SAAoBoG,EAAMhe,GAAM,KAAKA,KAAKA,EAAK,KAAK+kB,SAAS,SAAS/G,GAAO,KAAKA,MAAMA,GAAQ,KAAK+G,SAAS/G,GAAO,KAAK9jC,QAAQ,YAAas8B,GAAGoB,WAAWxkC,UAAU,IAAI3B,MAAQ+kC,GAAGoB,WAAWxkC,UAAUsoB,YAAY8a,GAAGoB,WAAW,CAAC,IAAI7kB,QAAQ,SAASiyB,GAAMxO,GAAGuF,cAAciJ,GAAM,IAAIxO,GAAGoB,WAAWoN,GAAMxO,GAAGuF,cAAciJ,GAAM/Z,MAAM,gCAAiCga,WAAW,WAAWzO,GAAGsO,mBAAmBtO,GAAG4G,UAAU,IAAInqC,MAAM,MAAMujC,GAAGuC,MAAMF,GAAM,GAAG,KAAKrC,GAAG6N,2BAA2B7N,GAAG8N,uBAAuB9N,GAAGoO,2BAA2BpO,GAAGqH,YAAY,CAAC,MAAQhF,KAASjjC,KAAK,SAAS0hC,EAAMC,EAAOv9B,GAAOw8B,GAAG5gC,KAAK0nC,aAAY,EAAK9G,GAAGsO,mBAAmBtlB,EAAc,MAAE8X,GAAO9X,EAAc,MAAEA,EAAe,OAAE+X,GAAQ/X,EAAe,OAAEA,EAAe,OAAExlB,GAAOwlB,EAAe,OAAEgX,GAAGqO,yBAA0BK,KAAK,WAAW1O,GAAG5gC,KAAK0nC,aAAY,EAAM,IAAI6H,EAAO3lB,EAAgB,QAAK2lB,GAAOA,EAAO,GAAG,IAAI,IAAIjyC,EAAE,EAAEA,EAAEsjC,GAAG0G,QAAQ3uC,OAAO2E,IAAI,CAAC,IAAI6J,EAAOy5B,GAAG0G,QAAQhqC,GAAO6J,GAAkBy5B,GAAGsB,MAAM/6B,KAAWqoC,QAAQ,SAASC,EAAQC,GAAU,IAAI9c,EAAK,EAAgD,OAA3C6c,IAAQ7c,GAAM,KAAU8c,IAAS9c,GAAM,KAAWA,GAAO+c,SAAS,SAAS/P,EAAMgQ,GAAe,IAAIjlB,EAAK6U,GAAKpoB,KAAK3Z,MAAM,KAAKmiC,GAA0D,OAAhDgQ,GAAwB,KAATjlB,EAAK,KAAQA,EAAKA,EAAKqB,OAAO,IAAUrB,GAAOklB,aAAa,SAAShP,EAAS7lC,GAAM,OAAOylC,GAAQ39B,QAAQ9H,EAAK6lC,IAAYiP,gBAAgB,SAASnlB,GAAM,OAAO6U,GAAKQ,UAAUrV,IAAQolB,WAAW,SAASplB,EAAKqlB,GAAqB,IAAIptC,EAAIg+B,GAAGqP,YAAYtlB,EAAKqlB,GAAqB,OAAGptC,EAAIstC,OAAettC,EAAIiJ,QAAcyzB,GAAS18B,EAAIwB,OAAc,OAAQ6rC,YAAY,SAAStlB,EAAKqlB,GAAqB,IAAiErlB,GAAzDgZ,EAAO/C,GAAGyH,WAAW1d,EAAK,CAACme,QAAQkH,KAAkCrlB,KAAYzuB,MAAAA,IAAI,IAAI0G,EAAI,CAAComC,QAAO,EAAMkH,QAAO,EAAM9rC,MAAM,EAAE3F,KAAK,KAAKksB,KAAK,KAAK9e,OAAO,KAAKskC,cAAa,EAAMC,WAAW,KAAKC,aAAa,MAAM,IAAI,IAAI1M,EAAO/C,GAAGyH,WAAW1d,EAAK,CAAC0Y,QAAO,IAAOzgC,EAAIutC,cAAa,EAAKvtC,EAAIwtC,WAAWzM,EAAOhZ,KAAK/nB,EAAIytC,aAAa1M,EAAOvZ,KAAKxnB,EAAInE,KAAK+gC,GAAKY,SAASzV,GAAMgZ,EAAO/C,GAAGyH,WAAW1d,EAAK,CAACme,QAAQkH,IAAsBptC,EAAIstC,QAAO,EAAKttC,EAAI+nB,KAAKgZ,EAAOhZ,KAAK/nB,EAAIiJ,OAAO83B,EAAOvZ,KAAKxnB,EAAInE,KAAKklC,EAAOvZ,KAAK3rB,KAAKmE,EAAIomC,OAAqB,MAAdrF,EAAOhZ,KAAkBzuB,MAAAA,GAAG0G,EAAIwB,MAAMlI,EAAEksC,MAAO,OAAOxlC,GAAM0tC,aAAa,SAASjN,EAAO5kC,EAAKgxC,EAAQC,GAAU,IAAI/kB,EAAK6U,GAAKgB,MAAsB,iBAAT6C,EAAkBA,EAAOzC,GAAGmI,QAAQ1F,GAAQ5kC,GAAUm0B,EAAKgO,GAAG4O,QAAQC,EAAQC,GAAU,OAAO9O,GAAGuL,MAAMxhB,EAAKiI,IAAQ2d,WAAW,SAASlN,EAAO1Y,EAAK8kB,EAAQC,GAAUrM,EAAuB,iBAATA,EAAkBA,EAAOzC,GAAGmI,QAAQ1F,GAA4C,IAApC,IAAIzD,EAAMjV,EAAKlyB,MAAM,KAAK2tB,UAAgBwZ,EAAMjnC,QAAO,CAAC,IAAI63C,EAAK5Q,EAAMj9B,MAAM,GAAI6tC,EAAJ,CAAkB,IAAIhlC,EAAQg0B,GAAKgB,MAAM6C,EAAOmN,GAAM,IAAI5P,GAAGuL,MAAM3gC,GAAgBtP,MAAAA,IAAImnC,EAAO73B,GAAS,OAAOA,GAAUilC,WAAW,SAASpN,EAAO5kC,EAAKiyC,EAAWjB,EAAQC,GAAU,IAAI/kB,EAAK6U,GAAKgB,MAAsB,iBAAT6C,EAAkBA,EAAOzC,GAAGmI,QAAQ1F,GAAQ5kC,GAAUm0B,EAAKgO,GAAG4O,QAAQC,EAAQC,GAAU,OAAO9O,GAAG3/B,OAAO0pB,EAAKiI,IAAQ+d,eAAe,SAAStN,EAAO5kC,EAAK6O,EAAKmiC,EAAQC,EAAS9I,GAAQ,IAAIjc,EAAKlsB,EAAK+gC,GAAKgB,MAAsB,iBAAT6C,EAAkBA,EAAOzC,GAAGmI,QAAQ1F,GAAQ5kC,GAAM4kC,EAAWzQ,EAAKgO,GAAG4O,QAAQC,EAAQC,GAActlB,EAAKwW,GAAG3/B,OAAO0pB,EAAKiI,GAAM,GAAGtlB,EAAK,CAAC,GAAiB,iBAAPA,EAAgB,CAAgC,IAA/B,IAAIhL,EAAI,IAAIjF,MAAMiQ,EAAK3U,QAAgB2E,EAAE,EAAE5E,EAAI4U,EAAK3U,OAAO2E,EAAE5E,IAAM4E,EAAEgF,EAAIhF,GAAGgQ,EAAKshB,WAAWtxB,GAAGgQ,EAAKhL,EAAKs+B,GAAGsM,MAAM9iB,EAAU,IAALwI,GAAU,IAAIzrB,EAAOy5B,GAAGvU,KAAKjC,EAAK,KAAKwW,GAAGt3B,MAAMnC,EAAOmG,EAAK,EAAEA,EAAK3U,OAAO,EAAEiuC,GAAQhG,GAAGsB,MAAM/6B,GAAQy5B,GAAGsM,MAAM9iB,EAAKwI,GAAO,OAAOxI,GAAO2kB,aAAa,SAAS1L,EAAO5kC,EAAKijC,EAAMC,GAAQ,IAAIhX,EAAK6U,GAAKgB,MAAsB,iBAAT6C,EAAkBA,EAAOzC,GAAGmI,QAAQ1F,GAAQ5kC,GAAUm0B,EAAKgO,GAAG4O,UAAU9N,IAAQC,GAAYf,GAAGmO,aAAa3D,QAAMxK,GAAGmO,aAAa3D,MAAM,IAAG,IAAI5J,EAAIZ,GAAG0K,QAAQ1K,GAAGmO,aAAa3D,QAAQ,GAAytB,OAAttBxK,GAAGgB,eAAeJ,EAAI,CAACnV,KAAK,SAASllB,GAAQA,EAAO86B,UAAS,GAAQC,MAAM,SAAS/6B,GAAWw6B,GAAQA,EAAO52B,QAAQ42B,EAAO52B,OAAOpS,QAAQgpC,EAAO,KAAOrW,KAAK,SAASnkB,EAAO4D,EAAOyC,EAAO7U,EAAOypC,GAAqB,IAAhB,IAAIE,EAAU,EAAUhlC,EAAE,EAAEA,EAAE3E,EAAO2E,IAAI,CAAC,IAAIrC,EAAO,IAAIA,EAAOymC,IAAexlC,MAAAA,GAAG,MAAM,IAAI0kC,GAAGoB,WAAW,IAAK,QAAY9hC,IAATjF,GAAgC,IAAZqnC,EAAe,MAAM,IAAI1B,GAAGoB,WAAW,GAAI,GAAG/mC,MAAAA,EAAkC,MAAMqnC,IAAYv3B,EAAOyC,EAAOlQ,GAAGrC,EAAwD,OAA7CqnC,IAAWn7B,EAAOijB,KAAKmY,UAAU/N,KAAKX,OAAcyO,GAAYh5B,MAAM,SAASnC,EAAO4D,EAAOyC,EAAO7U,EAAOypC,GAAK,IAAI,IAAI9kC,EAAE,EAAEA,EAAE3E,EAAO2E,IAAK,IAAIqkC,EAAO52B,EAAOyC,EAAOlQ,IAAWpB,MAAAA,GAAG,MAAM,IAAI0kC,GAAGoB,WAAW,IAAmD,OAA1CrpC,IAAQwO,EAAOijB,KAAKmY,UAAU/N,KAAKX,OAAcv2B,KAAasjC,GAAG2L,MAAM5hB,EAAKiI,EAAK4O,IAAOoP,WAAW,SAASvN,EAAO5kC,EAAKU,EAAOswC,EAAQC,GAAU,IAAI/kB,EAAK6U,GAAKgB,MAAsB,iBAAT6C,EAAkBA,EAAOzC,GAAGmI,QAAQ1F,GAAQ5kC,GAAM,OAAOmiC,GAAGqD,QAAQ9kC,EAAOwrB,IAAQkmB,cAAc,SAAShqC,GAAK,GAAGA,EAAIiqC,UAAUjqC,EAAIkqC,UAAUlqC,EAAI09B,MAAM19B,EAAI+9B,SAAS,OAAO,EAAK,IAAIoM,GAAQ,EAAK,GAA2B,oBAAjB5kB,eAA8B,MAAM,IAAIvwB,MAAM,oMAA0M,IAAGwuB,EAAkI,MAAM,IAAIxuB,MAAM,iDAA3I,IAAIgL,EAAI+9B,SAAS7B,GAAmB1Y,EAAMxjB,EAAIqlB,MAAK,GAAMrlB,EAAIi+B,UAAUj+B,EAAI+9B,SAASjsC,OAAcuD,MAAAA,GAAG80C,GAAQ,EAAyG,OAArBA,GAAQ1R,GAAS,IAAW0R,GAAUC,eAAe,SAAS5N,EAAO5kC,EAAKytB,EAAIujB,EAAQC,GAAU,SAASwB,IAAiB,KAAKC,aAAY,EAAM,KAAKC,OAAO,GAAgvE,GAA5uEF,EAAe1zC,UAAUqG,IAAI,SAA4B6pB,GAAK,KAAGA,EAAI,KAAK/0B,OAAO,GAAG+0B,EAAI,GAA1B,CAA+C,IAAI2jB,EAAY3jB,EAAI,KAAK4jB,UAAcC,EAAS7jB,EAAI,KAAK4jB,UAAU,EAAE,OAAO,KAAKE,OAAOD,GAAUF,KAAeH,EAAe1zC,UAAUi0C,cAAc,SAAsCD,GAAQ,KAAKA,OAAOA,GAASN,EAAe1zC,UAAUk0C,YAAY,WAAsC,IAAIvlB,EAAI,IAAIC,eAA2D,GAA1CD,EAAIE,KAAK,OAAOH,GAAI,GAAOC,EAAIG,KAAK,QAAWH,EAAIS,QAAQ,KAAKT,EAAIS,OAAO,KAAkB,MAAbT,EAAIS,QAAc,MAAM,IAAI/wB,MAAM,iBAAiBqwB,EAAI,aAAaC,EAAIS,QAAQ,IAAmE+kB,EAA/DC,EAAWx5C,OAAO+zB,EAAI0lB,kBAAkB,mBAAkCC,GAAgBH,EAAOxlB,EAAI0lB,kBAAkB,mBAA4B,UAATF,EAAqBI,GAAUJ,EAAOxlB,EAAI0lB,kBAAkB,sBAA+B,SAATF,EAAoBL,EAAU,QAAcQ,IAAeR,EAAUM,GAAW,IAAsvBI,EAAU,KAAKA,EAAUP,cAAc,SAASF,GAAU,IAAIhd,EAAMgd,EAASD,EAAcnlC,GAAKolC,EAAS,GAAGD,EAAU,EAAkI,GAAhInlC,EAAInT,KAAKkjB,IAAI/P,EAAIylC,EAAW,QAA0C,IAA7BI,EAAUZ,OAAOG,KAAyBS,EAAUZ,OAAOG,GAAx8B,SAAS5qC,EAAKm6B,GAAI,GAAGn6B,EAAKm6B,EAAG,MAAM,IAAIjlC,MAAM,kBAAkB8K,EAAK,KAAKm6B,EAAG,4BAA4B,GAAGA,EAAG8Q,EAAW,EAAE,MAAM,IAAI/1C,MAAM,QAAQ+1C,EAAW,uCAAuC,IAAIzlB,EAAI,IAAIC,eAA6R,GAA5QD,EAAIE,KAAK,MAAMH,GAAI,GAAU0lB,IAAaN,GAAUnlB,EAAI8lB,iBAAiB,QAAQ,SAAStrC,EAAK,IAAIm6B,GAA0B,oBAAZr6B,aAAwB0lB,EAAIK,aAAa,eAAiBL,EAAI+lB,kBAAkB/lB,EAAI+lB,iBAAiB,sCAAuC/lB,EAAIG,KAAK,QAAWH,EAAIS,QAAQ,KAAKT,EAAIS,OAAO,KAAkB,MAAbT,EAAIS,QAAc,MAAM,IAAI/wB,MAAM,iBAAiBqwB,EAAI,aAAaC,EAAIS,QAAQ,YAAkB1sB,IAAfisB,EAAIM,SAA6B,IAAIhmB,WAAW0lB,EAAIM,UAAU,IAAkBsW,GAAmB5W,EAAII,cAAc,IAAG,GAAmP4lB,CAAM5d,EAAMpoB,SAA6C,IAA7B6lC,EAAUZ,OAAOG,GAAwB,MAAM,IAAI11C,MAAM,iBAAiB,OAAOm2C,EAAUZ,OAAOG,MAAgBQ,GAAWH,IAAYN,EAAUM,EAAW,EAAEA,EAAW,KAAKJ,OAAO,GAAG74C,OAAO24C,EAAUM,EAAWnmC,EAAI,gFAAgF,KAAKuB,QAAQ4kC,EAAW,KAAKQ,WAAWd,EAAU,KAAKH,aAAY,GAAkC,oBAAjB/kB,eAA6B,CAAC,IAAInC,EAAsB,KAAM,sHAAsH,IAAI+nB,EAAU,IAAId,EAAiBzxC,OAAO4yC,iBAAiBL,EAAU,CAACr5C,OAAO,CAACkL,IAAI,WAAqD,OAAtC,KAAKstC,aAAa,KAAKO,cAAsB,KAAK1kC,UAAWskC,UAAU,CAACztC,IAAI,WAAqD,OAAtC,KAAKstC,aAAa,KAAKO,cAAsB,KAAKU,eAAgB,IAAI1B,EAAW,CAACI,UAAS,EAAMlM,SAASoN,QAAsBtB,EAAW,CAACI,UAAS,EAAM5kB,IAAIA,GAAM,IAAI9B,EAAKwW,GAAG6P,WAAWpN,EAAO5kC,EAAKiyC,EAAWjB,EAAQC,GAAagB,EAAW9L,SAAUxa,EAAKwa,SAAS8L,EAAW9L,SAAkB8L,EAAWxkB,MAAK9B,EAAKwa,SAAS,KAAKxa,EAAK8B,IAAIwkB,EAAWxkB,KAAKzsB,OAAO4yC,iBAAiBjoB,EAAK,CAAC0a,UAAU,CAACjhC,IAAI,WAAW,OAAO,KAAK+gC,SAASjsC,WAAY,IAAIkpC,EAAW,GAAorB,OAAxqBpiC,OAAOmF,KAAKwlB,EAAKyX,YAAiB1kB,QAAQ,SAASxY,GAAK,IAAI+e,EAAG0G,EAAKyX,WAAWl9B,GAAKk9B,EAAWl9B,GAAK,WAA6B,IAAIi8B,GAAGiQ,cAAczmB,GAAO,MAAM,IAAIwW,GAAGoB,WAAW,IAAK,OAAOte,EAAGjmB,MAAM,KAAK7D,cAAgBioC,EAAWvW,KAAK,SAAyBnkB,EAAO4D,EAAOyC,EAAO7U,EAAO6L,GAAU,IAAIo8B,GAAGiQ,cAAczmB,GAAO,MAAM,IAAIwW,GAAGoB,WAAW,IAAK,IAAI4C,EAASz9B,EAAOijB,KAAKwa,SAAS,GAAGpgC,GAAUogC,EAASjsC,OAAO,OAAO,EAAE,IAAI8X,EAAKzX,KAAKkjB,IAAI0oB,EAASjsC,OAAO6L,EAAS7L,GAAQ,GAAGisC,EAAS9qC,MAAO,IAAI,IAAIwD,EAAE,EAAEA,EAAEmT,EAAKnT,IAAKyN,EAAOyC,EAAOlQ,GAAGsnC,EAASpgC,EAASlH,QAAW,IAAQA,EAAE,EAAEA,EAAEmT,EAAKnT,IAAKyN,EAAOyC,EAAOlQ,GAAGsnC,EAAS/gC,IAAIW,EAASlH,GAAK,OAAOmT,GAAO2Z,EAAKyX,WAAWA,EAAkBzX,GAAOkoB,oBAAoB,SAASjP,EAAO5kC,EAAKytB,EAAIujB,EAAQC,EAAShjB,EAAOC,EAAQ4lB,EAAe3L,EAAO4L,GAAW3f,GAAQ7yB,OAAO,IAAIyyC,EAASh0C,EAAKgiC,GAAQ39B,QAAQ08B,GAAKgB,MAAM6C,EAAO5kC,IAAO4kC,EAAO,SAASqP,EAAYrc,GAAW,SAAS5wB,EAAO4wB,GAAcmc,GAAUA,IAAgBD,GAAgB3R,GAAG+P,eAAetN,EAAO5kC,EAAK43B,EAAUoZ,EAAQC,EAAS9I,GAAYla,GAAOA,IAASmF,KAAuB,IAAI8gB,GAAQ,EAAM/oB,EAAuB,eAAEzM,QAAQ,SAASy1B,GAAWD,GAAkBC,EAAkB,UAAEH,KAAWG,EAAe,OAAEvc,EAAUoc,EAAShtC,EAAO,WAAcknB,GAAQA,IAAUkF,OAAyB8gB,GAAQ,KAAaA,GAAQltC,EAAO4wB,GAAYzE,KAAkC,iBAAL1F,EAAe2G,GAAQoK,UAAU/Q,EAAI,SAASmK,GAAWqc,EAAYrc,IAAa1J,GAAgB+lB,EAAYxmB,IAAQ2mB,UAAU,WAAW,OAAOtsC,OAAOssC,WAAWtsC,OAAOusC,cAAcvsC,OAAOwsC,iBAAiBxsC,OAAOysC,aAAcC,QAAQ,WAAW,MAAO,SAAS1sC,OAAOulB,SAASonB,UAAWC,WAAW,GAAGC,cAAc,YAAYC,cAAc,SAAS9S,EAAM7T,EAAOC,GAASD,EAAOA,GAAQ,aAAaC,EAAQA,GAAS,aAAa,IAAIkmB,EAAUjS,GAAGiS,YAAY,IAAI,IAAIS,EAAYT,EAAUxmB,KAAKuU,GAAGqS,UAAUrS,GAAGuS,YAAmBj3C,MAAAA,GAAG,OAAOywB,EAAQzwB,GAAIo3C,EAAYC,gBAAgB,WAAuC9nC,EAAI,eAAsB6nC,EAAYr4C,OAAUu4C,kBAAkB5S,GAAGwS,gBAAiBE,EAAYG,UAAU,WAAiC,IAA8BC,EAAvBJ,EAAYr4C,OAA0By4C,YAAY,CAAC9S,GAAGwS,eAAe,aAAiBO,EAAMD,EAAYE,YAAYhT,GAAGwS,eAAmBS,EAAG,EAAErc,EAAK,EAAEsc,EAAMvT,EAAM5nC,OAAO,SAAS8M,IAAkB,GAAN+xB,EAAQ9K,IAAcC,IAAW4T,EAAMpjB,QAAQ,SAASwN,GAAM,IAAIopB,EAAWJ,EAAMK,IAAIpT,GAAGqP,YAAYtlB,GAAM9e,OAAO+4B,SAASja,GAAMopB,EAAWN,UAAU,aAAgCI,EAAWrc,GAAMsc,GAAMruC,KAAWsuC,EAAWpnB,QAAQ,WAAwCknB,KAAVrc,GAAmBsc,GAAMruC,OAAciuC,EAAY/mB,QAAQA,GAAU2mB,EAAY3mB,QAAQA,GAAUsnB,gBAAgB,SAAS1T,EAAM7T,EAAOC,GAASD,EAAOA,GAAQ,aAAaC,EAAQA,GAAS,aAAa,IAAIkmB,EAAUjS,GAAGiS,YAAY,IAAI,IAAIS,EAAYT,EAAUxmB,KAAKuU,GAAGqS,UAAUrS,GAAGuS,YAAmBj3C,MAAAA,GAAG,OAAOywB,EAAQzwB,GAAIo3C,EAAYC,gBAAgB5mB,EAAQ2mB,EAAYG,UAAU,WAAiC,IAAIS,EAAGZ,EAAYr4C,OAAO,IAAI,IAAIy4C,EAAYQ,EAAGR,YAAY,CAAC9S,GAAGwS,eAAe,YAAmBl3C,MAAAA,GAAc,YAAXywB,EAAQzwB,GAAW,IAAIy3C,EAAMD,EAAYE,YAAYhT,GAAGwS,eAAmBS,EAAG,EAAErc,EAAK,EAAEsc,EAAMvT,EAAM5nC,OAAO,SAAS8M,IAAkB,GAAN+xB,EAAQ9K,IAAcC,IAAW4T,EAAMpjB,QAAQ,SAASwN,GAAM,IAAIwpB,EAAWR,EAAM9vC,IAAI8mB,GAAMwpB,EAAWV,UAAU,WAAmC7S,GAAGqP,YAAYtlB,GAAMulB,QAAQtP,GAAGkD,OAAOnZ,GAAOiW,GAAG+P,eAAenR,GAAK5U,QAAQD,GAAM6U,GAAKY,SAASzV,GAAMwpB,EAAWl5C,QAAO,GAAK,GAAK,KAAM44C,EAAWrc,GAAMsc,GAAMruC,KAAW0uC,EAAWxnB,QAAQ,WAAwCknB,KAAVrc,GAAmBsc,GAAMruC,OAAciuC,EAAY/mB,QAAQA,GAAU2mB,EAAY3mB,QAAQA,GAAUsa,UAAU,SAASx2B,GAA2E,IAArE,IAAI2jC,EAA3tzuC,SAAqB3jC,EAAKwtB,GAAsC,OAA1BA,IAAOA,EAAOlR,GAAmB/zB,KAAKkY,KAAKT,EAAKwtB,GAAQA,EAAyozuCoW,CAAY5jC,EAAK,OAAW6d,EAAIgmB,GAAQF,GAAmB3jC,EAAK2jC,GAAYplB,EAAMV,EAAI7d,KAAQ,EAAE,OAAO6d,IAAWimB,GAAS,CAACC,SAAS,GAAGC,iBAAiB,EAAE31C,MAAM,IAAI41C,YAAY,SAASC,EAAMhqB,GAAM,GAAa,MAAVA,EAAK,GAAS,CAAC,IAAI9rB,EAAI,IAAY,MAAT81C,EAAc91C,EAAI+hC,GAAGjiC,UAAY,CAAC,IAAIi2C,EAAUhU,GAAG8J,UAAUiK,GAAO,IAAIC,EAAU,MAAM,IAAIhU,GAAGoB,WAAW,GAAGnjC,EAAI+1C,EAAUjqB,KAAMA,EAAK6U,GAAKgB,MAAM3hC,EAAI8rB,GAAO,OAAOA,GAAOkqB,OAAO,SAAS9jB,EAAKpG,EAAK1M,GAAK,IAAI,IAAI8uB,EAAKhc,EAAKpG,GAAazuB,MAAAA,GAAG,GAAGA,GAAGA,EAAEkuB,MAAMoV,GAAKQ,UAAUrV,KAAQ6U,GAAKQ,UAAUY,GAAGmI,QAAQ7sC,EAAEkuB,OAAQ,OAAQ,GAAI,MAAMluB,EAA2/B,OAAx/BizB,EAAOlR,GAAK,GAAG8uB,EAAKvL,IAAIrS,EAAOlR,EAAI,GAAG,GAAG,EAAEkR,EAAOlR,EAAI,GAAG,GAAG8uB,EAAKrH,IAAIvW,EAAOlR,EAAI,IAAI,GAAG8uB,EAAKna,KAAKzD,EAAOlR,EAAI,IAAI,GAAG8uB,EAAKpH,MAAMxW,EAAOlR,EAAI,IAAI,GAAG8uB,EAAKnH,IAAIzW,EAAOlR,EAAI,IAAI,GAAG8uB,EAAKlH,IAAI1W,EAAOlR,EAAI,IAAI,GAAG8uB,EAAKhL,KAAK5S,EAAOlR,EAAI,IAAI,GAAG,EAAEsU,GAAQ,CAACwa,EAAKt8B,OAAO,GAAG6hB,GAAWya,EAAKt8B,MAAM6gB,GAASgB,KAAa,EAAEA,GAAW,GAA2D,EAAxDb,IAAUD,GAAWc,GAAW,YAAY,eAAiB,KAAKf,IAAWe,OAAeA,KAAa,IAAI,cAAc,EAAE,IAAInD,EAAOlR,EAAI,IAAI,GAAGsU,GAAQ,GAAGpD,EAAOlR,EAAI,IAAI,GAAGsU,GAAQ,GAAGpD,EAAOlR,EAAI,IAAI,GAAG,KAAKkR,EAAOlR,EAAI,IAAI,GAAG8uB,EAAK7G,OAAO/W,EAAOlR,EAAI,IAAI,GAAG8uB,EAAKjH,MAAMgP,UAAU,IAAI,EAAE3lB,EAAOlR,EAAI,IAAI,GAAG,EAAEkR,EAAOlR,EAAI,IAAI,GAAG8uB,EAAKhH,MAAM+O,UAAU,IAAI,EAAE3lB,EAAOlR,EAAI,IAAI,GAAG,EAAEkR,EAAOlR,EAAI,IAAI,GAAG8uB,EAAK/G,MAAM8O,UAAU,IAAI,EAAE3lB,EAAOlR,EAAI,IAAI,GAAG,EAAEsU,GAAQ,CAACwa,EAAKrH,MAAM,GAAGpT,GAAWya,EAAKrH,KAAKpU,GAASgB,KAAa,EAAEA,GAAW,GAA2D,EAAxDb,IAAUD,GAAWc,GAAW,YAAY,eAAiB,KAAKf,IAAWe,OAAeA,KAAa,IAAI,cAAc,EAAE,IAAInD,EAAOlR,EAAI,IAAI,GAAGsU,GAAQ,GAAGpD,EAAOlR,EAAI,IAAI,GAAGsU,GAAQ,GAAU,GAAIwiB,QAAQ,SAASC,EAAK7tC,EAAOzO,EAAI4K,EAAMkK,GAAQ,IAAIzC,EAAOwjB,EAAOz0B,MAAMk7C,EAAKA,EAAKt8C,GAAKkoC,GAAG0D,MAAMn9B,EAAO4D,EAAOyC,EAAO9U,EAAI4K,IAAS2xC,QAAQ,SAAStqB,EAAKiI,GAAqH,MAA5D,OAAnDjI,EAAK6U,GAAKQ,UAAUrV,IAAcA,EAAKhyB,OAAO,KAASgyB,EAAKA,EAAKqB,OAAO,EAAErB,EAAKhyB,OAAO,IAAGioC,GAAGuL,MAAMxhB,EAAKiI,EAAK,GAAU,GAAIsiB,QAAQ,SAASvqB,EAAKiI,EAAK4O,GAAK,OAAY,MAAL5O,GAAY,KAAK,MAAM,KAAK,KAAK,KAAK,MAAM,KAAK,KAAK,KAAK,MAAM,MAAM,QAAQ,OAAQ,GAA4B,OAAxBgO,GAAGgD,MAAMjZ,EAAKiI,EAAK4O,GAAY,GAAI2T,WAAW,SAASxqB,EAAK1M,EAAIm3B,GAAS,GAAGA,GAAS,EAAE,OAAQ,GAAG,IAAIxyC,EAAIg+B,GAAG4D,SAAS7Z,GAAUjyB,EAAIM,KAAKkjB,IAAIk5B,EAAQrmB,EAAgBnsB,IAAUyyC,EAAQrmB,EAAM/Q,EAAIvlB,GAA4D,OAAvDm2B,EAAajsB,EAAIqb,EAAIm3B,EAAQ,GAAGpmB,EAAM/Q,EAAIvlB,GAAK28C,EAAe38C,GAAM48C,SAAS,SAAS3qB,EAAK4qB,GAAO,IAAS,EAANA,EAAU,OAAQ,GAAI,IAAInrB,EAAmE,KAAjBA,EAAlCwW,GAAGyH,WAAW1d,EAAK,CAACme,QAAO,IAAmB1e,MAAe,OAAQ,GAAI,IAAI4f,EAAM,GAAqE,OAAzD,EAANuL,IAAQvL,GAAO,KAAa,EAANuL,IAAQvL,GAAO,KAAa,EAANuL,IAAQvL,GAAO,KAAOA,GAAOpJ,GAAGqJ,gBAAgB7f,EAAK4f,IAAgB,EAAU,GAAIwL,MAAM,SAAS7qB,EAAKrnB,EAAMmyC,GAAW,IAAIC,EAAQ9U,GAAG8J,UAAU+K,GAAwC,OAA1BC,GAAQ9U,GAAGsB,MAAMwT,GAAgB9U,GAAGvU,KAAK1B,EAAKrnB,EAAM,EAAEmyC,EAAUA,GAAW7S,IAAK+S,QAAQ,SAASxuC,EAAOyuC,EAAIC,EAAOroC,GAAkB,IAAV,IAAI5K,EAAI,EAAUtF,EAAE,EAAEA,EAAEu4C,EAAOv4C,IAAI,CAAC,IAAIgxB,EAAIa,EAAOymB,EAAM,EAAFt4C,GAAK,GAAO5E,EAAIy2B,EAAOymB,GAAO,EAAFt4C,EAAI,IAAI,GAAOu6B,EAAK+I,GAAGtV,KAAKnkB,EAAO6nB,EAAMV,EAAI51B,EAAI8U,GAAQ,GAAGqqB,EAAK,EAAE,OAAQ,EAAY,GAAVj1B,GAAKi1B,EAAQA,EAAKn/B,EAAI,MAAO,OAAOkK,GAAMkzC,SAAS,SAAS3uC,EAAOyuC,EAAIC,EAAOroC,GAAkB,IAAV,IAAI5K,EAAI,EAAUtF,EAAE,EAAEA,EAAEu4C,EAAOv4C,IAAI,CAAC,IAAIgxB,EAAIa,EAAOymB,EAAM,EAAFt4C,GAAK,GAAO5E,EAAIy2B,EAAOymB,GAAO,EAAFt4C,EAAI,IAAI,GAAOu6B,EAAK+I,GAAGt3B,MAAMnC,EAAO6nB,EAAMV,EAAI51B,EAAI8U,GAAQ,GAAGqqB,EAAK,EAAE,OAAQ,EAAEj1B,GAAKi1B,EAAM,OAAOj1B,GAAMmzC,aAAQ71C,EAAU2D,IAAI,WAAqE,OAA1D0wC,GAASwB,SAAS,EAAU5mB,EAAOolB,GAASwB,QAAQ,GAAG,IAAgBC,OAAO,SAAS1nB,GAA+B,OAAlBD,EAAaC,IAAkB2nB,gBAAgB,SAASrT,GAAI,IAAIz7B,EAAOy5B,GAAG8J,UAAU9H,GAAI,IAAIz7B,EAAO,MAAM,IAAIy5B,GAAGoB,WAAW,GAAG,OAAO76B,GAAS+uC,MAAM,SAASC,EAAIC,GAAM,OAAOD,IAAwgBE,GAAmB,GAAG,SAASC,GAAeC,GAAa,KAAMA,EAAY59C,QAAO,CAAC,IAAI21B,EAAIioB,EAAY5zC,MAAc4zC,EAAY5zC,KAAM6zC,CAAIloB,IAAO,SAASmoB,GAA2BC,GAAS,OAAO,KAAmB,aAAEtnB,EAAQsnB,GAAS,IAAK,IAAIC,GAAqB,GAAOC,GAAgB,GAAOC,GAAiB,GAAOC,GAAO,GAAOC,GAAO,GAAG,SAASC,GAAsBv4C,GAAM,QAAGyB,IAAYzB,EAAM,MAAO,WAAoD,IAAI8sB,GAA5C9sB,EAAKA,EAAK3F,QAAQ,iBAAiB,MAAgB81B,WAAW,GAAG,OAAGrD,GAAGurB,IAAQvrB,GAAGwrB,GAAe,IAAIt4C,EAAmBA,EAAO,SAASw4C,GAAoBx4C,EAAKy4C,GAAuC,OAAjCz4C,EAAKu4C,GAAsBv4C,GAAa,IAAIY,SAAS,OAAO,mBAAmBZ,EAAK,uEAA5C,CAA6Hy4C,GAAO,SAASC,GAAYC,EAAcC,GAAW,IAAIC,EAAWL,GAAoBI,EAAU,SAAS/yC,GAAS,KAAK7F,KAAK44C,EAAU,KAAK/yC,QAAQA,EAAQ,IAAI+wB,EAAM,IAAIx5B,MAAMyI,GAAS+wB,WAAiBn1B,IAARm1B,IAAmB,KAAKA,MAAM,KAAK78B,WAAW,KAAK68B,EAAMv8B,QAAQ,qBAAqB,OAAoP,OAA5Ow+C,EAAW95C,UAAUiC,OAAOwB,OAAOm2C,EAAc55C,WAAW85C,EAAW95C,UAAUsoB,YAAYwxB,EAAWA,EAAW95C,UAAUhF,SAAS,WAAW,YAAkB0H,IAAf,KAAKoE,QAA4B,KAAK7F,KAAmB,KAAKA,KAAK,KAAK,KAAK6F,SAAkBgzC,EAAY,IAAIC,QAAcr3C,EAAU,SAASs3C,GAAmBlzC,GAAS,MAAM,IAAIizC,GAAcjzC,GAAU,SAASmzC,GAA8BC,EAAQC,EAAeC,GAA2F,SAASC,EAAWC,GAAgB,IAAIC,EAAiBH,EAAkBE,GAAmBC,EAAiBp/C,SAAS++C,EAAQ/+C,QAAQ6+C,GAAmB,mCAAoC,IAAI,IAAIl6C,EAAE,EAAEA,EAAEo6C,EAAQ/+C,SAAS2E,EAAG06C,GAAaN,EAAQp6C,GAAGy6C,EAAiBz6C,IAAlVo6C,EAAQv6B,QAAQ,SAASvc,GAAMi2C,GAAiBj2C,GAAM+2C,IAAkS,IAAIG,EAAe,IAAIz6C,MAAMs6C,EAAeh/C,QAAYs/C,EAAkB,GAAOC,EAAW,EAAEP,EAAex6B,QAAQ,SAASg7B,EAAG76C,GAAMs5C,GAAgBn1B,eAAe02B,GAAKL,EAAex6C,GAAGs5C,GAAgBuB,IAAWF,EAAkB16C,KAAK46C,GAAQxB,GAAqBl1B,eAAe02B,KAAKxB,GAAqBwB,GAAI,IAAIxB,GAAqBwB,GAAI56C,KAAK,WAAWu6C,EAAex6C,GAAGs5C,GAAgBuB,KAAMD,IAA2BD,EAAkBt/C,QAAQk/C,EAAWC,QAA2B,IAAIG,EAAkBt/C,QAAQk/C,EAAWC,GAAimD,IAAIM,GAAoB,GAA+iD,SAASC,GAAiB5nC,GAAM,OAAOA,GAAM,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,MAAM,IAAIjQ,UAAU,sBAAsBiQ,IAAkJ,IAAI6nC,QAAiBp4C,EAAU,SAASq4C,GAAiBjqB,GAA0B,IAArB,IAAI1rB,EAAI,GAAO8b,EAAE4P,EAAUC,EAAO7P,IAAI9b,GAAK01C,GAAiB/pB,EAAO7P,MAAO,OAAO9b,EAAK,IAAI41C,QAAat4C,EAAU,SAASu4C,GAAkBn0C,GAAS,MAAM,IAAIk0C,GAAal0C,GAAU,SAAS0zC,GAAaU,EAAQC,EAAmBzxC,GAA6B,GAApBA,EAAQA,GAAS,KAAQ,mBAAmByxC,GAAqB,MAAM,IAAIn4C,UAAU,2DAA4D,IAAI/B,EAAKk6C,EAAmBl6C,KAAoG,GAA3Fi6C,GAASD,GAAkB,SAASh6C,EAAK,iDAAqDm4C,GAAgBn1B,eAAei3B,GAAS,CAAC,GAAGxxC,EAAQ0xC,6BAA8B,OAAcH,GAAkB,yBAAyBh6C,EAAK,WAA0F,GAA7Em4C,GAAgB8B,GAASC,SAA0B9B,GAAiB6B,GAAY/B,GAAqBl1B,eAAei3B,GAAS,CAAC,IAAI5nB,EAAU6lB,GAAqB+B,UAAgB/B,GAAqB+B,GAAS5nB,EAAU3T,QAAQ,SAAS/X,GAAIA,OAAwkB,SAASyzC,GAAsBC,GAAO,KAAK,gBAAgBC,IAAc,OAAO,EAAO,KAAKD,aAAiBC,IAAc,OAAO,EAAiJ,IAA1I,IAAIC,EAAU,KAAKC,GAAGC,QAAQC,gBAAoBxc,EAAK,KAAKsc,GAAG3qB,IAAQ8qB,EAAWN,EAAMG,GAAGC,QAAQC,gBAAoBE,EAAMP,EAAMG,GAAG3qB,IAAU0qB,EAAUM,WAAW3c,EAAKqc,EAAUO,OAAO5c,GAAMqc,EAAUA,EAAUM,UAAW,KAAMF,EAAWE,WAAWD,EAAMD,EAAWG,OAAOF,GAAOD,EAAWA,EAAWE,UAAW,OAAON,IAAYI,GAAYzc,IAAO0c,EAAsO,SAASG,GAA4B3yC,GAAyF4xC,GAAsC5xC,EAAvEoyC,GAAGC,QAAQC,gBAAgB16C,KAAiD,6BAA8B,IAAIg7C,IAAkB,EAAM,SAASC,GAAgB/yB,IAAyJ,SAASgzB,GAAmBV,GAAIA,EAAGz3C,MAAM1B,OAAO,EAAe,IAAIm5C,EAAGz3C,MAAM1B,OAA5N,SAAuBm5C,GAAOA,EAAGW,SAAUX,EAAGY,aAAaC,cAAcb,EAAGW,UAAiBX,EAAGC,QAAQC,gBAAgBW,cAAcb,EAAG3qB,KAAsGyrB,CAAcd,GAAM,SAASe,GAAgBrzB,GAAQ,MAAG,oBAAqBszB,mBAAmBD,GAAgB,SAASrzB,GAAQ,OAAOA,GAAgBA,IAAQ8yB,GAAkB,IAAIQ,kBAAkB,SAAS9zB,GAAM,IAAI,IAAIlrB,EAAOkrB,EAAKlsB,QAAQgB,EAAOmiB,KAAKniB,EAAOkrB,EAAKlsB,OAAO,CAAC,IAAIg/C,EAAGh+C,EAAO6E,MAAUm5C,EAAG3qB,IAA4DqrB,GAAmBV,GAA1E3/C,QAAQC,KAAK,2BAA2B0/C,EAAG3qB,QAAgJorB,GAAgB,SAAS/yB,GAAQ8yB,GAAkBS,WAAWvzB,EAAOsyB,MAA7Ke,GAAgB,SAASrzB,GAA+D,OAAvD8yB,GAAkBlY,SAAS5a,EAAOA,EAAOsyB,GAAGtyB,EAAOsyB,IAAWtyB,IAA2GA,IAAS,SAASwzB,KAAwE,GAAhD,KAAKlB,GAAG3qB,KAAKkrB,GAA4B,MAAU,KAAKP,GAAGmB,wBAAgD,OAAvB,KAAKnB,GAAGz3C,MAAM1B,OAAO,EAAS,KAAY,IAAv6C4oB,EAA26C2xB,EAAML,GAAgBv6C,OAAOwB,OAAOxB,OAAOuE,eAAe,MAAM,CAACi1C,GAAG,CAACn5C,OAAh/C4oB,EAAihD,KAAKuwB,GAA5gD,CAACz3C,MAAMknB,EAAElnB,MAAM84C,gBAAgB5xB,EAAE4xB,gBAAgBF,wBAAwB1xB,EAAE0xB,wBAAwB9rB,IAAI5F,EAAE4F,IAAI4qB,QAAQxwB,EAAEwwB,QAAQU,SAASlxB,EAAEkxB,SAASC,aAAanxB,EAAEmxB,mBAAy6C,OAAvDQ,EAAMpB,GAAGz3C,MAAM1B,OAAO,EAAEu6C,EAAMpB,GAAGqB,iBAAgB,EAAaD,EAAQ,SAASE,KAAyB,KAAKtB,GAAG3qB,KAAKkrB,GAA4B,MAAU,KAAKP,GAAGqB,kBAAkB,KAAKrB,GAAGmB,yBAAyB3B,GAAkB,yCAA0CiB,GAAgB,MAAMC,GAAmB,KAAKV,IAAQ,KAAKA,GAAGmB,0BAAyB,KAAKnB,GAAGW,cAAS15C,EAAU,KAAK+4C,GAAG3qB,SAAIpuB,GAAY,SAASs6C,KAAwB,OAAQ,KAAKvB,GAAG3qB,IAAK,IAAImsB,QAAcv6C,EAAcw6C,GAAc,GAAG,SAASC,KAAsB,KAAMD,GAAc/hD,QAAO,CAAC,IAAIkO,EAAI6zC,GAAc/3C,MAAMkE,EAAIoyC,GAAGqB,iBAAgB,EAAMzzC,EAAY,UAAM,SAAS+zC,KAA8U,OAAhT,KAAK3B,GAAG3qB,KAAKkrB,GAA4B,MAAU,KAAKP,GAAGqB,kBAAkB,KAAKrB,GAAGmB,yBAAyB3B,GAAkB,yCAA0CiC,GAAcn9C,KAAK,MAAgC,IAAvBm9C,GAAc/hD,QAAY8hD,IAAeA,GAAcE,IAAsB,KAAK1B,GAAGqB,iBAAgB,EAAY,KAAsT,SAASvB,MAAe,IAAI8B,GAAmB,GAAG,SAASC,GAAoBC,EAAMC,EAAWC,GAAW,QAAG/6C,IAAY66C,EAAMC,GAAYE,cAAc,CAAC,IAAIC,EAASJ,EAAMC,GAAYD,EAAMC,GAAY,WAA0P,OAA3OD,EAAMC,GAAYE,cAAcz5B,eAAe7nB,UAAUjB,SAAS8/C,GAAkB,aAAawC,EAAU,iDAAiDrhD,UAAUjB,OAAO,uBAAuBoiD,EAAMC,GAAYE,cAAc,MAAcH,EAAMC,GAAYE,cAActhD,UAAUjB,QAAQ8E,MAAM,KAAK7D,YAAamhD,EAAMC,GAAYE,cAAc,GAAGH,EAAMC,GAAYE,cAAcC,EAASC,UAAUD,GAAW,SAASE,GAAmB58C,EAAKqB,EAAMw7C,GAAiB1xB,EAAOnI,eAAehjB,UAAUyB,IAAYo7C,QAAcp7C,IAAY0pB,EAAOnrB,GAAMy8C,oBAAeh7C,IAAY0pB,EAAOnrB,GAAMy8C,cAAcI,KAAe7C,GAAkB,gCAAgCh6C,EAAK,WAAYq8C,GAAoBlxB,EAAOnrB,EAAKA,GAASmrB,EAAOnI,eAAe65B,IAAe7C,GAAkB,uFAAuF6C,EAAa,MAAO1xB,EAAOnrB,GAAMy8C,cAAcI,GAAcx7C,IAAa8pB,EAAOnrB,GAAMqB,OAASI,IAAYo7C,IAAc1xB,EAAOnrB,GAAM68C,aAAaA,IAAgB,SAASC,GAAgB98C,EAAKqnB,EAAY01B,EAAkB1B,EAAcR,EAAUmC,EAAclC,EAAOmC,GAAU,KAAKj9C,KAAKA,EAAK,KAAKqnB,YAAYA,EAAY,KAAK01B,kBAAkBA,EAAkB,KAAK1B,cAAcA,EAAc,KAAKR,UAAUA,EAAU,KAAKmC,cAAcA,EAAc,KAAKlC,OAAOA,EAAO,KAAKmC,SAASA,EAAS,KAAKC,qBAAqB,GAAI,SAASC,GAActtB,EAAIutB,EAASC,GAAc,KAAMD,IAAWC,GAAkBD,EAAStC,QAAQd,GAAkB,gCAAgCqD,EAAar9C,KAAK,wBAAwBo9C,EAASp9C,MAAO6vB,EAAIutB,EAAStC,OAAOjrB,GAAKutB,EAASA,EAASvC,UAAW,OAAOhrB,EAAK,SAASytB,GAAoCxF,EAAY5vB,GAAQ,GAAY,OAATA,EAAyF,OAAvE,KAAKq1B,aAAavD,GAAkB,uBAAuB,KAAKh6C,MAAc,EAAOkoB,EAAOsyB,IAAIR,GAAkB,gBAAgBwD,GAAat1B,GAAQ,UAAU,KAAKloB,MAAWkoB,EAAOsyB,GAAG3qB,KAAKmqB,GAAkB,mDAAmD,KAAKh6C,MAAO,IAAIy9C,EAAYv1B,EAAOsyB,GAAGC,QAAQC,gBAAsF,OAA9DyC,GAAcj1B,EAAOsyB,GAAG3qB,IAAI4tB,EAAY,KAAK/C,iBAA6B,SAASgD,GAAyB5F,EAAY5vB,GAAQ,IAAI2H,EAAI,GAAY,OAAT3H,EAAyF,OAAvE,KAAKq1B,aAAavD,GAAkB,uBAAuB,KAAKh6C,MAAU,KAAK29C,gBAAgB9tB,EAAI,KAAK+tB,iBAAkC,OAAd9F,GAAoBA,EAAYh5C,KAAK,KAAKu8C,cAAcxrB,GAAaA,GAAkB,EAAQ3H,EAAOsyB,IAAIR,GAAkB,gBAAgBwD,GAAat1B,GAAQ,UAAU,KAAKloB,MAAWkoB,EAAOsyB,GAAG3qB,KAAKmqB,GAAkB,mDAAmD,KAAKh6C,OAAW,KAAK69C,SAAS31B,EAAOsyB,GAAGC,QAAQoD,SAAS7D,GAAkB,oCAAoC9xB,EAAOsyB,GAAGY,aAAalzB,EAAOsyB,GAAGY,aAAap7C,KAAKkoB,EAAOsyB,GAAGC,QAAQz6C,MAAM,sBAAsB,KAAKA,MAAO,IAAIy9C,EAAYv1B,EAAOsyB,GAAGC,QAAQC,gBAAkF,GAAlE7qB,EAAIstB,GAAcj1B,EAAOsyB,GAAG3qB,IAAI4tB,EAAY,KAAK/C,iBAAoB,KAAKiD,eAAyH,YAAtGl8C,IAAYymB,EAAOsyB,GAAGW,UAAUnB,GAAkB,mDAA2D,KAAK8D,eAAe,KAAK,EAAK51B,EAAOsyB,GAAGY,eAAe,KAAMvrB,EAAI3H,EAAOsyB,GAAGW,SAAgBnB,GAAkB,oCAAoC9xB,EAAOsyB,GAAGY,aAAalzB,EAAOsyB,GAAGY,aAAap7C,KAAKkoB,EAAOsyB,GAAGC,QAAQz6C,MAAM,sBAAsB,KAAKA,MAAO,MAAM,KAAK,EAAE6vB,EAAI3H,EAAOsyB,GAAGW,SAAS,MAAM,KAAK,EAAE,GAAGjzB,EAAOsyB,GAAGY,eAAe,KAAMvrB,EAAI3H,EAAOsyB,GAAGW,aAAe,CAAC,IAAI4C,EAAa71B,EAAc,QAAI2H,EAAI,KAAKmuB,SAASnuB,EAAIouB,GAAiB,WAAWF,EAAqB,YAAyB,OAAdjG,GAAoBA,EAAYh5C,KAAK,KAAKu8C,cAAcxrB,GAAO,MAAM,QAAQmqB,GAAkB,+BAAiC,OAAOnqB,EAAK,SAASquB,GAAuCpG,EAAY5vB,GAAQ,GAAY,OAATA,EAAyF,OAAvE,KAAKq1B,aAAavD,GAAkB,uBAAuB,KAAKh6C,MAAc,EAAOkoB,EAAOsyB,IAAIR,GAAkB,gBAAgBwD,GAAat1B,GAAQ,UAAU,KAAKloB,MAAWkoB,EAAOsyB,GAAG3qB,KAAKmqB,GAAkB,mDAAmD,KAAKh6C,MAAUkoB,EAAOsyB,GAAGC,QAAQoD,SAAS7D,GAAkB,mCAAmC9xB,EAAOsyB,GAAGC,QAAQz6C,KAAK,sBAAsB,KAAKA,MAAO,IAAIy9C,EAAYv1B,EAAOsyB,GAAGC,QAAQC,gBAAsF,OAA9DyC,GAAcj1B,EAAOsyB,GAAG3qB,IAAI4tB,EAAY,KAAK/C,iBAA6B,SAASyD,GAA6BtuB,GAAyD,OAAjD,KAAKuuB,gBAAevuB,EAAI,KAAKuuB,cAAcvuB,IAAaA,EAAK,SAASwuB,GAA6BxuB,GAAQ,KAAKwrB,eAAe,KAAKA,cAAcxrB,GAAO,SAASyuB,GAA+Bp2B,GAAoB,OAATA,GAAeA,EAAe,SAA+Q,SAASq2B,KAA4B,OAAOv9C,OAAOmF,KAAKq4C,IAAqBtkD,OAAQ,SAASukD,KAA4B,IAAIC,EAAG,GAAG,IAAI,IAAI7rC,KAAK2rC,GAAwBA,GAAoBx7B,eAAenQ,IAAI6rC,EAAG5/C,KAAK0/C,GAAoB3rC,IAAM,OAAO6rC,EAAI,SAASC,GAAiB15B,GAAI+2B,GAAc/2B,EAAMg3B,GAAc/hD,QAAQ8hD,IAAeA,GAAcE,IAAyQ,IAAIsC,GAAoB,GAAmM,SAASI,GAAqBC,EAAOhvB,GAAsC,OAAjCA,EAA1O,SAA0BgvB,EAAOhvB,GAA2E,SAA7DpuB,IAANouB,GAAiBmqB,GAAkB,+BAAsC6E,EAAOhE,WAAWhrB,EAAIgvB,EAAO/D,OAAOjrB,GAAKgvB,EAAOA,EAAOhE,UAAW,OAAOhrB,EAAmDivB,CAAiBD,EAAOhvB,GAAY2uB,GAAoB3uB,GAAM,SAASkvB,GAAgBhgD,EAAUgmB,GAAsT,OAA1SA,EAAO01B,SAAU11B,EAAO8K,KAAKkpB,GAAmB,8CAAmEh0B,EAAOq2B,gBAA+Br2B,EAAOo2B,UAA2CpC,GAAmB,oDAAqDh0B,EAAOhiB,MAAM,CAAC1B,MAAM,GAAUk6C,GAAgBv6C,OAAOwB,OAAOzD,EAAU,CAACy7C,GAAG,CAACn5C,MAAM0jB,MAAY,SAASi6B,GAA+BnvB,GAAK,IAAIovB,EAAW,KAAKC,WAAWrvB,GAAK,IAAIovB,EAAiC,OAArB,KAAKE,WAAWtvB,GAAY,KAAM,IAAIqqB,EAAmB0E,GAAqB,KAAKlE,gBAAgBuE,GAAY,QAAGx9C,IAAYy4C,EAAmB,CAAC,GAAG,IAAIA,EAAmBM,GAAGz3C,MAAM1B,MAA+E,OAAxE64C,EAAmBM,GAAG3qB,IAAIovB,EAAW/E,EAAmBM,GAAGW,SAAStrB,EAAWqqB,EAA0B,QAAW,IAAIwE,EAAGxE,EAA0B,QAAyB,OAArB,KAAKiF,WAAWtvB,GAAY6uB,EAAK,SAASU,IAAoB,OAAG,KAAKzB,eAAuBoB,GAAgB,KAAKrE,gBAAgBqC,kBAAkB,CAACtC,QAAQ,KAAK4E,YAAYxvB,IAAIovB,EAAW7D,aAAa,KAAKD,SAAStrB,IAAoBkvB,GAAgB,KAAKrE,gBAAgBqC,kBAAkB,CAACtC,QAAQ,KAAK5qB,IAAIA,IAAQ,IAA+LyvB,EAA3LC,EAAW,KAAK7E,gBAAgBsC,cAAciC,GAAgBO,EAAwBpD,GAAmBmD,GAAY,IAAIC,EAAyB,OAAOJ,EAAkB1hD,KAAK,MAAmC4hD,EAAd,KAAKzB,QAAgB2B,EAAwBC,iBAA+BD,EAAwBE,YAAa,IAAIC,EAA3oF,SAASC,EAAgB/vB,EAAIutB,EAASC,GAAc,GAAGD,IAAWC,EAAc,OAAOxtB,EAAK,QAAGpuB,IAAY47C,EAAaxC,UAAW,OAAO,KAAM,IAAI6D,EAAGkB,EAAgB/vB,EAAIutB,EAASC,EAAaxC,WAAW,OAAQ,OAAL6D,EAAkB,KAAarB,EAAaJ,SAASyB,GAA04EkB,CAAgBX,EAAW,KAAKvE,gBAAgB4E,EAAO5E,iBAAiB,OAAQ,OAALiF,EAAkBP,EAAkB1hD,KAAK,MAAU,KAAKigD,eAAuBoB,GAAgBO,EAAO5E,gBAAgBqC,kBAAkB,CAACtC,QAAQ6E,EAAOzvB,IAAI8vB,EAAGvE,aAAa,KAAKD,SAAStrB,IAAoBkvB,GAAgBO,EAAO5E,gBAAgBqC,kBAAkB,CAACtC,QAAQ6E,EAAOzvB,IAAI8vB,IAAuc,SAASE,GAAkB7/C,EAAK06C,EAAgB6C,EAAYM,EAAQF,EAAe0B,EAAYvB,EAAcM,EAAcR,EAAeI,EAAS3C,GAAe,KAAKr7C,KAAKA,EAAK,KAAK06C,gBAAgBA,EAAgB,KAAK6C,YAAYA,EAAY,KAAKM,QAAQA,EAAQ,KAAKF,eAAeA,EAAe,KAAK0B,YAAYA,EAAY,KAAKvB,cAAcA,EAAc,KAAKM,cAAcA,EAAc,KAAKR,eAAeA,EAAe,KAAKI,SAASA,EAAS,KAAK3C,cAAcA,EAAkBsC,QAA4Cl8C,IAA5Bi5C,EAAgBG,UAA6N,KAAiB,WAAE6C,GAAtNG,GAAS,KAAiB,WAAEP,GAAoC,KAAKwC,mBAAmB,OAAY,KAAiB,WAAE5B,GAAuC,KAAK4B,mBAAmB,MAA2D,SAASC,GAAoB//C,EAAKqB,EAAMw7C,GAAkB1xB,EAAOnI,eAAehjB,IAAO+4C,GAAmB,4CAA2Ct3C,IAAY0pB,EAAOnrB,GAAMy8C,oBAAeh7C,IAAYo7C,EAAc1xB,EAAOnrB,GAAMy8C,cAAcI,GAAcx7C,GAAa8pB,EAAOnrB,GAAMqB,EAAM8pB,EAAOnrB,GAAM28C,SAASE,GAAe,SAASmD,GAAwB9oC,EAAU+oC,GAAa/oC,EAAU4iC,GAAiB5iC,GAAiY,IAAwCgpC,EAA9Z,SAAuBC,GAAqB,IAAZ,IAAIxhD,EAAK,GAAWE,EAAE,EAAEA,EAAEqY,EAAUhd,SAAS2E,EAAGF,EAAKG,KAAK,IAAID,GAAI,IAAkD45C,EAAK,2BAAnCvhC,EAAU,IAAI+oC,EAA6C,IAAIthD,EAAKga,KAAK,MAAM,QAAyG,OAAjG8/B,GAAM,kCAAkC95C,EAAKzE,OAAO,KAAK,IAAIyE,EAAKga,KAAK,MAAM,OAAO8/B,GAAM,OAAc,IAAI73C,SAAS,UAAU,cAAc63C,EAArC,CAA2C0H,EAAQF,GAAyDG,CAApCj1B,EAAO,WAAWjU,IAAyJ,MAAtG,mBAALgpC,GAAiBlG,GAAkB,2CAA2C9iC,EAAU,KAAK+oC,GAAqBC,EAAI,IAAIG,QAAiB5+C,EAAU,SAAS6+C,GAAYn+C,GAAM,IAAI0tB,EAAI0wB,GAAep+C,GAAUu8C,EAAG5E,GAAiBjqB,GAAgB,OAAXyQ,GAAMzQ,GAAY6uB,EAAI,SAAS8B,GAAsB36C,EAAQ46C,GAAO,IAAIC,EAAa,GAAOC,EAAK,GAAwN,MAArBF,EAAM/hC,QAAtM,SAASkiC,EAAMz+C,GAASw+C,EAAKx+C,IAAkBg2C,GAAgBh2C,KAAkBi2C,GAAiBj2C,GAAOi2C,GAAiBj2C,GAAMuc,QAAQkiC,IAAeF,EAAa5hD,KAAKqD,GAAMw+C,EAAKx+C,IAAM,MAAiC,IAAIk+C,GAAiBx6C,EAAQ,KAAK66C,EAAaG,IAAIP,IAAa3nC,KAAK,CAAC,QAAy2E,SAASmoC,GAAKz5B,EAAY05B,GAAc,KAAK15B,aAAuBzmB,UAAW,MAAM,IAAImB,UAAU,4CAA4CslB,EAAY,4BAA6B,IAAI25B,EAAMxI,GAAoBnxB,EAAYrnB,MAAM,sBAAsB,cAAcghD,EAAMjiD,UAAUsoB,EAAYtoB,UAAU,IAAIqJ,EAAI,IAAI44C,EAAY7lC,EAAEkM,EAAYroB,MAAMoJ,EAAI24C,GAAc,OAAO5lC,aAAana,OAAOma,EAAE/S,EAAK,SAAS64C,GAAqBzE,EAAU0E,EAASC,EAAUC,EAAeC,GAAe,IAAI1E,EAASuE,EAAShnD,OAAUyiD,EAAS,GAAG3C,GAAkB,kFAA6K,IAA1F,IAAIsH,EAAgC,OAAdJ,EAAS,IAAuB,OAAZC,EAAqBI,GAAqB,EAAc1iD,EAAE,EAAEA,EAAEqiD,EAAShnD,SAAS2E,EAAG,GAAiB,OAAdqiD,EAASriD,SAA4C4C,IAAjCy/C,EAASriD,GAAGihD,mBAA+B,CAACyB,GAAqB,EAAK,MAAQ,IAAIC,EAA2B,SAAnBN,EAAS,GAAGlhD,KAAkByhD,EAAS,GAAOC,EAAc,GAAG,IAAQ7iD,EAAE,EAAEA,EAAE89C,EAAS,IAAI99C,EAAG4iD,IAAe,IAAJ5iD,EAAM,KAAK,IAAI,MAAMA,EAAE6iD,IAAoB,IAAJ7iD,EAAM,KAAK,IAAI,MAAMA,EAAE,QAAS,IAAI8iD,EAAc,mBAAmBpJ,GAAsBiE,GAAW,IAAIiF,EAAS,kCAAqC9E,EAAS,GAAG,oCAAuCH,EAAU,8DAA8DG,EAAS,GAAG,iBAAuB4E,IAAsBI,GAAe,2BAA2B,IAAIC,EAAUL,EAAqB,cAAc,OAAWM,EAAM,CAAC,oBAAoB,UAAU,KAAK,iBAAiB,UAAU,cAAkBC,EAAM,CAAC9H,GAAkBoH,EAAeC,EAAcxJ,GAAeqJ,EAAS,GAAGA,EAAS,IAA0G,IAAnGI,IAAmBK,GAAe,yCAAyCC,EAAU,cAAsB/iD,EAAE,EAAEA,EAAE89C,EAAS,IAAI99C,EAAG8iD,GAAe,UAAU9iD,EAAE,kBAAkBA,EAAE,eAAe+iD,EAAU,QAAQ/iD,EAAE,SAASqiD,EAASriD,EAAE,GAAGmB,KAAK,KAAK6hD,EAAM/iD,KAAK,UAAUD,GAAGijD,EAAMhjD,KAAKoiD,EAASriD,EAAE,IAAgN,GAAxMyiD,IAAmBI,EAAc,aAAaA,EAAcxnD,OAAO,EAAE,KAAK,IAAIwnD,GAAeC,IAAgBH,EAAQ,YAAY,IAAI,cAAcE,EAAcxnD,OAAO,EAAE,KAAK,IAAIwnD,EAAc,OAAUH,EAAsBI,GAAe,sCAAwC,IAAQ9iD,EAAEyiD,EAAkB,EAAE,EAAEziD,EAAEqiD,EAAShnD,SAAS2E,EAAE,CAAC,IAAIkjD,EAAc,IAAJljD,EAAM,YAAY,OAAOA,EAAE,GAAG,QAA4C,OAAjCqiD,EAASriD,GAAGihD,qBAA2B6B,GAAeI,EAAU,SAASA,EAAU,SAASb,EAASriD,GAAGmB,KAAK,KAAK6hD,EAAM/iD,KAAKijD,EAAU,SAASD,EAAMhjD,KAAKoiD,EAASriD,GAAGihD,qBAAqN,OAA3L0B,IAASG,GAAe,sDAAyDA,GAAe,MAAME,EAAM/iD,KAAK6iD,GAAmCb,GAAKlgD,SAASihD,GAAO7iD,MAAM,KAAK8iD,GAA+B,SAASE,GAAoBj/C,EAAMk/C,GAA2B,IAAb,IAAIzjD,EAAM,GAAWK,EAAE,EAAEA,EAAEkE,EAAMlE,IAAKL,EAAMM,KAAK4xB,GAAQuxB,GAAc,GAAGpjD,IAAK,OAAOL,EAA2qI,SAAS0jD,GAAaC,EAAMhB,EAAU3E,GAA6W,OAA7V2F,aAAiBnhD,QAASg5C,GAAkBwC,EAAU,yBAAyB2F,GAAaA,aAAiBhB,EAAUzG,gBAAgBrzB,aAAc2yB,GAAkBwC,EAAU,qCAAqC2F,EAAM96B,YAAYrnB,MAAWmiD,EAAM3H,GAAG3qB,KAAKmqB,GAAkB,yCAAyCwC,EAAU,sBAA8BW,GAAcgF,EAAM3H,GAAG3qB,IAAIsyB,EAAM3H,GAAGC,QAAQC,gBAAgByG,EAAUzG,iBAAmyD,IAAI0H,GAAgB,GAAOC,GAAmB,CAAC,GAAG,CAAChhD,WAAMI,GAAW,CAACJ,MAAM,MAAM,CAACA,OAAM,GAAM,CAACA,OAAM,IAAQ,SAASihD,GAAep6B,GAAWA,EAAO,GAAG,KAAMm6B,GAAmBn6B,GAAQq6B,WAAUF,GAAmBn6B,QAAQzmB,EAAU2gD,GAAgBtjD,KAAKopB,IAAU,SAASs6B,KAAkC,IAAZ,IAAIz/C,EAAM,EAAUlE,EAAE,EAAEA,EAAEwjD,GAAmBnoD,SAAS2E,OAA8B4C,IAAxB4gD,GAAmBxjD,MAAkBkE,EAAQ,OAAOA,EAAO,SAAS0/C,KAAkB,IAAI,IAAI5jD,EAAE,EAAEA,EAAEwjD,GAAmBnoD,SAAS2E,EAAG,QAA2B4C,IAAxB4gD,GAAmBxjD,GAAgB,OAAOwjD,GAAmBxjD,GAAK,OAAO,KAAyH,SAASo/C,GAAiB58C,GAAO,OAAOA,GAAO,UAAKI,EAAW,OAAO,EAAG,KAAK,KAAM,OAAO,EAAG,KAAK,EAAM,OAAO,EAAG,KAAK,EAAO,OAAO,EAAG,QAAS,IAAIymB,EAAOk6B,GAAgBloD,OAAOkoD,GAAgBl+C,MAAMm+C,GAAmBnoD,OAA2D,OAApDmoD,GAAmBn6B,GAAQ,CAACq6B,SAAS,EAAElhD,MAAMA,GAAc6mB,GAA0Y,SAASs1B,GAAalhC,GAAG,GAAO,OAAJA,EAAU,MAAO,OAAQ,IAAIK,SAASL,EAAE,MAAO,WAAJK,GAAkB,UAAJA,GAAiB,aAAJA,EAAuBL,EAAEviB,WAAyB,GAAGuiB,EAAI,SAASomC,GAA0B1iD,EAAKiG,GAAO,OAAOA,GAAO,KAAK,EAAE,OAAO,SAASgyC,GAAS,OAAO,KAAmB,aAAErnB,EAAQqnB,GAAS,KAAM,KAAK,EAAE,OAAO,SAASA,GAAS,OAAO,KAAmB,aAAEpnB,EAAQonB,GAAS,KAAM,QAAQ,MAAM,IAAIl2C,UAAU,uBAAuB/B,IAAwkC,SAAS2iD,GAA4B3iD,EAAKiG,EAAM28C,GAAQ,OAAO38C,GAAO,KAAK,EAAE,OAAO28C,EAAO,SAA2B3K,GAAS,OAAO1nB,EAAM0nB,IAAW,SAA2BA,GAAS,OAAOnoB,EAAOmoB,IAAW,KAAK,EAAE,OAAO2K,EAAO,SAA4B3K,GAAS,OAAOznB,EAAOynB,GAAS,IAAK,SAA4BA,GAAS,OAAOxnB,EAAQwnB,GAAS,IAAK,KAAK,EAAE,OAAO2K,EAAO,SAA4B3K,GAAS,OAAOvnB,EAAOunB,GAAS,IAAK,SAA4BA,GAAS,OAAOtnB,EAAQsnB,GAAS,IAAK,QAAQ,MAAM,IAAIl2C,UAAU,yBAAyB/B,IAA8kN,IAAI6iD,GAAc,GAAG,SAASC,GAAkBza,GAAS,IAAI0a,EAAOF,GAAcxa,GAAS,YAAY5mC,IAATshD,EAA2BjJ,GAAiBzR,GAAuB0a,EAAS,IAAIC,GAAoB,GAAG,SAASC,GAAc/6B,GAAmF,OAAvEA,GAAQ8xB,GAAkB,oCAAoC9xB,GAAgBm6B,GAAmBn6B,GAAQ7mB,MAA6U,SAAS6hD,GAAsBjJ,EAAQuC,GAAW,IAAI2G,EAAKhL,GAAgB8B,GAAsG,YAA1Fx4C,IAAY0hD,GAAMnJ,GAAkBwC,EAAU,qBAAqB8D,GAAYrG,IAAkBkJ,EAA82D,IAAIC,IAAiC,EAAid,SAASC,GAA0BrxC,GAAM,IAAqG,OAAjGqc,EAAWi1B,KAAKtxC,EAAK1F,EAAOoO,WAAW,QAAQ,IAAIgX,GAA2BrD,EAAW/hB,QAAe,EAAS7O,MAAAA,KAA+lB,IAAI8lD,GAAI,GAAwE,SAASC,KAAgB,IAAIA,GAAcC,QAAQ,CAAC,IAAuHvkD,EAAI,CAAC,KAAO,WAAW,QAAU,WAAW,KAAO,IAAI,IAAM,IAAI,KAAO,iBAAiB,MAAnL,iBAAZs9B,WAAsBA,UAAUknB,WAAWlnB,UAAUknB,UAAU,IAAI,KAAKrpD,QAAQ,IAAI,KAAK,SAAkH,EAA/SixB,GAAa,kBAA6T,IAAI,IAAIvQ,KAAKwoC,GAAKrkD,EAAI6b,GAAGwoC,GAAIxoC,GAAI,IAAI0oC,EAAQ,GAAG,IAAI,IAAI1oC,KAAK7b,EAAKukD,EAAQ3kD,KAAKic,EAAE,IAAI7b,EAAI6b,IAAKyoC,GAAcC,QAAQA,EAAS,OAAOD,GAAcC,QAAuiE,SAASE,GAAaC,GAAM,OAAOA,EAAK,GAAI,IAAIA,EAAK,KAAM,GAAGA,EAAK,KAAM,GAAI,SAASC,GAAWrlD,EAAM5B,GAAiB,IAAV,IAAIknD,EAAI,EAAUjlD,EAAE,EAAEA,GAAGjC,EAAMknD,GAAKtlD,EAAMK,MAAO,OAAOilD,EAAK,IAAIC,GAAkB,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAQC,GAAqB,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,SAASC,GAAUC,EAAKC,GAA2C,IAArC,IAAIC,EAAQ,IAAIruB,KAAKmuB,EAAK7N,WAAiB8N,EAAK,GAAE,CAAC,IAAIE,EAAKV,GAAaS,EAAQE,eAAmBC,EAAaH,EAAQI,WAAeC,GAAoBJ,EAAKN,GAAkBC,IAAsBO,GAAc,KAAGJ,EAAKM,EAAmBL,EAAQM,WAAwP,OAAxCN,EAAQO,QAAQP,EAAQM,UAAUP,GAAaC,EAApPD,GAAMM,EAAmBL,EAAQM,UAAU,EAAEN,EAAQO,QAAQ,GAAMJ,EAAa,GAAIH,EAAQQ,SAASL,EAAa,IAAUH,EAAQQ,SAAS,GAAGR,EAAQS,YAAYT,EAAQE,cAAc,IAAoE,OAAOF,EAAS,SAASU,GAAUvpC,EAAEwpC,EAAQC,EAAOC,GAAI,IAAIC,EAAQx0B,EAAOu0B,EAAG,IAAI,GAAOf,EAAK,CAACiB,OAAOz0B,EAAOu0B,GAAI,GAAGG,OAAO10B,EAAOu0B,EAAG,GAAG,GAAGI,QAAQ30B,EAAOu0B,EAAG,GAAG,GAAGK,QAAQ50B,EAAOu0B,EAAG,IAAI,GAAGM,OAAO70B,EAAOu0B,EAAG,IAAI,GAAGO,QAAQ90B,EAAOu0B,EAAG,IAAI,GAAGQ,QAAQ/0B,EAAOu0B,EAAG,IAAI,GAAGS,QAAQh1B,EAAOu0B,EAAG,IAAI,GAAGU,SAASj1B,EAAOu0B,EAAG,IAAI,GAAGW,UAAUl1B,EAAOu0B,EAAG,IAAI,GAAGC,QAAQA,EAAQt1B,EAAas1B,GAAS,IAAQW,EAAQj2B,EAAao1B,GAAYc,EAAkB,CAAC,KAAK,uBAAuB,KAAK,WAAW,KAAK,WAAW,KAAK,KAAK,KAAK,cAAc,KAAK,QAAQ,KAAK,WAAW,KAAK,WAAW,KAAK,WAAW,MAAM,KAAK,MAAM,KAAK,MAAM,WAAW,MAAM,WAAW,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,MAAM,IAAI,IAAIC,KAAQD,EAAmBD,EAAQA,EAAQxrD,QAAQ,IAAI2rD,OAAOD,EAAK,KAAKD,EAAkBC,IAAQ,IAAIE,EAAS,CAAC,SAAS,SAAS,UAAU,YAAY,WAAW,SAAS,YAAgBC,EAAO,CAAC,UAAU,WAAW,QAAQ,QAAQ,MAAM,OAAO,OAAO,SAAS,YAAY,UAAU,WAAW,YAAY,SAASC,EAAiB9kD,EAAM+kD,EAAOC,GAAsE,IAA3D,IAAI/2B,EAAmB,iBAARjuB,EAAiBA,EAAMtH,WAAWsH,GAAO,GAASiuB,EAAIp1B,OAAOksD,GAAQ92B,EAAI+2B,EAAU,GAAG/2B,EAAK,OAAOA,EAAK,SAASg3B,EAAajlD,EAAM+kD,GAAQ,OAAOD,EAAiB9kD,EAAM+kD,EAAO,KAAM,SAASG,EAAaC,EAAMC,GAAO,SAASC,EAAIrlD,GAAO,OAAOA,EAAM,GAAG,EAAEA,EAAM,EAAE,EAAE,EAAG,IAAIslD,EAA+K,OAA3G,KAAxDA,EAAQD,EAAIF,EAAMlC,cAAcmC,EAAMnC,iBAA2E,KAAlDqC,EAAQD,EAAIF,EAAMhC,WAAWiC,EAAMjC,eAAkBmC,EAAQD,EAAIF,EAAM9B,UAAU+B,EAAM/B,YAAoBiC,EAAS,SAASC,EAAsBC,GAAW,OAAOA,EAAUC,UAAU,KAAK,EAAE,OAAO,IAAI/wB,KAAK8wB,EAAUvC,cAAc,EAAE,GAAG,IAAI,KAAK,EAAE,OAAOuC,EAAU,KAAK,EAAE,OAAO,IAAI9wB,KAAK8wB,EAAUvC,cAAc,EAAE,GAAG,KAAK,EAAE,OAAO,IAAIvuB,KAAK8wB,EAAUvC,cAAc,EAAE,GAAG,KAAK,EAAE,OAAO,IAAIvuB,KAAK8wB,EAAUvC,cAAc,EAAE,GAAG,KAAK,EAAE,OAAO,IAAIvuB,KAAK8wB,EAAUvC,cAAc,EAAE,GAAG,IAAI,KAAK,EAAE,OAAO,IAAIvuB,KAAK8wB,EAAUvC,cAAc,EAAE,GAAG,KAAM,SAASyC,EAAiB7C,GAAM,IAAI8C,EAAS/C,GAAU,IAAIluB,KAAKmuB,EAAKsB,QAAQ,KAAK,EAAE,GAAGtB,EAAKwB,SAAauB,EAAkB,IAAIlxB,KAAKixB,EAAS1C,cAAc,EAAE,GAAO4C,EAAkB,IAAInxB,KAAKixB,EAAS1C,cAAc,EAAE,EAAE,GAAO6C,EAAuBP,EAAsBK,GAAuBG,EAAuBR,EAAsBM,GAAmB,OAAGX,EAAaY,EAAuBH,IAAW,EAAMT,EAAaa,EAAuBJ,IAAW,EAAUA,EAAS1C,cAAc,EAAgB0C,EAAS1C,cAA6B0C,EAAS1C,cAAc,EAAI,IAAI+C,EAAkB,CAAC,KAAK,SAASnD,GAAM,OAAO+B,EAAS/B,EAAKuB,SAAS6B,UAAU,EAAE,IAAK,KAAK,SAASpD,GAAM,OAAO+B,EAAS/B,EAAKuB,UAAW,KAAK,SAASvB,GAAM,OAAOgC,EAAOhC,EAAKqB,QAAQ+B,UAAU,EAAE,IAAK,KAAK,SAASpD,GAAM,OAAOgC,EAAOhC,EAAKqB,SAAU,KAAK,SAASrB,GAAiC,OAAOoC,GAAzBpC,EAAKsB,QAAQ,MAA8B,IAAI,EAAE,IAAK,KAAK,SAAStB,GAAM,OAAOoC,EAAapC,EAAKoB,QAAQ,IAAK,KAAK,SAASpB,GAAM,OAAOiC,EAAiBjC,EAAKoB,QAAQ,EAAE,MAAO,KAAK,SAASpB,GAAM,OAAO6C,EAAiB7C,GAAMnqD,WAAWutD,UAAU,IAAK,KAAK,SAASpD,GAAM,OAAO6C,EAAiB7C,IAAQ,KAAK,SAASA,GAAM,OAAOoC,EAAapC,EAAKmB,QAAQ,IAAK,KAAK,SAASnB,GAAM,IAAIqD,EAAWrD,EAAKmB,QAA4E,OAArD,GAAZkC,EAAcA,EAAW,GAAWA,EAAW,KAAGA,GAAY,IAAUjB,EAAaiB,EAAW,IAAK,KAAK,SAASrD,GAAM,OAAOoC,EAAapC,EAAKoB,QAAQzB,GAAWF,GAAaO,EAAKsB,QAAQ,MAAMzB,GAAkBC,GAAqBE,EAAKqB,OAAO,GAAG,IAAK,KAAK,SAASrB,GAAM,OAAOoC,EAAapC,EAAKqB,OAAO,EAAE,IAAK,KAAK,SAASrB,GAAM,OAAOoC,EAAapC,EAAKkB,OAAO,IAAK,KAAK,WAAW,MAAO,MAAO,KAAK,SAASlB,GAAM,OAAGA,EAAKmB,SAAS,GAAGnB,EAAKmB,QAAQ,GAAW,KAAmB,MAAQ,KAAK,SAASnB,GAAM,OAAOoC,EAAapC,EAAKiB,OAAO,IAAK,KAAK,WAAW,MAAO,MAAO,KAAK,SAASjB,GAAM,OAAOA,EAAKuB,SAAS,GAAI,KAAK,SAASvB,GAAM,IAAIsD,EAAS,IAAIzxB,KAAKmuB,EAAKsB,QAAQ,KAAK,EAAE,GAAOiC,EAAgC,IAApBD,EAASV,SAAaU,EAASvD,GAAUuD,EAAS,EAAEA,EAASV,UAAcY,EAAQ,IAAI3xB,KAAKmuB,EAAKsB,QAAQ,KAAKtB,EAAKqB,OAAOrB,EAAKoB,SAAS,GAAGiB,EAAakB,EAAYC,GAAS,EAAE,CAAC,IAAIC,EAA2B9D,GAAWF,GAAa+D,EAAQpD,eAAeP,GAAkBC,GAAqB0D,EAAQlD,WAAW,GAAG,GAA+DL,EAA7B,GAAGsD,EAAY/C,UAA8CiD,EAA2BD,EAAQhD,UAAU,OAAO4B,EAAa/rD,KAAKkY,KAAK0xC,EAAK,GAAG,GAAI,OAA4C,IAArCoC,EAAakB,EAAYD,GAAc,KAAK,MAAO,KAAK,SAAStD,GAAM,IAA6b0D,EAAzbX,EAAkB,IAAIlxB,KAAKmuB,EAAKsB,QAAQ,KAAK,EAAE,GAAO0B,EAAkB,IAAInxB,KAAKmuB,EAAKsB,QAAQ,KAAK,EAAE,GAAO2B,EAAuBP,EAAsBK,GAAuBG,EAAuBR,EAAsBM,GAAuBQ,EAAQzD,GAAU,IAAIluB,KAAKmuB,EAAKsB,QAAQ,KAAK,EAAE,GAAGtB,EAAKwB,SAAS,OAAGa,EAAamB,EAAQP,GAAwB,EAAU,KAASZ,EAAaa,EAAuBM,IAAU,EAAU,MAAoFE,EAAxDT,EAAuB7C,cAAcJ,EAAKsB,QAAQ,KAAqBtB,EAAKwB,QAAQ,GAAGyB,EAAuBzC,UAAgCR,EAAKwB,QAAQ,EAAEyB,EAAuBzC,UAAkB4B,EAAa/rD,KAAKkY,KAAKm1C,EAAe,GAAG,KAAK,KAAK,SAAS1D,GAAM,OAAOA,EAAKuB,SAAU,KAAK,SAASvB,GAAM,IAAIsD,EAAS,IAAIzxB,KAAKmuB,EAAKsB,QAAQ,EAAE,GAAOqC,EAAgC,IAApBL,EAASV,SAAaU,EAASvD,GAAUuD,EAA6B,IAApBA,EAASV,SAAa,EAAE,EAAEU,EAASV,SAAS,GAAOY,EAAQ,IAAI3xB,KAAKmuB,EAAKsB,QAAQ,KAAKtB,EAAKqB,OAAOrB,EAAKoB,SAAS,GAAGiB,EAAasB,EAAYH,GAAS,EAAE,CAAC,IAAIC,EAA2B9D,GAAWF,GAAa+D,EAAQpD,eAAeP,GAAkBC,GAAqB0D,EAAQlD,WAAW,GAAG,GAA+DL,EAA7B,GAAG0D,EAAYnD,UAA8CiD,EAA2BD,EAAQhD,UAAU,OAAO4B,EAAa/rD,KAAKkY,KAAK0xC,EAAK,GAAG,GAAI,OAA4C,IAArCoC,EAAasB,EAAYL,GAAc,KAAK,MAAO,KAAK,SAAStD,GAAM,OAAQA,EAAKsB,QAAQ,MAAMzrD,WAAWutD,UAAU,IAAK,KAAK,SAASpD,GAAM,OAAOA,EAAKsB,QAAQ,MAAO,KAAK,SAAStB,GAAM,IAAIzkD,EAAIykD,EAAK0B,UAAckC,EAAMroD,GAAK,EAA6C,OAAtBA,GAArBA,EAAIlF,KAAKkC,IAAIgD,GAAK,IAAW,GAAG,IAAIA,EAAI,IAAWqoD,EAAM,IAAI,KAAKjlD,OAAO,OAAOpD,GAAKpE,OAAO,IAAK,KAAK,SAAS6oD,GAAM,OAAOA,EAAKgB,SAAU,KAAK,WAAW,MAAO,MAAO,IAAI,IAAIa,KAAQsB,EAAsBxB,EAAQzrD,QAAQ2rD,IAAO,IAAGF,EAAQA,EAAQxrD,QAAQ,IAAI2rD,OAAOD,EAAK,KAAKsB,EAAkBtB,GAAM7B,KAAS,IAAz2iyC1lD,EAAM8N,EAAu2iyCy7C,EAAMzjB,GAAmBuhB,GAAQ,GAAO,OAAGkC,EAAM7tD,OAAO6qD,EAAgB,GAAr7iyCvmD,EAA28iyCupD,EAAr8iyCz7C,EAA28iyCiP,EAAn8iyCgV,EAAMlrB,IAAI7G,EAAM8N,GAA67iyCy7C,EAAM7tD,OAAO,GAAoFixB,EAA0B,kBAAE,SAAkC0P,EAAYC,GAAc1G,GAAQ2G,kBAAkBF,EAAYC,IAAgB3P,EAA8B,sBAAE,SAAsCmH,GAAM8B,GAAQQ,sBAAsBtC,IAAQnH,EAAsB,cAAE,SAA8BqN,EAAMC,EAAOsG,GAAW3K,GAAQ0K,cAActG,EAAMC,EAAOsG,IAAa5T,EAAsB,cAAE,WAAgCiJ,GAAQC,SAASkB,SAAUpK,EAAuB,eAAE,WAAiCiJ,GAAQC,SAASmB,UAAWrK,EAAqB,aAAE,WAA+BiJ,GAAQmI,gBAAiBpR,EAAsB,cAAE,SAA8BmN,EAAOwB,EAASC,EAAYC,GAAwB,OAAO5F,GAAQyF,cAAcvB,EAAOwB,EAASC,EAAYC,IAA0B,IAAIiR,GAAO,SAASrG,EAAO5kC,EAAKm0B,EAAKmP,GAAUsB,IAAQA,EAAO,MAAM,KAAKA,OAAOA,EAAO,KAAKF,MAAME,EAAOF,MAAM,KAAK0F,QAAQ,KAAK,KAAK56B,GAAG2yB,GAAG2G,YAAY,KAAK9oC,KAAKA,EAAK,KAAKm0B,KAAKA,EAAK,KAAK6Q,SAAS,GAAG,KAAK5B,WAAW,GAAG,KAAKE,KAAKA,GAAkoC,SAASgB,GAAmB0jB,EAAQC,EAAY/tD,GAAQ,IAAID,EAAIC,EAAO,EAAEA,EAAOo2B,EAAgB03B,GAAS,EAAME,EAAQ,IAAItpD,MAAM3E,GAASkuD,EAAgBp4B,EAAkBi4B,EAAQE,EAAQ,EAAEA,EAAQhuD,QAAsD,OAA3C+tD,IAAYC,EAAQhuD,OAAOiuD,GAAuBD,EAAS,SAASn7B,GAAiBvuB,GAAkB,IAAX,IAAI2F,EAAI,GAAWtF,EAAE,EAAEA,EAAEL,EAAMtE,OAAO2E,IAAI,CAAC,IAAIupD,EAAI5pD,EAAMK,GAAMupD,EAAI,MAAKA,GAAK,KAAKjkD,EAAIrF,KAAK+D,OAAO6sB,aAAa04B,IAAO,OAAOjkD,EAAIwU,KAAK,IAAxgD3X,OAAO4yC,iBAAiB3I,GAAOlsC,UAAU,CAAC8tB,KAAK,CAACznB,IAAI,WAAW,OAAxF,MAAA,IAAgG,KAAK+uB,OAA4B9uB,IAAI,SAAS0I,GAAKA,EAAI,KAAKomB,MAA5J,IAA2K,KAAKA,OAAM,MAAatpB,MAAM,CAACzF,IAAI,WAAW,OAApM,MAAA,IAA4M,KAAK+uB,OAA8B9uB,IAAI,SAAS0I,GAAKA,EAAI,KAAKomB,MAA1Q,IAA0R,KAAKA,OAAM,MAAcme,SAAS,CAACltC,IAAI,WAAW,OAAO+8B,GAAG+D,MAAM,KAAK/R,QAASke,SAAS,CAACjtC,IAAI,WAAW,OAAO+8B,GAAGoE,SAAS,KAAKpS,UAAWgO,GAAG8I,OAAOA,GAAO9I,GAAGyO,aAAazlB,EAAwB,gBAAEgX,GAAG0P,aAAa1mB,EAAsB,cAAEgX,GAAG2P,WAAW3mB,EAA0B,kBAAEgX,GAAG+P,eAAe/mB,EAA+B,uBAAEgX,GAAG0R,oBAAoB1oB,EAA0B,kBAAEgX,GAAGqQ,eAAernB,EAAsB,cAAEgX,GAAGgQ,WAAWhnB,EAAwB,gBAAEgX,GAAGmO,aAAanlB,EAAkB,UAAEgX,GAAGkD,OAAOyT,GAAc3tB,EAAsB,cAAEutB,GAAYt7C,MAAM,iBAAvspD,WAA0D,IAAzB,IAAIirD,EAAM,IAAIzpD,MAAM,KAAaC,EAAE,EAAEA,EAAE,MAAMA,EAAGwpD,EAAMxpD,GAAGgE,OAAO6sB,aAAa7wB,GAAIg7C,GAAiBwO,EAAqlpDC,GAAwBvO,GAAa5uB,EAAqB,aAAEutB,GAAYt7C,MAAM,gBAA1kgDk9C,GAAYv7C,UAAqB,UAAEq7C,GAAsBE,GAAYv7C,UAAiB,MAAE28C,GAAkBpB,GAAYv7C,UAAkB,OAAE+8C,GAAmBxB,GAAYv7C,UAAqB,UAAEg9C,GAAsBzB,GAAYv7C,UAAuB,YAAEo9C,GAAo0P0D,GAAkB9gD,UAAUmgD,WAAWf,GAA6B0B,GAAkB9gD,UAAUogD,WAAWd,GAA6BwB,GAAkB9gD,UAA0B,eAAE,EAAE8gD,GAAkB9gD,UAAgC,qBAAEi5C,GAA2B6H,GAAkB9gD,UAAwB,aAAEu/C,GAA+BuB,GAAkB9gD,UAAwB,aAAEigD,GAAlwF7zB,EAAkC,0BAAEozB,GAA0BpzB,EAAkC,0BAAEszB,GAA0BtzB,EAA4B,oBAAE+wB,GAAoB/wB,EAAyB,iBAAEwzB,GAAgx0C0B,GAAiBl1B,EAAyB,iBAAEutB,GAAYt7C,MAAM,oBAA93yB+tB,EAA4B,oBAAEq3B,GAAoBr3B,EAAwB,gBAAEs3B,GAA2wzB,IAAI8F,GAA2B,mBAAPC,KAAkBA,KAAK,SAASvlB,GAAO,IAAiGwlB,EAAKC,EAAKC,EAAcC,EAAKC,EAAKC,EAA/HC,EAAO,oEAAwE7lB,EAAO,GAAkDrkC,EAAE,EAAEokC,EAAMA,EAAM5oC,QAAQ,sBAAsB,IAAI,GAA+JouD,EAAvJM,EAAO3uD,QAAQ6oC,EAAMpb,OAAOhpB,OAAsI,GAAhI+pD,EAAKG,EAAO3uD,QAAQ6oC,EAAMpb,OAAOhpB,QAAuG,EAAE6pD,GAAW,GAALE,IAAU,GAAnHC,EAAKE,EAAO3uD,QAAQ6oC,EAAMpb,OAAOhpB,QAA0F,EAAE8pD,GAAW,EAALE,IAAS,GAArGC,EAAKC,EAAO3uD,QAAQ6oC,EAAMpb,OAAOhpB,OAA2EqkC,GAAcrgC,OAAO6sB,aAAa+4B,GAAgB,KAAPI,IAAW3lB,GAAcrgC,OAAO6sB,aAAag5B,IAAiB,KAAPI,IAAW5lB,GAAcrgC,OAAO6sB,aAAai5B,UAAc9pD,EAAEokC,EAAM/oC,QAAQ,OAAOgpC,GAAie,SAAS3W,GAAkBF,GAAU,GAAIqH,GAAUrH,GAAmB,OAA9hB,SAA4B9Q,GAAG,GAAgC,kBAAtBkQ,GAAiCA,EAAoB,CAAC,IAAIjM,EAAI,IAAIA,EAAI7X,EAAOO,KAAKqT,EAAE,UAAiBtO,MAAAA,GAAGuS,EAAI,IAAI7X,EAAO4T,EAAE,UAAW,OAAO,IAAIvT,WAAWwX,EAAY,OAAEA,EAAgB,WAAEA,EAAgB,YAAI,IAAyE,IAArE,IAAIwpC,EAAQT,GAAahtC,GAAOwsC,EAAM,IAAI//C,WAAWghD,EAAQ9uD,QAAgB2E,EAAE,EAAEA,EAAEmqD,EAAQ9uD,SAAS2E,EAAGkpD,EAAMlpD,GAAGmqD,EAAQ74B,WAAWtxB,GAAI,OAAOkpD,EAAa96C,MAAAA,GAAG,MAAM,IAAI7P,MAAM,8CAA4H6rD,CAAmB58B,EAAShxB,MAAMo4B,GAAcv5B,SAAU,IAAIgvD,GAAc,CAAC,yBAAhmgH,SAAmCl3C,GAAM,OAAO6jC,GAAQ7jC,IAA6lgH,aAA1jgH,SAAuBm3C,EAAGC,KAA6jgH,YAAx8/G,SAAsBv5B,EAAI1tB,EAAKg9C,GAA+K,KAA9J,uBAAuBxe,GAAqFA,GAA2BC,sBAAnFD,GAA2BC,oBAAoB,EAAiE/Q,GAA+w/G,WAA9r/G,SAAqB4kB,EAASziC,GAAmB,OAAb6uB,GAAS,KAAY,GAA8p/G,aAApk5D,SAAuB0V,EAAKt8C,GAAK,IAAI,OAA/X,SAAuBs8C,EAAKt8C,GAAK,IAAe,IAAN,EAALs8C,IAAoB,IAANt8C,EAAS,OAAQ,GAAI,IAAIisB,EAAK4vB,GAASC,SAASQ,GAAM,IAAIrwB,EAAK,OAAO,EAAE,GAAGjsB,IAAMisB,EAAKjsB,IAAI,CAAC,IAAIyO,EAAOy5B,GAAG8J,UAAU/lB,EAAKie,IAAiB,EAAVje,EAAKoiB,MAAQwN,GAASQ,QAAQC,EAAK7tC,EAAOzO,EAAIisB,EAAKrhB,MAAMqhB,EAAKnX,QAASozB,GAAGuN,OAAOhnC,GAAQotC,GAASC,SAASQ,GAAM,KAAQrwB,EAAKqiB,WAAWjI,GAAMpa,EAAKmjC,QAAU,OAAO,EAA+CC,CAAc/S,EAAKt8C,GAAYwD,MAAAA,GAAsE,YAApD,IAAL0kC,IAAoB1kC,aAAa0kC,GAAGoB,YAAY3W,GAAMnvB,IAAWA,EAAEksC,QAAs84D,6BAAvn0D,SAAuC4f,GAAc,IAAIC,EAAI5R,GAAmB2R,UAAqB3R,GAAmB2R,GAAc,IAAIE,EAASD,EAAIC,SAAaC,EAAeD,EAASvvD,OAAWyvD,EAAaF,EAAS5I,IAAI,SAAS+I,GAAK,OAAOA,EAAIC,mBAAoB1rD,OAAOsrD,EAAS5I,IAAI,SAAS+I,GAAK,OAAOA,EAAIE,sBAA2BlM,EAAe4L,EAAI5L,eAAmBvC,EAAcmO,EAAInO,cAAcrC,GAA8B,CAACuQ,GAAcI,EAAa,SAASA,GAAkf,OAApeF,EAAS/qC,QAAQ,SAASkrC,EAAI/qD,GAAG,IAAIgrD,EAAiBF,EAAa9qD,GAAOk0C,EAAO6W,EAAI7W,OAAWgX,EAAcH,EAAIG,cAAkBD,EAAmBH,EAAa9qD,EAAE6qD,GAAoBM,EAAOJ,EAAII,OAAWC,EAAcL,EAAIK,cAAcL,EAAI/8B,KAAK,SAASgD,GAAK,OAAOg6B,EAA+B,aAAE9W,EAAOgX,EAAcl6B,KAAQ+5B,EAAI/+C,MAAM,SAASglB,EAAI5F,GAAG,IAAI6tB,EAAY,GAAGkS,EAAOC,EAAcp6B,EAAIi6B,EAA+B,WAAEhS,EAAY7tB,IAAI4tB,GAAeC,MAAyB,CAAC,CAAC93C,KAAKwpD,EAAIxpD,KAAK,aAAe,SAAS6vB,GAAsC,IAAjC,IAAI6uB,EAAG,IAAI9/C,MAAM8qD,GAAwB7qD,EAAE,EAAEA,EAAE6qD,IAAiB7qD,EAAG6/C,EAAG7/C,GAAG4qD,EAAS5qD,GAAGguB,KAAKgD,GAAyB,OAAnBwrB,EAAcxrB,GAAY6uB,GAAK,WAAa,SAAS5G,EAAY7tB,GAAG,GAAGy/B,IAAiBz/B,EAAE/vB,OAAQ,MAAM,IAAI6H,UAAU,0CAA0CynD,EAAIxpD,KAAK,cAAc0pD,EAAe,YAAYz/B,EAAE/vB,QAAkC,IAAzB,IAAI21B,EAAI+tB,IAAyB/+C,EAAE,EAAEA,EAAE6qD,IAAiB7qD,EAAG4qD,EAAS5qD,GAAGgM,MAAMglB,EAAI5F,EAAEprB,IAAiE,OAA3C,OAAdi5C,GAAoBA,EAAYh5C,KAAKu8C,EAAcxrB,GAAaA,GAAM,eAAiB,EAAE,qBAAuBmoB,GAA2B8H,mBAAmBzE,OAAynxD,8BAA1kxD,SAAwC6O,GAAY,IAAIV,EAAI7P,GAAoBuQ,UAAmBvQ,GAAoBuQ,GAAY,IAAItM,EAAe4L,EAAI5L,eAAmBvC,EAAcmO,EAAInO,cAAkB8O,EAAaX,EAAIY,OAAoKpR,GAA8B,CAACkR,GAA7KC,EAAatJ,IAAI,SAASwJ,GAAO,OAAOA,EAAMR,mBAAoB1rD,OAAOgsD,EAAatJ,IAAI,SAASwJ,GAAO,OAAOA,EAAMP,sBAA6E,SAASQ,GAAY,IAAIF,EAAO,GAAgiB,OAA7hBD,EAAazrC,QAAQ,SAAS2rC,EAAMxrD,GAAG,IAAI0rD,EAAUF,EAAME,UAAcV,EAAiBS,EAAWzrD,GAAOk0C,EAAOsX,EAAMtX,OAAWgX,EAAcM,EAAMN,cAAkBD,EAAmBQ,EAAWzrD,EAAEsrD,EAAajwD,QAAY8vD,EAAOK,EAAML,OAAWC,EAAcI,EAAMJ,cAAcG,EAAOG,GAAW,CAAC19B,KAAK,SAASgD,GAAK,OAAOg6B,EAA+B,aAAE9W,EAAOgX,EAAcl6B,KAAQhlB,MAAM,SAASglB,EAAI5F,GAAG,IAAI6tB,EAAY,GAAGkS,EAAOC,EAAcp6B,EAAIi6B,EAA+B,WAAEhS,EAAY7tB,IAAI4tB,GAAeC,OAA0B,CAAC,CAAC93C,KAAKwpD,EAAIxpD,KAAK,aAAe,SAAS6vB,GAAK,IAAI6uB,EAAG,GAAG,IAAI,IAAI7/C,KAAKurD,EAAQ1L,EAAG7/C,GAAGurD,EAAOvrD,GAAGguB,KAAKgD,GAAyB,OAAnBwrB,EAAcxrB,GAAY6uB,GAAK,WAAa,SAAS5G,EAAY7tB,GAAG,IAAI,IAAIsgC,KAAaH,EAAQ,KAAKG,KAAatgC,GAAI,MAAM,IAAIloB,UAAU,oBAAoBwoD,EAAU,KAAO,IAAI16B,EAAI+tB,IAAiB,IAAI2M,KAAaH,EAAQA,EAAOG,GAAW1/C,MAAMglB,EAAI5F,EAAEsgC,IAAyE,OAA3C,OAAdzS,GAAoBA,EAAYh5C,KAAKu8C,EAAcxrB,GAAaA,GAAM,eAAiB,EAAE,qBAAuBmoB,GAA2B8H,mBAAmBzE,OAAinuD,sBAAr1rD,SAAgCpB,EAAQj6C,EAAKgS,EAAKw4C,EAAUC,GAAY,IAAIxkD,EAAM2zC,GAAiB5nC,GAAkCunC,GAAaU,EAAQ,CAACj6C,KAAlDA,EAAK85C,GAAiB95C,GAAsC,aAAe,SAAS0qD,GAAI,QAASA,GAAK,WAAa,SAAS5S,EAAY7tB,GAAG,OAAOA,EAAEugC,EAAUC,GAAa,eAAiB,EAAE,qBAAuB,SAASxS,GAAS,IAAIjpB,EAAK,GAAU,IAAPhd,EAAUgd,EAAKuB,OAAY,GAAU,IAAPve,EAAUgd,EAAKwB,MAAa,CAAA,GAAU,IAAPxe,EAA6B,MAAM,IAAIjQ,UAAU,8BAA8B/B,GAArEgvB,EAAK0B,EAAuE,OAAO,KAAmB,aAAE1B,EAAKipB,GAAShyC,KAAU65C,mBAAmB,QAA80qD,uBAAhkvC,SAAiC7F,EAAQ0Q,EAAeC,EAAoBC,EAAiBC,EAAuB9N,EAAc+N,EAAgBjQ,EAAOkQ,EAAkB/N,EAASj9C,EAAKirD,EAAoB5P,GAAer7C,EAAK85C,GAAiB95C,GAAMg9C,EAAcgD,GAAwB8K,EAAuB9N,GAAkBlC,IAAQA,EAAOkF,GAAwB+K,EAAgBjQ,IAAYmC,IAAUA,EAAS+C,GAAwBgL,EAAkB/N,IAAW5B,EAAc2E,GAAwBiL,EAAoB5P,GAAe,IAAI6P,EAAkB3S,GAAsBv4C,GAAM48C,GAAmBsO,EAAkB,WAAW1K,GAAsB,oBAAoBxgD,EAAK,wBAAwB,CAAC6qD,MAAsB7R,GAA8B,CAACiB,EAAQ0Q,EAAeC,GAAqBC,EAAiB,CAACA,GAAkB,GAAG,SAAStuD,GAAmB,IAAIs+C,EAAcsQ,EAA/B5uD,EAAKA,EAAK,GAAuF4uD,EAAjDN,GAAkBhQ,EAAUt+C,EAAKm+C,iBAAwCqC,kBAAuCzC,GAAYv7C,UAAW,IAAIsoB,EAAYmxB,GAAoB0S,EAAkB,WAAW,GAAGlqD,OAAOuE,eAAe,QAAQw3C,EAAmB,MAAM,IAAIhD,GAAa,0BAA0B/5C,GAAO,QAAGyB,IAAYi5C,EAAgB0Q,iBAAkB,MAAM,IAAIrR,GAAa/5C,EAAK,kCAAmC,IAAIy4C,EAAKiC,EAAgB0Q,iBAAiBjwD,UAAUjB,QAAQ,QAAGuH,IAAYg3C,EAAM,MAAM,IAAIsB,GAAa,2BAA2B/5C,EAAK,uCAAuC7E,UAAUjB,OAAO,iBAAiB8G,OAAOmF,KAAKu0C,EAAgB0Q,kBAAkBrxD,WAAW,yBAA0B,OAAO0+C,EAAKz5C,MAAM,KAAK7D,aAAkB4hD,EAAkB/7C,OAAOwB,OAAO2oD,EAAc,CAAC9jC,YAAY,CAAChmB,MAAMgmB,KAAeA,EAAYtoB,UAAUg+C,EAAkB,IAAIrC,EAAgB,IAAIoC,GAAgB98C,EAAKqnB,EAAY01B,EAAkB1B,EAAcR,EAAUmC,EAAclC,EAAOmC,GAAcoO,EAAmB,IAAIxL,GAAkB7/C,EAAK06C,GAAgB,GAAK,GAAM,GAAW4Q,EAAiB,IAAIzL,GAAkB7/C,EAAK,IAAI06C,GAAgB,GAAM,GAAM,GAAW6Q,EAAsB,IAAI1L,GAAkB7/C,EAAK,UAAU06C,GAAgB,GAAM,GAAK,GAA4J,OAArJ0B,GAAmBnC,GAAS,CAACyF,YAAY4L,EAAiB7L,iBAAiB8L,GAAuBxL,GAAoBmL,EAAkB7jC,GAAoB,CAACgkC,EAAmBC,EAAiBC,MAA4yqC,sCAA59kC,SAAgDC,EAAajP,EAAWI,EAAS8O,EAAgBC,EAAiBC,EAAW1mC,GAAI,IAAI2mC,EAAY5J,GAAoBrF,EAAS8O,GAAiBlP,EAAWzC,GAAiByC,GAAYoP,EAAW3L,GAAwB0L,EAAiBC,GAAY3S,GAA8B,GAAG,CAACwS,GAAc,SAASrK,GAAkC,IAAI3E,GAA3B2E,EAAUA,EAAU,IAA2BnhD,KAAK,IAAIu8C,EAAW,SAASsP,IAAsBrL,GAAsB,eAAehE,EAAU,wBAAwBoP,GAAc,IAAItP,EAAM6E,EAAUzG,gBAAgBrzB,YAAymB,YAA1lB5lB,IAAY66C,EAAMC,IAAasP,EAAoBlP,SAASA,EAAS,EAAEL,EAAMC,GAAYsP,IAA2BxP,GAAoBC,EAAMC,EAAWC,GAAWF,EAAMC,GAAYE,cAAcE,EAAS,GAAGkP,GAAqB7S,GAA8B,GAAG4S,EAAY,SAAS1K,GAAU,IAAI4K,EAAiB,CAAC5K,EAAS,GAAG,MAAM/iD,OAAO+iD,EAAS7lD,MAAM,IAAQi3B,EAAK2uB,GAAqBzE,EAAUsP,EAAiB,KAAKH,EAAW1mC,GAA6J,YAAtJxjB,IAAY66C,EAAMC,GAAYE,eAAenqB,EAAKqqB,SAASA,EAAS,EAAEL,EAAMC,GAAYjqB,GAAYgqB,EAAMC,GAAYE,cAAcE,EAAS,GAAGrqB,EAAa,KAAa,MAAq3iC,mCAA92iC,SAA6Ck5B,EAAa7O,EAAS8O,EAAgBC,EAAiBK,EAAQnO,GAAgBnxB,EAAOkwB,EAAS,GAAG,IAAIiP,EAAY5J,GAAoBrF,EAAS8O,GAAiBM,EAAQ/L,GAAwB0L,EAAiBK,GAAS,IAAIptD,EAAK,CAACi/C,GAAoB9F,EAAY,GAAGkB,GAA8B,GAAG,CAACwS,GAAc,SAASrK,GAAkC,IAAI3E,EAAU,gBAArC2E,EAAUA,EAAU,IAA0CnhD,KAA+G,QAAvGyB,IAAY0/C,EAAUzG,gBAAgB0Q,mBAAkBjK,EAAUzG,gBAAgB0Q,iBAAiB,SAAO3pD,IAAY0/C,EAAUzG,gBAAgB0Q,iBAAiBzO,EAAS,GAAI,MAAM,IAAI5C,GAAa,+EAA+E4C,EAAS,GAAG,gBAAgBwE,EAAUnhD,KAAK,uGAA+yB,OAAvsBmhD,EAAUzG,gBAAgB0Q,iBAAiBzO,EAAS,GAAG,WAA8B6D,GAAsB,oBAAoBW,EAAUnhD,KAAK,wBAAwB4rD,IAAe5S,GAA8B,GAAG4S,EAAY,SAAS1K,GAA+c,OAArcC,EAAUzG,gBAAgB0Q,iBAAiBzO,EAAS,GAAG,WAA+BxhD,UAAUjB,SAASyiD,EAAS,GAAG3C,GAAkBwC,EAAU,gBAAgBrhD,UAAUjB,OAAO,yBAAyByiD,EAAS,IAAK7E,EAAY59C,OAAO,EAAEyE,EAAKzE,OAAOyiD,EAAS,IAAI,IAAI99C,EAAE,EAAEA,EAAE89C,IAAW99C,EAAGF,EAAKE,GAAGqiD,EAASriD,GAAe,WAAEi5C,EAAY38C,UAAU0D,EAAE,IAAK,IAAIgxB,EAAIk8B,EAAQ/sD,MAAM,KAAKL,GAAkC,OAA5Bk5C,GAAeC,GAAoBoJ,EAAS,GAAiB,aAAErxB,IAAc,KAAa,MAAo4/B,gCAA73/B,SAA0C27B,EAAajP,EAAWI,EAAS8O,EAAgBC,EAAiBC,EAAW7lD,EAAQkmD,GAAe,IAAIJ,EAAY5J,GAAoBrF,EAAS8O,GAAiBlP,EAAWzC,GAAiByC,GAAYoP,EAAW3L,GAAwB0L,EAAiBC,GAAY3S,GAA8B,GAAG,CAACwS,GAAc,SAASrK,GAAkC,IAAI3E,GAA3B2E,EAAUA,EAAU,IAA2BnhD,KAAK,IAAIu8C,EAA8F,SAASsP,IAAsBrL,GAAsB,eAAehE,EAAU,wBAAwBoP,GAAtLI,GAAe7K,EAAUzG,gBAAgBwC,qBAAqBp+C,KAAKy9C,GAAiI,IAAID,EAAM6E,EAAUzG,gBAAgBqC,kBAAsB14B,EAAOi4B,EAAMC,GAAstB,YAAvsB96C,IAAY4iB,QAAQ5iB,IAAY4iB,EAAOo4B,eAAep4B,EAAO4nC,YAAY9K,EAAUnhD,MAAMqkB,EAAOs4B,WAAWA,EAAS,GAAGkP,EAAoBlP,SAASA,EAAS,EAAEkP,EAAoBI,UAAU9K,EAAUnhD,KAAKs8C,EAAMC,GAAYsP,IAA2BxP,GAAoBC,EAAMC,EAAWC,GAAWF,EAAMC,GAAYE,cAAcE,EAAS,GAAGkP,GAAqB7S,GAA8B,GAAG4S,EAAY,SAAS1K,GAAU,IAAIgL,EAAejL,GAAqBzE,EAAU0E,EAASC,EAAUwK,EAAW7lD,GAAgM,YAApLrE,IAAY66C,EAAMC,GAAYE,eAAeyP,EAAevP,SAASA,EAAS,EAAEL,EAAMC,GAAY2P,GAAsB5P,EAAMC,GAAYE,cAAcE,EAAS,GAAGuP,EAAuB,KAAa,MAA0h9B,gCAAji8B,SAA0C/K,EAAUoJ,EAAUV,EAAiBsC,EAAgBpZ,EAAOgX,EAAcD,EAAmBsC,EAAgBpC,EAAOC,GAAeM,EAAUzQ,GAAiByQ,GAAWxX,EAAOiN,GAAwBmM,EAAgBpZ,GAAQiG,GAA8B,GAAG,CAACmI,GAAW,SAASA,GAAkC,IAAI3E,GAA3B2E,EAAUA,EAAU,IAA2BnhD,KAAK,IAAIuqD,EAAc8B,EAAK,CAACjnD,IAAI,WAAWo7C,GAAsB,iBAAiBhE,EAAU,wBAAwB,CAACqN,EAAiBC,KAAuB3kD,YAAW,EAAKwe,cAAa,GAAkgC,OAAj/B0oC,EAAKhnD,IAAb2kD,EAAiB,WAAWxJ,GAAsB,iBAAiBhE,EAAU,wBAAwB,CAACqN,EAAiBC,KAAuC,SAASxtC,GAAG09B,GAAkBwC,EAAU,6BAA+Bx7C,OAAOkE,eAAei8C,EAAUzG,gBAAgBqC,kBAAkBwN,EAAU8B,GAAMrT,GAA8B,GAAGgR,EAAO,CAACH,EAAiBC,GAAoB,CAACD,GAAkB,SAASpJ,GAAO,IAAIoJ,EAAiBpJ,EAAM,GAAO4L,EAAK,CAACjnD,IAAI,WAAW,IAAIyqB,EAAIqyB,GAAa,KAAKf,EAAU3E,EAAU,WAAW,OAAOqN,EAA+B,aAAE9W,EAAOgX,EAAcl6B,KAAQ1qB,YAAW,GAAM,GAAG6kD,EAAO,CAACA,EAAOhK,GAAwBoM,EAAgBpC,GAAQ,IAAIF,EAAmBrJ,EAAM,GAAG4L,EAAKhnD,IAAI,SAASiX,GAAG,IAAIuT,EAAIqyB,GAAa,KAAKf,EAAU3E,EAAU,WAAe1E,EAAY,GAAGkS,EAAOC,EAAcp6B,EAAIi6B,EAA+B,WAAEhS,EAAYx7B,IAAIu7B,GAAeC,IAAkG,OAAlF92C,OAAOkE,eAAei8C,EAAUzG,gBAAgBqC,kBAAkBwN,EAAU8B,GAAa,KAAa,MAAsi5B,0BAA/h5B,SAAoCrsD,EAAKmC,EAAKd,GAAOrB,EAAK85C,GAAiB95C,GAAMg5C,GAA8B,GAAG,CAAC72C,GAAM,SAASA,GAA4D,OAAtDA,EAAKA,EAAK,GAAGgpB,EAAOnrB,GAAMmC,EAAmB,aAAEd,GAAc,MAAi54B,uBAAr72B,SAAiC44C,EAAQj6C,GAAkCu5C,GAAaU,EAAQ,CAACj6C,KAAlDA,EAAK85C,GAAiB95C,GAAsC,aAAe,SAASkoB,GAAQ,IAAIw2B,EAAG2D,GAAmBn6B,GAAQ7mB,MAA6B,OAAvBihD,GAAep6B,GAAew2B,GAAK,WAAa,SAAS5G,EAAYz2C,GAAO,OAAO48C,GAAiB58C,IAAS,eAAiB,EAAE,qBAAuB22C,GAA2B8H,mBAAmB,QAA8m2B,uBAA7q1B,SAAiC7F,EAAQj6C,EAAKgS,GAAM,IAAI/L,EAAM2zC,GAAiB5nC,GAAkCunC,GAAaU,EAAQ,CAACj6C,KAAlDA,EAAK85C,GAAiB95C,GAAsC,aAAe,SAASqB,GAAO,OAAOA,GAAQ,WAAa,SAASy2C,EAAYz2C,GAAO,GAAkB,iBAARA,GAAiC,kBAARA,EAAmB,MAAM,IAAIU,UAAU,mBAAmBy7C,GAAan8C,GAAO,QAAQ,KAAKrB,MAAO,OAAOqB,GAAQ,eAAiB,EAAE,qBAAuBqhD,GAA0B1iD,EAAKiG,GAAO65C,mBAAmB,QAA+v0B,0BAAvv0B,SAAoC9/C,EAAK28C,EAAS8O,EAAgBv0C,EAAUy0C,EAAW1mC,GAAI,IAAIi8B,EAASc,GAAoBrF,EAAS8O,GAAiBzrD,EAAK85C,GAAiB95C,GAAM2rD,EAAW3L,GAAwB9oC,EAAUy0C,GAAY/O,GAAmB58C,EAAK,WAAWwgD,GAAsB,eAAexgD,EAAK,wBAAwBkhD,IAAYvE,EAAS,GAAG3D,GAA8B,GAAGkI,EAAS,SAASA,GAAU,IAAI4K,EAAiB,CAAC5K,EAAS,GAAG,MAAM/iD,OAAO+iD,EAAS7lD,MAAM,IAAwG,OAApG0kD,GAAoB//C,EAAKihD,GAAqBjhD,EAAK8rD,EAAiB,KAAKH,EAAW1mC,GAAI03B,EAAS,GAAU,MAA4tzB,yBAAppyB,SAAmC2P,EAActsD,EAAKgS,EAAKu6C,EAASC,GAAUxsD,EAAK85C,GAAiB95C,IAAqB,IAAZwsD,IAAeA,EAAS,YAAY,IAAIvmD,EAAM2zC,GAAiB5nC,GAAUy6C,EAAa,SAASprD,GAAO,OAAOA,GAAQ,GAAc,IAAXkrD,EAAa,CAAC,IAAIG,EAAS,GAAG,EAAE16C,EAAKy6C,EAAa,SAASprD,GAAO,OAAOA,GAAOqrD,IAAWA,GAAY,IAAIC,GAA0C,GAA3B3sD,EAAK5F,QAAQ,YAAgBm/C,GAAa+S,EAAc,CAACtsD,KAAKA,EAAK,aAAeysD,EAAa,WAAa,SAAS3U,EAAYz2C,GAAO,GAAkB,iBAARA,GAAiC,kBAARA,EAAmB,MAAM,IAAIU,UAAU,mBAAmBy7C,GAAan8C,GAAO,QAAQ,KAAKrB,MAAO,GAAGqB,EAAMkrD,GAAUlrD,EAAMmrD,EAAU,MAAM,IAAIzqD,UAAU,qBAAqBy7C,GAAan8C,GAAO,wDAAwDrB,EAAK,wCAAwCusD,EAAS,KAAKC,EAAS,MAAO,OAAOG,EAAetrD,IAAQ,EAAQ,EAANA,GAAU,eAAiB,EAAE,qBAAuBshD,GAA4B3iD,EAAKiG,EAAiB,IAAXsmD,GAAczM,mBAAmB,QAA8twB,6BAAttwB,SAAuC7F,EAAQ2S,EAAc5sD,GAAM,IAAmH6sD,EAAnG,CAACl7B,UAAU3pB,WAAW4pB,WAAWE,YAAYD,WAAWE,YAAYC,aAAaC,cAAiC26B,GAAe,SAASE,EAAiB5kC,GAAyB,IAAI8G,EAAK2B,EAAY3e,EAAKgd,EAA3C9G,IAAe,GAA6CrZ,EAAKmgB,EAAK9G,EAAO,GAAG,OAAO,IAAI2kC,EAAGvgD,EAAOuC,EAAKmD,GAAmCunC,GAAaU,EAAQ,CAACj6C,KAAlDA,EAAK85C,GAAiB95C,GAAsC,aAAe8sD,EAAiB,eAAiB,EAAE,qBAAuBA,GAAkB,CAAC3S,8BAA6B,KAAsvvB,4BAA9uvB,SAAsCF,EAAQj6C,GAAkC,IAAI+sD,EAAuB,iBAAvD/sD,EAAK85C,GAAiB95C,IAA+Cu5C,GAAaU,EAAQ,CAACj6C,KAAKA,EAAK,aAAe,SAASqB,GAAO,IAAiCiuB,EAA7Bp1B,EAAOy2B,EAAQtvB,GAAO,GAAW,GAAG0rD,EAA4C,IAA3B,IAAIC,EAAe3rD,EAAM,EAAUxC,EAAE,EAAEA,GAAG3E,IAAS2E,EAAE,CAAC,IAAIouD,EAAe5rD,EAAM,EAAExC,EAAE,GAAGA,GAAG3E,GAAgC,GAAxB41B,EAAOm9B,GAAmB,CAAC,IAA8CC,EAAct9B,EAAao9B,EAA7DC,EAAeD,QAA+EvrD,IAAN6tB,EAAiBA,EAAI49B,GAAqB59B,GAAKzsB,OAAO6sB,aAAa,GAAGJ,GAAK49B,GAAeF,EAAeC,EAAe,OAAU,CAAC,IAAIltC,EAAE,IAAInhB,MAAM1E,GAAQ,IAAQ2E,EAAE,EAAEA,EAAE3E,IAAS2E,EAAGkhB,EAAElhB,GAAGgE,OAAO6sB,aAAaI,EAAOzuB,EAAM,EAAExC,IAAKywB,EAAIvP,EAAEpH,KAAK,IAAkB,OAAb2nB,GAAMj/B,GAAciuB,GAAM,WAAa,SAASwoB,EAAYz2C,GAAUA,aAAiBqP,cAAarP,EAAM,IAAI2G,WAAW3G,IAAsB,IAAI8rD,EAAmC,iBAAR9rD,EAAsB8rD,GAAqB9rD,aAAiB2G,YAAY3G,aAAiB+rD,mBAAmB/rD,aAAiBswB,WAAYqoB,GAAkB,yCAA2L,IAAI9/C,GAAlJ6yD,GAAiBI,EAA+B,WAAW,OAAO78B,EAAgBjvB,IAA0B,WAAW,OAAOA,EAAMnH,WAAqC21B,EAAIgmB,GAAQ,EAAE37C,EAAO,GAA0B,GAAvBy2B,EAAQd,GAAK,GAAG31B,EAAU6yD,GAAiBI,EAAqB/8B,EAAa/uB,EAAMwuB,EAAI,EAAE31B,EAAO,QAAU,GAAGizD,EAAqB,IAAI,IAAItuD,EAAE,EAAEA,EAAE3E,IAAS2E,EAAE,CAAC,IAAIwuD,EAAShsD,EAAM8uB,WAAWtxB,GAAMwuD,EAAS,MAAK/sB,GAAMzQ,GAAKmqB,GAAkB,2DAA2DlqB,EAAOD,EAAI,EAAEhxB,GAAGwuD,OAAiB,IAAQxuD,EAAE,EAAEA,EAAE3E,IAAS2E,EAAGixB,EAAOD,EAAI,EAAEhxB,GAAGwC,EAAMxC,GAA0D,OAAnC,OAAdi5C,GAAoBA,EAAYh5C,KAAKwhC,GAAMzQ,GAAaA,GAAM,eAAiB,EAAE,qBAAuBmoB,GAA2B8H,mBAAmB,SAASjwB,GAAKyQ,GAAMzQ,OAAqgsB,6BAA3/rB,SAAuCoqB,EAAQqT,EAASttD,GAAkC,IAAIutD,EAAaC,EAAaC,EAAQC,EAAeznD,EAAjFjG,EAAK85C,GAAiB95C,GAA+E,IAAXstD,GAAcC,EAAax8B,EAAcy8B,EAAat8B,EAAcw8B,EAAer8B,EAAiBo8B,EAAQ,WAAW,OAAOh9B,GAAUxqB,EAAM,GAAsB,IAAXqnD,IAAcC,EAAaj8B,EAAck8B,EAAah8B,EAAck8B,EAAej8B,EAAiBg8B,EAAQ,WAAW,OAAO98B,GAAU1qB,EAAM,GAAGszC,GAAaU,EAAQ,CAACj6C,KAAKA,EAAK,aAAe,SAASqB,GAA0F,IAAnF,IAAoDiuB,EAAhDp1B,EAAOy2B,EAAQtvB,GAAO,GAAOssD,EAAKF,IAAsBT,EAAe3rD,EAAM,EAAUxC,EAAE,EAAEA,GAAG3E,IAAS2E,EAAE,CAAC,IAAIouD,EAAe5rD,EAAM,EAAExC,EAAEyuD,EAAS,GAAGzuD,GAAG3E,GAAqC,GAA7ByzD,EAAKV,GAAgBhnD,GAAU,CAAC,IAAmDinD,EAAcK,EAAaP,EAA7DC,EAAeD,QAAoFvrD,IAAN6tB,EAAiBA,EAAI49B,GAAqB59B,GAAKzsB,OAAO6sB,aAAa,GAAGJ,GAAK49B,GAAeF,EAAeC,EAAeK,GAAwB,OAAbhtB,GAAMj/B,GAAciuB,GAAM,WAAa,SAASwoB,EAAYz2C,GAA2B,iBAARA,GAAmB24C,GAAkB,6CAA6Ch6C,GAAO,IAAI9F,EAAOwzD,EAAersD,GAAWwuB,EAAIgmB,GAAQ,EAAE37C,EAAOozD,GAAsI,OAA5H38B,EAAQd,GAAK,GAAG31B,GAAQ+L,EAAMunD,EAAansD,EAAMwuB,EAAI,EAAE31B,EAAOozD,GAA2B,OAAdxV,GAAoBA,EAAYh5C,KAAKwhC,GAAMzQ,GAAaA,GAAM,eAAiB,EAAE,qBAAuBmoB,GAA2B8H,mBAAmB,SAASjwB,GAAKyQ,GAAMzQ,OAAmqpB,6BAAzppB,SAAuCoqB,EAAQj6C,EAAK4tD,EAAqBhQ,EAAeqN,EAAoB5P,GAAezD,GAAmBqC,GAAS,CAACj6C,KAAK85C,GAAiB95C,GAAM49C,eAAeoC,GAAwB4N,EAAqBhQ,GAAgBvC,cAAc2E,GAAwBiL,EAAoB5P,GAAeoO,SAAS,KAAo4oB,qCAA/3oB,SAA+CF,EAAaM,EAAiBsC,EAAgBpZ,EAAOgX,EAAcD,EAAmBsC,EAAgBpC,EAAOC,GAAerS,GAAmB2R,GAAcE,SAAS3qD,KAAK,CAAC+qD,iBAAiBA,EAAiB9W,OAAOiN,GAAwBmM,EAAgBpZ,GAAQgX,cAAcA,EAAcD,mBAAmBA,EAAmBE,OAAOhK,GAAwBoM,EAAgBpC,GAAQC,cAAcA,KAAihoB,8BAAhgoB,SAAwChQ,EAAQj6C,EAAK4tD,EAAqBhQ,EAAeqN,EAAoB5P,GAAe1B,GAAoBM,GAAS,CAACj6C,KAAK85C,GAAiB95C,GAAM49C,eAAeoC,GAAwB4N,EAAqBhQ,GAAgBvC,cAAc2E,GAAwBiL,EAAoB5P,GAAe+O,OAAO,KAA6unB,oCAAxunB,SAA8CF,EAAWK,EAAUV,EAAiBsC,EAAgBpZ,EAAOgX,EAAcD,EAAmBsC,EAAgBpC,EAAOC,GAAetQ,GAAoBuQ,GAAYE,OAAOtrD,KAAK,CAACyrD,UAAUzQ,GAAiByQ,GAAWV,iBAAiBA,EAAiB9W,OAAOiN,GAAwBmM,EAAgBpZ,GAAQgX,cAAcA,EAAcD,mBAAmBA,EAAmBE,OAAOhK,GAAwBoM,EAAgBpC,GAAQC,cAAcA,KAA80mB,sBAA7zmB,SAAgChQ,EAAQj6C,GAAkCu5C,GAAaU,EAAQ,CAAC4T,QAAO,EAAK7tD,KAA9DA,EAAK85C,GAAiB95C,GAAkD,eAAiB,EAAE,aAAe,aAA8B,WAAa,SAAS83C,EAAY7tB,QAAopmB,wBAAnylB,SAAkC6jC,EAAO5lC,EAAOq0B,EAAW59C,IAAMmvD,EAAO9K,GAAoB8K,IAAQ5lC,EAAO+6B,GAAc/6B,GAAQq0B,EAAWuG,GAAkBvG,GAAqC,KAAK59C,IAA8olB,cAAgB2jD,GAAe,yBAA7rkB,SAAmC3F,EAASuE,GAA4O,IAAlO,IAAIT,EAA9O,SAA6B9D,EAASuE,GAAoC,IAA1B,IAAInhC,EAAE,IAAInhB,MAAM+9C,GAAkB99C,EAAE,EAAEA,EAAE89C,IAAW99C,EAAGkhB,EAAElhB,GAAGqkD,GAAsBxyB,GAAQwwB,GAAU,GAAGriD,GAAG,aAAaA,GAAI,OAAOkhB,EAAmEguC,CAAoBpR,EAASuE,GAAc8M,EAAQvN,EAAM,GAAOwN,EAAcD,EAAQhuD,KAAK,KAAKygD,EAAMplD,MAAM,GAAGwlD,IAAI,SAASlkC,GAAG,OAAOA,EAAE3c,OAAQ2Y,KAAK,KAAK,IAAQW,EAAO,CAAC,WAAe3a,EAAK,CAACqvD,GAAavM,EAAS,GAAW5iD,EAAE,EAAEA,EAAE89C,EAAS,IAAI99C,EAAG4iD,IAAe,IAAJ5iD,EAAM,KAAK,IAAI,MAAMA,EAAEya,EAAOxa,KAAK,UAAUD,GAAGF,EAAKG,KAAK2hD,EAAM,EAAE5hD,IAAK,IAA0EqvD,EAAa,mBAAtE3V,GAAsB,gBAAgB0V,GAAgE,wCAA4Cl/C,EAAO,EAAE,IAAQlQ,EAAE,EAAEA,EAAE89C,EAAS,IAAI99C,EAAGqvD,GAAc,cAAcrvD,EAAE,aAAaA,EAAE,8BAA8BkQ,EAAO,IAAIA,EAAO,IAAI,OAAOA,GAAQ0xC,EAAM5hD,EAAE,GAAmB,eAA8D,IAA3DqvD,GAAc,6BAA6BzM,EAAS,OAAe5iD,EAAE,EAAEA,EAAE89C,EAAS,IAAI99C,EAAM4hD,EAAM5hD,EAAE,GAAiB,eAAGqvD,GAAc,cAAcrvD,EAAE,oBAAoBA,EAAE,QAAamvD,EAAQH,SAAQK,GAAc,qDAAqDA,GAAc,OAAO50C,EAAOxa,KAAKovD,GAAc,IAAn+CJ,EAAYt+C,EAA29C2+C,EAAgBrN,GAAKlgD,SAAS0Y,GAAQta,MAAM,KAAKL,GAAM,OAA9hDmvD,EAA6jDK,EAAjjD3+C,EAAGwzC,GAAoB9oD,OAAO8oD,GAAoBlkD,KAAKgvD,GAAet+C,GAAwmlB,cAA3miB,SAAwB0Y,GAAWA,EAAO,IAAGm6B,GAAmBn6B,GAAQq6B,UAAU,IAAwjiB,iBAApjiB,WAA6B,OAAOtE,GAAiB,KAAoiiB,mBAA/hiB,SAA6B3hC,GAAG,OAAO2hC,GAAiB6E,GAAkBxmC,KAA8/hB,oBAAz/hB,SAA8B4L,EAAOhiB,EAAI7E,GAAO6mB,EAAO+6B,GAAc/6B,GAAQhiB,EAAI+8C,GAAc/8C,GAAK7E,EAAM4hD,GAAc5hD,GAAO6mB,EAAOhiB,GAAK7E,GAAy5hB,kBAAl5hB,SAA4Bc,EAAKhD,GAAoG,OAAO8+C,IAArG97C,EAAK+gD,GAAsB/gD,EAAK,sBAAsD,qBAAEhD,KAA0zhB,MAAxxhB,WAAkBytB,MAAqxhB,cAAluhB,SAAwBwhC,EAAOC,GAAI,IAAIj5B,EAAI,GAAY,IAATg5B,EAAYh5B,EAAIW,KAAKX,UAAY,CAAA,GAAa,IAATg5B,GAAqB,IAATA,IAAahL,GAAgF,OAAbviB,GAAS,KAAY,EAAtDzL,EAAIrB,KAA+G,OAA1DrD,EAAO29B,GAAI,GAAGj5B,EAAI,IAAI,EAAE1E,EAAO29B,EAAG,GAAG,GAAGj5B,EAAI,IAAI,IAAI,IAAI,EAAS,GAAy/gB,wBAAt/gB,WAAoC,OAAO,QAA8/gB,sBAAt/gB,SAAgCk5B,EAAKvjC,EAAIvxB,GAAKs2B,EAAOy+B,WAAWD,EAAKvjC,EAAIA,EAAIvxB,IAAw9gB,uBAApvgB,SAAiCg1D,GAAeA,KAA8B,EAAE,IAAIC,EAAtQ3+B,EAAO51B,OAAsV,GAAGs0D,EAAd,WAAyC,OAAO,EAAgC,IAAzB,IAAnguxCzzC,EAAE2zC,EAAkiuxCC,EAAQ,EAAEA,GAAS,EAAEA,GAAS,EAAE,CAAC,IAAIC,EAAkBH,GAAS,EAAE,GAAGE,GAAiP,GAAxOC,EAAkBr0D,KAAKkjB,IAAImxC,EAAkBJ,EAAc,WAA0InL,GAAnH9oD,KAAKkjB,IAA7P,aAA58txC1C,EAAiuuxCxgB,KAAK2B,IAAnN,SAAmOsyD,EAAcI,KAAlwuxCF,EAAo7txC,OAA55txC,IAAG3zC,GAAG2zC,EAAS3zC,EAAE2zC,GAAiB3zC,KAA8yuxC,OAAO,EAAO,OAAO,GAAktf,YAArre,SAAsB8zC,EAAUC,GAAa,IAAIC,EAAQ,EAAiK,OAA/JvL,KAAgB9kC,QAAQ,SAASswC,EAAOnwD,GAAG,IAAIgxB,EAAIi/B,EAAYC,EAAQr+B,EAAOm+B,EAAY,EAAFhwD,GAAK,GAAGgxB,EAA7vwxC,SAA4BP,EAAIhjB,EAAO27C,GAAa,IAAI,IAAIppD,EAAE,EAAEA,EAAEywB,EAAIp1B,SAAS2E,EAAG0xB,EAAMjkB,KAAU,GAAGgjB,EAAIa,WAAWtxB,GAAQopD,IAAY13B,EAAMjkB,GAAQ,GAAG,GAAwmwxC2iD,CAAmBD,EAAOn/B,GAAKk/B,GAASC,EAAO90D,OAAO,IAAY,GAA++d,kBAA5+d,SAA4Bg1D,EAAeC,GAAmB,IAAI1L,EAAQD,KAAgB9yB,EAAOw+B,GAAgB,GAAGzL,EAAQvpD,OAAO,IAAI60D,EAAQ,EAAoG,OAAlGtL,EAAQ/kC,QAAQ,SAASswC,GAAQD,GAASC,EAAO90D,OAAO,IAAKw2B,EAAOy+B,GAAmB,GAAGJ,EAAe,GAAyxd,SAAtxd,SAAmB5qB,GAAI,IAAI,IAAIz7B,EAAOotC,GAAS0B,gBAAgBrT,GAAqB,OAAjBhC,GAAGsB,MAAM/6B,GAAe,EAASjL,MAAAA,GAAsE,YAApD,IAAL0kC,IAAoB1kC,aAAa0kC,GAAGoB,YAAY3W,GAAMnvB,GAAUA,EAAEksC,QAAwnd,QAAhnd,SAAkBxF,EAAGgT,EAAIC,EAAOgY,GAAM,IAAI,IAAI1mD,EAAOotC,GAAS0B,gBAAgBrT,GAAQ3qC,EAAIs8C,GAASoB,QAAQxuC,EAAOyuC,EAAIC,GAA4B,OAApB1mB,EAAO0+B,GAAM,GAAG51D,EAAW,EAASiE,MAAAA,GAAsE,YAApD,IAAL0kC,IAAoB1kC,aAAa0kC,GAAGoB,YAAY3W,GAAMnvB,GAAUA,EAAEksC,QAAk5c,QAA14c,SAAkBxF,EAAGkrB,EAAWC,EAAYlnB,EAAOmnB,GAAW,IAAI,IAAI7mD,EAAOotC,GAAS0B,gBAAgBrT,GAAmCp1B,EAAf,WAAsBugD,GAAyBD,IAAa,GAAqC,OAAGtgD,IAApB,kBAA2CA,GAA3C,kBAAyE,IAAIozB,GAAGsD,OAAO/8B,EAAOqG,EAAOq5B,GAAQtU,GAAQ,CAACprB,EAAO3C,WAAW,GAAG8tB,GAAWnrB,EAAO3C,UAAU8sB,GAASgB,KAAa,EAAEA,GAAW,GAA2D,EAAxDb,IAAUD,GAAWc,GAAW,YAAY,eAAiB,KAAKf,IAAWe,OAAeA,KAAa,IAAI,cAAc,EAAE,IAAInD,EAAO6+B,GAAW,GAAGz7B,GAAQ,GAAGpD,EAAO6+B,EAAU,GAAG,GAAGz7B,GAAQ,GAAMprB,EAAO6mC,UAAmB,IAATxgC,GAAqB,IAATq5B,IAAW1/B,EAAO6mC,SAAS,MAAY,GAAS9xC,MAAAA,GAAsE,YAApD,IAAL0kC,IAAoB1kC,aAAa0kC,GAAGoB,YAAY3W,GAAMnvB,GAAUA,EAAEksC,QAAoqb,SAA5pb,SAAmBxF,EAAGgT,EAAIC,EAAOgY,GAAM,IAAI,IAAI1mD,EAAOotC,GAAS0B,gBAAgBrT,GAAQ3qC,EAAIs8C,GAASuB,SAAS3uC,EAAOyuC,EAAIC,GAA4B,OAApB1mB,EAAO0+B,GAAM,GAAG51D,EAAW,EAASiE,MAAAA,GAAsE,YAApD,IAAL0kC,IAAoB1kC,aAAa0kC,GAAGoB,YAAY3W,GAAMnvB,GAAUA,EAAEksC,QAA87a,OAAStb,EAAW,0BAA18a,aAAigb,uBAA19a,aAA2gb,0BAAv+a,aAA8hb,YAAv/a,SAAsBmhC,KAA4/a,WAAnrM,SAAqBj0C,EAAEwpC,EAAQC,EAAOC,GAAI,OAAOH,GAAUvpC,EAAEwpC,EAAQC,EAAOC,IAAgoM,MAAQz2B,IAAh2xI,WAAsB,IAAItI,EAAK,CAAC,IAAMgjC,GAAc,uBAAyBA,IAAe,SAASuG,EAAgBxmC,EAAS/rB,GAAQ,IAAIxB,EAAQutB,EAASvtB,QAAQyvB,EAAY,IAAEzvB,EAAQ03B,KAA0C,SAASs8B,EAA0BxsB,GAAQusB,EAAgBvsB,EAAiB,UAAI,SAASysB,EAAuBhvD,GAAU,OAApwBytB,IAAa7C,IAAoBC,GAAuC,mBAARokC,OAAqBh8B,GAAUI,IAA0Q,IAAI5vB,QAAQ,SAASC,EAAQC,GAAQD,EAAQ4vB,QAA/R27B,MAAM57B,GAAe,CAAC67B,YAAY,gBAAgBp8C,KAAK,SAASua,GAAU,IAAIA,EAAa,GAAG,KAAM,uCAAuCgG,GAAe,IAAK,OAAOhG,EAAsB,gBAAOta,MAAM,WAAW,OAAOugB,QAA4cxgB,KAAK,SAAS6Y,GAAQ,OAAOiC,YAAYuhC,YAAYxjC,EAAOpG,KAASzS,KAAK9S,EAAS,SAASovD,GAAQvrD,EAAI,0CAA0CurD,GAAQnjC,GAAMmjC,KAAomB,GAA36B58B,KAA86BhI,EAAwB,gBAAG,IAAgE,OAAhDA,EAAwB,gBAAEjF,EAAKupC,GAAuChyD,MAAAA,GAAgE,OAA7D+G,EAAI,sDAAsD/G,IAAU,GAAnxB,WAA4B,GAAI2wB,GAAsD,mBAAnCG,YAAYyhC,sBAAoCt8B,GAAUM,KAAkBJ,GAAUI,KAAgC,mBAAR47B,MAA4X,OAAOD,EAAuBD,GAAtYE,MAAM57B,GAAe,CAAC67B,YAAY,gBAAgBp8C,KAAK,SAASua,GAAqE,OAAhDO,YAAYyhC,qBAAqBhiC,EAAS9H,GAAoBzS,KAAKi8C,EAA0B,SAASK,GAAuG,OAA/FvrD,EAAI,kCAAkCurD,GAAQvrD,EAAI,6CAAoDmrD,EAAuBD,OAAsSO,GAA6ivIC,GAAa,IAAIj7B,GAAmB9J,EAA2B,mBAAE,WAAW,OAAQ8J,GAAmB9J,EAA2B,mBAAEA,EAAY,IAAqB,mBAAGnsB,MAAM,KAAK7D,YAAiB06C,GAAQ1qB,EAAgB,QAAE,WAAW,OAAQ0qB,GAAQ1qB,EAAgB,QAAEA,EAAY,IAAU,QAAGnsB,MAAM,KAAK7D,YAAiBmlC,GAAMnV,EAAc,MAAE,WAAW,OAAQmV,GAAMnV,EAAc,MAAEA,EAAY,IAAQ,MAAGnsB,MAAM,KAAK7D,YAAiB2lC,GAAkB3V,EAA0B,kBAAE,WAAW,OAAQ2V,GAAkB3V,EAA0B,kBAAEA,EAAY,IAAoB,kBAAGnsB,MAAM,KAAK7D,YAAiBolD,GAAep1B,EAAuB,eAAE,WAAW,OAAQo1B,GAAep1B,EAAuB,eAAEA,EAAY,IAAiB,eAAGnsB,MAAM,KAAK7D,YAAagwB,EAAoD,4CAAE,WAAW,OAAQA,EAAoD,4CAAEA,EAAY,IAA8C,4CAAGnsB,MAAM,KAAK7D,YAAagwB,EAAkB,UAAE,WAAW,OAAQA,EAAkB,UAAEA,EAAY,IAAY,UAAGnsB,MAAM,KAAK7D,YAAa,IAAglQg1D,GAA5kQ/vB,GAAUjV,EAAkB,UAAE,WAAW,OAAQiV,GAAUjV,EAAkB,UAAEA,EAAY,IAAa,WAAGnsB,MAAM,KAAK7D,YAAiBolC,GAAapV,EAAqB,aAAE,WAAW,OAAQoV,GAAapV,EAAqB,aAAEA,EAAY,IAAgB,cAAGnsB,MAAM,KAAK7D,YAAiBklC,GAAWlV,EAAmB,WAAE,WAAW,OAAQkV,GAAWlV,EAAmB,WAAEA,EAAY,IAAc,YAAGnsB,MAAM,KAAK7D,YAA8rP,SAASwxB,GAAWwB,GAAQ,KAAKnuB,KAAK,aAAa,KAAK6F,QAAQ,gCAAgCsoB,EAAO,IAAI,KAAKA,OAAOA,EAAuH,SAAS7vB,GAAIK,GAAyE,SAASyxD,IAAWD,KAAiBA,IAAU,EAAKhlC,EAAkB,WAAE,EAAQuD,IAAh1+yCkE,IAAmB,EAASzH,EAAiB,UAAIgX,GAAG5gC,KAAK0nC,aAAY9G,GAAG5gC,OAAO6wB,GAAqBK,IAAgC0P,GAAG+G,mBAAkB,EAAM9W,GAAqBM,IAAis+yCzH,EAAoBE,GAAWA,EAA6B,sBAAEA,EAA6B,uBAA/w+yC,WAAmB,GAAGA,EAAgB,QAAiF,IAAjD,mBAAnBA,EAAgB,UAAcA,EAAgB,QAAE,CAACA,EAAgB,UAASA,EAAgB,QAAEjxB,QAAgKyM,EAA3IwkB,EAAgB,QAAEllB,QAA6H0sB,GAAcjwB,QAAQiE,GAAhD,IAAsBA,EAA9GyrB,GAAqBO,IAA6j+yC09B,KAApRp9B,GAAgB,IAAp8+yC,WAAkB,GAAG9H,EAAe,OAA8E,IAA/C,mBAAlBA,EAAe,SAAcA,EAAe,OAAE,CAACA,EAAe,SAASA,EAAe,OAAEjxB,QAAuiByM,EAAnhBwkB,EAAe,OAAEllB,QAAsgBusB,GAAa9vB,QAAQiE,GAA9C,IAAqBA,EAAvfyrB,GAAqBI,IAAiw+yC89B,GAAYr9B,GAAgB,IAA2O9H,EAAkB,WAAGA,EAAkB,UAAE,cAAc3tB,WAAW,WAAWA,WAAW,WAAW2tB,EAAkB,UAAE,KAAM,GAAGilC,KAAU,IAAUA,MAA4B,GAAv4QjlC,EAAwB,gBAAE,WAAW,OAAQA,EAAwB,gBAAEA,EAAY,IAAkB,gBAAGnsB,MAAM,KAAK7D,YAAagwB,EAAqD,6CAAE,WAAW,OAAQA,EAAqD,6CAAEA,EAAY,IAA+C,6CAAGnsB,MAAM,KAAK7D,YAAagwB,EAAyB,iBAAE,WAAW,OAAQA,EAAyB,iBAAEA,EAAY,IAAoB,kBAAGnsB,MAAM,KAAK7D,YAAagwB,EAAmB,WAAE,WAAW,OAAQA,EAAmB,WAAEA,EAAY,IAAc,YAAGnsB,MAAM,KAAK7D,YAAagwB,EAAmB,WAAE,WAAW,OAAQA,EAAmB,WAAEA,EAAY,IAAc,YAAGnsB,MAAM,KAAK7D,YAAagwB,EAAkB,UAAE,WAAW,OAAQA,EAAkB,UAAEA,EAAY,IAAa,WAAGnsB,MAAM,KAAK7D,YAAagwB,EAAoB,YAAE,WAAW,OAAQA,EAAoB,YAAEA,EAAY,IAAe,aAAGnsB,MAAM,KAAK7D,YAAagwB,EAAqB,aAAE,WAAW,OAAQA,EAAqB,aAAEA,EAAY,IAAgB,cAAGnsB,MAAM,KAAK7D,YAAagwB,EAAsB,cAAE,WAAW,OAAQA,EAAsB,cAAEA,EAAY,IAAiB,eAAGnsB,MAAM,KAAK7D,YAAagwB,EAAuB,eAAE,WAAW,OAAQA,EAAuB,eAAEA,EAAY,IAAkB,gBAAGnsB,MAAM,KAAK7D,YAAagwB,EAAwB,gBAAE,WAAW,OAAQA,EAAwB,gBAAEA,EAAY,IAAmB,iBAAGnsB,MAAM,KAAK7D,YAAagwB,EAAqB,aAAE,WAAW,OAAQA,EAAqB,aAAEA,EAAY,IAAgB,cAAGnsB,MAAM,KAAK7D,YAAagwB,EAAsB,cAAE,WAAW,OAAQA,EAAsB,cAAEA,EAAY,IAAiB,eAAGnsB,MAAM,KAAK7D,YAAagwB,EAAoB,YAAE,WAAW,OAAQA,EAAoB,YAAEA,EAAY,IAAe,aAAGnsB,MAAM,KAAK7D,YAAagwB,EAAuB,eAAE,WAAW,OAAQA,EAAuB,eAAEA,EAAY,IAAkB,gBAAGnsB,MAAM,KAAK7D,YAAagwB,EAAwB,gBAAE,WAAW,OAAQA,EAAwB,gBAAEA,EAAY,IAAmB,iBAAGnsB,MAAM,KAAK7D,YAAagwB,EAAsB,cAAE,WAAW,OAAQA,EAAsB,cAAEA,EAAY,IAAiB,eAAGnsB,MAAM,KAAK7D,YAAagwB,EAAuB,eAAE,WAAW,OAAQA,EAAuB,eAAEA,EAAY,IAAkB,gBAAGnsB,MAAM,KAAK7D,YAAagwB,EAAuB,eAAE,WAAW,OAAQA,EAAuB,eAAEA,EAAY,IAAkB,gBAAGnsB,MAAM,KAAK7D,YAAagwB,EAAoB,YAAE,WAAW,OAAQA,EAAoB,YAAEA,EAAY,IAAe,aAAGnsB,MAAM,KAAK7D,YAAagwB,EAAqB,aAAE,WAAW,OAAQA,EAAqB,aAAEA,EAAY,IAAgB,cAAGnsB,MAAM,KAAK7D,YAAagwB,EAAsB,cAAE,WAAW,OAAQA,EAAsB,cAAEA,EAAY,IAAiB,eAAGnsB,MAAM,KAAK7D,YAAagwB,EAAqB,aAAE,WAAW,OAAQA,EAAqB,aAAEA,EAAY,IAAgB,cAAGnsB,MAAM,KAAK7D,YAAagwB,EAAsB,cAAE,WAAW,OAAQA,EAAsB,cAAEA,EAAY,IAAiB,eAAGnsB,MAAM,KAAK7D,YAAagwB,EAAuB,eAAE,WAAW,OAAQA,EAAuB,eAAEA,EAAY,IAAkB,gBAAGnsB,MAAM,KAAK7D,YAAagwB,EAAuB,eAAE,WAAW,OAAQA,EAAuB,eAAEA,EAAY,IAAkB,gBAAGnsB,MAAM,KAAK7D,YAAagwB,EAAsB,cAAE,WAAW,OAAQA,EAAsB,cAAEA,EAAY,IAAiB,eAAGnsB,MAAM,KAAK7D,YAAagwB,EAAqB,aAAE,WAAW,OAAQA,EAAqB,aAAEA,EAAY,IAAgB,cAAGnsB,MAAM,KAAK7D,YAAagwB,EAAoB,YAAE,WAAW,OAAQA,EAAoB,YAAEA,EAAY,IAAe,aAAGnsB,MAAM,KAAK7D,YAAagwB,EAAqB,aAAE,WAAW,OAAQA,EAAqB,aAAEA,EAAY,IAAgB,cAAGnsB,MAAM,KAAK7D,YAAagwB,EAA2B,mBAAE,WAAW,OAAQA,EAA2B,mBAAEA,EAAY,IAAsB,oBAAGnsB,MAAM,KAAK7D,YAAagwB,EAA0B,kBAAE,WAAW,OAAQA,EAA0B,kBAAEA,EAAY,IAAqB,mBAAGnsB,MAAM,KAAK7D,YAAagwB,EAAyB,iBAAE,WAAW,OAAQA,EAAyB,iBAAEA,EAAY,IAAoB,kBAAGnsB,MAAM,KAAK7D,YAAagwB,EAAsB,cAAE,WAAW,OAAQA,EAAsB,cAAEA,EAAY,IAAiB,eAAGnsB,MAAM,KAAK7D,YAAagwB,EAAsB,cAAE,WAAW,OAAQA,EAAsB,cAAEA,EAAY,IAAiB,eAAGnsB,MAAM,KAAK7D,YAAagwB,EAAyB,iBAAE,WAAW,OAAQA,EAAyB,iBAAEA,EAAY,IAAoB,kBAAGnsB,MAAM,KAAK7D,YAAagwB,EAAwB,gBAAE,WAAW,OAAQA,EAAwB,gBAAEA,EAAY,IAAmB,iBAAGnsB,MAAM,KAAK7D,YAAagwB,EAAsB,cAAE,WAAW,OAAQA,EAAsB,cAAEA,EAAY,IAAiB,eAAGnsB,MAAM,KAAK7D,YAAagwB,EAAsB,cAAE,WAAW,OAAQA,EAAsB,cAAEA,EAAY,IAAiB,eAAGnsB,MAAM,KAAK7D,YAAagwB,EAAyB,iBAAE,WAAW,OAAQA,EAAyB,iBAAEA,EAAY,IAAoB,kBAAGnsB,MAAM,KAAK7D,YAAagwB,EAAwB,gBAAE,WAAW,OAAQA,EAAwB,gBAAEA,EAAY,IAAmB,iBAAGnsB,MAAM,KAAK7D,YAAagwB,EAA0B,kBAAE,WAAW,OAAQA,EAA0B,kBAAEA,EAAY,IAAqB,mBAAGnsB,MAAM,KAAK7D,YAAagwB,EAAuB,eAAE,WAAW,OAAQA,EAAuB,eAAEA,EAAY,IAAkB,gBAAGnsB,MAAM,KAAK7D,YAAagwB,EAAmB,WAAE,WAAW,OAAQA,EAAmB,WAAEA,EAAY,IAAc,YAAGnsB,MAAM,KAAK7D,YAAagwB,EAA2B,mBAAE,WAAW,OAAQA,EAA2B,mBAAEA,EAAY,IAAsB,oBAAGnsB,MAAM,KAAK7D,YAAagwB,EAA4B,oBAAE,WAAW,OAAQA,EAA4B,oBAAEA,EAAY,IAAuB,qBAAGnsB,MAAM,KAAK7D,YAAagwB,EAA+B,uBAAE,WAAW,OAAQA,EAA+B,uBAAEA,EAAY,IAA0B,wBAAGnsB,MAAM,KAAK7D,YAAagwB,EAA4B,oBAAE,WAAW,OAAQA,EAA4B,oBAAEA,EAAY,IAAuB,qBAAGnsB,MAAM,KAAK7D,YAAagwB,EAAsB,cAAE,WAAW,OAAQA,EAAsB,cAAEA,EAAY,IAAiB,eAAGnsB,MAAM,KAAK7D,YAAagwB,EAAsB,cAAE,WAAW,OAAQA,EAAsB,cAAEA,EAAY,IAAiB,eAAGnsB,MAAM,KAAK7D,YAAagwB,EAAkB,UAAE,WAAW,OAAQA,EAAkB,UAAEA,EAAY,IAAa,WAAGnsB,MAAM,KAAK7D,YAAagwB,EAA6B,qBAAE,WAAW,OAAQA,EAA6B,qBAAEA,EAAY,IAAwB,sBAAGnsB,MAAM,KAAK7D,YAAagwB,EAAqB,aAAE,WAAW,OAAQA,EAAqB,aAAEA,EAAY,IAAgB,cAAGnsB,MAAM,KAAK7D,YAAagwB,EAAwB,gBAAE,WAAW,OAAQA,EAAwB,gBAAEA,EAAY,IAAmB,iBAAGnsB,MAAM,KAAK7D,YAAagwB,EAAuB,eAAE,WAAW,OAAQA,EAAuB,eAAEA,EAAY,IAAkB,gBAAGnsB,MAAM,KAAK7D,YAAagwB,EAAuB,eAAE,WAAW,OAAQA,EAAuB,eAAEA,EAAY,IAAkB,gBAAGnsB,MAAM,KAAK7D,YAAagwB,EAAwB,gBAAE,WAAW,OAAQA,EAAwB,gBAAEA,EAAY,IAAmB,iBAAGnsB,MAAM,KAAK7D,YAAagwB,EAAyB,iBAAE,WAAW,OAAQA,EAAyB,iBAAEA,EAAY,IAAoB,kBAAGnsB,MAAM,KAAK7D,YAAagwB,EAAkB,UAA5yozC,SAAmBnZ,GAAM,OAAI4gB,GAAoDijB,GAAQ7jC,GAA30B,SAAsBA,GAAM,IAAI7N,EAAIusB,EAAOwB,IAAgB,GAAOxkB,EAAIvJ,EAAI6N,EAAK,IAAI,GAAiC,OAA9B0e,EAAOwB,IAAgB,GAAGxkB,EAAWvJ,EAA8qBosD,CAAav+C,IAAovozCmZ,EAAyB,iBAAEgI,GAAiBhI,EAA4B,oBAAEiI,GAAoBjI,EAAwB,gBAAEgX,GAAG0P,aAAa1mB,EAAsB,cAAEgX,GAAG2P,WAAW3mB,EAA0B,kBAAEgX,GAAG+P,eAAe/mB,EAA+B,uBAAEgX,GAAG0R,oBAAoB1oB,EAA0B,kBAAEgX,GAAGqQ,eAAernB,EAAsB,cAAEgX,GAAGgQ,WAAWhnB,EAAwB,gBAAEgX,GAAGmO,aAAanlB,EAAkB,UAAEgX,GAAGkD,OAAoJnS,GAAsB,SAASs9B,IAAgBL,IAAU7xD,KAAU6xD,KAAUj9B,GAAsBs9B,IAAkerlC,EAAY,IAAE7sB,GAAO6sB,EAAgB,QAAiF,IAAjD,mBAAnBA,EAAgB,UAAcA,EAAgB,QAAE,CAACA,EAAgB,UAASA,EAAgB,QAAEjxB,OAAO,GAAGixB,EAAgB,QAAEjnB,KAAlBinB,GAAgxF,SAASslC,GAAM11C,EAAE4C,GAAG,KAAK5C,OAAa,IAAJA,EAAgB,EAAEA,EAAE,KAAK4C,OAAa,IAAJA,EAAgB,EAAEA,EAAkrB,SAAS+yC,KAAc,OAAOv1D,UAAUjB,QAAQ,KAAK,EAAG,KAAKy2D,OAAO,CAAC51C,EAAE,EAAE4C,EAAE,GAAG,KAAK3L,KAAK,CAACwmB,MAAM,EAAEC,OAAO,GAAG,KAAKm4B,MAAM,EAAE,MAAO,KAAK,EAAG,KAAKD,OAAOx1D,UAAU,GAAG,KAAK6W,KAAK7W,UAAU,GAAG,KAAKy1D,MAAMz1D,UAAU,GAAG,MAAO,QAAS,MAAM,IAAIiC,MAAM,sBAA8S,SAASyzD,GAAOC,EAAGC,EAAGC,EAAGC,GAAI,KAAKnyD,UAAiB,IAALgyD,EAAiB,EAAEA,GAAI,KAAKhyD,UAAiB,IAALiyD,EAAiB,EAAEA,GAAI,KAAKjyD,UAAiB,IAALkyD,EAAiB,EAAEA,GAAI,KAAKlyD,UAAiB,IAALmyD,EAAiB,EAAEA,GAA4gE,OAA9tM3yD,UAA4B,IAAZ6sB,EAAOgX,SAA8B,IAALA,KAAkBhX,EAAOgX,GAAGA,IAAIhX,EAAe,OAAE,SAAS+lC,GAAa,IAAI94B,EAAI,KAA4GE,EAAO,KAAS2B,EAAI,KAAK,IAA9F7B,EAAV,iBAAd84B,EAA4BrmC,SAASsmC,eAAeD,GAAwBA,aAA4DE,kBAAkB94B,EAAOzN,SAAS0N,cAAc,WAAiBC,MAAMJ,EAAII,MAAMF,EAAOG,OAAOL,EAAIK,QAAOwB,EAAI3B,EAAOI,WAAW,OAAUC,UAAUP,EAAI,EAAE,EAAEA,EAAII,MAAMJ,EAAIK,YAAc,CAAA,KAAGL,aAAei5B,mBAAiE,MAAM,IAAIj0D,MAAM,4CAAnD68B,GAAX3B,EAAOF,GAAeM,WAAW,MAA0E,IAAI44B,EAAQr3B,EAAIs3B,aAAa,EAAE,EAAEj5B,EAAOE,MAAMF,EAAOG,QAAQ,OAAO7N,EAAG4mC,iBAAiBF,IAAWnmC,EAAe,OAAE,SAASsmC,EAAaC,GAAK,IAAIp5B,EAAO,KAAiH,MAAzEA,EAAV,iBAAfm5B,EAAgC5mC,SAASsmC,eAAeM,GAA4BA,aAAqCJ,mBAAoB,MAAM,IAAIj0D,MAAM,gDAAiD,KAAKs0D,aAAe9mC,EAAG+mC,KAAM,MAAM,IAAIv0D,MAAM,2CAA4C,IAAIg7B,EAAI,IAAIxN,EAAG+mC,IAAUC,EAAMF,EAAIvvD,OAAO,EAAM0vD,EAAMD,GAAOhnC,EAAGknC,MAAM,EAAEF,GAAOhnC,EAAGmnC,OAAO,EAAE,IAAI,IAAQ9rD,EAAM2rD,IAAQhnC,EAAGknC,OAAOF,IAAQhnC,EAAGonC,OAAO,IAAI,EAA0C,OAAxCN,EAAIO,UAAU75B,EAAIxN,EAAGsnC,MAAML,EAAM5rD,GAAcmyB,EAAIj2B,QAAQ,KAAKyoB,EAAGunC,QAAQvnC,EAAGwnC,SAASh6B,EAAIA,EAAIxN,EAAGynC,iBAAiB,MAAM,KAAKznC,EAAG0nC,QAAQ1nC,EAAGwnC,SAASh6B,EAAIA,EAAIxN,EAAG2nC,gBAAgB,MAAM,KAAK3nC,EAAG4nC,QAAQ,MAAM,QAAQ,MAAM,IAAIp1D,MAAM,sEAAuE,IAAIk0D,EAAQ,IAAImB,UAAU,IAAIrF,kBAAkBh1B,EAAIvpB,MAAMupB,EAAIs6B,KAAKt6B,EAAIu6B,MAAU14B,EAAI3B,EAAOI,WAAW,MAAMuB,EAAI24B,UAAU,EAAE,EAAEt6B,EAAOE,MAAMF,EAAOG,QAAQH,EAAOE,MAAM84B,EAAQ94B,MAAMF,EAAOG,OAAO64B,EAAQ74B,OAAOwB,EAAI44B,aAAavB,EAAQ,EAAE,GAAGl5B,EAAI06B,UAAW3nC,EAAqB,aAAE,SAAS4nC,GAAa,IAAIC,EAAM,KAA4G,MAArEA,EAAV,iBAAdD,EAA8BloC,SAASsmC,eAAe4B,GAA0BA,aAAmCE,kBAAmB,MAAM,IAAI71D,MAAM,+CAAgD,IAAIk7B,EAAOzN,SAAS0N,cAAc,UAAUD,EAAOE,MAAMw6B,EAAMx6B,MAAMF,EAAOG,OAAOu6B,EAAMv6B,OAAO,IAAIwB,EAAI3B,EAAOI,WAAW,MAAM,KAAKs6B,MAAMA,EAAM,KAAKnmC,KAAK,SAASqmC,GAAO,KAAKA,aAAiBtoC,EAAG+mC,KAAM,MAAM,IAAIv0D,MAAM,2CAA4C,GAAG81D,EAAM/wD,SAASyoB,EAAG4nC,QAAS,MAAM,IAAIp1D,MAAM,yDAA0D,GAAG81D,EAAMR,OAAOM,EAAMx6B,OAAO06B,EAAMP,OAAOK,EAAMv6B,OAAQ,MAAM,IAAIr7B,MAAM,gEAAiE68B,EAAItB,UAAUq6B,EAAM,EAAE,EAAEA,EAAMx6B,MAAMw6B,EAAMv6B,QAAQy6B,EAAMrkD,KAAKxJ,IAAI40B,EAAIs3B,aAAa,EAAE,EAAEyB,EAAMx6B,MAAMw6B,EAAMv6B,QAAQ5pB,QAA2Hsc,EAAc,MAA/H,SAAe2K,EAAMpoB,GAAK,KAAKooB,WAAqB,IAARA,EAAoB,EAAEA,EAAM,KAAKpoB,SAAiB,IAANA,EAAkB,EAAEA,GAAoHyd,EAAc,MAAEslC,GAAkItlC,EAAa,KAAzI,SAAcqN,EAAMC,GAAQ,KAAKD,WAAqB,IAARA,EAAoB,EAAEA,EAAM,KAAKC,YAAuB,IAATA,EAAqB,EAAEA,GAAihBtN,EAAa,KAAlgB,WAAgB,OAAOhwB,UAAUjB,QAAQ,KAAK,EAAG,KAAK6gB,EAAE,EAAE,KAAK4C,EAAE,EAAE,KAAK6a,MAAM,EAAE,KAAKC,OAAO,EAAE,MAAO,KAAK,EAAG,IAAI+E,EAAKriC,UAAU,GAAG,KAAK4f,EAAEyiB,EAAKziB,EAAE,KAAK4C,EAAE6f,EAAK7f,EAAE,KAAK6a,MAAMgF,EAAKhF,MAAM,KAAKC,OAAO+E,EAAK/E,OAAO,MAAO,KAAK,EAAG,IAAIvX,EAAM/lB,UAAU,GAAO6W,EAAK7W,UAAU,GAAG,KAAK4f,EAAEmG,EAAMnG,EAAE,KAAK4C,EAAEuD,EAAMvD,EAAE,KAAK6a,MAAMxmB,EAAKwmB,MAAM,KAAKC,OAAOzmB,EAAKymB,OAAO,MAAO,KAAK,EAAG,KAAK1d,EAAE5f,UAAU,GAAG,KAAKwiB,EAAExiB,UAAU,GAAG,KAAKq9B,MAAMr9B,UAAU,GAAG,KAAKs9B,OAAOt9B,UAAU,GAAG,MAAO,QAAS,MAAM,IAAIiC,MAAM,uBAAmTszD,GAAYnwC,OAAO,SAASnY,GAAK,OAAO+iB,EAAOgoC,kBAAkB/qD,IAAOsoD,GAAY0C,aAAa,SAAShrD,GAAK,OAAO+iB,EAAOkoC,wBAAwBjrD,IAAOsoD,GAAY4C,eAAe,SAASlrD,GAAK,OAAO+iB,EAAOooC,0BAA0BnrD,IAAO+iB,EAAoB,YAAEulC,GAA0MG,GAAO9xD,UAAU,IAAIH,MAAQiyD,GAAO2C,IAAI,SAASl3C,GAAG,OAAO,IAAIu0C,GAAOv0C,EAAEA,EAAEA,EAAEA,IAAK6O,EAAe,OAAE0lC,GAAoT1lC,EAAkB,UAA/T,WAAqB,OAAOhwB,UAAUjB,QAAQ,KAAK,EAAG,KAAKu5D,OAAO,EAAE,KAAKC,OAAO,EAAE,KAAKC,OAAO,IAAIlD,GAAQ,KAAKmD,OAAO,IAAInD,GAAQ,MAAO,KAAK,EAAG,KAAKgD,OAAOt4D,UAAU,GAAG,KAAKu4D,OAAOv4D,UAAU,GAAG,KAAKw4D,OAAOx4D,UAAU,GAAG,KAAKy4D,OAAOz4D,UAAU,GAAG,MAAO,QAAS,MAAM,IAAIiC,MAAM,uBAAwQ+tB,EAAe,OAAjO,WAAkB,OAAOhwB,UAAUjB,QAAQ,KAAK,EAAG,KAAKy2D,OAAO,IAAIF,GAAQ,KAAKoD,OAAO,EAAE,MAAO,KAAK,EAAG,KAAKlD,OAAOx1D,UAAU,GAAG,KAAK04D,OAAO14D,UAAU,GAAG,MAAO,QAAS,MAAM,IAAIiC,MAAM,uBAAuS+tB,EAAqB,aAA5Q,WAAwB,OAAOhwB,UAAUjB,QAAQ,KAAK,EAAG,KAAKiI,KAAK,EAAE,KAAK2xD,SAAS,EAAE,KAAKC,QAAQ,EAAE,MAAO,KAAK,EAAG,KAAK5xD,KAAKhH,UAAU,GAAG,KAAK24D,SAAS34D,UAAU,GAAG,KAAK44D,QAAQ54D,UAAU,GAAG,MAAO,QAAS,MAAM,IAAIiC,MAAM,uBAA4D+tB,EAAqB,aAAE,SAASwnC,EAAKD,EAAKvwD,EAAK3D,GAAO,IAAIkzD,EAAI,IAAI9mC,EAAG+mC,IAAIgB,EAAKD,EAAKvwD,GAAM,OAAOA,GAAM,KAAKyoB,EAAGsnC,MAAM,KAAKtnC,EAAGunC,QAAQ,KAAKvnC,EAAGopC,QAAQ,KAAKppC,EAAG0nC,QAAQ,KAAK1nC,EAAG4nC,QAASd,EAAI7iD,KAAKxJ,IAAI7G,GAAO,MAAO,KAAKosB,EAAGknC,MAAM,KAAKlnC,EAAGqpC,QAAQ,KAAKrpC,EAAGspC,QAAQ,KAAKtpC,EAAGupC,QAAQ,KAAKvpC,EAAGwpC,QAAS1C,EAAI2C,OAAOhvD,IAAI7G,GAAO,MAAO,KAAKosB,EAAG0pC,OAAO,KAAK1pC,EAAG2pC,SAAS,KAAK3pC,EAAG4pC,SAAS,KAAK5pC,EAAG6pC,SAAS,KAAK7pC,EAAG8pC,SAAUhD,EAAIiD,QAAQtvD,IAAI7G,GAAO,MAAO,KAAKosB,EAAGonC,OAAO,KAAKpnC,EAAGgqC,SAAS,KAAKhqC,EAAGiqC,SAAS,KAAKjqC,EAAGkqC,SAAS,KAAKlqC,EAAGmqC,SAAUrD,EAAIsD,QAAQ3vD,IAAI7G,GAAO,MAAO,KAAKosB,EAAGmnC,OAAO,KAAKnnC,EAAGqqC,SAAS,KAAKrqC,EAAGsqC,SAAS,KAAKtqC,EAAGuqC,SAAS,KAAKvqC,EAAGwqC,SAAU1D,EAAI2D,QAAQhwD,IAAI7G,GAAO,MAAO,KAAKosB,EAAG0qC,OAAO,KAAK1qC,EAAG2qC,SAAS,KAAK3qC,EAAG4qC,SAAS,KAAK5qC,EAAG6qC,SAAS,KAAK7qC,EAAG8qC,SAAUhE,EAAIiE,QAAQtwD,IAAI7G,GAAO,MAAO,KAAKosB,EAAGgrC,OAAO,KAAKhrC,EAAGirC,SAAS,KAAKjrC,EAAGkrC,SAAS,KAAKlrC,EAAGmrC,SAAS,KAAKnrC,EAAGorC,SAAUtE,EAAIuE,QAAQ5wD,IAAI7G,GAAO,MAAO,QAAS,MAAM,IAAIpB,MAAM,uBAAyB,OAAOs0D,GAAMvmC,EAAyB,iBAAE,SAAS+qC,GAAW,IAAIxE,EAAI,IAAI9mC,EAAG+mC,IAAIuE,EAAUz9B,OAAOy9B,EAAU19B,MAAM5N,EAAG4nC,SAAsC,OAA7Bd,EAAI7iD,KAAKxJ,IAAI6wD,EAAUrnD,MAAa6iD,GAAa9mC,IAAoE,OAA3D1tB,EAAOxB,QAAQkvB,EAAsB,oBAATO,SAAqBA,OAAO,IAAUP,EAAGO,SANl1h0CjuB,EAAOxB,QAG/FwB,EAAOxB,QAAQgvB,IACfD,EAAKG,GAAGF,MAIR,SAASyrC,EAAQtyD,GACf,OAAOA,EAAI9J,WAAWC,MAAM,KAAK6mD,IAAI,SAAUuV,GAC7C,OAAQA,IAGZ,SAASC,EAAK78D,GACZ,OAAOA,EAAM,EAAIe,KAAK4O,MAAM3P,GAAOe,KAAKkY,KAAKjZ,GAE/C,SAAS88D,EAAKznD,EAAM4O,EAAKvhB,GACvB,OAAO2S,EAAO4O,EAAMA,EAAM5O,EAAO3S,EAAMA,EAAM2S,EAG/C,IAAI0nD,EAA6B,WAC/B,SAASA,EAAc/5D,EAAQg6D,GAC7B,IAAI1vD,EAAQ,KACR2vD,EAASt7D,UAAUjB,OAAS,QAAsBuH,IAAjBtG,UAAU,GAAmBA,UAAU,GAAK,GAC7Eu7D,EAAav7D,UAAUjB,OAAS,QAAsBuH,IAAjBtG,UAAU,GAAmBA,UAAU,GAAK,GACjFw7D,EAAex7D,UAAUjB,OAAS,QAAsBuH,IAAjBtG,UAAU,GAAmBA,UAAU,GAAK,IACvF6tB,EAAgB,KAAMutC,GACtB9sC,EAAgB,KAAM,cAAU,GAChCA,EAAgB,KAAM,kBAAc,GACpCA,EAAgB,KAAM,sBAAkB,GACxCA,EAAgB,KAAM,oBAAgB,GACtCA,EAAgB,KAAM,gBAAY,GAClCA,EAAgB,KAAM,YAAQ,GAC9BA,EAAgB,KAAM,oBAAgB,GACtCA,EAAgB,KAAM,aAAS,GAC/BA,EAAgB,KAAM,cAAU,IAChC,EAAA/sB,EAAsB,yBAAC,GACvB,KAAK+5D,OAASA,GAAkB,GAChC,KAAKC,WAAaA,GAA0B,GAC5C,KAAKE,eAAiB,IACtB,KAAKD,aAAeA,GAA8B,IAClD,KAAKE,SAAW,EAChB,KAAKr+B,MAAQg+B,EAAM,GACnB,KAAK/9B,OAAS+9B,EAAM,GACpB,KAAKM,KAAOt6D,EACZ,KAAKu6D,aAAe,GACpB,KAAKD,KAAKp4C,QAAQ,SAAU03C,GAC1BtvD,EAAMiwD,aAAaj4D,KAAKs3D,EAAOtvD,EAAM2vD,OAAS,IAAM,KAoLxD,OAjLAntC,EAAaitC,EAAe,CAAC,CAC3BrwD,IAAK,YACL7E,MAAO,WACL,IAAI21D,EAAS,KAETjsC,EAAM,IAAIP,EAAWysC,aAAa,KAAKz+B,MAAO,KAAKC,OAAQjO,EAAW2nC,QAAS,KAAK4E,cACpFG,EAAW,IAAI1sC,EAAW2sC,UAC1BC,EAAY,IAAI5sC,EAAWmnC,IAE/BnnC,EAAW6sC,aAAatsC,EAAKmsC,EAAUE,EAAW5sC,EAAW8sC,UAAW9sC,EAAW+sC,qBAInF,IAHA,IAAIC,EAAej9D,KAAKkjB,IAAIy5C,EAASllD,OAAQ,KAAK4kD,gBAC9Ca,EAAQ,GACRC,EAAS,GACJ74D,EAAI,EAAGA,EAAI24D,EAAc34D,IAAK,CACrC,IAAI84D,EAAUT,EAAS9xD,IAAIvG,GACvB+4D,EAAS,KAAKC,eAAeF,GAC7Bp3C,EAASq3C,EAAOr3C,OAChBu3C,EAAOF,EAAOE,KAClB,KAAIA,EAAO,KAAKjB,UAAhB,CAGA,IAAIkB,EAAQ,KAAKC,eAAe,KAAKlB,KAAMv2C,GAC3C,KAAI,KAAKm2C,WAAaqB,GAAtB,CAGA,IAAIE,EAAM,KAAKC,OAAO33C,GAElB43C,EAAS,IAAI3tC,EAAWysC,aAAagB,EAAI/9D,OAAS,EAAG,EAAGswB,EAAW0qC,SAAU+C,GAC7EG,EAAY,KAAKP,eAAeM,GACpCF,EAAMG,EAAU73C,QAChBu3C,EAAOM,EAAUN,MACN,KAAKjB,SAAW,IAG3BoB,EAAIv5C,QAAQ,SAAU03C,GACpBA,EAAK,GAAKE,EAAK/7D,KAAK8B,MAAM+5D,EAAK,IAAK,EAAGY,EAAOx+B,OAC9C49B,EAAK,GAAKE,EAAK/7D,KAAK8B,MAAM+5D,EAAK,IAAK,EAAGY,EAAOv+B,UAEhDg/B,EAAM34D,KAAKm5D,GACXP,EAAO54D,KAAKi5D,GACZI,EAAe,YAKjB,OAHAptC,EAAY,SACZmsC,EAAiB,SACjBE,EAAkB,SACX,CACLK,MAAOA,EACPC,OAAQA,KAGX,CACDxxD,IAAK,iBACL7E,MAAO,SAAwBs2D,GAE7B,IAaIU,EACAC,EACAC,EACAC,EAhBAC,EAAejuC,EAAWkuC,YAAYf,GACtCp3C,EAAS,GACTmxC,EAAM,IAAIlnC,EAAWmnC,IAEzBnnC,EAAWmuC,UAAUF,EAAc/G,GACnC,IAAK,IAAI7yD,EAAI,EAAGA,EAAI6yD,EAAIiE,QAAQz7D,OAAQ2E,GAAK,EAAG,CAC9C,IAAIgF,EAAM,CAAC6tD,EAAIiE,QAAQ92D,GAAI6yD,EAAIiE,QAAQ92D,EAAI,IAC3C0hB,EAAOzhB,KAAK+E,GAKd0c,EAAOK,KAHP,SAAoBb,EAAGhC,GACrB,OAAOgC,EAAE,GAAKhC,EAAE,KAOdwC,EAAO,GAAG,GAAKA,EAAO,GAAG,IAC3B83C,EAAU,EACVG,EAAU,IAEVH,EAAU,EACVG,EAAU,GAERj4C,EAAO,GAAG,GAAKA,EAAO,GAAG,IAC3B+3C,EAAU,EACVC,EAAU,IAEVD,EAAU,EACVC,EAAU,GAEZ,IAAIN,EAAM,CAAC13C,EAAO83C,GAAU93C,EAAO+3C,GAAU/3C,EAAOg4C,GAAUh4C,EAAOi4C,IACjEV,EAAOv9D,KAAKkjB,IAAIg7C,EAAazmD,KAAKymB,OAAQggC,EAAazmD,KAAKwmB,OAEhE,OADAk5B,EAAY,SACL,CACLnxC,OAAQ03C,EACRH,KAAMA,KAGT,CACD5xD,IAAK,iBACL7E,MAAO,SAAwBu3D,EAAQC,GACrC,IAAIt5B,EAAI,KAAK9G,OACT71B,EAAI,KAAK41B,MACTy/B,EAAMa,KAAKC,MAAMD,KAAKE,UAAUH,IAChC99C,EAAI,GACJ4C,EAAI,GACRs6C,EAAIv5C,QAAQ,SAAU03C,GACpBr7C,EAAEjc,KAAKs3D,EAAK,IACZz4C,EAAE7e,KAAKs3D,EAAK,MAGd,IAAI6C,EAAO3C,EAAK/7D,KAAK4O,MAAM5O,KAAKkjB,IAAIze,MAAMzE,KAAMwgB,IAAK,EAAGnY,EAAI,GACxDs2D,EAAO5C,EAAK/7D,KAAKkY,KAAKlY,KAAK2B,IAAI8C,MAAMzE,KAAMwgB,IAAK,EAAGnY,EAAI,GACvDu2D,EAAO7C,EAAK/7D,KAAK4O,MAAM5O,KAAKkjB,IAAIze,MAAMzE,KAAMojB,IAAK,EAAG4hB,EAAI,GACxD65B,EAAO9C,EAAK/7D,KAAKkY,KAAKlY,KAAK2B,IAAI8C,MAAMzE,KAAMojB,IAAK,EAAG4hB,EAAI,GAEvD85B,EAAO,IAAI7uC,EAAWmnC,IAAIz1C,MAAMk9C,EAAOD,EAAO,EAAGD,EAAOD,EAAO,EAAGzuC,EAAW2nC,SACjF8F,EAAIv5C,QAAQ,SAAU03C,GACpBA,EAAK,GAAK77D,KAAK2B,IAAIk6D,EAAK,GAAK6C,EAAM,GACnC7C,EAAK,GAAK77D,KAAK2B,IAAIk6D,EAAK,GAAK+C,EAAM,KAErC,IACIG,EAAa,IAAItxD,WAAWiwD,EAAIsB,QAChCh5C,EAASiK,EAAWysC,aAFb,EAEgC,EAAGzsC,EAAW0qC,SAAUoE,GAC/DE,EAAM,IAAIhvC,EAAW2sC,UACzBqC,EAAIC,UAAUl5C,GACd,IAAIm5C,EAAQ,IAAIlvC,EAAWqmC,OAAO,KAElCrmC,EAAWmvC,SAASN,EAAMG,EAAKE,EAAO,GAEtC,IADA,IAAIE,EAAW,GACN/6D,EAAIs6D,EAAMt6D,EAAIu6D,EAAO,EAAGv6D,IAC/B+6D,EAAS96D,KAAKE,MAAM46D,EAAUlwC,EAAmBkvC,EAAOv9D,MAAM,KAAKm9B,MAAQ35B,EAAIo6D,EAAM,KAAKxgC,OAAS55B,EAAIq6D,EAAO,KAEhH,IAAIW,EAAO,KAAKA,KAAKD,EAAUP,EAAKxqD,MAIpC,OAHAwqD,EAAa,SACb94C,EAAe,SACfi5C,EAAY,SACLK,IAER,CACD3zD,IAAK,SACL7E,MAAO,SAAgB42D,GACrB,IAAI6B,EACAnD,EAAe,KAAKA,aAGpBoD,EAFOx/D,KAAKkC,IAAI+lB,EAAUw3C,YAAY/B,IAEpBtB,EADTn0C,EAAUy3C,cAAchC,GAEjCiC,EAAS,GACbjC,EAAIv5C,QAAQ,SAAU03C,GACpB,IAAIhuD,EAAM,CACR+xD,EAAG,EACHC,EAAG,GAELhyD,EAAI+xD,EAAI/D,EAAK,GACbhuD,EAAIgyD,EAAIhE,EAAK,GACb8D,EAAOp7D,KAAKsJ,KAEd,IAAI2G,EAAS,IAAIsrD,EAAO,QAACC,cACzBvrD,EAAOwrD,QAAQL,EAAQG,EAAO,QAACG,SAASC,QAASJ,EAAO,QAACK,QAAQC,iBACjE,IAAIC,EAAW,GACf7rD,EAAO8rD,QAAQD,EAAUb,GACzB,IAAIe,EAAc,GAKlB,OAJAF,EAAS,IAAMA,EAAS,GAAGl8C,QAAQ,SAAU03C,GAC3C0E,EAAYh8D,KAAK,CAACs3D,EAAK+D,EAAG/D,EAAKgE,MAEjCU,GAAehB,EAAO,IAAI37D,OAAOa,MAAM86D,EAAMpwC,EAAmBoxC,MAGjE,CACD50D,IAAK,OACL7E,MAAO,SAAcwN,EAAMwqD,GAGzB,IAFA,IAAIvV,EAAM,EACN5pD,EAAS,EACJ2E,EAAI,EAAGA,EAAIgQ,EAAK3U,OAAQ2E,IAC3Bw6D,EAAKx6D,KACPilD,GAAM,EAAA7nD,EAAI,MAAC6nD,EAAKj1C,EAAKhQ,IACrB3E,KAGJ,OAAO,EAAAkC,EAAM,QAAC0nD,EAAK5pD,OAGhBq8D,EA/MwB,GAkN7BlQ,EAAY,m6mBAEZ0U,EAA8B,WAEhC,SAASA,EAAeC,GACtBhyC,EAAgB,KAAM+xC,GACtBtxC,EAAgB,KAAM,qBAAiB,GACvCA,EAAgB,KAAM,iBAAa,GACnCA,EAAgB,KAAM,kBAAc,GACpC,KAAKwxC,cAAgB5U,EAAUtsD,WAAWC,MAAM,MAIhD,IAHA,IAAIkhE,EAAY,GACZC,EAAa,GAERt8D,EAAI,EAAGA,EAAIm8D,EAAM9gE,OAAQ2E,GADnB,KACkC,CAC/C,IAAIq7D,EAASc,EAAM3/D,MAAMwD,EAAGA,EAFf,KAE8B,GACvCu8D,EAAS7gE,KAAK2B,IAAI8C,MAAMzE,KAAMmvB,EAAmBwwC,IACjDmB,EAASnB,EAAO9/D,QAAQghE,GAC5BD,EAAWr8D,KAAKs8D,GAChBF,EAAUp8D,KAAKu8D,GAEjB,KAAKH,UAAYA,EACjB,KAAKC,WAAaA,EAmDpB,OAjDA7xC,EAAayxC,EAAgB,CAAC,CAC5B70D,IAAK,SACL7E,MAAO,SAAgBi6D,EAAYC,GAKjC,IAJA,IAAIC,EAAsBrgE,UAAUjB,OAAS,QAAsBuH,IAAjBtG,UAAU,IAAmBA,UAAU,GACrFsgE,EAAiB,KAAKC,qBACtBC,EAAY,GACZC,EAAY,GACP3sC,EAAM,EAAGA,EAAMqsC,EAAWphE,OAAQ+0B,IACrCqsC,EAAWrsC,KAAQwsC,GAGnBD,GACEvsC,EAAM,GAAKqsC,EAAWrsC,EAAM,KAAOqsC,EAAWrsC,KAIpD0sC,EAAU78D,KAAK,KAAKm8D,cAAcK,EAAWrsC,GAAO,IAChDssC,EACFK,EAAU98D,KAAKy8D,EAAUtsC,IAEzB2sC,EAAU98D,KAAK,IAGnB,IAAI8vB,EAAO,GACPirC,EAAO,EACX,GAAI8B,EAAUzhE,OAAQ,CACpB00B,EAAO+sC,EAAUhjD,KAAK,IACtB,IAAImrC,EAAM,EACV8X,EAAUl9C,QAAQ,SAAU03C,GAC1BtS,GAAOsS,IAETyD,EAAO/V,EAAM8X,EAAU1hE,OAEzB,MAAO,CACL00B,KAAMA,EACNirC,KAAMA,KAGT,CACD3zD,IAAK,qBACL7E,MAAO,WACL,MAAO,CAAC,KAET,CACD6E,IAAK,eACL7E,MAAO,WACL,OAAO,KAAK6X,OAAO,KAAKgiD,UAAW,KAAKC,YAAY,OAGjDJ,EAtEyB,GAyE9Bc,EAAoB,CACtBrF,MAAO,IACPC,OAAQ,GACRC,WAAY,GACZC,aAAc,KAEZmF,EAAkB,IAClBC,EAAW,IACXC,EAAY,GACZC,EAAapxC,SAAS0N,cAAc,UACpC2jC,EAAarxC,SAAS0N,cAAc,UACpC4jC,EAAe,KACfC,EAAY,KAGhB,SAASC,EAAW/jC,GAClBA,EAAOmH,MAAM15B,SAAW,QACxBuyB,EAAOmH,MAAM68B,OAAS,IACtBhkC,EAAOmH,MAAM88B,OAAS,KACtBjkC,EAAOmH,MAAM+8B,QAAU,IACvB3xC,SAAS4tB,KAAKhd,YAAYnD,GAE5B,SAAS/2B,IACP,OAAOk7D,EAAMz9D,MAAM,KAAM7D,WAE3B,SAASshE,IAqDP,OApDAA,EAAQ1zC,EAAgC9F,IAAsBqE,KAAK,SAASo1C,IAC1E,IAAIC,EACFC,EAGAC,EACAC,EACAC,EAAQ5hE,UACV,OAAO8nB,IAAsBW,KAAK,SAAkBo5C,GAClD,OACE,OAAQA,EAASzhE,KAAOyhE,EAASxhE,MAC/B,KAAK,EAyBH,OAxBAmhE,EAAiBI,EAAM7iE,OAAS,QAAkBuH,IAAbs7D,EAAM,GAAmBA,EAAM,GAAK,GACzEH,EAAiBG,EAAM7iE,OAAS,QAAkBuH,IAAbs7D,EAAM,GAAmBA,EAAM,GAAK,GAC1D,6FACA,yFACf79D,EAAG,IAACmG,IAAI,qBAAqB,GAC7B82D,EAAe,IAAIc,EAAM,OAAC,CACxBC,UAAWP,GAJE,6FAKbvtD,KAAM,OACNyqD,KAAM,CAAC,KAAO,KAAO,MACrBsD,IAAK,CAAC,KAAO,KAAO,MACpBC,KAAK,EACLC,kBAAkB,IAEpBR,EAAaV,EAAa56D,OAC1B66D,EAAY,IAAIa,EAAM,OAAC,CACrBC,UAAWN,GAZE,yFAabxtD,KAAM,OACNyqD,KAAM,CAAC,GAAK,GAAK,IACjBsD,IAAK,CAAC,GAAK,GAAK,IAChBC,KAAK,EACLC,kBAAkB,IAEpBP,EAAUV,EAAU76D,OACpBy7D,EAASxhE,KAAO,GACT4I,QAAQovD,IAAI,CAACqJ,EAAYC,IAClC,KAAK,GACCX,EAAamB,YACfxB,EAAkBK,EAAamB,UAAUC,IAEvCnB,EAAUkB,YACZvB,EAAWK,EAAUkB,UAAUC,GAC/BvB,EAAYI,EAAUkB,UAAUE,IAEpC,KAAK,GACL,IAAK,MACH,OAAOR,EAASl1C,SAGrB40C,OAEQ19D,MAAM,KAAM7D,WAE3B,SAASsiE,EAAOC,GACd,OAAOC,EAAQ3+D,MAAM,KAAM7D,WAE7B,SAASwiE,IA8EP,OA7EAA,EAAU50C,EAAgC9F,IAAsBqE,KAAK,SAASs2C,EAASC,GACrF,IAAIC,EACFC,EACAtH,EACAC,EACAC,EACAqH,EACAC,EACAhkC,EACAikC,EACAC,EACApjD,EACA4C,EACAygD,EACAC,EACAC,EACA9hE,EACA+jB,EAEAg+C,EAASpjE,UACX,OAAO8nB,IAAsBW,KAAK,SAAmB46C,GACnD,OACE,OAAQA,EAAUjjE,KAAOijE,EAAUhjE,MACjC,KAAK,EAgCH,OA/BAsiE,EAASS,EAAOrkE,OAAS,QAAmBuH,IAAd88D,EAAO,GAAmBA,EAAO,GAAK1C,EAEpEkC,EAAWD,EAAOtH,MAAQsH,EAAOtH,MAAQsF,EACzCrF,EAASqH,EAAOrH,OAChBC,EAAaoH,EAAOpH,WACpBC,EAAemH,EAAOnH,aACtBqH,EAAcD,EACdE,EAAeF,EACf9B,EAAWzjC,MAAQwlC,EACnB/B,EAAWxjC,OAASwlC,GAEpBhkC,EAAMgiC,EAAWvjC,WAAW,OACxB+lC,UAAY,OAChBxkC,EAAIykC,SAAS,EAAG,EAAGT,EAAcD,GAEjCE,EAAKF,EACLG,EAAKF,EACLljD,EAAI,EACJ4C,EAAI,EACAqgD,EAAcC,EAAeJ,EAAMc,cAAgBd,EAAMe,cAAgB,GAC3EV,EAAK3jE,KAAK8B,MAAM8hE,EAAKN,EAAMe,aAAef,EAAMc,eAChD5jD,EAAIxgB,KAAK4O,OAAO60D,EAAcE,GAAM,KAIpCC,EAAK5jE,KAAK8B,MAAM6hE,EAAKL,EAAMc,cAAgBd,EAAMe,cACjDjhD,EAAIpjB,KAAK4O,OAAO80D,EAAeE,GAAM,IAEvClkC,EAAItB,UAAUklC,EAAO9iD,EAAG4C,EAAGugD,EAAIC,GAC/BC,EAAY,CAACL,EAAUA,GACvBS,EAAUhjE,KAAO,GACV2gE,EAAa0C,QAAQ5C,GAC9B,KAAK,GAaH,OAZAoC,EAAWG,EAAU75C,KACrB25C,EAAa,IAAI/H,EAAc8H,EAAUD,EAAW3H,EAAQC,EAAYC,GACxEn6D,EAAS8hE,EAAWQ,YACpBv+C,EAASu4C,KAAKC,MAAMD,KAAKE,UAAUx8D,EAAOi7D,QACjC,EACTl3C,GAAUA,EAAO7B,QAAQ,SAAU03C,GACjCA,EAAK13C,QAAQ,SAAUwC,EAAOtkB,GAE5BskB,EAAM,GAAKo1C,EAAK/7D,KAAK8B,MAAM6kB,EAAM,GAAKnG,GAAKxgB,KAAK2B,IAAI2hE,EAAMe,aAAcf,EAAMc,eAAiBZ,GAAsB,IAAVnhE,GAJtG,EAIwI,IAAVA,EAJ9H,EAI+J,IAAVA,EAJrJ,GAAA,GAIsL,EAAGihE,EAAMe,cACpM19C,EAAM,GAAKo1C,EAAK/7D,KAAK8B,MAAM6kB,EAAM,GAAKvD,GAAKpjB,KAAK2B,IAAI2hE,EAAMe,aAAcf,EAAMc,eAAiBZ,GAAsB,IAAVnhE,GALtG,EAKwI,IAAVA,GAL9H,EAAA,GAKsL,EAAGihE,EAAMc,mBAGjMH,EAAU15C,OAAO,SAAUvE,GACpC,KAAK,GACL,IAAK,MACH,OAAOi+C,EAAU12C,SAGtB81C,OAEU5+D,MAAM,KAAM7D,WAE7B,SAAS4jE,EAAQx+C,EAAQs9C,EAAOvlC,EAAQmH,GACtCnH,EAAOE,MAAQqlC,EAAMe,aACrBtmC,EAAOG,OAASolC,EAAMc,cACtB,IAAI1kC,EAAM3B,EAAOI,WAAW,MAC5BuB,EAAItB,UAAUklC,EAAO,EAAG,EAAGvlC,EAAOE,MAAOF,EAAOG,QAChDlY,GAAUA,EAAO7B,QAAQ,SAAUwC,GAEjC+Y,EAAI+kC,YAEJ/kC,EAAIglC,aAAex/B,MAAAA,OAAqC,EAASA,EAAMw/B,cAAgB,OAEvFhlC,EAAIilC,WAAaz/B,MAAAA,OAAqC,EAASA,EAAMy/B,YAAc,EAEnFjlC,EAAIwkC,WAAah/B,MAAAA,OAAqC,EAASA,EAAMg/B,YAAc,cAEnFxkC,EAAIklC,OAAOj+C,EAAM,GAAG,GAAIA,EAAM,GAAG,IACjC+Y,EAAImlC,OAAOl+C,EAAM,GAAG,GAAIA,EAAM,GAAG,IACjC+Y,EAAImlC,OAAOl+C,EAAM,GAAG,GAAIA,EAAM,GAAG,IACjC+Y,EAAImlC,OAAOl+C,EAAM,GAAG,GAAIA,EAAM,GAAG,IAEjC+Y,EAAI7qB,OACJ6qB,EAAIolC,YACJplC,EAAIqlC,SACJrlC,EAAIslC,YASR,SAASC,EAAUC,EAAKC,GACtB,OAAOC,EAAW3gE,MAAM,KAAM7D,WAEhC,SAASwkE,IAqGP,OApGAA,EAAa52C,EAAgC9F,IAAsBqE,KAAK,SAASs4C,EAAS/B,EAAOp1D,GAC/F,IAAIo3D,EACF3+C,EACAu2C,EACAqI,EACAjhE,EACAkhE,EACAC,EACAC,EACAC,EACAhlE,EACAgoC,EACAi9B,EACAvxC,EACAwxC,EACAC,EACAC,EACAC,EAASplE,UACX,OAAO8nB,IAAsBW,KAAK,SAAmB48C,GACnD,OACE,OAAQA,EAAUjlE,KAAOilE,EAAUhlE,MACjC,KAAK,EAGH,OAFAqkE,EAAYU,EAAOrmE,OAAS,QAAmBuH,IAAd8+D,EAAO,GAAmBA,EAAO,GAAK1E,EACvE2E,EAAUhlE,KAAO,EACViiE,EAAOI,EAAOgC,GACvB,KAAK,EACH3+C,EAAQs/C,EAAU77C,KAEdlc,MAAAA,GAA0CA,EAAQ6vB,QACpDymC,EAAQ79C,EAAO28C,EAAOp1D,EAAQ6vB,OAAQ7vB,EAAQg3B,OAEhDg4B,EAAQgJ,GAAav/C,GACrB4+C,EAAY,GACZjhE,EAAI,EACN,KAAK,EACH,KAAMA,EAAI44D,EAAMv9D,QAAS,CACvBsmE,EAAUhlE,KAAO,GACjB,MAYF,GAVAukE,EAAUjH,KAAKC,MAAMD,KAAKE,UAAUvB,EAAM54D,KAC1C6hE,GAAsB7C,EAAOkC,GAE7BC,EAAQ,EACRC,EAAY1lE,KAAKkY,KAAKwpD,EAAWzjC,MAAQujC,EAAWiE,GACpDE,EAAgB,KAKVD,EAAY,GAAI,CACpBO,EAAUhlE,KAAO,GACjB,MAEFN,EAAK,EACP,KAAK,GACH,KAAMA,EAAK+kE,GAAY,CACrBO,EAAUhlE,KAAO,GACjB,MAIF,OAFAmlE,GAAuB1E,EAAYA,EAAWzjC,MAAOyjC,EAAWxjC,OAAQv9B,EAAI8kE,GAC5EQ,EAAUhlE,KAAO,GACV4gE,EAAUyC,QAAQ3C,GAC3B,KAAK,GACHh5B,EAASs9B,EAAU77C,KACnBw7C,EAAY,IAAIpF,EAAe73B,GAC/BtU,EAAOuxC,EAAUS,eACjBV,EAAgBA,EAAc/hE,OAAOywB,EAAKA,MAC5C,KAAK,GACH1zB,IACAslE,EAAUhlE,KAAO,GACjB,MACF,KAAK,GACHglE,EAAUhlE,KAAO,GACjB,MACF,KAAK,GAEH,OADAglE,EAAUhlE,KAAO,GACV4gE,EAAUyC,QAAQ5C,GAC3B,KAAK,GACHmE,EAAUI,EAAU77C,KACpB07C,EAAa,IAAItF,EAAeqF,GAChCE,EAAQD,EAAWO,eACnBV,EAAgBA,EAAc/hE,OAAOmiE,EAAM1xC,MAC7C,KAAK,GACHkxC,EAAUhhE,KAAKohE,GACjB,KAAK,GACHrhE,IACA2hE,EAAUhlE,KAAO,EACjB,MACF,KAAK,GACH,OAAOglE,EAAU17C,OAAO,SAAU,CAChC8J,KAAMkxC,EACNv/C,OAAQW,IAEZ,KAAK,GACL,IAAK,MACH,OAAOs/C,EAAU14C,SAGtB83C,OAEa5gE,MAAM,KAAM7D,WAEhC,SAASslE,GAAaxI,GAMpB,IAFA,IAAIR,EAAQQ,EAAIr3C,KAHhB,SAAoBb,EAAGhC,GACrB,OAAOgC,EAAE,GAAG,GAAKhC,EAAE,GAAG,KAGpB8iD,EAAYpJ,EAAMv9D,OACb2E,EAAI,EAAGA,EAAIgiE,EAAY,EAAGhiE,IACjC,GAAItE,KAAKkC,IAAIg7D,EAAM54D,EAAI,GAAG,GAAG,GAAK44D,EAAM54D,GAAG,GAAG,IAAM,IAAM44D,EAAM54D,EAAI,GAAG,GAAG,GAAK44D,EAAM54D,GAAG,GAAG,GAAI,CAC7F,IAAIiiE,EAAMrJ,EAAM54D,GAChB44D,EAAM54D,GAAK44D,EAAM54D,EAAI,GACrB44D,EAAM54D,EAAI,GAAKiiE,EAGnB,OAAOrJ,EAET,SAASiJ,GAAsBtoC,EAAK7X,GAClC,IAAIwgD,EAAiB1K,EAAK97D,KAAK2B,IAAI8kE,GAAYzgD,EAAO,GAAIA,EAAO,IAAKygD,GAAYzgD,EAAO,GAAIA,EAAO,MAChG0gD,EAAkB5K,EAAK97D,KAAK2B,IAAI8kE,GAAYzgD,EAAO,GAAIA,EAAO,IAAKygD,GAAYzgD,EAAO,GAAIA,EAAO,MACjG2gD,EAAU,CAAC,CAAC,EAAG,GAAI,CAACH,EAAgB,GAAI,CAACA,EAAgBE,GAAkB,CAAC,EAAGA,IAC/EE,EAAS32C,EAAWysC,aAAa,EAAG,EAAGzsC,EAAWgrC,SAAUW,EAAQ51C,IACpE6gD,EAAS52C,EAAWysC,aAAa,EAAG,EAAGzsC,EAAWgrC,SAAUW,EAAQ+K,IAEpEG,EAAI72C,EAAW82C,wBAAwBH,EAAQC,GAC/Cr2C,EAAMP,EAAW+2C,OAAOnpC,GACxBopC,EAAM,IAAIh3C,EAAWmnC,IACrB8P,EAAQ,IAAIj3C,EAAWk3C,KAAKX,EAAgBE,GAEhDz2C,EAAWm3C,gBAAgB52C,EAAKy2C,EAAKH,EAAGI,EAAOj3C,EAAWo3C,YAAap3C,EAAWq3C,iBAAkB,IAAIr3C,EAAWqmC,QACnH,IAEIiR,EAFAC,EAAiBP,EAAIQ,QAAQ,GAIjC,GAAID,EAHgBP,EAAIQ,QAAQ,IAGM,IAAK,CACzCF,EAAU,IAAIt3C,EAAWmnC,IACzB,IAAIsQ,EAAY,IAAIz3C,EAAWk3C,KAAKF,EAAI7O,KAAM6O,EAAI9O,MAC9C/B,EAAS,IAAInmC,EAAWimC,MAAM+Q,EAAI9O,KAAO,EAAG8O,EAAI9O,KAAO,GACvDwP,EAAK13C,EAAW23C,oBAAoBxR,EAAQ,GAAI,GACpDnmC,EAAW43C,WAAWZ,EAAKM,EAASI,EAAID,EAAWz3C,EAAWo3C,YAAap3C,EAAWq3C,iBAAkB,IAAIr3C,EAAWqmC,QAEzH,IAEIgB,EAFAwQ,EAAa,IAAI73C,EAAWmnC,IAC5B2Q,EAAe,IAAI93C,EAAWk3C,KAAK,EAAG,GAEtCI,GACFjQ,EAAQmK,EAAY8F,EAAQE,QAAQ,GACpCx3C,EAAW+3C,OAAOT,EAASO,EAAYC,EAAczQ,EAAOA,EAAOrnC,EAAWg4C,YAC9EV,EAAgB,WAEhBjQ,EAAQmK,EAAY+F,EACpBv3C,EAAW+3C,OAAOf,EAAKa,EAAYC,EAAczQ,EAAOA,EAAOrnC,EAAWg4C,aAE5EvG,EAAWzjC,MAAQ6pC,EAAWL,QAAQ,GACtC/F,EAAWxjC,OAAS4pC,EAAWL,QAAQ,GACvCx3C,EAAWi4C,OAAOxG,EAAYoG,GAC9Bt3C,EAAY,SACZy2C,EAAY,SACZa,EAAmB,SACnBlB,EAAe,SACfC,EAAe,SAEjB,SAASJ,GAAYjmD,EAAG4C,GACtB,OAAOpjB,KAAKmoE,KAAKnoE,KAAKC,IAAIugB,EAAE,GAAK4C,EAAE,GAAI,GAAKpjB,KAAKC,IAAIugB,EAAE,GAAK4C,EAAE,GAAI,IAEpE,SAASgjD,GAAuB9C,EAAO8E,EAAcC,GACnD,IAAIhmE,EAAQzB,UAAUjB,OAAS,QAAsBuH,IAAjBtG,UAAU,GAAmBA,UAAU,GAAK,EAC5E6kE,EAAQ7kE,UAAUjB,OAAS,QAAsBuH,IAAjBtG,UAAU,GAAmBA,UAAU,GAAK,EAChF+gE,EAAW1jC,MAAQujC,EACnBG,EAAWzjC,OAASujC,EACpB,IAAI/hC,EAAMiiC,EAAWxjC,WAAW,MAChCuB,EAAIwkC,UAAY,OAChBxkC,EAAI24B,UAAU,EAAG,EAAGsJ,EAAW1jC,MAAO0jC,EAAWzjC,QACjDwB,EAAItB,UAAUklC,GAAQjhE,EAAQm/D,EAAWiE,EAAO,EAAG2C,EAAcC,GAtWnEvG,EAAWJ,GACXI,EAAWH;;AC5sBkC,aAA7C,IAAA2G,EAAApgD,EAAAlc,QAAA,0BAA6C,SAAAmc,EAAAjlB,GAAAklB,GAAAA,mBAAAA,QAAAxH,OAAAA,KAAAA,IAAAA,EAAAwH,IAAAA,QAAAhG,EAAAgG,IAAAA,QAAAD,OAAAA,EAAAA,SAAAjlB,GAAAA,OAAAA,EAAAkf,EAAAxB,IAAA1d,GAAA,SAAAglB,EAAAhlB,EAAA0d,GAAAA,IAAAA,GAAA1d,GAAAA,EAAA2iB,WAAA3iB,OAAAA,EAAAA,GAAAA,OAAAA,GAAAA,iBAAAA,GAAAA,mBAAAA,EAAAX,MAAAA,CAAAA,QAAAW,GAAAkf,IAAAA,EAAA+F,EAAAvH,GAAAwB,GAAAA,GAAAA,EAAAiG,IAAAnlB,GAAAkf,OAAAA,EAAAvX,IAAA3H,GAAAqG,IAAAA,EAAA+e,CAAAA,UAAA9C,MAAAA,EAAA/e,OAAAkE,gBAAAlE,OAAA8hB,yBAAAC,IAAAA,IAAAA,KAAAtlB,EAAAslB,GAAAA,YAAAA,GAAAC,GAAAA,eAAAtlB,KAAAD,EAAAslB,GAAAlkB,CAAAA,IAAAA,EAAAkhB,EAAA/e,OAAA8hB,yBAAArlB,EAAAslB,GAAAlkB,KAAAA,IAAAA,EAAAuG,KAAAvG,EAAAwG,KAAArE,OAAAkE,eAAApB,EAAAif,EAAAlkB,GAAAiF,EAAAif,GAAAtlB,EAAAslB,GAAAjf,OAAAA,EAAAhH,QAAAW,EAAAkf,GAAAA,EAAAtX,IAAA5H,EAAAqG,GAAAA","file":"paddleocr.js","sourceRoot":"..","sourcesContent":["!function(t,e){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define([],e):\"object\"==typeof exports?exports.paddlejs=e():(t.paddlejs=t.paddlejs||{},t.paddlejs.core=e())}(this,(function(){return(()=>{var t={911:(t,e)=>{\"use strict\";var r=function(){if(\"undefined\"!=typeof self)return self;if(\"undefined\"!=typeof window)return window;if(void 0!==r)return r;throw new Error(\"unable to locate global object\")}();t.exports=e=r.fetch,r.fetch&&(e.default=r.fetch.bind(r)),e.Headers=r.Headers,e.Request=r.Request,e.Response=r.Response},994:(t,e,r)=>{\"use strict\";r.r(e),r.d(e,{PaddlejsBackend:()=>yt,Runner:()=>mt,Transformer:()=>k,coreUtils:()=>n,env:()=>p,interfaces:()=>i,registerBackend:()=>_,registerOp:()=>w});var n={};r.r(n),r.d(n,{AddItemToVars:()=>u,delUselessData:()=>c,findVarByKey:()=>o,getGlobalInterface:()=>s,getOrMakeGlobalProperty:()=>a,traverseVars:()=>h});var i={};function s(){var t;if(\"undefined\"!=typeof window)t=window;else if(void 0!==r.g)t=r.g;else{if(\"undefined\"==typeof self)throw new Error(\"Could not find a global object\");t=self}return t}function a(t,e){var r=s();return r[t]||(r[t]=e),r[t]}function o(t,e){return Array.isArray(t)?t.find((function(t){return t.name===e})):t[e]}function u(t,e){var r=Array.isArray(t),n=Array.isArray(e)?e:[e];r?n.forEach((function(e){for(var r=null,n=0;n<t.length;n++)if(t[n].name===e.name){r=n;break}null!==r?t[r]=e:t.push(e)})):n.forEach((function(e){t[e.name]=e}))}function h(t,e){Array.isArray(t)?t.forEach((function(t){e(t)})):Object.keys(t).forEach((function(r){e(t[r])}))}function c(t){if(t.ops=null,t.vars instanceof Array)for(var e=0;e<t.vars.length;e++)t.vars[e].data&&delete t.vars[e].data;else for(var r in t.vars)t.vars[r].data&&delete t.vars[r].data}r.r(i),r.d(i,{BufferType:()=>v,GraphType:()=>y,UniformType:()=>m,WasmMemoryType:()=>g});const p=a(\"env\",new(function(){function t(){this.ENV={}}return t.prototype.set=function(t,e){this.ENV[t]=e},t.prototype.get=function(t){return this.ENV[t]},t}()));var f=function(t,e,r,n){return new(r||(r=Promise))((function(i,s){function a(t){try{u(n.next(t))}catch(t){s(t)}}function o(t){try{u(n.throw(t))}catch(t){s(t)}}function u(t){var e;t.done?i(t.value):(e=t.value,e instanceof r?e:new r((function(t){t(e)}))).then(a,o)}u((n=n.apply(t,e||[])).next())}))},l=function(t,e){var r,n,i,s,a={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return s={next:o(0),throw:o(1),return:o(2)},\"function\"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function o(s){return function(o){return function(s){if(r)throw new TypeError(\"Generator is already executing.\");for(;a;)try{if(r=1,n&&(i=2&s[0]?n.return:s[0]?n.throw||((i=n.return)&&i.call(n),0):n.next)&&!(i=i.call(n,s[1])).done)return i;switch(n=0,i&&(s=[2&s[0],i.value]),s[0]){case 0:case 1:i=s;break;case 4:return a.label++,{value:s[1],done:!1};case 5:a.label++,n=s[1],s=[0];continue;case 7:s=a.ops.pop(),a.trys.pop();continue;default:if(!((i=(i=a.trys).length>0&&i[i.length-1])||6!==s[0]&&2!==s[0])){a=0;continue}if(3===s[0]&&(!i||s[1]>i[0]&&s[1]<i[3])){a.label=s[1];break}if(6===s[0]&&a.label<i[1]){a.label=i[1],i=s;break}if(i&&a.label<i[2]){a.label=i[2],a.ops.push(s);break}i[2]&&a.ops.pop(),a.trys.pop();continue}s=e.call(t,a)}catch(t){s=[6,t],n=0}finally{r=i=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,o])}}};const d=function(){function t(t){this.urlConf={dir:\"\",main:\"\"},this.separateChunk=!0,this.chunkNum=1,this.dataType=\"binary\",this.params={type:\"fetch\"},this.inNode=!1,this.isLocalFile=!1,this.realFetch=function(){throw new Error(\"ERROR: empty fetch funciton\")};var e=t,r=\"model.json\";if(t.endsWith(\".json\")){var n=t.lastIndexOf(\"/\")+1;e=t.substr(0,n),r=t.substr(n)}else\"/\"!==t.charAt(t.length-1)&&(e=t+\"/\");this.isLocalFile=0!==e.indexOf(\"http\"),this.urlConf={dir:this.isLocalFile?\"/\"===e.charAt(0)?\"\"+e:\"/\"+e:e,main:r},this.inNode=\"node\"===p.get(\"platform\")}return t.prototype.load=function(){return f(this,void 0,void 0,(function(){var e;return l(this,(function(r){switch(r.label){case 0:return[4,this.fetchModel()];case 1:return e=r.sent(),this.separateChunk=!!e.chunkNum&&e.chunkNum>0,this.chunkNum=this.separateChunk?e.chunkNum:0,this.separateChunk?\"binary\"!==this.dataType?[3,3]:[4,this.fetchChunks().then((function(r){return t.allocateParamsVar(e.vars,r)}))]:[3,3];case 2:r.sent(),r.label=3;case 3:return[2,e]}}))}))},t.prototype.fetchOneChunk=function(t){return f(this,void 0,void 0,(function(){return l(this,(function(e){switch(e.label){case 0:return p.get(\"fetch\")?[4,p.get(\"fetch\")(t,{type:\"arrayBuffer\"})]:[3,2];case 1:return[2,e.sent()];case 2:return[2,this.fetch(t).then((function(t){return t.arrayBuffer()}))]}}))}))},t.prototype.fetchJson=function(t){return this.fetch(t).then((function(t){return t.json()}))},t.prototype.getFileName=function(t){return\"chunk_\"+t+\".dat\"},t.prototype.fetchChunks=function(){return f(this,void 0,void 0,(function(){var t,e,r;return l(this,(function(n){for(t=this.chunkNum,e=[],r=1;r<=t;r++)e.push(this.fetchOneChunk(this.urlConf.dir+this.getFileName(r)));return[2,Promise.all(e).then((function(t){var e,r=0,n=[];t.forEach((function(t){e=new Float32Array(t),n.push(e),r+=e.length}));var i=new Float32Array(r),s=0;return n.forEach((function(t){t.forEach((function(t){i[s]=t,s+=1}))})),i}))]}))}))},t.allocateParamsVar=function(t,e){var r,n=0,i=Array.isArray(e)?e:Object.values(e);h(t,(function(t){r=t.shape.reduce((function(t,e){return t*e})),t.persistable&&(t.data=i.slice(n,n+r),n+=r)}))},t.prototype.fetch=function(t,e){if(p.get(\"fetch\"))return p.get(\"fetch\")(t,e||{});var n=(e||this.params).method||\"get\",i=new(this.inNode?r(911).Headers:Headers);return this.realFetch=this.inNode?this.isLocalFile?this.fetchLocalFile:r(911):window.fetch.bind(window),this.realFetch(t,{method:n,headers:i})},t.prototype.fetchLocalFile=function(t){var e=r(993);return new Promise((function(r,n){try{r(e.readFileSync(t,\"utf8\"))}catch(t){n(t)}}))},t.prototype.fetchModel=function(){var t=this,e=this.params,r=this.urlConf.dir+this.urlConf.main,n=null;return\"fetch\"===e.type&&(n=new Promise((function(n,i){t.fetch(r,e).then((function(e){return p.get(\"fetch\")?e:t.isLocalFile&&t.inNode?JSON.parse(e):e.json()})).then((function(t){return n(t)})).then((function(t){return i(t)}))}))),n},t}();var v,g,m,y;!function(t){t.FrameBuffer=\"frameBuffer\",t.ColorBuffer=\"colorBuffer\"}(v||(v={})),function(t){t.memory100=\"100\",t.memory200=\"200\",t.memory300=\"300\",t.memory400=\"400\",t.memory500=\"500\",t.memory600=\"600\",t.memory700=\"700\",t.memory800=\"800\",t.memory900=\"900\"}(g||(g={})),function(t){t.uniform1f=\"1f\",t.uniform1fv=\"1fv\",t.uniform1i=\"1i\",t.uniform1iv=\"1iv\",t.uniform2f=\"2f\",t.uniform2fv=\"2fv\",t.uniform2i=\"2i\",t.uniform2iv=\"2iv\",t.uniform3f=\"3f\",t.uniform3fv=\"3fv\",t.uniform3i=\"3i\",t.uniform3iv=\"3iv\",t.uniform4f=\"4f\",t.uniform4fv=\"4fv\",t.uniform4i=\"4i\",t.uniform4iv=\"4iv\"}(m||(m={})),function(t){t.SingleOutput=\"single\",t.MultipleOutput=\"multiple\",t.MultipleInput=\"multipleInput\"}(y||(y={}));var b={opRegistry:{ops:{}},backend:\"\",backendInstance:null};function w(t,e){var r=t.conf,n=t.params,i=t.main,s=t.mainFunc,a=t.textureFuncConf,o=t.commonFuncConf,u=t.behaviors,h=void 0===u?[]:u,c=b.backend+\"_\"+e;b.opRegistry.ops[c]||(b.opRegistry.ops[c]={name:e,conf:r,params:n,main:i,mainFunc:s,textureFuncConf:a,commonFuncConf:o,behaviors:h})}function _(t,e,r){t&&(b.backend=t),e&&(b.backendInstance=e),r&&Object.keys(r).forEach((function(t){w(r[t],t)}))}b=a(\"GLOBALS\",b);var A=s();A.ImageBitmap||(A.ImageBitmap=function(){});const x=function(){function t(t,e){this.id=\"\",this.type=\"\",this.inputs={},this.outputs={},this.attrs={},this.subAttrs=[],this.next=\"\",this.opData=null,this.isPacked=!1,this.bufferType=v.FrameBuffer,this.uniform=null;var r=t.inputs,n=t.outputs,i=t.attrs,s=void 0===i?{}:i,a=t.type,o=t.isPacked,u=void 0!==o&&o,h=t.bufferType,c=void 0===h?v.FrameBuffer:h,p=t.uniform,f=void 0===p?null:p;this.id=a+\"_\"+ +new Date+\"_\"+e,this.inputs=r,this.outputs=n,this.attrs=s,this.subAttrs=t[\"sub-attrs\"]||[],this.uniform=f,this.type=a,this.isPacked=u,this.bufferType=c,this.next=\"\",this.opData=null}return Object.defineProperty(t.prototype,\"inputsName\",{get:function(){var t=this,e=[];return Object.keys(this.inputs).forEach((function(r){e.push(t.inputs[r][0])})),e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"outputsName\",{get:function(){return this.outputs.Output||this.outputs.Out||this.outputs.Y},enumerable:!1,configurable:!0}),t.prototype.execute=function(t){b.backendInstance.runProgram(this.opData,t)},t}(),k=function(t){this.name=t};var O,P=(O=function(t,e){return(O=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])})(t,e)},function(t,e){function r(){this.constructor=t}O(t,e),t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}),T={conv2d:function(t,e){var r=t.attrs.strides,n=t.inputs.Input[0],i=t.inputs.Filter[0];if(\"image\"===n)return!1;var s=o(e,n).shape,a=o(e,i).shape;return!r.find((function(t){return t>1}))&&s[s.length-1-2]%4==0&&4===a.length&&a[0]%4==0&&a[1]%4==0}};function j(t){return{type:\"packed_2_unpacked\",attrs:{},inputs:{Input:[t.inputName]},outputs:{Output:[t.outputName]}}}function M(t){return{type:\"unpacked_2_packed\",attrs:{},inputs:{Input:[t.inputName]},outputs:{Output:[t.outputName]}}}function E(t,e){Object.keys(t.inputs).forEach((function(e){t.inputs[e]=[t.inputs[e]+\"_packed\"]})),Object.keys(t.outputs).forEach((function(e){t.outputs[e]=[t.outputs[e]+\"_packed\"]})),t.type=t.type+\"_packing\",t.id=t.type+\"_\"+ +new Date+\"_\"+e.length,t.isPacked=!0}const F=function(t){function e(){return t.call(this,\"TexturePacking\")||this}return P(e,t),e.prototype.transform=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];if(\"webgl\"===b.backend&&p.get(\"webgl_pack_channel\")){var r=t[0],n=t[1],i=t[2],s=\"depthwise_conv2d\"===r.type?\"conv2d\":r.type,a=T[s];if(a&&a(r,n)){var o=r.inputs,u=r.outputs,h=o.Input[0],c=u.Output?u.Output[0]:u.Out[0],f=M({inputName:h,outputName:h+\"_packed\"}),l=i.length;i.push(new x(f,l)),E(r,i);var d=j({inputName:c+\"_packed\",outputName:c}),v=i.length+1;i.push(new x(d,v))}}},e}(k);var D=function(){var t=function(e,r){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])})(e,r)};return function(e,r){function n(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(n.prototype=r.prototype,new n)}}();const N=function(t){function e(){return t.call(this,\"FormatInputsX\")||this}return D(e,t),e.prototype.transform=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];var r=t[0],n=[\"concat\",\"connect\",\"fc\",\"rnn_origin\",\"rnn_matmul\",\"stack\"];if(n.includes(r.type)){var i=r.inputs;if((\"rnn_origin\"===r.type||\"rnn_matmul\"===r.type)&&i.WeightList.length>0)i.WeightList.forEach((function(t,e){i[\"weightlist_\"+e]=[t]}));else{var s=i.X||i.Input;if(\"wasm\"!==p.get(\"backend\"))s.length>1&&(s.forEach((function(t,e){i[\"origin\"+(e>0?\"_\"+e:\"\")]=[t]})),delete i.X,delete i.Input);else{if(s.length>4)throw Error(\"Not yet supporting concat input tensors more than 4.\");if(s.length>1){var a=s[0],o=s[1],u=s[2],h=s[3];i.X=[a],o&&(i.Y=[o]),u&&(i.Z=[u],r.type+=\"_mul\"),h&&(i.M=[h])}}}}},e}(k);var S=function(){var t=function(e,r){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])})(e,r)};return function(e,r){function n(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(n.prototype=r.prototype,new n)}}(),C=function(){for(var t=0,e=0,r=arguments.length;e<r;e++)t+=arguments[e].length;var n=Array(t),i=0;for(e=0;e<r;e++)for(var s=arguments[e],a=0,o=s.length;a<o;a++,i++)n[i]=s[a];return n};function I(t,e){var r=o(e,t);return r?r.shape:[]}function L(t,e,r,n){for(var i=C(e),s=0,a=0,o=t;a<o.length;a++)s+=I(o[a],n)[r];return i[r]=s,{name:t[t.length-1]+\"_out\",shape:i}}const R=function(t){function e(){return t.call(this,\"splitOp\")||this}return S(e,t),e.prototype.transform=function(){for(var t,e=[],r=0;r<arguments.length;r++)e[r]=arguments[r];for(var n=e[0],i=e[1],s=0,a=n.length;s<a;s++){var o=n[s];if(\"concat\"===o.type&&(null===(t=o.inputs)||void 0===t?void 0:t.X)&&!(o.inputs.X.length<=4)){var h=o.attrs,c=o.inputs,p=o.outputs,f=c.X,l=f.length,d=Math.ceil((l-4)/3)+1,v=p.Out[0],g=I(v,i),m=h.axis||0;m=m>-1?m:g.length+m;for(var y=[],b=[],w=f.slice(0,4),_=void 0,A=0;A<d;A++){var x=0===A?w:f.slice(3*A+1,3*(A+1)+1),k=L(x,g,m,i);0!==A&&x.splice(0,0,_.name),k.shape[m]+=_?_.shape[m]:0;var O={Out:[k.name]};b.push({attrs:h,inputs:{X:x},outputs:O,type:\"concat\"}),y.push(k),_=k}b[d-1].outputs.Out=[v],n.splice.apply(n,C([s,1],b)),u(i,y)}}},e}(k);var W=function(){for(var t=0,e=0,r=arguments.length;e<r;e++)t+=arguments[e].length;var n=Array(t),i=0;for(e=0;e<r;e++)for(var s=arguments[e],a=0,o=s.length;a<o;a++,i++)n[i]=s[a];return n};function H(t){if(t.length<4){for(var e=[],r=0;r<4-t.length;r++)e.push(1);return e.concat(t)}return W(t)}function B(t){return t.reduce((function(t,e){return t+e}))}function G(t,e){var r=t.length;return 4-r+(e>-1?e:r+e)}function z(t,e){for(var r=e[0],n=e[1],i=e[2],s=e[3],a=i*s,o=n*i*s,u=[],h=0;h<r;h++)for(var c=0;c<s;c++)for(var p=0;p<n;p++)for(var f=0;f<i;f++)u.push(t[h*o+p*a+f*s+c]);return new Float32Array(u)}function X(t){for(var e,r=t.data,n=t.shape,i=W(n).reverse(),s=0,a=i.length-1;s<a;s++)e=V(e||r,i[s]);return e}function V(t,e){for(var r=[],n=0,i=t.length;n<i;n+=e)r.push(t.slice(n,n+e));return r}var U=function(){var t=function(e,r){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])})(e,r)};return function(e,r){function n(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(n.prototype=r.prototype,new n)}}(),Y=\"fetch_pack\";const q=function(t){function e(){return t.call(this,\"PackOut\")||this}return U(e,t),e.prototype.transform=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];if(p.get(\"webgl_pack_output\")&&1!==p.get(\"webglVersion\")){var r=t[0],n=t[1],i=r.find((function(t){return\"fetch\"===t.type})),s=i.inputs.X[0],a=o(n,s),h=H(a.shape),c=h[0],f=h[1],l=h[2],d=h[3],v={attrs:{},inputs:{X:[s]},outputs:{Y:[Y]},type:\"pack_out\"},g=f*d,m=Math.ceil(c*l/4),y={name:Y,shape:[1,1,m,g],persistable:!1};i.inputs.X=[Y],i.attrs.origin_shape=[c,f,l,d],r.push(v),u(n,[y])}},e}(k);var J=function(){var t=function(e,r){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])})(e,r)};return function(e,r){function n(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(n.prototype=r.prototype,new n)}}(),K=\"img_pre_processed\",Z=\"img_origin\";const $=function(t){function e(){return t.call(this,\"FeedProcess\")||this}return J(e,t),e.prototype.transform=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];var r=t[0],n=t[1],i=t[2];if(i.webglFeedProcess||p.get(\"webgl_gpu_pipeline\")){var s=i.mean,a=void 0===s?[0,0,0]:s,h=i.std,c=void 0===h?[1,1,1]:h,f=i.scale,l=void 0===f?[1,1]:f,d=i.pos,v=void 0===d?[0,0]:d,g=i.feedShape,y=o(n,\"image\"),b=y.shape,w=b[2],_=b[3];y.shape=[1,1,w,_];var A=Object.assign({},y);A.name=K,A.shape=[1,3,g.fh,g.fw],A.persistable=!1,delete A.data;var x=Object.assign({},y);x.name=Z,x.shape=[1,1,g.fh,g.fw],x.persistable=!1,delete x.data,u(n,[x,A]);var k=r.find((function(t){var e=t.inputs;return Object.keys(e).find((function(t){return\"image\"===e[t][0]}))})),O=k.inputs;Object.keys(O).forEach((function(t){\"image\"===O[t][0]&&(O[t][0]=K)}));var P={attrs:{mean:a,std:c},inputs:{X:[Z]},outputs:{Y:[K]},type:\"feedPost\"},T={attrs:{mean:a,std:c,scale:l,pos:v},inputs:{X:[\"image\"]},outputs:{Y:[Z]},type:\"imgFeed\",uniform:{u_scale:{type:m.uniform2fv,value:[1,1]},u_pos:{type:m.uniform2fv,value:[0,0]},u_keep_ratio:{type:m.uniform1i,value:1}},isPacked:!0};r.splice(1,0,P),r.splice(1,0,T)}},e}(k),Q={preTransforms:[new R,new q,new $],transforms:[new N,new F],postTransforms:[]};var tt,et=function(){for(var t=0,e=0,r=arguments.length;e<r;e++)t+=arguments[e].length;var n=Array(t),i=0;for(e=0;e<r;e++)for(var s=arguments[e],a=0,o=s.length;a<o;a++,i++)n[i]=s[a];return n};function rt(t,e){return t&&t[e]||[]}!function(t){t.PreTransforms=\"preTransforms\",t.Transforms=\"transforms\",t.PostTransforms=\"postTransforms\"}(tt||(tt={}));const nt=function(){function t(t,e){this.weightMap=[],this.ops=[],this.vars=[],this.config={},this.type=y.SingleOutput,this.plugins=null,this.ops=t.ops,this.vars=t.vars,this.type=e.type||this.type,this.plugins=e.plugins,this.config=e,t.feedShape&&(this.config.feedShape=t.feedShape)}return t.prototype.createGraph=function(){return this.preTransforms(),this.createOpsMap(),this.arrangeMap(),this.postTransforms(),this.weightMap},t.prototype.preTransforms=function(){var t=this;et(Q.preTransforms,rt(this.plugins,tt.PreTransforms)).forEach((function(e){e.transform(t.ops,t.vars,t.config)}))},t.prototype.transforms=function(t,e){var r=this;et(Q.transforms,rt(this.plugins,tt.Transforms)).forEach((function(n){n.transform(t,r.vars,e)}))},t.prototype.postTransforms=function(){var t=this;et(Q.postTransforms,rt(this.plugins,tt.PostTransforms)).forEach((function(e){e.transform(t.weightMap,t.vars,t.type)}))},t.prototype.createOpsMap=function(){for(var t=[],e=0;e<this.ops.length;e++){var r=t.length,n=this.ops[e],i=new x(n,r);this.transforms(i,t),t.push(i)}this.weightMap=t},t.prototype.arrangeMap=function(){for(var t={},e=[],r={},n=function(n){for(var s=i.weightMap[n],a=0;a<s.outputsName.length;a++){var o=s.outputsName[a];t[o]=!0}e[n]=0,r[s.id]=n,s.inputsName.length>1?s.inputsName.forEach((function(r){!0===t[r]&&e[n]++})):e[n]=s.inputsName.length},i=this,s=0;s<this.weightMap.length;s++)n(s);this.topoSort(this.weightMap,e,r)},t.prototype.topoSort=function(t,e,r){var n=[];n.push(t[0]);for(var i=t.slice(0),s=null,a=t[0];n.length>0;){null!=s&&(t[r[s.id]].next=a.id),s=a,a=n.pop()||{};for(var o=0;o<a.outputsName.length;o++)for(var u=0;u<i.length;u++)for(var h=0;h<i[u].inputsName.length;h++)if(i[u].inputsName[h]===a.outputsName[o]&&(e[r[i[u].id]]--,0===e[r[i[u].id]])){n.push(t[r[i[u].id]]),i.splice(u,1),u--;break}}},t.prototype.getFeedExecutor=function(){return this.weightMap.find((function(t){return\"feed\"===t.type}))},t.prototype.getFetchExecutor=function(){return this.weightMap.find((function(t){return\"fetch\"===t.type}))},t.prototype.getExecutorById=function(t){return this.weightMap.find((function(e){return e.id===t}))},t}(),it=function(){function t(t){this.opts={},this.isPacked=!1,this.name=\"\",this.tensorId=\"\",this.total=1,this.shape=[],this.unformattedShapeLength=0,this.shape_texture=[],this.exceedMax=!1,this.data=null,this.persistable=!1,this.interpType=\"NEAREST\",this.dataLayout=\"\",this.runtime=0,this.binding=0;var e=t.isPacked,r=void 0!==e&&e,n=t.name,i=t.runtime,s=void 0===i?0:i,a=t.persistable,o=void 0!==a&&a,u=t.type,h=t.dataLayout,c=t.interpType,p=void 0===c?\"NEAREST\":c,f=t.shape,l=t.data,d=t.binding,v=void 0===d?0:d;this.opts=t,this.isPacked=r,this.name=n,this.runtime=s,this.binding=v,this.persistable=o,this.interpType=p,this.tensorId=u,this.dataLayout=h,this.unformattedShapeLength=f.length,this.shape=H(f),this.total=this.shape.reduce((function(t,e){return t*e})),t.noLayout||l&&l.length&&(this.data=function(t,e,r,n){if(\"nhwc\"===e){var i=r[0],s=r[1],a=z(t,[i,r[2],r[3],s*(n?4:1)]);return new Float32Array(a)}return new Float32Array(t)}(l,this.dataLayout,this.shape,this.isPacked),t.data=null)}return Object.defineProperty(t.prototype,\"width_texture\",{get:function(){var t=this.shape_texture.length;return this.shape_texture[t-1]||1},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"height_texture\",{get:function(){var t=this.shape_texture.length;return this.shape_texture[t-2]||1},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"width_shape\",{get:function(){var t=this.shape.length;return this.shape[t-1]},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"height_shape\",{get:function(){var t=this.shape.length;return this.shape[t-2]},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"channel\",{get:function(){var t=this.shape.length;return this.shape[t-3]},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"length_shape\",{get:function(){return this.shape.length||0},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"length_unformatted_shape\",{get:function(){return this.unformattedShapeLength||0},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"total_shape\",{get:function(){return this.total},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"numbers_shape\",{get:function(){for(var t=[],e=this.shape.length,r=0;r<e-1;r++){var n=this.shape.slice(r+1).reduce((function(t,e){return t*e}));t.push(n)}return t.push(1),t},enumerable:!1,configurable:!0}),t}(),st={adaptPaddings:function(){for(var t in this.processedAttrs)if(Object.prototype.hasOwnProperty.call(this.processedAttrs,t)&&\"paddings\"===t){var e=this.processedAttrs[t],r=e[0],n=e[1];return void(0===r&&1===n&&(this.processedAttrs[t][1]=0))}},setAdaptive:function(){this.processedAttrs.adaptive&&2===this.processedAttrs.ksize.length&&1===this.processedAttrs.ksize[0]&&1===this.processedAttrs.ksize[1]&&(this.processedAttrs.adaptive=!1,this.processedAttrs.global_pooling=!0)},isGlobalPooling:function(){var t,e=this.tensorDataMap.origin,r=(null===(t=null==e?void 0:e.shape)||void 0===t?void 0:t.length)||0;r>2&&this.processedAttrs.global_pooling&&(this.processedAttrs.ksize=[e.shape[r-2],e.shape[r-1]])},setPacked:function(){var t=this.processedAttrs.ispacked;this.tensorDataMap.origin&&t&&this.name.indexOf(\"pool\")>-1&&(this.name+=\"_winograd\")},mergeAttrs:function(){this.processedAttrs=this.subAttrs.reduce((function(t,e){return Object.assign(t,e)}),{})},isApplySeparableConv:function(){if(!this.isPackedOp){var t=this.processedAttrs.groups,e=this.tensorDataMap.filter;if(\"depthwise_conv2d\"===this.name&&(this.name=\"conv2d\"),e){var r=e.shape,n=r[0],i=r[1];n===t&&1===i&&(this.name+=\"_depthwise\")}}},batchComputeConv2d:function(){var t=this.tensorDataMap.filter.shape[1];this.processedAttrs.filter_nearest_vec4=4*Math.floor(t/4),this.processedAttrs.filter_remainder_vec4=t%4},processBias:function(){var t=this.tensorDataMap.bias;if(t&&this.isPackedOp){t.packed=!0;var e=t.shape,r=[e[e.length-1]/4,1,1];t.shape=r}},isAdaptiveAvg:function(){var t=this.processedAttrs,e=t.adaptive,r=t.pooling_type;e&&\"avg\"===r&&(this.name+=\"_avg_adaptive\")},isMax:function(){var t=\"max\"===this.processedAttrs.pooling_type?1:0;this.processedAttrs.pooling_type=t,1===t&&(this.name+=\"_max\")},transToPrelu:function(){this.processedAttrs.multi_value=\"0.0\",this.processedAttrs.active_function=\"prelu\"},transToRelu6:function(){this.processedAttrs.multi_value=this.processedAttrs.threshold,this.processedAttrs.active_function=\"relu6\"},transToHardSigmoid:function(){this.processedAttrs.multi_value=this.processedAttrs.slope||.2,this.processedAttrs.bias_value=this.processedAttrs.offset||.5,this.processedAttrs.active_function=\"hardSigmoid\"},transToLeakyrelu:function(){this.processedAttrs.multi_value=this.processedAttrs.alpha,this.processedAttrs.active_function=\"leakyRelu\",this.name=\"relu\"},transToPow:function(){this.processedAttrs.multi_value=this.processedAttrs.factor||2,this.processedAttrs.active_function=\"pow_func\",this.name=\"pow\"},transToSigmoid:function(){this.processedAttrs.active_function=\"sigmoid\"},transToSqrt:function(){this.processedAttrs.active_function=\"sqrt\"},transToTanh:function(){this.processedAttrs.active_function=\"tanh_func\"},transToExp:function(){this.processedAttrs.active_function=\"exp\"},transToScale:function(){var t=this.processedAttrs.scale;this.processedAttrs.multi_value=void 0!==t?t:1,this.processedAttrs.bias_value=this.processedAttrs.bias||0;var e=this.processedAttrs.bias_after_scale;this.processedAttrs.active_function=e||void 0===e?\"scale\":\"scaleWidthBias\"},setActiveFunc:function(){var t=this.name.replace(\"conv2d-elementwise_add-\",\"\");this.processedAttrs=Object.assign({active_function:\"scale\",multi_value:\"1.0\",bias_value:\"0.0\",fuse_relu:!1},this.processedAttrs),\"leaky_relu\"===t&&(this.processedAttrs.multi_value=this.processedAttrs.alpha,this.processedAttrs.active_function=\"leakyRelu\")},normalizePerm:function(){var t=this.tensorDataMap.origin.shape.length,e=this.processedAttrs.axis,r=e.length;if(r-t>0&&(r=(e=e.map((function(t){return t-1})).filter((function(t){return t>=0}))).length),r>4)throw Error(\"op transpoes2 axis length exceeds maximum length 4, get \"+r);for(var n=new Array(r).fill(0),i=0;i<r;i++)n[e[i]]=i;var s=[];for(i=0;i<4;i++)s[i]=n[i]||0;this.processedAttrs.perm_arr=s,this.processedAttrs.perm_size=r},normalizeDim:function(){for(var t=this.tensorDataMap.origin.shape,e=H(t),r=G(t,this.processedAttrs.axis),n=[],i=0;i<e[r];i++)n[i]=i;if(this.processedAttrs.target_length=n.length,this.processedAttrs.target_value=n,this.processedAttrs.inputs_dim=e[r],this.processedAttrs.dim=r,0===this.processedAttrs.num&&(this.processedAttrs.num=Object.values(this.tensorDataMap).filter((function(t){return\"out\"===t.tensorName})).length||1),\"wasm\"===p.get(\"backend\")){this.processedAttrs.fourInputs=!1;var s=this.tensorDataMap.counter;if(s){var a=H(s.shape);this.processedAttrs.counter_num=a[r]}var o=this.tensorDataMap.appender;if(o){var u=H(o.shape);this.processedAttrs.append_num=u[r]}var h=this.tensorDataMap.fourth;if(h){this.processedAttrs.fourInputs=!0;var c=H(h.shape);this.processedAttrs.fourth_num=c[r]}}},processElementwiseAxis:function(){var t=this.tensorDataMap.origin.shape,e=this.tensorDataMap.counter.shape,r=void 0===this.processedAttrs.axis?-1:this.processedAttrs.axis;this.processedAttrs.counterLen=e.length,B(t)===B(e)?(this.processedAttrs.axis=0,this.processedAttrs.counterLen=4):(-1===r&&(r=t.length-e.length),this.processedAttrs.axis=G(t,r))},genElementwiseCounterPos:function(){for(var t=this.processedAttrs,e=t.counterLen,r=[\"0\",\"0\",\"0\",\"0\"],n=t.axis,i=4-e;i<4;i++)r[i]=\"oPos[\"+n+++\"]\";this.processedAttrs.counterPos=r.join(\",\")},flattenShape:function(){var t=Object.values(this.tensorDataMap).find((function(t){return t.shape.length>2}));if(t){var e=H(t.shape);t.shape=[e[0]*e[2],e[1]*e[3]]}},reshape:function(){var t=this.tensorDataMap.origin,e=this.tensorDataMap.counter,r=this.tensorDataMap.out;if(e.shape.length>t.shape.length){var n=e;e=t,t=n}if(t.shape.length>2&&2===e.shape.length){var i=function(t,e){void 0===t&&(t=[]),void 0===e&&(e=[]);var r=t.reduce((function(t,e){return t*e}));return 1===e.length?[1,r]:[e[0],r/e[0]]}(t.shape,r.shape);t.shape=i}},checkIsMerge:function(){var t=this.name.replace(\"conv2d-elementwise_add-\",\"\");this.name=\"conv2d_elementwise_add\",\"leaky_relu\"===t&&(this.processedAttrs.alpha&&(this.processedAttrs.multi_value=this.processedAttrs.alpha),this.processedAttrs.active_function=\"leakyRelu\")}};var at=function(){return(at=Object.assign||function(t){for(var e,r=1,n=arguments.length;r<n;r++)for(var i in e=arguments[r])Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t}).apply(this,arguments)};const ot=function(){function t(t,e,r,n,i){this.name=\"\",this.isPackedOp=!1,this.processedAttrs={},this.subAttrs=[],this.uniform=null,this.inputTensors=[],this.outputTensors=[],this.dataLayout=\"\",this.iLayer=0,this.program=[],this.isFinalOp=!1,this.bufferType=v.FrameBuffer,this.tensorDataMap={},this.tensorData=[];var s=t.type,a=t.inputs,o=t.outputs,u=t.attrs,h=t.isPacked,c=t.bufferType,p=void 0===c?v.FrameBuffer:c,f=t.uniform,l=void 0===f?null:f;this.modelName=i,this.subAttrs=t.subAttrs,this.name=s,this.isPackedOp=h,this.bufferType=p,this.dataLayout=r.dataLayout||\"\",this.iLayer=e,this.isFinalOp=n,this.uniform=l,this.initExtendedAttrs(u),this.constructTensorData(a,o,r.vars),this.buildTensor();var d=this.buildShaderParams();this.buildProgram(d)}return t.prototype.initExtendedAttrs=function(t){for(var e in t)if(Object.prototype.hasOwnProperty.call(t,e)){var r=t[e];this.processedAttrs[e]=r}},t.prototype.constructTensorData=function(t,e,r){var n=this;Object.keys(e).forEach((function(t){e[t].forEach((function(i,s){e[t][s]=n.getTensorVar(i,r)}))})),Object.keys(t).forEach((function(e){t[e]=[n.getTensorVar(t[e][0],r)]}));var i=function(t){if(Object.prototype.hasOwnProperty.call(e,t))try{var r=e[t]||[{}],i=s.getExactTensorName(t,\"output\");i&&r.forEach((function(t,e){t.tensorName=i,n.tensorDataMap[i+\"_\"+e]=at(at({},t),{tensorName:i,runtime:e})}))}catch(t){console.error(t)}},s=this;for(var a in e)i(a);for(var a in t)if(Object.prototype.hasOwnProperty.call(t,a)){var o=t[a].length>0?t[a]:[{}],u=this.getExactTensorName(a,\"input\");if(u){var h=o[0];h.tensorName=u,this.tensorDataMap[u]=at(at({},h),{tensorName:u})}}},t.prototype.getExactTensorName=function(t,e){return\"input\"===e?{input:\"origin\",x:\"origin\",y:\"counter\",w:\"weight\"}[t.toLowerCase()]||t.toLowerCase():{output:\"out\",y:\"out\",out:\"out\",scale:\"scale\",bias:\"bias\",mean:\"mean\",variance:\"variance\",mask:\"out\",boxes:\"out\",variances:\"out\"}[t.toLowerCase()]},t.prototype.getTensorVar=function(t,e){var r=o(e,t.replace(/_packed$/,\"\"));return r&&t.endsWith(\"_packed\")?function(t,e){var r=3===t.shape.length?W([1],t.shape):t.shape,n=r[0],i=r[1],s=r[2],a=r[3],o=Object.assign({},t);if(o.name=e,o.packed=!1,i%4==0){var u=i/4;o.packed=!0,o.shape=[n,u,s,a]}return o}(r,t):r},t.prototype.buildProgram=function(t){var e=this,r=this.name,n=b.backend+\"_\"+r,i=b.opRegistry.ops[n];try{if(!i&&\"wasm\"!==p.get(\"backend\"))throw new Error(\"[unregistered op] \"+r);var s=this.inputTensors;this.program=this.outputTensors.map((function(r,n){return b.backendInstance.createProgram({op:i,outTensor:r,inputTensors:s,shaderParams:t[n],runtime:n,isFinalOp:e.isFinalOp})}))}catch(t){console.error(t)}},t.prototype.processTensorDataAndAttrs=function(){var t=this;try{this.name.indexOf(\"conv2d-elementwise_add\")>-1?this.name=\"conv2d_elementwise_add\":this.name.indexOf(\"max_pool2d_with_index\")>-1&&(this.name=\"pool2d_max\");var e=b.backend+\"_\"+this.name;(b.opRegistry.ops[e]&&b.opRegistry.ops[e].behaviors||[]).forEach((function(e){try{st[e].call(t)}catch(t){console.error(t)}}))}catch(t){console.error(t)}},t.prototype.buildTensor=function(){var t=this;this.processTensorDataAndAttrs();var e=Object.values(this.tensorDataMap);e.forEach((function(e,r){var n,i=e.tensorName,s=new it({type:t.modelName+\"_\"+e.name,name:i,shape:e.shape,data:e.data||null,persistable:e.persistable||!1,interpType:e.interpType||\"NEAREST\",isPacked:t.isPackedOp||e.packed||!1,binding:r,noLayout:null===(n=b.backendInstance)||void 0===n?void 0:n.noLayout,dataLayout:t.dataLayout,runtime:e.runtime||0});\"out\"===i?t.outputTensors.push(s):t.inputTensors.push(s),e.shape=s.shape,e.total=s.total})),this.tensorDataMap=null,this.tensorData=e},t.prototype.buildShaderParams=function(){var t=this,e=[];return this.outputTensors.forEach((function(){var r=JSON.parse(JSON.stringify(t.processedAttrs));e.push(r)})),e},t}();var ut=function(){return(ut=Object.assign||function(t){for(var e,r=1,n=arguments.length;r<n;r++)for(var i in e=arguments[r])Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t}).apply(this,arguments)};const ht=function(){function t(){this.targetContext={},this.gapFillWith=\"#fff\",this.mean=[0,0,0],this.std=[1,1,1],this.bgr=!1,this.pixelWidth=1,this.pixelHeight=1,this.inputFeed=[],this.targetCanvas=p.get(\"canvas2d\")||document.createElement(\"canvas\"),this.targetContext=this.targetCanvas.getContext(\"2d\")}return t.prototype.process=function(t,e,r){var n=e.fill,i=e.mean,s=e.std,a=e.bgr,o=e.keepRatio,u=void 0===o||o,h=e.scale,c=void 0===h?0:h,p=r.fc,f=void 0===p?3:p,l=r.fh,d=r.fw,v=t,g={gapFillWith:n||this.gapFillWith,mean:i||this.mean,std:s||this.std,bgr:a||this.bgr,keepRatio:u,scale:c,targetSize:{width:d,height:l},targetShape:[1,f,l,d]};return this.fromPixels(v,g)||[]},t.prototype.fromPixels=function(t,e){var r=[],n={gapFillWith:e.gapFillWith,dx:0,dy:0,dWidth:e.targetSize.width,dHeight:e.targetSize.height},i=t,s=t.path&&t.width&&t.height;if(!s&&!(t instanceof ImageBitmap||t instanceof HTMLVideoElement||t instanceof HTMLImageElement||t instanceof HTMLCanvasElement))return[{data:r,shape:e.shape||e.targetShape,name:\"image\",persistable:!0}];this.pixelWidth=t.naturalWidth||t.width,this.pixelHeight=t.naturalHeight||t.height;var a=p.get(\"webgl_gpu_pipeline\")||e.webglFeedProcess;return this.fitToTargetSize(s?i.path:i,n,ut(ut({},e),{inGPU:a})),r=this.getImageData(n),a?[{data:r=Float32Array.from(r.data),shape:[1,1,n.dHeight,n.dWidth],name:\"image\",persistable:!0}]:[{data:r=this.allReshapeToRGB(r,e),shape:e.targetShape||e.shape,name:\"image\",persistable:!0}]},t.prototype.allReshapeToRGB=function(t,e){for(var r=e.mean,n=e.std,i=e.targetShape,s=e.bgr,a=e.normalizeType,o=void 0===a?0:a,u=i[1],h=i[2],c=i[3],p=t.data||t,f=new Float32Array(h*c*u),l=0,d=0;d<h;++d)for(var v=d*c,g=0;g<c;++g)for(var m=v+g,y=0;y<u;++y){var b=s?4*m+(2-y):4*m+y;f[l]=0===o?p[b]/255:(p[b]-128)/128,f[l]-=r[y],f[l]/=n[y],l++}return z(f,[1,h,c,u])},t.prototype.fitToTargetSize=function(t,e,r){var n=r||{},i=n.keepRatio,s=void 0===i||i,a=n.inGPU,o=void 0!==a&&a,u=n.scale,h=void 0===u?0:u,c=e.dWidth,p=e.dHeight,f=o?this.pixelWidth:c,l=o?this.pixelHeight:p,d=o?this.pixelWidth:c,v=o?this.pixelHeight:p,g=0,m=0;if(h){if(d-c<0||v-p<0)throw new Error(\"scale size smaller than target size\");this.pixelWidth>this.pixelHeight?(v=h,d=Math.round(v*this.pixelWidth/this.pixelHeight)):(d=h,v=Math.round(d*this.pixelHeight/this.pixelWidth)),this.targetCanvas.width=f=d,this.targetCanvas.height=l=v,e.dx=(d-c)/2,e.dy=(v-p)/2}else s&&(c/p*this.pixelHeight/this.pixelWidth>=1?o?(f=Math.round(v*c/p),g=Math.floor((f-d)/2)):(d=Math.round(v*this.pixelWidth/this.pixelHeight),g=Math.floor((c-d)/2)):o?(l=Math.round(d*p/c),m=Math.floor((l-v)/2)):(v=Math.round(d*this.pixelHeight/this.pixelWidth),m=Math.floor((p-v)/2))),this.targetCanvas.width=e.dWidth=f,this.targetCanvas.height=e.dHeight=l;this.targetContext.fillStyle=e.gapFillWith,this.targetContext.fillRect(0,0,this.targetCanvas.width,this.targetCanvas.height),this.targetContext.drawImage(t,g,m,d,v)},t.prototype.getImageData=function(t){var e=t.dx,r=t.dy,n=t.dWidth,i=t.dHeight;return this.targetContext.getImageData(e,r,n,i)},t.prototype.cover=function(t,e,r,n){var i=r,s=n;return r/n*e/t>=1?i=Math.round(s*t/e):s=Math.round(i*e/t),[i/r,s/n]},t}();var ct=function(){return(ct=Object.assign||function(t){for(var e,r=1,n=arguments.length;r<n;r++)for(var i in e=arguments[r])Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t}).apply(this,arguments)};function pt(t,e,r){for(var n=[],i=0,s=t.length;i<s;i++){var a=t[i];a>e&&n.push({score:a,i})}return n.sort((function(t,e){return e.score-t.score})).slice(0,r)}function ft(t){var e=t[0],r=t[1],n=t[2],i=t[3];return n<e||i<r?0:(n-e)*(i-r)}function lt(t,e){if(e[0]>t[2]||e[2]<t[0]||e[1]>t[3]||e[3]<t[1])return 0;var r=ft(t),n=ft(e),i=function(t,e){var r=t[0],n=t[1],i=t[2],s=t[3],a=e[0],o=e[1],u=e[2],h=e[3],c=Math.max(r,a),p=Math.max(n,o);return(Math.min(i,u)-c)*(Math.min(s,h)-p)}(t,e);return i/(r+n-i)}const dt={multiclass_nms:function(t,e){var r=t[0],n=void 0===r?[]:r,i=t[1],s=void 0===i?[]:i,a=X(n),o=X(s);if(!a||!o)return[];if(a=a[0],o=o[0],!(a&&a.length&&o&&o.length))return[];for(var u=e.nms_top_k,h=void 0===u?100:u,c=e.nms_eta,p=void 0===c?1:c,f=e.keep_top_k,l=void 0===f?100:f,d=e.background_label,v=void 0===d?0:d,g=e.nms_threshold,m=void 0===g?.3:g,y=e.score_threshold,b=void 0===y?0:y,w=[],_=0,A=o.length;_<A;_++){var x=[];if(_!==v){var k=pt(o[_],b,h);if(k&&k.length){var O=k.shift(),P=a[O.i];for(x.push(ct(ct({},O),{box:P,label:_}));k.length;){var T=k.shift();P=a[T.i];for(var j=!0,M=0,E=x;M<E.length;M++)if(lt(P,E[M].box)>m){j=!1;break}j&&x.push(ct(ct({},T),{box:P,label:_})),j&&p<1&&m>.5&&(m*=p)}w=w.concat(x)}}}var F=w.sort((function(t,e){return e.score-t.score})).slice(0,l).sort((function(t,e){return t.label-e.label})).map((function(t){return function(){for(var t=0,e=0,r=arguments.length;e<r;e++)t+=arguments[e].length;var n=Array(t),i=0;for(e=0;e<r;e++)for(var s=arguments[e],a=0,o=s.length;a<o;a++,i++)n[i]=s[a];return n}([t.label,t.score],t.box)}));return F&&F.length?F:[]}};var vt=function(t,e,r,n){return new(r||(r=Promise))((function(i,s){function a(t){try{u(n.next(t))}catch(t){s(t)}}function o(t){try{u(n.throw(t))}catch(t){s(t)}}function u(t){var e;t.done?i(t.value):(e=t.value,e instanceof r?e:new r((function(t){t(e)}))).then(a,o)}u((n=n.apply(t,e||[])).next())}))},gt=function(t,e){var r,n,i,s,a={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return s={next:o(0),throw:o(1),return:o(2)},\"function\"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function o(s){return function(o){return function(s){if(r)throw new TypeError(\"Generator is already executing.\");for(;a;)try{if(r=1,n&&(i=2&s[0]?n.return:s[0]?n.throw||((i=n.return)&&i.call(n),0):n.next)&&!(i=i.call(n,s[1])).done)return i;switch(n=0,i&&(s=[2&s[0],i.value]),s[0]){case 0:case 1:i=s;break;case 4:return a.label++,{value:s[1],done:!1};case 5:a.label++,n=s[1],s=[0];continue;case 7:s=a.ops.pop(),a.trys.pop();continue;default:if(!((i=(i=a.trys).length>0&&i[i.length-1])||6!==s[0]&&2!==s[0])){a=0;continue}if(3===s[0]&&(!i||s[1]>i[0]&&s[1]<i[3])){a.label=s[1];break}if(6===s[0]&&a.label<i[1]){a.label=i[1],i=s;break}if(i&&a.label<i[2]){a.label=i[2],a.ops.push(s);break}i[2]&&a.ops.pop(),a.trys.pop();continue}s=e.call(t,a)}catch(t){s=[6,t],n=0}finally{r=i=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,o])}}};const mt=function(){function t(t){this.runnerConfig={},this.isPaused=!1,this.model={},this.weightMap=[],this.isExecuted=!1,this.test=!1,this.graphGenerator={},this.mediaProcessor=null,this.needPreheat=!0,this.feedShape={},this.runnerConfig=Object.assign({},t),this.needPreheat=void 0===t.needPreheat||t.needPreheat,this.modelName=t.modelName||Date.now().toString(),this.weightMap=[],p.set(\"ns\",s()),\"node\"!==p.get(\"platform\")&&(this.mediaProcessor=new ht)}return t.prototype.init=function(){return vt(this,void 0,void 0,(function(){var t;return gt(this,(function(e){switch(e.label){case 0:return b.backendInstance?(this.isExecuted=!1,\"wasm\"!==p.get(\"backend\")?[3,2]:[4,Promise.all([this.load(),b.backendInstance.init()])]):(console.error(\"ERROR: Haven't register backend\"),[2]);case 1:return e.sent(),[3,5];case 2:return[4,b.backendInstance.init()];case 3:return e.sent(),[4,this.load()];case 4:e.sent(),e.label=5;case 5:return this.genFeedData(),this.genGraph(),this.genOpData(),\"wasm\"!==p.get(\"backend\")?[3,7]:(this.model=Object.assign(this.model,this.runnerConfig),t=this.model,[4,b.backendInstance.initWasm(this.model,this.weightMap)]);case 6:return t.index=e.sent(),[2,[]];case 7:return this.needPreheat?[4,this.preheat()]:[3,9];case 8:return[2,e.sent()];case 9:return[2]}}))}))},t.prototype.load=function(){return vt(this,void 0,void 0,(function(){var t,e,r,n,i,s,a,o;return gt(this,(function(u){switch(u.label){case 0:return t=this.runnerConfig,e=t.modelPath,r=t.modelObj,n=void 0===r?null:r,e?(i=new d(e),s=this,[4,i.load()]):[3,2];case 1:return s.model=u.sent(),[3,3];case 2:(null==n?void 0:n.model)&&(null==n?void 0:n.params)&&(a=n.model,o=n.params,d.allocateParamsVar(a.vars,o),this.model=a),u.label=3;case 3:return[2]}}))}))},t.prototype.genGraph=function(){this.graphGenerator=new nt(this.model,this.runnerConfig),this.weightMap=this.graphGenerator.createGraph()},t.prototype.genOpData=function(){var t=this,e=0;this.weightMap.forEach((function(r,n){var i=r.type;if(\"feed\"!==i&&\"fetch\"!==i){e++;var s=n===t.weightMap.length-2,a=new ot(r,e,t.model,s,t.modelName);r.opData=a}})),c(this.model)},t.prototype.preheat=function(){return vt(this,void 0,void 0,(function(){var t;return gt(this,(function(e){switch(e.label){case 0:return[4,this.checkModelLoaded()];case 1:return e.sent(),[4,this.execute()];case 2:return t=e.sent(),this.isExecuted=!0,[2,t]}}))}))},t.prototype.checkModelLoaded=function(){return vt(this,void 0,void 0,(function(){return gt(this,(function(t){switch(t.label){case 0:return 0!==this.weightMap.length?[3,2]:(console.info(\"It's better to preheat the model before running.\"),[4,this.load()]);case 1:t.sent(),this.genFeedData(),this.genGraph(),this.genOpData(),this.isExecuted=!1,t.label=2;case 2:return[2]}}))}))},t.prototype.predict=function(t,e){return vt(this,void 0,void 0,(function(){var r,n,i;return gt(this,(function(s){switch(s.label){case 0:return this.isPaused||!this.mediaProcessor?[2]:(r=[],r=this.runnerConfig.webglFeedProcess?[t]:this.mediaProcessor.process(t,this.runnerConfig,this.feedShape),n=[],\"wasm\"!==p.get(\"backend\")?[3,3]:[4,b.backendInstance.predict(r[0].data,this.model.index)]);case 1:return s.sent(),[4,this.read()];case 2:return i=s.sent(),n=this.postProcess(i),[3,5];case 3:return this.updateFeedData(r),[4,this.execute()];case 4:n=s.sent(),s.label=5;case 5:return this.isExecuted=!0,[2,e?e(n):n]}}))}))},t.prototype.predictWithFeed=function(t,e,r){var n;return vt(this,void 0,void 0,(function(){var i,s,a,o,u,h,c,f,l,d,v,g;return gt(this,(function(m){switch(m.label){case 0:return i=this.feedShape,s=i.fc,a=void 0===s?3:s,o=i.fw,u=i.fh,Array.isArray(t)?(null===(n=t[0])||void 0===n?void 0:n.data)?((d=t[0].data)instanceof Float32Array||(t[0].data=new Float32Array(d)),h=t):h=[{data:new Float32Array(t),shape:r||[1,a,u,o],name:\"image\",persistable:!0}]:(f=(c=t).width,l=c.height,d=c.data,h=[{data:new Float32Array(d),shape:r||[1,a,l||u,f||o],name:\"image\",persistable:!0}]),v=[],\"wasm\"!==p.get(\"backend\")?[3,3]:[4,b.backendInstance.predict(h[0].data,this.model.index)];case 1:return m.sent(),[4,this.read()];case 2:return g=m.sent(),v=this.postProcess(g),[3,5];case 3:return this.updateFeedData(h),[4,this.execute()];case 4:v=m.sent(),m.label=5;case 5:return this.isExecuted=!0,[2,e?e(v):v]}}))}))},t.prototype.genFeedData=function(){var t,e=this.runnerConfig,r=e.type,n=e.feedShape,i=e.webglFeedProcess;this.feedShape=this.model.feedShape||n;var s,a=this.feedShape,h=a.fc,c=void 0===h?3:h,f=a.fh,l=a.fw,d=this.model.vars;if(r===y.MultipleInput){var v=this.model.ops&&this.model.ops[0]&&(null===(t=this.model.ops[0].inputs)||void 0===t?void 0:t.X);v.length>1&&(s=v.map((function(t){var e=o(d,t),r=e.shape.reverse(),n=r[0],i=r[1],s=r[2],a=r[3],u=void 0===a?1:a;return e.data=new Float32Array(u*s*i*n),e})))}else{var g=\"wasm\"!==p.get(\"backend\")&&i?4:c;s=o(d,\"image\");var m={name:\"image\",shape:[1,g,f,l]};s=Object.assign(m,s,{data:new Float32Array(g*f*l).fill(1),persistable:!0})}u(d,s)},t.prototype.updateFeedData=function(t){var e=t[0],r=this.weightMap.find((function(t){return t.opData?t.opData.inputTensors.find((function(t){return t.tensorId.endsWith(\"_image\")})):null})),n=r.opData.inputTensors.find((function(t){return t.tensorId.endsWith(\"_image\")}));n.data=e.data;var i=this.runnerConfig,s=i.webglFeedProcess,a=void 0!==s&&s,o=i.keepRatio,u=void 0===o||o;if(a||p.get(\"webgl_gpu_pipeline\")){var h=e.shape||[1,1,e.height,e.width],c=new Uint8Array(e.data||[]);if(e.width&&e.height&&!e.data){var f=e.naturalWidth||e.width;h=[1,1,e.naturalHeight||e.height,f],c=e}var l=n.opts;l.shape=h;var d=r.opData,v=new it(l);v.data=c,d.inputTensors=[v];var g=h.slice(-2),m=g[0],y=g[1],b=d.outputTensors[0].shape.slice(-2),w=b[0],_=b[1],A=this.mediaProcessor.cover(y,m,_,w);r.uniform.u_scale.value=A,r.uniform.u_keep_ratio.value=+u}},t.prototype.execute=function(){return vt(this,void 0,void 0,(function(){var t,e;return gt(this,(function(r){switch(r.label){case 0:return t=this.graphGenerator.getFeedExecutor(),this.executeOp(t),[4,this.read()];case 1:return e=r.sent(),[2,this.postProcess(e)]}}))}))},t.prototype.postProcess=function(t){var e=\"wasm\"===p.get(\"backend\");if(p.get(\"debug\"))return t;var r=t,n=this.model,i=n.multiOutputs,s=n.postOps;if(i)if(e)r=i.map((function(e,r){var n;return(n={})[e.name]=t[r],n}));else{var a=0;r=i.map((function(e){var r,n=e.shape.reduce((function(t,e){return t*e})),i=t.slice(a,n+a);return a+=n,(r={})[e.name]=i,r}))}if(i&&s&&s.length)for(var o=function(t,e){var n=s[t],i=n.type,a=n.attrs,o=n.inputs,u=dt[i];if(!u)return{value:void 0};var h=function(){for(var t=0,e=0,r=arguments.length;e<r;e++)t+=arguments[e].length;var n=Array(t),i=0;for(e=0;e<r;e++)for(var s=arguments[e],a=0,o=s.length;a<o;a++,i++)n[i]=s[a];return n}(r),c=Object.keys(o).map((function(t){var e=o[t],r=e.name,n=e.shape,i=h.filter((function(t){return t[r]}));return i&&i[0]&&i[0][r]?{name:t,tensorId:r,data:i[0][r],shape:n}:(console.error(\"未获取到\"+r+\"的数据\"),null)}));r=u(c,a)},u=0,h=s.length;u<h;u++){var c=o(u);if(\"object\"==typeof c)return c.value}return r},t.prototype.executeOp=function(t){var e;if(\"fetch\"!==t.type)if(\"feed\"!==t.type&&t.execute(this.isExecuted),p.get(\"debug\")&&(null===(e=t.opData)||void 0===e?void 0:e.outputTensors)&&t.opData.outputTensors[t.opData.outputTensors.length-1]&&t.opData.outputTensors[t.opData.outputTensors.length-1].tensorId===this.modelName+\"_\"+(p.get(\"ns\").layerName||p.get(\"layerName\")))console.info(t.opData.name+\"_\"+t.opData.iLayer,\"runner op\");else if(t.next){var r=t.next,n=this.graphGenerator.getExecutorById(r);this.executeOp(n)}},t.prototype.read=function(){return vt(this,void 0,void 0,(function(){var t,e,r;return gt(this,(function(n){switch(n.label){case 0:return t=this.graphGenerator.getFetchExecutor(),e=o(this.model.vars,t.inputs.X[0]),r={name:e.name,shape:t.attrs.origin_shape||e.shape,index:this.model.index},[4,b.backendInstance.read(r)];case 1:return[2,n.sent()]}}))}))},t.prototype.stopPredict=function(){this.isPaused=!0},t}(),yt=function(){}},993:()=>{}},e={};function r(n){if(e[n])return e[n].exports;var i=e[n]={exports:{}};return t[n](i,i.exports,r),i.exports}return r.d=(t,e)=>{for(var n in e)r.o(e,n)&&!r.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},r.g=function(){if(\"object\"==typeof globalThis)return globalThis;try{return this||new Function(\"return this\")()}catch(t){if(\"object\"==typeof window)return window}}(),r.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r.r=t=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},r(994)})()}));","!function(n,e){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define([],e):\"object\"==typeof exports?exports.paddlejs=e():(n.paddlejs=n.paddlejs||{},n.paddlejs.webglBackend=e())}(this,(function(){return(()=>{\"use strict\";var n={400:(n,e,o)=>{o.r(e),o.d(e,{GLHelper:()=>F,glInstance:()=>En,ops:()=>yn,webgl_types:()=>t});var t={};o.r(t),o.d(t,{UniformType:()=>c});var r={};o.r(r),o.d(r,{exp_func:()=>j,hardSigmoid:()=>B,leakyRelu:()=>S,pow_func:()=>D,prelu:()=>C,relu6:()=>R,scale:()=>I,scaleWidthBias:()=>L,sigmoid:()=>k,sqrt:()=>M,tanh_func:()=>U,transferFromNHWCtoNCHW:()=>O});var i={};function s(){var n;if(\"undefined\"!=typeof window)n=window;else if(void 0!==o.g)n=o.g;else{if(\"undefined\"==typeof self)throw new Error(\"Could not find a global object\");n=self}return n}function a(n,e){var o=s();return o[n]||(o[n]=e),o[n]}o.r(i),o.d(i,{getPixelsFromTexturePos:()=>H,getSamplerCode:()=>z,getTensorPosFromArrayIndex:()=>G,getValueFromTensorPos:()=>N,getValueFromTensorPosPacking:()=>X,moveTexture2PosToReal:()=>W});var u={opRegistry:{ops:{}},backend:\"\",backendInstance:null};u=a(\"GLOBALS\",u);var l=s();l.ImageBitmap||(l.ImageBitmap=function(){});const f=a(\"env\",new(function(){function n(){this.ENV={}}return n.prototype.set=function(n,e){this.ENV[n]=e},n.prototype.get=function(n){return this.ENV[n]},n}()));var c;!function(n){n.uniform1f=\"1f\",n.uniform1fv=\"1fv\",n.uniform1i=\"1i\",n.uniform1iv=\"1iv\",n.uniform2f=\"2f\",n.uniform2fv=\"2fv\",n.uniform2i=\"2i\",n.uniform2iv=\"2iv\",n.uniform3f=\"3f\",n.uniform3fv=\"3fv\",n.uniform3i=\"3i\",n.uniform3iv=\"3iv\",n.uniform4f=\"4f\",n.uniform4fv=\"4fv\",n.uniform4i=\"4i\",n.uniform4iv=\"4iv\"}(c||(c={}));var _;function g(n){for(var e=n.length,o=function(){for(var n=0,e=0,o=arguments.length;e<o;e++)n+=arguments[e].length;var t=Array(n),r=0;for(e=0;e<o;e++)for(var i=arguments[e],s=0,a=i.length;s<a;s++,r++)t[r]=i[s];return t}(n),t=[];e>1;)o.splice(0,1),t.push(o.reduce((function(n,e){return n*e}))),e--;return t}function h(n,e){if(1===n.length)return\"float \"+e+\" = float(\"+n[0]+\");\";for(var o=n.length,t=\"\\n        vec\"+o+\" \"+e+\" = vec\"+o+\"(\\n    \",r=0;r<o;r++)t+=\"float(\"+n[r]+\"),\";return t.slice(0,-1)+\");\"}function d(n,e,o){if(0===n.length)return\"\";if(2===f.get(\"webglVersion\"))return n.reduce((function(e,t,r){return e+(r<n.length-1?o+\"(\"+t+\"), \":o+\"(\"+t+\"));\")}),o+\" \"+e+\"[] = \"+o+\"[](\");var t=n.reduce((function(n,t,r){return n+\"\\n            \"+e+\"[\"+r+\"] = \"+o+\"(\"+t+\");\"}),\"\");return\"\\n        \"+o+\" \"+e+\"[\"+n.length+\"];\\n        \"+t+\"\\n    \"}function p(n,e,o){if(0===n.length)return\"\";var t=n.reduce((function(n,e,t){return n+(0===t?\"\\n            \"+o+\" res = \"+o+\"(0);\\n            if (index == \"+t+\") {\\n                res = arr[\"+t+\"];\\n            }\":\"\\n            else if (index == \"+t+\") {\\n                res = arr[\"+t+\"];\\n            }\")}),\"\");return\"\\n    \"+o+\" getValueFromArrByIndex_\"+e+\"(\"+o+\"[\"+n.length+\"] arr, int index) {\\n        \"+(2===f.get(\"webglVersion\")?o+\" res = arr[index];\":t)+\"\\n        return res;\\n    }\\n    \"}!function(n){n.INT_TYPE=\"int\",n.FLOAT_TYPE=\"float\"}(_||(_={}));var m,P;!function(n){n[n.VS_SHADER=0]=\"VS_SHADER\",n[n.FS_SHADER=1]=\"FS_SHADER\"}(m||(m={})),function(n){n[n.FLOAT_VEC2=35664]=\"FLOAT_VEC2\",n[n.FLOAT_VEC3=35665]=\"FLOAT_VEC3\",n[n.FLOAT_VEC4=35666]=\"FLOAT_VEC4\",n[n.INT_VEC2=35667]=\"INT_VEC2\",n[n.INT_VEC3=35668]=\"INT_VEC3\",n[n.INT_VEC4=35669]=\"INT_VEC4\",n[n.BOOL=35670]=\"BOOL\",n[n.BOOL_VEC2=35671]=\"BOOL_VEC2\",n[n.BOOL_VEC3=35672]=\"BOOL_VEC3\",n[n.BOOL_VEC4=35673]=\"BOOL_VEC4\",n[n.FLOAT_MAT2=35674]=\"FLOAT_MAT2\",n[n.FLOAT_MAT3=35675]=\"FLOAT_MAT3\",n[n.FLOAT_MAT4=35676]=\"FLOAT_MAT4\",n[n.SAMPLER_2D=35677]=\"SAMPLER_2D\",n[n.SAMPLER_CUBE=35678]=\"SAMPLER_CUBE\",n[n.FLOAT=5126]=\"FLOAT\",n[n.INT=5124]=\"INT\"}(P||(P={}));var v,x=function(n,e,o){this.size=n,this.type=e,this.location=o},T=function(n,e,o){this.size=n,this.type=e,this.location=o},F=function(){function n(){}return n.getWebglVersion=function(){return f.get(\"webglVersion\")},n.createCanvas=function(){return f.get(\"canvas\")||document&&document.createElement(\"canvas\")},n.setWebglVersion=function(n){f.set(\"webglVersion\",n)},n.setWebGLRenderingContext=function(n){return this.gl=n,n},n.getWebGLRenderingContext=function(){return this.gl?this.gl:this.createWebGLRenderingContext()},n.createWebGLRenderingContext=function(){if(this.gl)return this.gl;var n=this.createCanvas();if(!n)return null;n.addEventListener&&n.addEventListener(\"webglcontextlost\",(function(n){throw n.preventDefault(),Error(\"webgl context is lost~\")}),!1);var e=n.getContext(\"webgl2\",this.WEBGL_ATTRIBUTES);return e?f.set(\"webglVersion\",2):(f.set(\"webglVersion\",1),e=n.getContext(\"webgl\",this.WEBGL_ATTRIBUTES)||n.getContext(\"experimental-webgl\",this.WEBGL_ATTRIBUTES)),e},n.printStates=function(n){console.log(\"1. isBlendEnable = \"+n.isEnabled(n.BLEND)),console.log(\"2. isCullFaceEnable = \"+n.isEnabled(n.CULL_FACE)),console.log(\"3. isDepthTestEnable = \"+n.isEnabled(n.DEPTH_TEST)),console.log(\"4. isDitherEnable = \"+n.isEnabled(n.DITHER)),console.log(\"5. isPolygonOffsetFillEnable = \"+n.isEnabled(n.POLYGON_OFFSET_FILL)),console.log(\"6. isSampleAlphtToCoverageEnable = \"+n.isEnabled(n.SAMPLE_ALPHA_TO_COVERAGE)),console.log(\"7. isSampleCoverageEnable = \"+n.isEnabled(n.SAMPLE_COVERAGE)),console.log(\"8. isScissorTestEnable = \"+n.isEnabled(n.SCISSOR_TEST)),console.log(\"9. isStencilTestEnable = \"+n.isEnabled(n.STENCIL_TEST))},n.printWebGLInfo=function(n){console.log(\"renderer = \"+n.getParameter(n.RENDERER)),console.log(\"version = \"+n.getParameter(n.VERSION)),console.log(\"vendor = \"+n.getParameter(n.VENDOR)),console.log(\"glsl version = \"+n.getParameter(n.SHADING_LANGUAGE_VERSION))},n.printWebGLTextureInfo=function(n){console.log(\"MAX_COMBINED_TEXTURE_IMAGE_UNITS = \",n.getParameter(n.MAX_COMBINED_TEXTURE_IMAGE_UNITS)),console.log(\"MAX_TEXTURE_IMAGE_UNITS = \",n.getParameter(n.MAX_TEXTURE_IMAGE_UNITS)),console.log(\"MAX_TEXTURE_SIZE = \",n.getParameter(n.MAX_TEXTURE_SIZE)),console.log(\"MAX_CUBE_MAP_TEXTURE_SIZE = \",n.getParameter(n.MAX_CUBE_MAP_TEXTURE_SIZE))},n.triggerContextLostEvent=function(n){var e=n.getExtension(\"WEBGL_lose_context\");null!==e&&e.loseContext()},n.checkGLError=function(n){var e=n.getError();return 0!==e&&(console.log(\"WebGL Error NO: \",e),!0)},n.setDefaultState=function(n){n.clearColor(0,0,0,0),n.clearDepth(1),n.enable(n.DEPTH_TEST),n.enable(n.CULL_FACE),n.enable(n.SCISSOR_TEST)},n.setViewport=function(n,e){n.viewport(e[0],e[1],e[2],e[3])},n.initShader=function(n,e,o){var t=this.createShader(n,e);return this.compileShader(n,o,t),t},n.createShader=function(n,e){var o;if(null===(o=e===m.VS_SHADER?n.createShader(n.VERTEX_SHADER):n.createShader(n.FRAGMENT_SHADER)))throw new Error(\"WebGLShader创建失败！\");return o},n.compileShader=function(n,e,o){return n.shaderSource(o,e),n.compileShader(o),!1!==n.getShaderParameter(o,n.COMPILE_STATUS)||(console.error(n.getShaderInfoLog(o)),n.deleteShader(o),!1)},n.createProgram=function(n){var e=n.createProgram();if(null===e)throw new Error(\"WebGLProgram创建失败！\");return e},n.linkProgram=function(n,e,o,t,r,i){return void 0===r&&(r=null),void 0===i&&(i=null),n.attachShader(e,o),n.attachShader(e,t),null!==r&&r(n,e),n.linkProgram(e),!1===n.getProgramParameter(e,n.LINK_STATUS)?(console.error(n.getProgramInfoLog(e)),n.deleteShader(o),n.deleteShader(t),n.deleteProgram(e),!1):(n.validateProgram(e),!1===n.getProgramParameter(e,n.VALIDATE_STATUS)?(console.error(n.getProgramInfoLog(e)),n.deleteShader(o),n.deleteShader(t),n.deleteProgram(e),!1):(null!==i&&i(n,e),!0))},n.getProgramActiveAttribs=function(n,e,o){for(var t=n.getProgramParameter(e,n.ACTIVE_ATTRIBUTES),r=0;r<t;r++){var i=n.getActiveAttrib(e,r);i&&(o[i.name]=new T(i.size,i.type,n.getAttribLocation(e,i.name)))}},n.getProgramAtciveUniforms=function(n,e,o){for(var t=n.getProgramParameter(e,n.ACTIVE_UNIFORMS),r=0;r<t;r++){var i=n.getActiveUniform(e,r);if(i){var s=n.getUniformLocation(e,i.name);null!==s&&(o[i.name]=new x(i.size,i.type,s))}}},n.createBuffer=function(n){var e=n.createBuffer();if(null===e)throw new Error(\"WebGLBuffer创建失败！\");return e},n.getColorBufferData=function(n){var e=new Uint8Array(n.drawingBufferWidth*n.drawingBufferHeight*4);return n.readPixels(0,0,n.drawingBufferWidth,n.drawingBufferHeight,n.RGBA,n.UNSIGNED_BYTE,e),e},n.setUniformParam=function(n,e,o,t){switch(o){case c.uniform1f:n.uniform1f(e,t);break;case c.uniform1fv:n.uniform1fv(e,t);break;case c.uniform1i:n.uniform1i(e,t);break;case c.uniform1iv:n.uniform1iv(e,t);break;case c.uniform2f:n.uniform2f(e,t[0],t[1]);break;case c.uniform2fv:n.uniform2fv(e,t);break;case c.uniform2i:n.uniform2i(e,t[0],t[1]);break;case c.uniform2iv:n.uniform2iv(e,t);break;case c.uniform3f:n.uniform3f(e,t[0],t[1],t[2]);break;case c.uniform3fv:n.uniform3fv(e,t);break;case c.uniform3i:n.uniform3i(e,t[0],t[1],t[2]);break;case c.uniform3iv:n.uniform3iv(e,t);break;case c.uniform4f:n.uniform4f(e,t[0],t[1],t[2],t[3]);break;case c.uniform4fv:n.uniform4fv(e,t);break;case c.uniform4i:n.uniform4i(e,t[0],t[1],t[2],t[3]);break;case c.uniform4iv:n.uniform4iv(e,t);break;default:console.error(\"[\"+o+\"]: unknown uniform type\")}},n.genTextureInfoFromTensorShape=function(n,e){var o=n||4096,t=e.shape,r=void 0===t?[]:t,i=r[0],s=r[1],a=r[2],u=r[3];if(i*a<=o&&s*u<=o)e.shape_texture=[i*a,s*u];else{var l=function(){for(var n=0,e=0,o=arguments.length;e<o;e++)n+=arguments[e].length;var t=Array(n),r=0;for(e=0;e<o;e++)for(var i=arguments[e],s=0,a=i.length;s<a;s++,r++)t[r]=i[s];return t}(r).sort((function(n,e){return n-e})),c=l[0],_=l[1],g=l[2],h=c*l[3],d=_*g;if(h>o||d>o){var p=[h,d].sort((function(n,e){return n-e})),m=p[0],P=p[1],v=function(n,e){var o=e;if(n%o==0)return o;for(;o<n&&n%o!=0;)o++;return o}(P,Math.ceil(P/o));if(h=m*v,d=Math.ceil(P/v),f.get(\"debug\")&&console.error(\"大小超限\",r,[d,h]),h>o||d>o)throw new Error(\"Requested texture size [\"+h+\"x\"+d+\"] greater than WebGL maximum on this browser / GPU [\"+o+\"x\"+o+\"].\")}e.shape_texture=[d,h]}},n.WEBGL_ATTRIBUTES={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0,powerPreference:\"high-performance\"},n.gl=null,n}();!function(n){n[n.GL_REPEAT=0]=\"GL_REPEAT\",n[n.GL_MIRRORED_REPEAT=1]=\"GL_MIRRORED_REPEAT\",n[n.GL_CLAMP_TO_EDGE=2]=\"GL_CLAMP_TO_EDGE\"}(v||(v={}));var b=function(){function n(){}return n.getTextureConfig=function(n){var e,o,t,r,i,s,a,u,l=n,c=!0,_=!0;return 2===f.get(\"webglVersion\")?(e=l.getExtension(\"EXT_color_buffer_float\"),t=l.HALF_FLOAT,r=l.R32F,i=l.RGBA32F,s=l.R16F,a=l.RGBA16F,o=l.RED,u=l.RGBA32F):(r=l.RGBA,s=l.RGBA,a=l.RGBA,i=l.RGBA,o=l.RGBA,u=l.RGBA,e=l.getExtension(\"OES_texture_float\"),t=l.getExtension(\"OES_texture_half_float\").HALF_FLOAT_OES,c=this.isDownloadFloatTextureEnabled(l,u),_=this.isFloatTextureReadPixelsEnabledMethod(l,1,c)),{textureFloat:e,textureHalfFloat:t,internalFormat:r,internalFormatPacked:i,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:a,textureFormat:o,downloadInternalFormat:u,frameBufferSupportFloat:c,isFloatTextureReadPixelsEnabled:_}},n.isFloatTextureReadPixelsEnabledMethod=function(n,e,o){var t=n;if(0===e)return!1;if(1===e){if(null==t.getExtension(\"OES_texture_float\"))return!1}else if(null==t.getExtension(\"EXT_color_buffer_float\")||null==t.getExtension(\"EXT_color_buffer_half_float\"))return!1;var r=t.createFramebuffer(),i=t.createTexture();t.bindTexture(t.TEXTURE_2D,i);var s=2===e?t.RGBA32F:t.RGBA;t.texImage2D(t.TEXTURE_2D,0,s,1,1,0,t.RGBA,o?t.FLOAT:t.getExtension(\"OES_texture_half_float\").HALF_FLOAT_OES,null),t.bindFramebuffer(t.FRAMEBUFFER,r),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,i,0);var a=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;t.readPixels(0,0,1,1,t.RGBA,t.FLOAT,new Float32Array(4));var u=t.getError()===t.NO_ERROR;return a&&u},n.isDownloadFloatTextureEnabled=function(n,e){var o=n.createTexture();n.bindTexture(n.TEXTURE_2D,o),n.texImage2D(n.TEXTURE_2D,0,e,1,1,0,n.RGBA,n.FLOAT,null);var t=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,t),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,o,0);var r=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(o),n.deleteFramebuffer(t),r},n.uploadDataToTexture=function(n,e,o,t){n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MAG_FILTER,n.NEAREST),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MIN_FILTER,n.NEAREST),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE);var r=o.width_texture,i=o.height_texture,s=o.data,a=n.RGBA,u=n.RGBA,l=n.FLOAT,c=s;if(s instanceof Uint8Array||s instanceof Uint8ClampedArray)l=n.UNSIGNED_BYTE;else{if(!(s instanceof Float32Array||s instanceof Array))return void n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,s);if(2===f.get(\"webglVersion\")){var _=f.get(\"webgl_force_half_float_texture\");a=t?_?e.internalFormatPackedHalfFloat:e.internalFormatPacked:_?e.internalFormatHalfFloat:e.internalFormat,u=t?n.RGBA:e.textureFormat}else{for(var g=new Float32Array(r*i*4),h=0;h<s.length;h++)t?g[h]=s[h]:(g[4*h]=s[h],g[4*h+1]=0,g[4*h+2]=0,g[4*h+3]=0);c=g}}n.texImage2D(n.TEXTURE_2D,0,a,r,i,0,u,l,c)},n.genOutputTexture=function(n,e,o,t){var r=o.interpType,i=o.width_texture,s=o.height_texture,a=n.createTexture();n.bindTexture(n.TEXTURE_2D,a),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MAG_FILTER,\"LINEAR\"===r?n.LINEAR:n.NEAREST),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MIN_FILTER,\"LINEAR\"===r?n.LINEAR:n.NEAREST),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE);var u=f.get(\"webgl_force_half_float_texture\"),l=u?e.internalFormatPackedHalfFloat:e.internalFormatPacked,c=2===f.get(\"webglVersion\")?u?n.HALF_FLOAT:n.FLOAT:e.frameBufferSupportFloat?n.FLOAT:e.textureHalfFloat,_=t?e.isFloatTextureReadPixelsEnabled?c:n.UNSIGNED_BYTE:null;return n.texImage2D(n.TEXTURE_2D,0,l,i,s,0,n.RGBA,t?_:c,null),n.bindTexture(n.TEXTURE_2D,null),a},n}(),y=[\"\\n    precision highp float;\\n    precision highp int;\\n\\n    attribute vec4 position;\\n    varying vec2 vCoord;\\n\\n    void main() {\\n        vCoord.x = (position.x + 1.0) / 2.0;\\n        vCoord.y = (position.y + 1.0) / 2.0;\\n        gl_Position = position;\\n    }\\n    \",\"#version 300 es\\n    in vec4 position;\\n    out vec2 vCoord;\\n\\n    void main() {\\n        vCoord.x = (position.x + 1.0) / 2.0;\\n        vCoord.y = (position.y + 1.0) / 2.0;\\n        gl_Position = position;\\n    }\\n    \"],E=new Float32Array([-1,1,-1,-1,1,1,1,-1]),w=[\"length_shape\",\"length_unformatted_shape\",\"width_shape\",\"height_shape\",\"width_texture\",\"height_texture\",\"offset_x\",\"offset_y\",\"channel\",\"total_shape\",\"numbers_shape\"],V={float:[\"multi_value\",\"bias_value\"],bool:[\"fuse_relu\"]};function A(){return\"\\n    \"+(f.get(\"useModAdaptor\")?\"\\n            int calMod(int a, int b) {\\n                float modV = mod(float(a), float(b));\\n                if (modV == float(b)) {\\n                    modV = 0.0;\\n                }\\n                return int(modV);\\n            }\\n        \":\"\\n            int calMod(int a, int b) {\\n                return a - a / b * b;\\n            }\\n        \")+\"\\n    \"+(f.get(\"useDivisionAdaptor\")?\"\\n            int calDivision(int a, int b) {\\n                return int(float(a) / (float(b) - 0.0001));\\n            }\\n        \":\"\\n            int calDivision(int a, int b) {\\n                return a / b;\\n            }\\n        \")+\"\\n    \\n    float tanh_calc(float num) {\\n        float res = (exp(2.0 * num) - 1.0) / (exp(2.0 * num) + 1.0);\\n        return res;\\n    }\\n    \\n    \"}const O=\"\\nivec4 transferFromNHWCtoNCHW(\\n    int sumVal,\\n    const int channel,\\n    const int width_shape,\\n    const int height_shape,\\n    const int total_shape) {\\n\\n    int n_origin = int(total_shape/(channel * width_shape * height_shape));\\n    int new_a = calMod(sumVal, width_shape);\\n    sumVal = int((sumVal - new_a) / width_shape);\\n    int new_b = calMod(sumVal, height_shape);\\n    sumVal = int((sumVal - new_b) / height_shape);\\n    int new_g = calMod(sumVal, channel);\\n    sumVal = int((sumVal - new_g) / channel);\\n    int new_r = calMod(sumVal, n_origin);\\n    return ivec4(new_r,new_g,new_b,new_a);\\n}\\n\";var C=\"\\nfloat prelu(float x, float p, float b) {\\n    float result = x;\\n    if (x < 0.0) {\\n        result = x * p;\\n    }\\n\\n    return result;\\n}\",R=\"\\nfloat relu6(float x, float threshold, float b) {\\n    float result = min(max(0.0, x), threshold);\\n    return result;\\n}\",S=\"\\nfloat leakyRelu(float x, float p, float b) {\\n    float result = max(x, x * p);\\n    return result;\\n}\",I=\"\\nfloat scale(float x, float p, float b) {\\n    float result = p * x + b;\\n    return result;\\n}\",L=\"\\nfloat scaleWidthBias(float x, float p, float b) {\\n    float result = p * (x + b);\\n    return result;\\n}\",k=\"\\nfloat sigmoid(float x, float y, float z) {\\n    float result = 1.0 / (1.0 + exp(-x));\\n    return result;\\n}\",B=\"\\n    float hardSigmoid(float x, float slope, float offset) {\\n        float result = max(0.0, min(1.0, slope * x + offset));\\n        return result;\\n    }\\n\",M=\"\\n    float sqrt(float x, float slope, float offset) {\\n        return sqrt(x);\\n    }\\n\",D=\"\\n    float pow_func(float x, float factor, float offset) {\\n        return pow(x, factor);\\n    }\\n\",U=\"\\nfloat tanh_func(float x, float y, float z) {\\n    return tanh_calc(x);\\n}\",j=\"\\nfloat exp_func(float x, float y, float z) {\\n    float result = exp(x);\\n    return result;\\n}\";function N(n,e){var o=e.width_shape,t=e.height_shape,r=e.channel,i=e.width_texture;return\"\\n    float getValueFromTensorPos_\"+n+\"(int n, int c, int h, int w) {\\n        int index = n * \"+o*t*r+\" + c * \"+o*t+\" + h * \"+o+\" + w;\\n        // 0.01 hack: 在 PC/WISE 机器上，出现某个值（比如 index 为 3520） float(index) 和 float(3520) 返回值不同的情况，目前 +0.01 hack\\n        int pos_w = int(mod(float(index) + 0.01, float(\"+i+\")));\\n        int pos_h = index / int(\"+i+\");\\n        vec4 pixels = TEXTURE2D(texture_\"+n+\",\\n            vec2(\\n                (float(pos_w)  + 0.5) / float(\"+i+\"),\\n                (float(pos_h) + 0.5) / float(\"+e.height_texture+\")\\n            )\\n        );\\n        return pixels.r;\\n    }\"}function X(n,e){var o=e.channel,t=e.height_shape,r=e.width_texture,i=e.height_texture,s=e.width_shape;return\"\\n    vec4 getValueFromTensorPosPacking_\"+n+\"(int n, int c, int h, int w) {\\n        int index = n * \"+s*t*o+\" + c * \"+s*t+\" + h * \"+s+\" + w;\\n        // 0.01 hack: 在 PC/WISE 设备上，出现某个值（比如 index 为 3520） float(index) 和 float(3520) 返回值不同的情况，目前 +0.01 hack\\n        int pos_w = int(mod(float(index) + 0.01, float(\"+r+\")));\\n        int pos_h = index / int(\"+r+\");\\n        vec4 pixels = TEXTURE2D(texture_\"+n+\",\\n            vec2(\\n                (float(pos_w)  + 0.5) / float(\"+r+\"),\\n                (float(pos_h) + 0.5) / float(\"+i+\")\\n            )\\n        );\\n        return pixels;\\n    }\"}function G(n,e){var o=e.numbers_shape,t=e.length_shape;if(1===t)return\"\\n            int getTensorPosFromArrayIndex_\"+n+\"(int n) {\\n                return calMod(n, \"+o[0]+\");\\n            }\\n        \";for(var r=\"ivec\"+t+\"(\"+o.join(\", \")+\")\",i=\"pos[0] = n / \"+o[0]+\";\",s=1;s<t;s++)i+=\"\\n            n = calMod(n, \"+o[s-1]+\");\\n            pos[\"+s+\"] = calDivision(n, \"+o[s]+\");\\n        \";return\"\\n    ivec\"+t+\" shapeVec_\"+n+\" = \"+r+\";\\n    ivec\"+t+\" getTensorPosFromArrayIndex_\"+n+\"(int n) {\\n        ivec\"+t+\" pos;\\n        \"+i+\"\\n        return pos;\\n    }\\n    \"}function H(n){return\"\\n    #define getPixelsFromTexturePos_\"+n+\"(pos) TEXTURE2D(texture_\"+n+\", pos)\\n    \"}function W(n,e){return\"\\n    vec2 moveTexture2PosToReal_\"+n+\"(vec2 v) {\\n        vec2 v2;\\n        v2.x = v.x * float(\"+e.width_texture+\");\\n        v2.y = v.y * float(\"+e.height_texture+\");\\n        return v2;\\n    }\\n    \"}function z(n){return\"uniform sampler2D texture_\"+n+\";\"}function Y(n,e,o,t,s){var a,u,l=\"\",c=e.name,_=e.mainFunc,g=e.textureFuncConf,h=void 0===g?{}:g,d=e.commonFuncConf;try{var p=function(n,e,o){for(var t={},r=Object.assign({},e),i=[],s=0,a=n;s<a.length;s++){for(var u=a[s],l=u.name,f={},c=0,_=w;c<_.length;c++)void 0!==u[P=_[c]]&&(f[P]=u[P]);t[l]=f,i.push(l)}for(var g=0,h=Object.keys(V);g<h.length;g++)for(var d=h[g],p=0,m=V[d];p<m.length;p++){var P;void 0!==e[P=m[p]]&&(r[P]=d+\"(\"+e[P]+\")\")}return e.active_function&&(r.active_function=e.active_function),r.runtime=o,{textureParams:t,opParams:r,active_function:e.active_function}}(o,t,s),m=p.textureParams,P=p.opParams,v=p.active_function,x=2===f.get(\"webglVersion\")?\" #version 300 es\\n            #ifdef GL_FRAGMENT_PRECISION_HIGH\\n            precision highp float;\\n            precision highp int;\\n        #else\\n            precision mediump float;\\n            precision mediump int;\\n        #endif      \\n        \":\" #ifdef GL_FRAGMENT_PRECISION_HIGH\\n            precision highp float;\\n            precision highp int;\\n        #else\\n            precision highp float;\\n            precision highp int;\\n        #endif\\n        \",T=function(n){var e=n.frameBufferSupportFloat,o=n.isFinalOp,t=n.isFloatTextureReadPixelsEnabled;return 2===f.get(\"webglVersion\")?\"\\n        // 顶点shader透传的材质坐标\\n        in vec2 vCoord;\\n        out vec4 outColor;\\n        void setOutput(float result) {\\n            result = fuse_op(result);\\n            outColor.r = result;\\n        }\\n        void setPackedOutput(vec4 result) {\\n            outColor = result;\\n        }\\n        int calCeil(int a, int b) {\\n            return int(ceil(float(a) / float(b)));\\n        }\\n        \"+A()+\"\\n    \":e?\"\\n            varying vec2 vCoord;\\n            varying vec4 outColor;\\n            void setOutput(float result) {\\n                result = fuse_op(result);\\n                gl_FragColor.r = result;\\n            }\\n            void setPackedOutput(vec4 result) {\\n                gl_FragColor = result;\\n            }\\n            int calCeil(int a, int b) {\\n                return int(ceil(float(a) / float(b)));\\n            }\\n            \"+A()+\"\\n    \":o&&!t?\"\\n        varying vec2 vCoord;\\n        varying vec4 outColor;\\n\\n        const float FLOAT_MAX = 1.70141184e38;\\n        const float FLOAT_MIN = 1.17549435e-38;\\n\\n        #define isnan(value) isnan_custom(value)\\n        bool isnan_custom(float val) {\\n            return (val > 0. || val < 1. || val == 0.) ? false : true;\\n        }\\n\\n        \"+A()+\"\\n\\n        int calCeil(int a, int b) {\\n            return int(ceil(float(a) / float(b)));\\n        }\\n\\n        lowp vec4 encode_float(highp float v) {\\n            if (isnan(v)) {\\n            return vec4(255, 255, 255, 255);\\n            }\\n\\n            highp float av = abs(v);\\n\\n            if(av < FLOAT_MIN) {\\n            return vec4(0.0, 0.0, 0.0, 0.0);\\n            } else if(v > FLOAT_MAX) {\\n            return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\\n            } else if(v < -FLOAT_MAX) {\\n            return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\\n            }\\n\\n            highp vec4 c = vec4(0,0,0,0);\\n\\n            highp float e = floor(log2(av));\\n            highp float m = exp2(fract(log2(av))) - 1.0;\\n\\n            c[2] = floor(128.0 * m);\\n            m -= c[2] / 128.0;\\n            c[1] = floor(32768.0 * m);\\n            m -= c[1] / 32768.0;\\n            c[0] = floor(8388608.0 * m);\\n\\n            highp float ebias = e + 127.0;\\n            c[3] = floor(ebias / 2.0);\\n            ebias -= c[3] * 2.0;\\n            c[2] += floor(ebias) * 128.0;\\n\\n            c[3] += 128.0 * step(0.0, -v);\\n\\n            return c / 255.0;\\n        }\\n\\n        void setOutput(float result) {\\n                result = fuse_op(result);\\n                gl_FragColor = encode_float(result);\\n        }\\n        \":\"\\n            #define isnan(value) isnan_custom(value)\\n            bool isnan_custom(float val) {\\n                return (val > 0. || val < 1. || val == 0.) ? false : true;\\n            }\\n\\n            varying vec2 vCoord;\\n            varying vec4 outColor;\\n            void setOutput(float result) {\\n                result = fuse_op(result);\\n                if(isnan(result)) {\\n                    gl_FragColor.r = 0.0;\\n                }else {\\n                    gl_FragColor.r = result;\\n                }\\n            }\\n\\n            void setPackedOutput(vec4 result) {\\n                gl_FragColor = result;\\n            }\\n\\n            \"+A()+\"\\n\\n            int calCeil(int a, int b) {\\n                return int(ceil(float(a) / float(b)));\\n            }\\n        \"}(n),F=function(n){var e=\"\",o=\"\";if(n.fuse_opt)for(var t in n.fuse_opt){var i=t,s=0,a=0;switch(t){case\"scale\":var u=n.fuse_opt.scale.bias_after_scale;s=void 0!==(f=n.fuse_opt.scale.scale)?f:1,a=n.fuse_opt.scale.bias||0,!1===u&&void 0!==u&&(i=\"scaleWidthBias\");break;case\"relu\":i=\"prelu\";break;case\"relu6\":s=n.fuse_opt[t].threshold;break;case\"hard_sigmoid\":i=\"hardSigmoid\",s=n.fuse_opt[t].slope||.2,a=n.fuse_opt[t].offset||.5;break;case\"leakyRelu\":s=n.fuse_opt[t].alpha;break;case\"pow\":i=\"pow_func\",s=n.fuse_opt[t].factor||2;break;case\"tanh\":i=\"tanh_func\";break;case\"exp\":i=\"exp_func\"}if(\"hard_swish\"===t){var l=void 0!==n.fuse_opt.hard_swish.offset?n.fuse_opt.hard_swish.offset:3,f=void 0!==n.fuse_opt.hard_swish.scale?n.fuse_opt.hard_swish.scale:6;o+=\"res = res * min(max(0.0, res + float(\"+l+\")), float(\"+(void 0!==n.fuse_opt.hard_swish.threshold?n.fuse_opt.hard_swish.threshold:6)+\")) / float(\"+f+\");\"}else\"dropout\"===t?o+=\"\\n                if (\"+(\"downgrade_in_infer\"===n.fuse_opt.dropout.dropout_implementation)+\") {\\n                    res = res * (1.0 - float(\"+n.fuse_opt.dropout.dropout_prob+\"));\\n                }\":(e+=r[i],o+=\"res = \"+i+\"(res, float(\"+s+\"), float(\"+a+\"));\")}return\"\\n        \"+e+\"\\n        \\n        float fuse_op(float x) {\\n            float res = x;\\n            \"+o+\"\\n            return res;\\n        }\\n    \"}(P),b=function(n,e,o,t){if(!n)return\"\";var r=Object.assign({},n);r[\"@all\"]&&function(n,e){var o=e.filter((function(n){return\"out\"!==n.name})),t=n[\"@all\"];o.forEach((function(e){var o=e.name;n[o]?n[o].concat(t):n[o]=t})),delete n[\"@all\"]}(r,t);for(var s=\"\",a=\"\",u=0,l=Object.keys(r);u<l.length;u++){var f=l[u];if(e[f]){a+=z(f);for(var c=0,_=r[f];c<_.length;c++){var g=_[c];if(i[g])try{s+=i[g](f,e[f],o)}catch(n){console.error(n)}}}}return\"\\n    \"+a+\"\\n    \"+s+\"\\n    \"}(h,m,P,o),y=function(n){return void 0===n?\"\":\"\\n        int layer_run_time = \"+n+\";\\n    \"}(s),E=function(n){var e,o,t,r,i;return\"\\n        \\n    vec2 _2d_shape_texture_out = vec2(float(\"+n.width_texture+\"), float(\"+n.height_texture+\"));\\n    \\n        \"+(o=(e=n).height_shape,t=e.width_shape,\"\\n    ivec4 getOutputTensorPos() {\\n        vec2 outCoord = vCoord.xy * (_2d_shape_texture_out);\\n        int index = int(outCoord.x) + int(outCoord.y) * int(\"+e.width_texture+\");\\n\\n        int n1 = int(index / \"+(r=t*o*e.channel)+\");\\n        int c1 = int(calMod(index, \"+r+\") / \"+(i=t*o)+\");\\n        int h1 = int(calMod(index, \"+i+\") / \"+t+\");\\n        int w1 = calMod(index, \"+t+\");\\n        return ivec4(n1, c1, h1, w1);\\n    }\\n    \\n    \")}(m.out),O=function(n){if(!n)return\"\";for(var e=\"\",o=0,t=n;o<t.length;o++){var i=t[o];r[i]&&(e+=r[i])}return e}(d);a=l=\" \"+x+\"\\n            \"+F+\"\\n            \"+T+\"\\n            \"+O+\"\\n            \"+(v?r[v]:\"\")+\"\\n            \"+b+\"\\n            \"+y+\"\\n            \"+E+\"\\n            \"+_(m,P)+\"\\n        \",u=1===f.get(\"webglVersion\")?\"texture2D\":\"texture\",l=a.replace(/\\bTEXTURE2D\\b/g,u)}catch(n){console.error(\"[\"+c+\"]: \"+n)}return l}const q=function(){function n(n,e,o,t){var r=n;this.vShader=e;try{this.fShader=this.initShader(r,o,\"fragment\"),this.shape=t&&t.shape;var i=this.program=r.createProgram();r.attachShader(i,this.vShader),r.attachShader(i,this.fShader),r.linkProgram(i)}catch(n){throw new Error(n)}}return n.prototype.initShader=function(n,e,o){void 0===o&&(o=\"vertex\");var t,r=\"vertex\"===o?n.VERTEX_SHADER:n.FRAGMENT_SHADER;if(\"vertex\"===o&&this.vShader)t=this.vShader;else if(t=n.createShader(r),\"vertex\"===o&&(this.vShader=t),n.shaderSource(t,e),n.compileShader(t),!n.getShaderParameter(t,n.COMPILE_STATUS))throw new Error(\"compile: \"+n.getShaderInfoLog(t));return t},n.prototype.setProgram=function(n,e,o){n.useProgram(this.program),o||this.runVertexShader(n,e)},n.prototype.runVertexShader=function(n,e){var o=n.getAttribLocation(this.program,\"position\");n.enableVertexAttribArray(o),n.bindBuffer(n.ARRAY_BUFFER,e),n.vertexAttribPointer(o,2,n.FLOAT,!1,0,0)},n.Sampler=\"uSampler\",n}();var Z,K=(Z=function(n,e){return(Z=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,e){n.__proto__=e}||function(n,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(n[o]=e[o])})(n,e)},function(n,e){function o(){this.constructor=n}Z(n,e),n.prototype=null===e?Object.create(e):(o.prototype=e.prototype,new o)}),Q=function(n,e,o,t){return new(o||(o=Promise))((function(r,i){function s(n){try{u(t.next(n))}catch(n){i(n)}}function a(n){try{u(t.throw(n))}catch(n){i(n)}}function u(n){var e;n.done?r(n.value):(e=n.value,e instanceof o?e:new o((function(n){n(e)}))).then(s,a)}u((t=t.apply(n,e||[])).next())}))},J=function(n,e){var o,t,r,i,s={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return i={next:a(0),throw:a(1),return:a(2)},\"function\"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function a(i){return function(a){return function(i){if(o)throw new TypeError(\"Generator is already executing.\");for(;s;)try{if(o=1,t&&(r=2&i[0]?t.return:i[0]?t.throw||((r=t.return)&&r.call(t),0):t.next)&&!(r=r.call(t,i[1])).done)return r;switch(t=0,r&&(i=[2&i[0],r.value]),i[0]){case 0:case 1:r=i;break;case 4:return s.label++,{value:i[1],done:!1};case 5:s.label++,t=i[1],i=[0];continue;case 7:i=s.ops.pop(),s.trys.pop();continue;default:if(!((r=(r=s.trys).length>0&&r[r.length-1])||6!==i[0]&&2!==i[0])){s=0;continue}if(3===i[0]&&(!r||i[1]>r[0]&&i[1]<r[3])){s.label=i[1];break}if(6===i[0]&&s.label<r[1]){s.label=r[1],r=i;break}if(r&&s.label<r[2]){s.label=r[2],s.ops.push(i);break}r[2]&&s.ops.pop(),s.trys.pop();continue}i=e.call(n,s)}catch(n){i=[6,n],t=0}finally{o=r=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,a])}}};const $=function(n){function e(){var e=n.call(this)||this;return e.cacheTextures={},e.uniformLocations={},e.texturesMap={},e.queryList=[],e.currentTexture=null,e.width_shape_out=1,e.height_shape_out=1,e.width_texture_out=1,e.height_texture_out=1,e.channel=0,e.total_shape=0,e}return K(e,n),e.prototype.init=function(){return Q(this,void 0,void 0,(function(){var n;return J(this,(function(e){return n=this.gl=F.createWebGLRenderingContext(),this.gl?(this.glVersion=F.getWebglVersion(),this.textureConf=b.getTextureConfig(n),this.MAX_TEXTURE_SIZE=f.get(\"MAX_TEXTURE_SIZE\")||n.getParameter(n.MAX_TEXTURE_SIZE),n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),this.vertexBuffer=n.createBuffer(),n.bindBuffer(n.ARRAY_BUFFER,this.vertexBuffer),n.bufferData(n.ARRAY_BUFFER,E,n.STATIC_DRAW),this.vShader=F.initShader(n,m.VS_SHADER,y[this.glVersion-1]),this.frameBuffer=n.createFramebuffer(),n.bindFramebuffer(n.FRAMEBUFFER,this.frameBuffer),this.pbo=n.createBuffer(),[2]):[2]}))}))},e.prototype.createProgram=function(n){var e=this,o=n.op,t=n.outTensor,r=n.inputTensors,i=n.shaderParams,s=n.runtime,a=n.isFinalOp,u=null;try{var l=function(){for(var n=0,e=0,o=arguments.length;e<o;e++)n+=arguments[e].length;var t=Array(n),r=0;for(e=0;e<o;e++)for(var i=arguments[e],s=0,a=i.length;s<a;s++,r++)t[r]=i[s];return t}([t],r);l.forEach((function(n){return F.genTextureInfoFromTensorShape(e.MAX_TEXTURE_SIZE,n)}));var f=Y(this.textureConf,o,l,i,s);(u=new q(this.gl,this.vShader,f,t)).fsCode=f;var c=b.genOutputTexture(this.gl,this.textureConf,t,a);this.texturesMap[t.tensorId]=c,this.program=u}catch(n){console.error(\"webgl createProgram: \"+o.name+\" -- \"+n)}return u},e.prototype.runProgram=function(n,e){var o=this,t=function(n,e){if(2===e&&f.get(\"performance\")){var o=n.getExtension(\"EXT_disjoint_timer_query_webgl2\");if(!o)return;var t=n.createQuery();return n.beginQuery(o.TIME_ELAPSED_EXT,t),t}return null}(this.gl,this.glVersion),r=n.isPackedOp;n.program.forEach((function(t,i){var s=n.outputTensors[i],a=s.tensorId;o.setOutProps(s),\"frameBuffer\"===n.bufferType?o.attachFrameBuffer(a):o.attachColorBuffer(),t.setProgram(o.gl,o.vertexBuffer,e),o.program=t,o.render(n,e,i,r)})),n.tensorData=null,t&&(this.queryList.push({name:n.name,query:t,count:1}),t=function(n,e,o){if(2===e&&f.get(\"performance\")){var t=n.getExtension(\"EXT_disjoint_timer_query_webgl2\");if(!t)return;n.endQuery(t.TIME_ELAPSED_EXT)}return o}(this.gl,this.glVersion,t))},e.prototype.read=function(n){return Q(this,void 0,void 0,(function(){var e,o,t;return J(this,(function(r){switch(r.label){case 0:return f.get(\"webgl_gpu_pipeline\")?(e=this.gl,this.frameBuffer=e.createFramebuffer(),e.bindFramebuffer(e.FRAMEBUFFER,this.frameBuffer),[2,[]]):(o=this.createPBO(),[4,this.createAndWaitForFence()]);case 1:return r.sent(),t=n?n.shape:[],[2,this.downloadFloat32TensorFromBuffer(o,t)]}}))}))},e.prototype.createPBO=function(){var n,e=this.textureConf;if(2===this.glVersion){var o=this.gl,t=this.pbo;o.bindBuffer(o.PIXEL_PACK_BUFFER,t);var r=16*this.width_texture_out*this.height_texture_out;return o.bufferData(o.PIXEL_PACK_BUFFER,r,o.STREAM_READ),o.readPixels(0,0,this.width_texture_out,this.height_texture_out,o.RGBA,o.FLOAT,0),o.bindBuffer(o.PIXEL_PACK_BUFFER,null),t}var i=this.gl,s=i.FLOAT;return e.isFloatTextureReadPixelsEnabled?n=new Float32Array(this.width_texture_out*this.height_texture_out*4):(n=new Uint8Array(this.width_texture_out*this.height_texture_out*4),s=i.UNSIGNED_BYTE),i.readPixels(0,0,this.width_texture_out,this.height_texture_out,i.RGBA,s,n),e.isFloatTextureReadPixelsEnabled?n:new Float32Array(n.buffer)},e.prototype.createAndWaitForFence=function(){return Q(this,void 0,void 0,(function(){var n,e,o,t,r=this;return J(this,(function(i){return n=this.gl,e=null!=n.fenceSync,o=function(){return!0},e&&(t=n.fenceSync(n.SYNC_GPU_COMMANDS_COMPLETE,0),n.flush(),o=function(){var e=n.clientWaitSync(t,0,0);return e===n.ALREADY_SIGNALED||e===n.CONDITION_SATISFIED}),[2,new Promise((function(n){r.pollItem(o,n)}))]}))}))},e.prototype.pollItem=function(n,e){var o=function(){n()?e():setTimeout(o,1)};o()},e.prototype.downloadFloat32TensorFromBuffer=function(n,e){var o=4*this.width_texture_out*this.height_texture_out;if(2===this.glVersion){var t=this.gl,r=new Float32Array(o);t.bindBuffer(t.PIXEL_PACK_BUFFER,n),t.getBufferSubData(t.PIXEL_PACK_BUFFER,0,r),t.bindBuffer(t.PIXEL_PACK_BUFFER,null);var i=[];if(f.get(\"webgl_pack_output\"))return Array.from(r).slice(0,function(n){return n.reduce((function(n,e){return n*e}),1)}(e));for(var s=0;s<this.width_texture_out*this.height_texture_out;s++)i.push(r[4*s]);return i}var a=n,u=[];for(s=0;s<this.width_texture_out*this.height_texture_out;s++){var l=this.textureConf.isFloatTextureReadPixelsEnabled?4*s:s;u.push(a[l])}return u},e.prototype.setOutProps=function(n){var e=n.width_shape,o=void 0===e?1:e,t=n.height_shape,r=void 0===t?1:t,i=n.width_texture,s=void 0===i?1:i,a=n.height_texture,u=void 0===a?1:a,l=n.channel,f=void 0===l?0:l,c=n.total_shape,_=void 0===c?0:c;this.width_shape_out=o,this.height_shape_out=r,this.width_texture_out=s,this.height_texture_out=u,this.channel=f,this.total_shape=_},e.prototype.attachColorBuffer=function(){var n=this.gl;n.bindFramebuffer(n.FRAMEBUFFER,null),n.canvas.width=this.width_shape_out,n.canvas.height=this.height_shape_out,n.viewport(0,0,n.canvas.width,n.canvas.height),n.scissor(0,0,n.canvas.width,n.canvas.height)},e.prototype.attachFrameBuffer=function(n){this.currentTexture=this.texturesMap[n];var e=this.gl;e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,this.currentTexture,0),e.viewport(0,0,this.width_texture_out,this.height_texture_out),e.scissor(0,0,this.width_texture_out,this.height_texture_out)},e.prototype.render=function(n,e,o,t){var r=this;void 0===e&&(e=!1),void 0===t&&(t=!1);var i=n.inputTensors,s=void 0===i?[]:i,a=n.uniform,u=void 0===a?null:a,l=n.iLayer,f=void 0===l?0:l,c=n.modelName,_=this.gl,g=0;s.forEach((function(n){r.initTexture(g,n,t);var i=r.getUniformLoc(\"texture_\"+n.name,f,e,o,c);i&&_.uniform1i(i,g++)})),u&&this.setUniform(u,f,e,o,c),_.drawArrays(_.TRIANGLE_STRIP,0,4)},e.prototype.initTexture=function(n,e,o){var t,r=this.gl,i=this.textureConf,s=e.tensorId,a=o||e.isPacked,u=e.data;if(e.persistable){this.cacheTextures=this.cacheTextures||{};var l=this.cacheTextures[s];l?(t=l,u&&F.genTextureInfoFromTensorShape(this.MAX_TEXTURE_SIZE,e)):(t=r.createTexture(),this.cacheTextures[s]=t)}else t=this.texturesMap[s];r.activeTexture(r[\"TEXTURE\"+n]),r.bindTexture(r.TEXTURE_2D,t),u&&(b.uploadDataToTexture(r,i,e,a),e.data=null)},e.prototype.setUniform=function(n,e,o,t,r){var i=this,s=Object.keys(n),a=this.gl;s.forEach((function(s){var u=n[s].type,l=n[s].value,f=i.getUniformLoc(s,e,o,t,r);F.setUniformParam(a,f,u,l)}))},e.prototype.getUniformLoc=function(n,e,o,t,r){var i=r+\"_\";if(o)return this.uniformLocations[i+e][n+t];var s=this.gl.getUniformLocation(this.program.program,n);return this.uniformLocations[i+e]=this.uniformLocations[i+e]||{},this.uniformLocations[i+e][n+t]=s,s},e.prototype.dispose=function(){},e}((function(){})),nn={mainFunc:function(n,e){var o=n.origin,t=n.filter,r=n.out,i=n.bias,s=e.groups,a=void 0===s?1:s,u=e.strides,l=void 0===u?[]:u,f=e.paddings,c=void 0===f?[]:f,_=e.dilations,g=void 0===_?[]:_,h=e.fuse_relu,d=e.filter_nearest_vec4,p=e.filter_remainder_vec4,m=e.act_type,P=void 0===m?\"\":m,v=e.padding_algorithm,x=void 0===v?\"\":v,T=e.hard_swish_offset,F=void 0===T?3:T,b=e.hard_swish_scale,y=void 0===b?6:b,E=e.hard_swish_threshold,w=void 0===E?6:E,V=l[0],A=void 0===V?1:V,O=l[1],C=void 0===O?1:O,R=c[0],S=void 0===R?0:R,I=c[1],L=void 0===I?0:I,k=g[0],B=void 0===k?1:k,M=g[1],D=void 0===M?1:M;return\"SAME\"===x&&Math.ceil((o.width_shape-t.width_shape)/A)+1!==r.width_shape&&(S=1,L=1),\"\\n    // start函数\\n    void main(void) {\\n        ivec4 oPos = getOutputTensorPos();\\n        int x = oPos.a;\\n        int c = oPos.g;\\n        int y = oPos.b;\\n        int b = oPos.r;\\n        float res = 0.0;\\n\\n        // 获取output的坐标\\n        int oTensorChannel = (c / (\"+r.channel+\" / \"+a+\")) * \"+t.channel+\";\\n        int oy = y * \"+A+\" - \"+S+\";\\n        for (int fy = 0; fy < \"+t.height_shape+\"; fy++) {\\n            if (oy >= \"+o.height_shape+\") {\\n                break;\\n            }\\n            if (oy < 0) {\\n                oy += \"+B+\";\\n                continue;\\n            }\\n            int ox = x * \"+C+\" - \"+L+\";\\n            for (int fx = 0; fx < \"+t.width_shape+\"; fx++) {\\n                if (ox >= \"+o.width_shape+\") {\\n                    break;\\n                }\\n                if (ox < 0) {\\n                    ox += \"+D+\";\\n                    continue;\\n                }\\n                // channel计算\\n                for (int j = 0; j < \"+d+\"; j += 4) {\\n                    vec4 fValues = vec4(\\n                        getValueFromTensorPos_filter(c, j, fy, fx),\\n                        getValueFromTensorPos_filter(c, j + 1, fy, fx),\\n                        getValueFromTensorPos_filter(c, j + 2, fy, fx),\\n                        getValueFromTensorPos_filter(c, j + 3, fy, fx)\\n                    );\\n\\n                    vec4 oValues = vec4(\\n                        getValueFromTensorPos_origin(b, oTensorChannel + j, oy, ox),\\n                        getValueFromTensorPos_origin(b, oTensorChannel + j + 1, oy, ox),\\n                        getValueFromTensorPos_origin(b, oTensorChannel + j + 2, oy, ox),\\n                        getValueFromTensorPos_origin(b, oTensorChannel + j + 3, oy, ox)\\n                      );\\n\\n                    res += dot(fValues, oValues);\\n                }\\n\\n                if (\"+p+\" == 1) {\\n                    res += dot(\\n                        getValueFromTensorPos_filter(c, \"+d+\", fy, fx),\\n                        getValueFromTensorPos_origin(b, oTensorChannel + \"+d+\", oy, ox));\\n                } else if (\"+p+\" == 2) {\\n                    vec2 fValues = vec2(\\n                        getValueFromTensorPos_filter(c, \"+d+\", fy, fx),\\n                        getValueFromTensorPos_filter(c, \"+d+\" + 1, fy, fx)\\n                    );\\n                    vec2 oValues = vec2(\\n                        getValueFromTensorPos_origin(b, oTensorChannel + \"+d+\", oy, ox),\\n                        getValueFromTensorPos_origin(b, oTensorChannel + \"+d+\" + 1, oy, ox)\\n                      );\\n                    res += dot(fValues, oValues);\\n                } else if (\"+p+\" == 3) {\\n                    vec3 fValues = vec3(\\n                        getValueFromTensorPos_filter(c, \"+d+\", fy, fx),\\n                        getValueFromTensorPos_filter(c, \"+d+\" + 1, fy, fx),\\n                        getValueFromTensorPos_filter(c, \"+d+\" + 2, fy, fx)\\n                    );\\n                    vec3 oValues = vec3(\\n                        getValueFromTensorPos_origin(b, oTensorChannel + \"+d+\", oy, ox),\\n                        getValueFromTensorPos_origin(b, oTensorChannel + \"+d+\" + 1, oy, ox),\\n                        getValueFromTensorPos_origin(b, oTensorChannel + \"+d+\" + 2, oy, ox)\\n                    );\\n                    res += dot(fValues, oValues);\\n                }\\n\\n                ox += \"+D+\";\\n            }\\n            oy += \"+B+\";\\n        }\\n\\n        \"+(i?\"res += getValueFromTensorPos_bias(0, 0, 0, c);\":\"\")+\"\\n\\n        if (\"+h+\") {\\n            res = max(0.0, res);\\n        }\\n        else if (\"+(\"relu6\"===P)+\") {\\n            res = min(max(0.0, res), 6.0);\\n        }\\n        else if (\"+(\"hard_swish\"===P)+\") {\\n            res = res * min(\\n                max(0.0, res + float(\"+F+\")),\\n                float(\"+w+\")\\n            ) / float(\"+y+\");\\n        }\\n\\n        setOutput(res);\\n    }\\n    \"},textureFuncConf:{filter:[\"getValueFromTensorPos\"],origin:[\"getValueFromTensorPos\"],bias:[\"getValueFromTensorPos\"]},behaviors:[\"adaptPaddings\",\"isApplySeparableConv\",\"batchComputeConv2d\",\"processBias\"]};function en(n,e){var o=n[0],t=n[1],r=n[2],i=n[3];if(1===o&&1===t)return[[1,1,r],3,[i],1,[r,i]];var s=n.slice(0,e),a=n.slice(e);return[s,s.length,a,a.length,[s.reduce((function(n,e){return n*e})),a.reduce((function(n,e){return n*e}))]]}function on(n,e,o){if(1===o)return\"\\n            int getTensorPosFromArrayIndex_\"+n+\"(int n) {\\n                return calMod(n, \"+e[0]+\");\\n            }\\n        \";var t=g(e);return t.push(1),\"\\n    ivec\"+o+\" shapeVec_\"+n+\" = ivec\"+o+\"(\"+t.join(\", \")+\");\\n    ivec\"+o+\" getTensorPosFromArrayIndex_\"+n+\"(int n) {\\n        ivec\"+o+\" pos;\\n        pos[0] = n / shapeVec_\"+n+\"[0];\\n        for (int i = 1; i < \"+o+\"; i++) {\\n            n = calMod(n, shapeVec_\"+n+\"[i - 1]);\\n            pos[i] = n / shapeVec_\"+n+\"[i];\\n        }\\n        return pos;\\n    }\\n    \"}function tn(n){return 1===n?\"int\":\"ivec\"+n}function rn(n){var e=n.total_shape,o=n.channel,t=n.height_shape,r=n.width_shape;return[e/o/t/r,o,t,r]}const sn={mainFunc:function(n,e){var o=n.origin,t=e.transpose_X,r=void 0!==t&&t,i=e.transpose_Y,s=void 0!==i&&i,a=e.trans_x,u=void 0!==a&&a,l=e.trans_y,f=r||u,c=s||void 0!==l&&l;return\"\\n    void main() {\\n        float res = 0.0;\\n        // 获取output的坐标\\n        ivec4 out_pos = getOutputTensorPos();\\n        ivec4 origin_pos = out_pos;\\n        if (\"+f+\") {\\n            origin_pos[3] = origin_pos[2];\\n        }\\n        ivec4 counter_pos = out_pos;\\n        if (\"+c+\") {\\n            counter_pos[2] = counter_pos[3];\\n        }\\n\\n        for (int j = 0; j < \"+(f?o.height_shape:o.width_shape)+\"; j++) {\\n            if (\"+f+\") {\\n                origin_pos[2] = j;\\n            }\\n            else {\\n                origin_pos[3] = j;\\n            }\\n            if (\"+c+\") {\\n                counter_pos[3] = j;\\n            }\\n            else {\\n                counter_pos[2] = j;\\n            }\\n            float o = getValueFromTensorPos_origin(origin_pos[0], origin_pos[1], origin_pos[2], origin_pos[3]);\\n            float c = getValueFromTensorPos_counter(counter_pos[0], counter_pos[1], counter_pos[2], counter_pos[3]);\\n            \\n            res += c * o;\\n        }\\n        setOutput(res);\\n    }\\n    \"},textureFuncConf:{counter:[\"getValueFromTensorPos\"],origin:[\"getValueFromTensorPos\"]}};function an(n,e){var o=n[0],t=n[1],r=n[2],i=n[3];if(1===o&&1===t)return[[1,1,r],3,[i],1,[r,i]];var s=n.slice(0,e),a=n.slice(e);return[s,s.length,a,a.length,[s.reduce((function(n,e){return n*e})),a.reduce((function(n,e){return n*e}))]]}function un(n,e,o){if(1===o)return\"\\n            int getTensorPosFromArrayIndex_\"+n+\"(int n) {\\n                return calMod(n, \"+e[0]+\");\\n            }\\n        \";var t=g(e);return t.push(1),\"\\n    ivec\"+o+\" shapeVec_\"+n+\" = ivec\"+o+\"(\"+t.join(\", \")+\");\\n    ivec\"+o+\" getTensorPosFromArrayIndex_\"+n+\"(int n) {\\n        ivec\"+o+\" pos;\\n        pos[0] = n / shapeVec_\"+n+\"[0];\\n        for (int i = 1; i < \"+o+\"; i++) {\\n            n = calMod(n, shapeVec_\"+n+\"[i - 1]);\\n            pos[i] = n / shapeVec_\"+n+\"[i];\\n        }\\n        return pos;\\n    }\\n    \"}function ln(n){return 1===n?\"int\":\"ivec\"+n}function fn(n){var e=n.total_shape,o=n.channel,t=n.height_shape,r=n.width_shape;return[e/o/t/r,o,t,r]}const cn={mainFunc:function(n,e){return\"\\n    // start函数\\n    void main(void) {\\n        vec2 outCoord = vCoord.xy * (_2d_shape_texture_out);\\n        int index = int(outCoord.x) + int(outCoord.y) * int(\"+n.out.width_texture+\");\\n        ivec4 originPos = getTensorPosFromArrayIndex_origin(index);\\n        float res = getValueFromTensorPos_origin(originPos[0], originPos[1], originPos[2], originPos[3]);\\n        setOutput(res);\\n    }\\n    \"},textureFuncConf:{origin:[\"getTensorPosFromArrayIndex\",\"getValueFromTensorPos\"]}},_n={mainFunc:function(n,e){var o=n.out,t=n.origin,r=e.align_mode,i=void 0===r?1:r,s=e.align_corners,a=void 0===s||s;return\"\\n    // start函数\\n\\n    vec4 getData(float n, float scale, bool align_flag, int in_len) {\\n        float m = align_flag ? ((n + 0.5) / scale - 0.5) : (n / scale);\\n        int a1 = int(floor(m));\\n        a1 = a1 > 0 ? a1 : 0;\\n        int a2 = (a1 + 1) < (in_len - 1) ? (a1 + 1) : (in_len - 1);\\n\\n        float idx_src = (n + 0.5) / scale - 0.5;\\n        idx_src = idx_src > 0.0 ? idx_src : 0.0;\\n        float b1 = align_flag ? (idx_src - float(a1)) : (n / scale - float(a1));\\n        float b2 = 1.0 - b1;\\n        return vec4(float(a1), float(a2), b1, b2);\\n    }\\n\\n    void main(void) {\\n        // 输出数据\\n        ivec4 oPos = getOutputTensorPos();\\n\\n        bool align_flag = \"+i+\" == 0 && !\"+a+\";\\n\\n        float scale_x = 0.0;\\n        float scale_y = 0.0;\\n        if (\"+a+\") {\\n            scale_x = float(\"+o.width_shape+\" - 1) / float(\"+t.width_shape+\" - 1);\\n            scale_y = float(\"+o.height_shape+\" - 1) / float(\"+t.height_shape+\" - 1);\\n        }\\n        else {\\n            scale_x = float(\"+o.width_shape+\") / float(\"+t.width_shape+\");\\n            scale_y = float(\"+o.height_shape+\") / float(\"+t.height_shape+\");\\n        }\\n\\n        vec4 vx = getData(float(oPos.a), scale_x, align_flag, \"+t.width_shape+\");\\n        vec4 vy = getData(float(oPos.b), scale_y, align_flag, \"+t.height_shape+\");\\n\\n        int x1 = int(vx.r);\\n        int x2 = int(vx.g);\\n        float x3 = vx.b;\\n        float x4 = vx.a;\\n        int y1 = int(vy.r);\\n        int y2 = int(vy.g);\\n        float y3 = vy.b;\\n        float y4 = vy.a;\\n\\n        float value11 = getValueFromTensorPos_origin(oPos.r, oPos.g, y1, x1);\\n        float value12 = getValueFromTensorPos_origin(oPos.r, oPos.g, y2, x1);\\n        float value21 = getValueFromTensorPos_origin(oPos.r, oPos.g, y1, x2);\\n        float value22 = getValueFromTensorPos_origin(oPos.r, oPos.g, y2, x2);\\n        float value = x4 * y4 * value11 + x4 * y3 * value12 + x3 * y4 * value21 + x3 * y3 * value22;\\n        setOutput(float(value));\\n    }\\n    \"},textureFuncConf:{origin:[\"getValueFromTensorPos\"]}},gn=_n;var hn={relu:[\"transToPrelu\"],relu6:[\"transToRelu6\"],leaky_relu:[\"transToLeakyrelu\"],transToLeakyrelu:[\"transToLeakyrelu\"],scale:[\"transToScale\"],sigmoid:[\"transToSigmoid\"],hard_sigmoid:[\"transToHardSigmoid\"],pow:[\"transToPow\"],exp:[\"transToExp\"],sqrt:[\"transToSqrt\"],tanh:[\"transToTanh\"]};function dn(n,e){var o=e.multi_value,t=void 0===o?1:o,r=e.bias_value,i=void 0===r?0:r;return\"\\n    // start函数\\n    void main(void) {\\n        // 输出数据\\n        float o = getPixelsFromTexturePos_origin(vCoord).r;\\n        float res = \"+e.active_function+\"(o, float(\"+t+\"), float(\"+i+\"));\\n        setOutput(res);\\n    }\\n    \"}function pn(n){return{mainFunc:dn,textureFuncConf:{origin:[\"getPixelsFromTexturePos\"]},behaviors:hn[n]}}const mn={mainFunc:function(n,e){var o=e.axes,t=Array.isArray(o)?o:[o],r=[0,1,2,3].filter((function(n){return n>=t.length}));return\"\\n    // start函数\\n    void main(void) {\\n        ivec4 oPos = getOutputTensorPos();\\n        // 输出坐标转换为输入坐标\\n        float o = 0.0;\\n        o = getValueFromTensorPos_origin(\"+[0,1,2,3].map((function(n){return t.indexOf(n)>-1?0:\"oPos[\"+r.splice(0,1)+\"]\"})).join(\",\")+\");\\n        setOutput(float(o));\\n    }\\n    \"},textureFuncConf:{origin:[\"getValueFromTensorPos\"]}},Pn={mainFunc:function(n,e){var o=n.origin,t=n.out,r=e.align_corners;return\"\\n    // start函数\\n    int getData(float n, float scale, bool align_corners) {\\n        float m = align_corners ? (n / scale + 0.5) : (n / scale);\\n        return int(floor(m));\\n    }\\n\\n    void main(void) {\\n        // 输出数据\\n        ivec4 oPos = getOutputTensorPos();\\n        \\n        float scale_x = 0.0;\\n        float scale_y = 0.0;\\n        if (\"+r+\") {\\n            scale_x = float(\"+t.width_shape+\" -1) / float(\"+o.width_shape+\" - 1);\\n            scale_y = float(\"+t.height_shape+\" - 1) / float(\"+o.height_shape+\" - 1);\\n        }\\n        else {\\n            scale_x = float(\"+t.width_shape+\") / float(\"+o.width_shape+\");\\n            scale_y = float(\"+t.height_shape+\") / float(\"+o.height_shape+\");\\n        }\\n    \\n        int vx = getData(float(oPos.a), scale_x, \"+r+\");\\n        int vy = getData(float(oPos.b), scale_y, \"+r+\");\\n        \\n        float o = getValueFromTensorPos_origin(oPos.r, oPos.g, vy, vx);\\n        setOutput(float(o));\\n}\\n    \"},textureFuncConf:{origin:[\"getValueFromTensorPos\"]},commonFuncConf:[\"transferFromNHWCtoNCHW\"]};var vn=function(){for(var n=0,e=0,o=arguments.length;e<o;e++)n+=arguments[e].length;var t=Array(n),r=0;for(e=0;e<o;e++)for(var i=arguments[e],s=0,a=i.length;s<a;s++,r++)t[r]=i[s];return t};const xn={mainFunc:function(n,e){var o=n.origin,t=n.image,r=n.out,i=e.variances,s=void 0===i?[.1,.1,.2,.2]:i,a=e.fixed_sizes,u=e.fixed_ratios,l=e.densities,f=e.flatten_to_2d,c=e.clip,_=e.step_w,d=void 0===_?0:_,p=e.step_h,m=void 0===p?0:p,P=e.offset,v=void 0===P?.5:P,x=e.runtime,T=void 0===x?0:x,F=t.height_shape,b=t.width_shape,y=o.height_shape,E=o.width_shape,w=r.total_shape,V=r.channel,A=r.height_shape,O=r.width_shape,C=w/V/A/O,R=g([C,V,A,O]),S=d,I=m;0!==d&&0!==m||(S=b/E,I=F/y);var L=Math.round(.5*(S+I)),k=u.map((function(n){return Math.sqrt(n)})),B=1===k.length?\"sqrt_fixed_ratios\":\"sqrt_fixed_ratios[r]\",M=u.length,D=A,U=C,j=V;f&&(U=y,j=E,D=A/y/E);var N=g([U,j,D,O]),X=G(\"out1\",{numbers_shape:vn(N,[1]),length_shape:4}),H=l.map((function(n){return n*n*M})),W=H.length,z=function(n){var e=\"ivec2 calRemain(int remain, int curAccIndex, int s) {\",o=n.length;if(1===o)e+=\"\\n            int accIndex0 = density_acc_shape;\\n\\n            if (remain >= accIndex0) {\\n                s++;\\n                remain -= accIndex0;\\n            }\\n            else {\\n                return ivec2(remain, s);\\n            }\\n            \";else for(var t=0;t<o;t++)e+=\"\\n            int accIndex\"+t+\" = density_acc_shape[\"+t+\"];\\n\\n            if (remain >= accIndex\"+t+\") {\\n                s++;\\n                remain -= accIndex\"+t+\";\\n            }\\n            else {\\n                return ivec2(remain, s);\\n            }\\n            \";return e+\"\\n    }\\n    \"}(H),Y=c?\"v = min(max(v, 0.), 1.);\":\"\",q=1===W?\"density_acc_shape\":\"density_acc_shape[0]\",Z=\"\\n    float getFloat4TensorVal(vec4 tensor, int index) {\\n        if (index == 0) {\\n            return tensor[0];\\n        }\\n        else if (index == 1) {\\n            return tensor[1];\\n        }\\n        else if (index == 2) {\\n            return tensor[2];\\n        }\\n        else if (index == 3) {\\n            return tensor[3];\\n        }\\n    }\\n    float getFloat3TensorVal(vec3 tensor, int index) {\\n        if (index == 0) {\\n            return tensor[0];\\n        }\\n        else if (index == 1) {\\n            return tensor[1];\\n        }\\n        else if (index == 2) {\\n            return tensor[2];\\n        }\\n    }\\n    float getFloat2TensorVal(vec2 tensor, int index) {\\n        if (index == 0) {\\n            return tensor[0];\\n        }\\n        else if (index == 1) {\\n            return tensor[1];\\n        }\\n    }\\n    float getFloat1TensorVal(float tensor, int index) {\\n        return tensor;\\n    }\\n    int getInt4TensorVal(ivec4 tensor, int index) {\\n        if (index == 0) {\\n            return tensor[0];\\n        }\\n        else if (index == 1) {\\n            return tensor[1];\\n        }\\n        else if (index == 2) {\\n            return tensor[2];\\n        }\\n        else if (index == 3) {\\n            return tensor[3];\\n        }\\n    }\\n    int getInt3TensorVal(ivec3 tensor, int index) {\\n        if (index == 0) {\\n            return tensor[0];\\n        }\\n        else if (index == 1) {\\n            return tensor[1];\\n        }\\n        else if (index == 2) {\\n            return tensor[2];\\n        }\\n    }\\n    int getInt2TensorVal(ivec2 tensor, int index) {\\n        if (index == 0) {\\n            return tensor[0];\\n        }\\n        else if (index == 1) {\\n            return tensor[1];\\n        }\\n    }\\n\\n    int getInt1TensorVal(int tensor, int index) {\\n       return tensor;\\n    }\\n\\n    \"+X+\"\\n    \\n        \"+h(l,\"densities\")+\"\\n        \"+h(a,\"fixed_sizes\")+\"\\n        \"+h(k,\"sqrt_fixed_ratios\")+\"\\n        \"+function(n,e){if(1===n.length)return\"int \"+e+\" = int(\"+n[0]+\");\";for(var o=n.length,t=\"\\n        ivec\"+o+\" \"+e+\" = ivec\"+o+\"(\\n    \",r=0;r<o;r++)t+=n[r]+\",\";return t.slice(0,-1)+\");\"}(H,\"density_acc_shape\")+\"\\n    \\n    \"+z+\"\\n    // start函数\\n    void main(void) {\\n        ivec4 oPos = getOutputTensorPos();\\n        int rr = int(oPos.r);\\n        int gg = int(oPos.g);\\n        int bb = int(oPos.b);\\n        int aa = int(oPos.a);\\n\\n        // 输出坐标转换为输入坐标\\n        int index = rr * \"+R[0]+\" + gg * \"+R[1]+\" + bb * \"+R[2]+\" + aa;\\n        ivec4 realOutPos = getTensorPosFromArrayIndex_out1(index);\\n        int h = realOutPos.r;\\n        int w = realOutPos.g;\\n        int b = realOutPos.b;\\n        int a = realOutPos.a;\\n    \";return 1===T?\"\\n        \"+h(s,\"variances\")+\"\\n        \"+Z+\"\\n        setOutput(getFloat4TensorVal(variances, aa));\\n        }\":\"\\n            \"+Z+\"\\n            // 求idx 对应的 s, r, di, dj\\n            int s = 0;\\n            int remain = b;\\n            int curAccIndex = \"+q+\";\\n\\n            ivec2 remainInfo = calRemain(remain, curAccIndex, s);\\n            remain = remainInfo[0];\\n            s = remainInfo[1];\\n            int density = int(getFloat\"+l.length+\"TensorVal(densities, s));\\n            int r = int(floor(float(remain / density / density)));\\n            remain -= r * density * density;\\n\\n            float di = floor(float(remain / density));\\n            float dj = float(remain - int(di) * density);\\n\\n            float center_x = (float(w) + float(\"+v+\")) * float(\"+S+\");\\n            float center_y = (float(h) + float(\"+v+\")) * float(\"+I+\");\\n            float fixed_size = getFloat\"+a.length+\"TensorVal(fixed_sizes, s);\\n            float shift = float(\"+L+\") / float(density);\\n\\n            float v = 0.0;\\n            if (a == 0 || a == 2) {\\n                float box_width_ratio = fixed_size * \"+B+\";\\n                float density_center_x = center_x - float(\"+L+\") / 2. + shift / 2.;\\n                float center_x_temp = density_center_x + dj * shift;\\n                if (a == 0) {\\n                    v = max((center_x_temp - box_width_ratio / 2.) / float(\"+b+\"), 0.);\\n                }\\n                else {\\n                    v = min((center_x_temp + box_width_ratio / 2.) / float(\"+b+\"), 1.);\\n                }\\n            }\\n            else {\\n                float box_height_ratio = fixed_size / \"+B+\";\\n                float density_center_y = center_y - float(\"+L+\") / 2. + shift / 2.;\\n                float center_y_temp = density_center_y + di * shift;\\n                if (a == 1) {\\n                    v = max((center_y_temp - box_height_ratio / 2.) / float(\"+F+\"), 0.);\\n                }\\n                else {\\n                    v = min((center_y_temp + box_height_ratio / 2.) / float(\"+F+\"), 1.);\\n                }\\n            }\\n\\n            \"+Y+\"\\n\\n            setOutput(v);\\n        }\\n        \"},textureFuncConf:{image:[\"getValueFromTensorPos\"],origin:[\"getValueFromTensorPos\"]}},Tn={mainFunc:function(n,e){var o=n.origin,t=n.image,r=n.out,i=e.variances,s=void 0===i?[.1,.1,.2,.2]:i,a=e.flip,u=e.clip,l=e.step_w,f=void 0===l?0:l,c=e.step_h,g=void 0===c?0:c,m=e.offset,P=void 0===m?.5:m,v=e.runtime,x=void 0===v?0:v,T=e.min_sizes,F=void 0===T?[]:T,b=e.max_sizes,y=void 0===b?[]:b,E=e.aspect_ratios,w=void 0===E?[]:E,V=e.min_max_aspect_ratios_order,A=void 0!==V&&V,O=t.height_shape,C=t.width_shape,R=o.height_shape,S=o.width_shape,I=r.channel,L=r.height_shape,k=f,B=g;0!==f&&0!==g||(k=C/S,B=O/R);var M=[1];w.forEach((function(n){1!==n&&(M.push(Math.sqrt(n)),a&&M.push(Math.sqrt(1/n)))}));var D=M.length,U=\"\\n        \"+d(F,\"min_sizes\",_.FLOAT_TYPE)+\"\\n        \"+d(y,\"max_sizes\",_.FLOAT_TYPE)+\"\\n        \"+d(M,\"aspect_ratios\",_.FLOAT_TYPE)+\"\\n    \",j=u?\"res = min(max(res, 0.), 1.);\":\"\",N=\"\\n    float getFloat4TensorVal(vec4 tensor, int index) {\\n        if (index == 0) {\\n            return tensor[0];\\n        }\\n        else if (index == 1) {\\n            return tensor[1];\\n        }\\n        else if (index == 2) {\\n            return tensor[2];\\n        }\\n        else if (index == 3) {\\n            return tensor[3];\\n        }\\n    }\\n\\n    \\n        \"+p(F,\"min_sizes\",_.FLOAT_TYPE)+\"\\n        \"+p(y,\"max_sizes\",_.FLOAT_TYPE)+\"\\n        \"+p(M,\"aspect_ratios\",_.FLOAT_TYPE)+\"\\n    \\n\\n    // start函数\\n    void main(void) {\\n        ivec4 oPos = getOutputTensorPos();\\n        int nn = int(oPos.r);\\n        int cc = int(oPos.g);\\n        int hh = int(oPos.b);\\n        int ww = int(oPos.a);\\n\\n\\n        \"+U+\"\\n\\n    \";return 1===x?\"\\n            \"+h(s,\"variances\")+\"\\n            \"+N+\"\\n            float res = 0.0;\\n            res = getFloat4TensorVal(variances, ww);\\n            setOutput(float(res));\\n        }\":\"\\n            \"+N+\"\\n            int idx = nn * \"+I*L+\" + cc * \"+L+\" + hh;\\n            int as_num = \"+D+\";\\n            float offset = \"+P+\";\\n            \\n            int feature_width = \"+S+\";\\n            int num_priors = \"+L+\";\\n            float step_width = float(\"+k+\");\\n            float step_height = float(\"+B+\");\\n\\n            float im_width = float(\"+C+\");\\n            float im_height = float(\"+O+\");\\n\\n            bool min_max_aspect_ratios_order = \"+A+\";\\n\\n            // 求idx 对应的 h w p m\\n            int h = int(idx / (num_priors * feature_width));\\n            int w = calMod(idx / num_priors, feature_width);\\n            int p = calMod(idx, num_priors);\\n            int m = \"+(y.length>0)+\" ? int(p / (as_num + 1)) : int(p / as_num);\\n            float cx = (float(w) + offset) * step_width;\\n            float cy = (float(h) + offset) * step_height;\\n            float min_size = getValueFromArrByIndex_min_sizes(min_sizes, m);\\n            float bw = 0.0;\\n            float bh = 0.0;\\n\\n            \"+(y.length>0?\"\\n            int s = calMod(p, as_num + 1);\\n            if (\"+!A+\") {\\n                if (s < as_num) {\\n                    float ar = getValueFromArrByIndex_aspect_ratios(aspect_ratios, s);\\n                    bw = min_size * ar / 2.0;\\n                    bh = min_size / ar / 2.0;\\n                }\\n                else {\\n                    float max_size = getValueFromArrByIndex_max_sizes(max_sizes, m);\\n                    bw = sqrt(min_size * max_size) / 2.0;\\n                    bh = bw;\\n                }\\n            }\\n            else {\\n                if (s == 0) {\\n                    bh = min_size / 2.0;\\n                    bw = bh;\\n                }\\n                else if (s == 1) {\\n                    float max_size = getValueFromArrByIndex_max_sizes(max_sizes, m);\\n                    bw = sqrt(min_size * max_size) / 2.0;\\n                    bh = bw;\\n                }\\n                else {\\n                    float ar = getValueFromArrByIndex_aspect_ratios(aspect_ratios, s - 1);\\n                    bw = min_size * sqrt(ar) / 2.0;\\n                    bh = min_size / sqrt(ar) / 2.0;\\n                }\\n            }\":\"\\n            int s = calMod(p, as_num);\\n            float ar = getValueFromArrByIndex_aspect_ratios(aspect_ratios, s);\\n            bw = min_size * ar / 2.0;\\n            bh = min_size / ar / 2.0;\\n        \")+\"\\n            float res = 0.0;\\n            if (ww == 0) {\\n                res = (cx - bw) / im_width;\\n            }\\n            else if (ww == 1) {\\n                res = (cy - bh) / im_height;\\n            }\\n            else if (ww == 2) {\\n                res = (cx + bw) / im_width;\\n            }\\n            else {\\n                res = (cy + bh) / im_height;\\n            }\\n\\n            \"+j+\"\\n\\n            setOutput(float(res));\\n        }\\n        \"},textureFuncConf:{image:[\"getValueFromTensorPos\"],origin:[\"getValueFromTensorPos\"]},behaviors:[]};const Fn={mainFunc:function(n,e){for(var o=n.out,t=function(n,e){var o={};for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&e.indexOf(t)<0&&(o[t]=n[t]);if(null!=n&&\"function\"==typeof Object.getOwnPropertySymbols){var r=0;for(t=Object.getOwnPropertySymbols(n);r<t.length;r++)e.indexOf(t[r])<0&&Object.prototype.propertyIsEnumerable.call(n,t[r])&&(o[t[r]]=n[t[r]])}return o}(n,[\"out\"]),r=t.origin,i=r.width_shape,s=r.height_shape,a=r.channel,u=r.total_shape,l=r.length_unformatted_shape,f=[u/(i*s*a),a,s,i].slice(4-l),c=Object.keys(t).length,_=e.axis<0?e.axis+f.length+1:e.axis,g=1,h=1,d=0;d<_;d++)g*=f[d];for(d=_;d<f.length;d++)h*=f[d];var p=o.total_shape/g,m=\"\";return m=Array.from(Array(c).keys()).reduce((function(n,e){return n+(0===e?\"\\n            if (i == 0) {\\n                ivec4 co = getTensorPosFromArrayIndex_origin(j);\\n                o = getValueFromTensorPos_origin(co.r, co.g, co.b, co.a);\\n            }\":\"\\n            else if (i == \"+e+\") {\\n                ivec4 co = getTensorPosFromArrayIndex_origin_\"+e+\"(j);\\n                o = getValueFromTensorPos_origin_\"+e+\"(co.r, co.g, co.b, co.a);\\n            }\")}),m),\"\\n    // start函数\\n    void main(void) {\\n        ivec4 oPos = getOutputTensorPos();\\n        // 输出坐标转换为输入坐标\\n        int sumVal = oPos.a\\n            + oPos.b * \"+o.width_shape+\"\\n            + oPos.g * \"+o.height_shape+\" * \"+o.width_shape+\"\\n            + oPos.r * \"+o.channel+\" * \"+o.width_shape+\" * \"+o.height_shape+\";\\n\\n        int index = calMod(sumVal, \"+p+\");\\n\\n        int layer = sumVal / \"+p+\";\\n\\n        int i = index / \"+h+\";\\n        int j = calMod(index, \"+h+\") + layer * \"+h+\";\\n\\n        float o = 0.0;\\n        \"+m+\"\\n        setOutput(float(o));\\n    }\\n    \"},textureFuncConf:{\"@all\":[\"getValueFromTensorPos\",\"getTensorPosFromArrayIndex\"]}},bn={mainFunc:function(n,e){var o=n.out,t=n.origin,r=e.axes,i=e.starts,s=e.ends,a=e.decrease_axis;if(r.length>1||i.length>1||s.length>1||a&&0===a.length)throw Error(\"[slice op feature]: current support one dim, support decrease_axis\");var u=t.width_shape,l=t.height_shape,f=t.channel,c=t.total_shape,g=t.length_unformatted_shape,h=[c/(u*l*f),f,l,u],m=r[0];if(m<0&&(m=m+g+1),4!==(m=4-g+m))throw Error(\"[slice op feature]: unsupport axis value\");for(var P=i[0],v=s[0],x=h[0],T=h[1],F=h[2],b=h[3],y=[],E=P;E<v;E++)for(var w=0;w<x;w++)for(var V=0;V<T;V++)for(var A=0;A<F;A++)y.push(w*T*F*b+V*F*b+A*b+E);var O=d(y,\"arr\",_.INT_TYPE);return\"\\n    \"+p(y,\"arr\",_.INT_TYPE)+\"\\n\\n    void main(void) {\\n        ivec4 oPos = getOutputTensorPos();\\n        \"+O+\"\\n\\n        // 输出坐标转换为输入坐标\\n        int sumVal = oPos.a\\n            + oPos.b * \"+o.width_shape+\"\\n            + oPos.g * \"+o.height_shape+\" * \"+o.width_shape+\"\\n            + oPos.r * \"+o.channel+\" * \"+o.width_shape+\" * \"+o.height_shape+\";\\n\\n        int index = getValueFromArrByIndex_arr(arr, sumVal);\\n\\n        float res = 0.0;\\n        ivec4 co = getTensorPosFromArrayIndex_origin(index);\\n        res = getValueFromTensorPos_origin(co.r, co.g, co.b, co.a);\\n        setOutput(float(res));\\n    }\\n    \"},textureFuncConf:{origin:[\"getValueFromTensorPos\",\"getTensorPosFromArrayIndex\"]}};var yn={arg_max:{mainFunc:function(n,e){var o=n.origin,t=e.axis,r=void 0===t?-1:t,i=e.flatten,s=o.total_shape,a=o.height_shape,u=o.width_shape,l=o.channel,f=o.length_unformatted_shape,c=s/(u*a*l),_=r<0?3:4-f+r,g=[c,l,a,u][_];return\"\\n\\n    void main() {\\n        ivec4 oPos = getOutputTensorPos();\\n        float o = 0.0;\\n        int pos = 0;\\n        if (\"+!i+\") {\\n            if (\"+_+\" == 1) {\\n                float tmp = getValueFromTensorPos_origin(oPos.g, 0, oPos.b, oPos.a);\\n                for (int index = 0; index < \"+g+\"; index++) {\\n                    o = getValueFromTensorPos_origin(oPos.g, index, oPos.b, oPos.a);\\n                    if (o > tmp) {\\n                        tmp = o;\\n                        pos = index;\\n                    }\\n                }\\n            }\\n            else if (\"+_+\" == 2) {\\n                float tmp = getValueFromTensorPos_origin(oPos.g, oPos.b, 0, oPos.a);\\n                for (int index = 0; index < \"+g+\"; index++) {\\n                    o = getValueFromTensorPos_origin(oPos.g, oPos.b, index, oPos.a);\\n                    if (o > tmp) {\\n                        tmp = o;\\n                        pos = index;\\n                    }\\n                }\\n            }\\n            else if (\"+_+\" == 3) {\\n                float tmp = getValueFromTensorPos_origin(oPos.g, oPos.b, oPos.a, 0);\\n                for (int index = 0; index < \"+g+\"; index++) {\\n                    o = getValueFromTensorPos_origin(oPos.g, oPos.b, oPos.a, index);\\n                    if (o > tmp) {\\n                        tmp = o;\\n                        pos = index;\\n                    }\\n                }\\n            }\\n            else {\\n                float tmp = getValueFromTensorPos_origin(0, oPos.g, oPos.b, oPos.a);\\n                for (int index = 0; index < \"+g+\"; index++) {\\n                    o = getValueFromTensorPos_origin(index, oPos.g, oPos.b, oPos.a);\\n                    if (o > tmp) {\\n                        tmp = o;\\n                        pos = index;\\n                    }\\n                }\\n            }\\n        }\\n        else {\\n            int index = 0;\\n            float tmp = getValueFromTensorPos_origin(0, 0, 0, 0);\\n            for (int n = 0; n < \"+c+\"; n++) {\\n                for (int c = 0; c < \"+l+\"; c++) {\\n                    for (int h = 0; h < \"+a+\"; h++) {\\n                        for (int w = 0; w < \"+u+\"; w++) {\\n                            o = getValueFromTensorPos_origin(n, c, h, w);\\n                            if (o > tmp) {\\n                                tmp = o;\\n                                pos = index;\\n                            }\\n                            index++;\\n                        }\\n                    }\\n                }\\n            }\\n        }\\n        setOutput(float(pos));\\n    }\"},textureFuncConf:{origin:[\"getValueFromTensorPos\"]}},arg_min:{mainFunc:function(n,e){for(var o=n.origin,t=e.axis,r=void 0===t?-1:t,i=e.flatten,s=o.total_shape,a=o.height_shape,u=o.width_shape,l=o.channel,f=s/(u*a*l),c=[f,l,a,u],_=0,g=0;g<4&&!(c[g]>1);g++)_++;var h=r<0?4-_+r:r,d=c[h=_+h];return\"\\n    void main() {\\n        ivec4 oPos = getOutputTensorPos();\\n        float o = 0.0;\\n        int pos = 0;\\n        if (\"+!i+\") {\\n            if (\"+h+\" == 1) {\\n                float tmp = getValueFromTensorPos_origin(oPos.g, 0, oPos.b, oPos.a);\\n                for (int index = 0; index < \"+d+\"; index++) {\\n                    o = getValueFromTensorPos_origin(oPos.g, index, oPos.b, oPos.a);\\n                    if (o < tmp) {\\n                        tmp = o;\\n                        pos = index;\\n                    }\\n                }\\n            }\\n            else if (\"+h+\" == 2) {\\n                float tmp = getValueFromTensorPos_origin(oPos.g, oPos.b, 0, oPos.a);\\n                for (int index = 0; index < \"+d+\"; index++) {\\n                    o = getValueFromTensorPos_origin(oPos.g, oPos.b, index, oPos.a);\\n                    if (o < tmp) {\\n                        tmp = o;\\n                        pos = index;\\n                    }\\n                }\\n            }\\n            else if (\"+h+\" == 3) {\\n                float tmp = getValueFromTensorPos_origin(oPos.g, oPos.b, oPos.a, 0);\\n                for (int index = 0; index < \"+d+\"; index++) {\\n                    o = getValueFromTensorPos_origin(oPos.g, oPos.b, oPos.a, index);\\n                    if (o < tmp) {\\n                        tmp = o;\\n                        pos = index;\\n                    }\\n                }     \\n            }\\n            else {\\n                float tmp = getValueFromTensorPos_origin(0, oPos.g, oPos.b, oPos.a);\\n                for (int index = 0; index < \"+d+\"; index++) {\\n                    o = getValueFromTensorPos_origin(index, oPos.g, oPos.b, oPos.a);\\n                    if (o < tmp) {\\n                        tmp = o;\\n                        pos = index;\\n                    }\\n                }\\n            }\\n        }\\n        else {\\n            int index = 0;\\n            float tmp = getValueFromTensorPos_origin(0, 0, 0, 0);\\n            for (int n = 0; n < \"+f+\"; n++) {\\n                for (int c = 0; c < \"+l+\"; c++) {\\n                    for (int h = 0; h < \"+a+\"; h++) {\\n                        for (int w = 0; w < \"+u+\"; w++) {\\n                            o = getValueFromTensorPos_origin(n, c, h, w);\\n                            if (o < tmp) {\\n                                tmp = o;\\n                                pos = index;\\n                            }\\n                            index++;\\n                        }\\n                    }\\n                }\\n            }\\n        }\\n        setOutput(float(pos));\\n    }\"},textureFuncConf:{origin:[\"getValueFromTensorPos\"]}},conv2d:nn,conv2d_packing:{mainFunc:function(n,e){var o=n.origin,t=n.filter,r=n.out,i=n.bias,s=e.groups,a=void 0===s?1:s,u=e.strides,l=void 0===u?[]:u,f=e.paddings,c=void 0===f?[]:f,_=e.dilations,g=void 0===_?[]:_,h=e.fuse_relu,d=e.act_type,p=e.hard_swish_offset,m=void 0===p?3:p,P=e.hard_swish_scale,v=void 0===P?6:P,x=e.hard_swish_threshold,T=void 0===x?6:x,F=l[0],b=void 0===F?1:F,y=l[1],E=void 0===y?1:y,w=c[0],V=void 0===w?0:w,A=c[1],O=void 0===A?0:A,C=g[0],R=void 0===C?1:C,S=g[1],I=void 0===S?1:S;return\"\\n    void main() {\\n        ivec4 oPos = getOutputTensorPos();\\n        int x = oPos.a;\\n        int c = oPos.g;\\n        int y = oPos.b;\\n        int b = oPos.r;\\n        vec4 res = vec4(0.0, 0.0, 0.0, 0.0);\\n\\n        int oy = y * \"+b+\" - \"+V+\";\\n        for (int fy = 0; fy < \"+t.height_shape+\"; fy++) {\\n            if (oy >= \"+o.height_shape+\") {\\n                break;\\n            }\\n            if (oy < 0) {\\n                oy += \"+R+\";\\n                continue;\\n            }\\n            int ox = x * \"+E+\" - \"+O+\";\\n            for (int fx = 0; fx < \"+t.width_shape+\"; fx++) {\\n                if (ox >= \"+o.width_shape+\") {\\n                    break;\\n                }\\n                if (ox < 0) {\\n                    ox += \"+I+\";\\n                    continue;\\n                }\\n                // channel计算\\n                for (int j = 0; j < \"+t.channel+\"; j += 1) {\\n                    int c0 = (c / (\"+r.channel+\" * 4 / \"+a+\")) * \"+t.channel+\" + j;\\n                    vec4 fValue = getValueFromTensorPosPacking_filter(c * 4, j, fy, fx);\\n                    vec4 oValue = getValueFromTensorPosPacking_origin(b, c0, oy, ox);\\n\\n                    for (int packed_index = 0; packed_index < 4; packed_index++) {\\n                        if (packed_index == 0) {\\n                            res.r += dot(fValue, oValue);\\n                        } else if (packed_index == 1) {\\n                            int c1 = ((c + 1) / (\"+r.channel+\" * 4 / \"+a+\")) * \"+t.channel+\" + j;\\n                            oValue = getValueFromTensorPosPacking_origin(b, c1, oy, ox);\\n                            fValue = getValueFromTensorPosPacking_filter(c * 4 + 1, j, fy, fx);\\n                            res.g += dot(fValue, oValue);\\n                        } else if (packed_index == 2) {\\n                            int c2 = ((c + 2) / (\"+r.channel+\" * 4 / \"+a+\")) * \"+t.channel+\" + j;\\n                            oValue = getValueFromTensorPosPacking_origin(b, c2, oy, ox);\\n                            fValue = getValueFromTensorPosPacking_filter(c * 4 + 2, j, fy, fx);\\n                            res.b += dot(fValue, oValue);\\n                        } else if (packed_index == 3) {\\n                            int c3 = ((c + 3) / (\"+r.channel+\" * 4 / \"+a+\")) * \"+t.channel+\" + j;\\n                            oValue = getValueFromTensorPosPacking_origin(b, c3, oy, ox);\\n                            fValue = getValueFromTensorPosPacking_filter(c * 4 + 3, j, fy, fx);\\n                            res.a += dot(fValue, oValue);\\n                        }\\n                    }\\n                }\\n                ox += \"+I+\";\\n            }\\n            oy += \"+R+\";\\n        }\\n\\n        \"+(i?\"res += getValueFromTensorPosPacking_bias(0, c, 0, 0);\":\"\")+\"\\n\\n        if (\"+h+\") {\\n            res = max(vec4(0.0, 0.0, 0.0, 0.0), res);\\n        }\\n        else if (\"+(\"relu6\"===d)+\") {\\n            res = min(max(vec4(0.0, 0.0, 0.0, 0.0), res), vec4(6.0, 6.0, 6.0, 6.0));\\n        }\\n        else if (\"+(\"hard_swish\"===d)+\") {\\n            res = res * min(\\n                max(vec4(0.0, 0.0, 0.0, 0.0), res + vec4(\"+m+\")),\\n                vec4(\"+T+\")\\n            ) / vec4(\"+v+\");\\n        }\\n\\n        setPackedOutput(res);\\n    }\\n    \"},textureFuncConf:{filter:[\"getValueFromTensorPosPacking\"],origin:[\"getValueFromTensorPosPacking\"],bias:[\"getValueFromTensorPosPacking\"]},behaviors:[\"adaptPaddings\",\"isApplySeparableConv\",\"batchComputeConv2d\",\"processBias\"]},conv2d_transpose:{mainFunc:function(n,e){var o=n.origin,t=n.filter,r=n.out,i=n.bias,s=e.groups,a=void 0===s?1:s,u=e.strides,l=void 0===u?[]:u,f=e.paddings,c=void 0===f?[]:f,_=e.dilations,g=void 0===_?[]:_,h=e.fuse_relu,d=e.act_type,p=l[0],m=void 0===p?1:p,P=l[1],v=void 0===P?1:P,x=c[0],T=void 0===x?0:x,F=c[1],b=void 0===F?0:F;b=t.height_shape-b-1,T=t.width_shape-T-1;var y=g[0],E=void 0===y?1:y,w=g[1],V=void 0===w?1:w;return\"\\n    // start函数\\n    void main(void) {\\n        ivec4 oPos = getOutputTensorPos();\\n        int x = oPos.a;\\n        int c = oPos.g;\\n        int y = oPos.b;\\n        int b = oPos.r;\\n        float res = 0.0;\\n        int temp_x = 0;\\n        int temp_y = 0;\\n        float o = 0.0;\\n        float f = 0.0;\\n\\n        // 获取output的坐标\\n        int oTensorChannel = int(c * \"+a+\" / \"+r.channel+\") * \"+o.channel+\";\\n        int oy = y - \"+b+\";\\n        const int groupLen = int(\"+o.channel+\" / \"+a+\");\\n        int groupIndex = int(c / groupLen);\\n\\n        for (int fy = 0; fy < \"+t.height_shape+\"; fy++) {\\n            if (oy < 0) {\\n                oy += \"+E+\";\\n                continue;\\n            }\\n            int ox = x - \"+T+\";\\n            for (int fx = 0; fx < \"+t.width_shape+\"; fx++) {\\n\\n                if (ox < 0) {\\n                    ox += \"+V+\";\\n                    continue;\\n                }\\n                // channel计算\\n                for (int j = 0; j < groupLen; j++) {\\n                    int curIndex = j + b * groupLen;\\n                    if (calMod(ox, int(\"+v+\")) == 0 && calMod(oy, int(\"+m+\")) == 0) {\\n                        temp_x = int(floor(float(ox) / float(\"+v+\")));\\n                        temp_y = int(floor(float(oy) / float(\"+m+\")));\\n                        if (temp_x < \"+o.width_shape+\" && temp_y < \"+o.height_shape+\") {\\n                            o = getValueFromTensorPos_origin(b, curIndex , temp_y, temp_x);\\n                            f = getValueFromTensorPos_filter(\\n                                curIndex,\\n                                int(c / \"+a+\"),\\n                                \"+t.height_shape+\"-1-fy,\\n                                \"+t.width_shape+\"-1-fx\\n                            );\\n                            res += f * o;\\n                        }\\n                    }\\n                }\\n                ox += \"+V+\";\\n            }\\n            oy += \"+E+\";\\n        }\\n        \\n        \"+(i?\"res += getValueFromTensorPos_bias(0, 0, 0, c);\":\"\")+\"\\n        \\n        if (\"+h+\") {\\n            res = max(0.0, res);\\n        }\\n        else if (\"+(\"relu6\"===d)+\") {\\n            res = min(max(0.0, res), 6.0);\\n        }\\n        \\n        setOutput(float(res));\\n    }\\n\"},textureFuncConf:{filter:[\"getValueFromTensorPos\"],origin:[\"getValueFromTensorPos\"],bias:[\"getValueFromTensorPos\"]},behaviors:[\"adaptPaddings\",\"isApplySeparableConv\",\"batchComputeConv2d\",\"processBias\"]},depthwise_conv2d:nn,conv2d_depthwise:nn,conv2d_elementwise_add:{mainFunc:function(n,e){var o=n.origin,t=n.filter,r=n.out,i=n.counter,s=e.active_function,a=e.groups,u=void 0===a?1:a,l=e.axis,f=e.strides,c=void 0===f?[]:f,_=e.paddings,g=void 0===_?[]:_,h=e.dilations,d=void 0===h?[]:h,p=e.multi_value,m=e.bias_value,P=c[0],v=void 0===P?1:P,x=c[1],T=void 0===x?1:x,F=g[0],b=void 0===F?0:F,y=g[1],E=void 0===y?0:y,w=d[0],V=void 0===w?1:w,A=d[1],O=void 0===A?1:A;return\"\\n    // start函数\\n\\n    float getValueFromCounter(int index) {\\n        float xPos = float(index) / float(\"+i.width_shape+\");\\n        vec4 pixels = TEXTURE2D(texture_counter, vec2(xPos, 0.5));\\n        return pixels.r;\\n    }\\n    void main(void) {\\n        ivec4 oPos = getOutputTensorPos();\\n\\n        int x = oPos.a;\\n        int c = oPos.g;\\n        int y = oPos.b;\\n        int b = oPos.r;\\n        int addAxis = oPos[\"+l+\"];\\n        float res = getValueFromCounter(addAxis);\\n\\n        // 获取output的坐标\\n        int oTensorChannel = (c / (\"+r.channel+\" / \"+u+\")) * \"+t.channel+\";\\n        int oy = y * \"+v+\" - \"+b+\";\\n        for (int fy = 0; fy < \"+t.height_shape+\"; fy++) {\\n            if (oy >= \"+o.height_shape+\") {\\n                break;\\n            }\\n            if (oy < 0) {\\n                oy += \"+V+\";\\n                continue;\\n            }\\n            int ox = x * \"+T+\" - \"+E+\";\\n            for (int fx = 0; fx < \"+t.width_shape+\"; fx++) {\\n                if (ox >= \"+o.width_shape+\") {\\n                    break;\\n                }\\n                if (ox < 0) {\\n                    ox += \"+O+\";\\n                    continue;\\n                }\\n                // channel计算\\n                for (int j = 0; j < \"+t.channel+\"; j++) {\\n                    float f = getValueFromTensorPos_filter(c, j, fy, fx);\\n                    float o = getValueFromTensorPos_origin(b, oTensorChannel + j, oy, ox);\\n                    res += f * o;\\n                }\\n                ox += \"+O+\";\\n            }\\n            oy += \"+V+\";\\n        }\\n        setOutput(\"+s+\"(res,  \"+p+\",  \"+m+\"));\\n    }\\n\"},textureFuncConf:{filter:[\"getValueFromTensorPos\"],origin:[\"getValueFromTensorPos\"],counter:[\"getValueFromTensorPos\"]},behaviors:[\"mergeAttrs\",\"checkIsMerge\",\"setActiveFunc\"]},pool2d:{mainFunc:function(n,e){var o=n.origin,t=e.strides,r=void 0===t?[]:t,i=e.paddings,s=void 0===i?[]:i,a=e.pooling_type,u=e.ksize,l=r[0],f=void 0===l?1:l,c=r[1],_=void 0===c?1:c,g=s[0],h=void 0===g?0:g,d=s[1],p=void 0===d?0:d,m=u[0],P=u[1];return\"\\n    // start函数\\n    void main(void) {\\n        float res = 0.0;\\n        if (\"+a+\" == 1) {\\n            res = -1.70141184e38;\\n        }\\n        // 获取output的坐标\\n        ivec4 out_pos = getOutputTensorPos();\\n        // X、Y方向的移动步长\\n        int count_pool = 0;\\n        int oy_base = out_pos[2] * \"+f+\" - \"+h+\";\\n        int ox_base = out_pos[3] * \"+_+\" - \"+p+\";\\n        for (int fy = 0; fy < \"+m+\"; fy++) {\\n            int oy = oy_base + fy;\\n            if (oy >= \"+o.height_shape+\") {\\n                break;\\n            }\\n            if (oy < 0) {\\n                continue;\\n            }\\n            for (int fx = 0; fx < \"+P+\"; fx++) {\\n                int ox = ox_base + fx;\\n                if (ox >= \"+o.width_shape+\") {\\n                    break;\\n                }\\n                if (ox < 0) {\\n                    continue;\\n                }\\n                // origin数据\\n                float curr = getValueFromTensorPos_origin(out_pos[0], out_pos[1], oy, ox);\\n                if (\"+a+\" == 1) {\\n                    if (curr > res) {\\n                        res = curr;\\n                    }\\n                } else {\\n                    res += curr;\\n                    // 在平均池化模式忽略填充值(exclusive默认为true）\\n                    count_pool++;\\n                }\\n            }\\n        }\\n        if (\"+a+\" != 1) {\\n            res = res / float(count_pool);\\n        }\\n        setOutput(res);\\n    }\\n    \"},textureFuncConf:{origin:[\"getValueFromTensorPos\"]},behaviors:[\"isMax\",\"setPacked\",\"setAdaptive\",\"isGlobalPooling\"]},pool2d_max:{mainFunc:function(n,e){var o=n.origin,t=e.strides,r=void 0===t?[]:t,i=e.paddings,s=void 0===i?[]:i,a=e.ksize,u=e.global_pooling,l=e.runtime,f=r[0],c=void 0===f?1:f,_=r[1],g=void 0===_?1:_,h=s[0],d=void 0===h?0:h,p=s[1],m=void 0===p?0:p,P=a[0],v=a[1],x=function(n){var e=n.total_shape,o=n.channel,t=n.height_shape,r=n.width_shape;return[e/o/t/r,o,t,r]}(o),T=\"\",F=\"setOutput(float(res));\";return 0===l&&!0===u&&(T=\"\\n            if (curr > res) {\\n                index = \"+x[2]*x[3]+\" * out_pos[1] + \"+x[3]+\" * oy + ox;\\n            }\\n        \",F=\"setOutput(float(index));\"),\"\\n    // start函数\\n    void main(void) {\\n        float res = -1.70141184e38;\\n        int index = 0;\\n        // 获取output的坐标\\n        ivec4 out_pos = getOutputTensorPos();\\n        int b = out_pos[0];\\n        int c = out_pos[1];\\n        int y = out_pos[2];\\n        int x = out_pos[3];\\n        // X、Y方向的移动步长\\n        int oy_base = out_pos[2] * \"+c+\" - \"+d+\";\\n        int ox_base = out_pos[3] * \"+g+\" - \"+m+\";\\n        for (int fy = 0; fy < \"+P+\"; fy++) {\\n            int oy = oy_base + fy;\\n            if (oy >= \"+o.height_shape+\") {\\n                break;\\n            }\\n            if (oy < 0) {\\n                continue;\\n            }\\n            for (int fx = 0; fx < \"+v+\"; fx++) {\\n                int ox = ox_base + fx;\\n                if (ox >= \"+o.width_shape+\") {\\n                    break;\\n                }\\n                if (ox < 0) {\\n                    continue;\\n                }\\n                // origin数据\\n                float curr = getValueFromTensorPos_origin(out_pos[0], out_pos[1], oy, ox);\\n                \"+T+\"\\n                res = max(res, curr);\\n            }\\n        }\\n        \"+F+\"\\n    }\\n    \"},textureFuncConf:{origin:[\"getValueFromTensorPos\"]},behaviors:[\"isMax\",\"setPacked\",\"setAdaptive\",\"isGlobalPooling\"]},pool2d_winograd:{mainFunc:function(n,e){var o=n.origin,t=n.pool,r=e.strides,i=void 0===r?[]:r,s=e.paddings,a=void 0===s?[]:s,u=e.type_pool,l=i[0],f=void 0===l?1:l,c=i[1],_=void 0===c?1:c,g=a[0],h=void 0===g?0:g,d=a[1],p=void 0===d?0:d,m=o.height_shape,P=o.width_texture,v=o.height_texture;return\"\\n\\n    float getValueFromTensorPosPacked_origin(int r, int g, int b, int a) {\\n        int y = b / 2;\\n        int yOffset = calMod(b, 2);\\n        int x = a / 2;\\n        int xOffset = calMod(a, 2);\\n        int height = \"+m+\" + \"+o.offset_y+\";\\n        vec4 pixels = TEXTURE2D(\\n            texture_origin,\\n            vec2((float(x) + 0.5) / float(\"+P+\"),\\n            (float(g * height / 2 + y) + 0.5) / float(\"+v+\"))\\n        );\\n        int index = 0;\\n        if (xOffset == 0 && yOffset == 0) {\\n            return pixels[0];\\n        }\\n        else if (xOffset == 1 && yOffset == 0) {\\n            return pixels[1];\\n        }\\n        else if (xOffset == 0 && yOffset == 1) {\\n            return pixels[2];\\n        }\\n        return pixels[3];\\n    }\\n\\n    // start函数\\n    void main(void) {\\n        float res = (-1.0 / exp(-20.0));\\n        // 获取output的坐标\\n        ivec4 out_pos = getOutputTensorPos();\\n        // int b = out_pos[0];\\n        // int c = out_pos[1];\\n        // int y = out_pos[2];\\n        // int x = out_pos[3];\\n        // X、Y方向的移动步长\\n        int count_pool = 0;\\n        int oy_base = out_pos[2] * \"+f+\" - \"+h+\";\\n        int ox_base = out_pos[3] * \"+_+\" - \"+p+\";\\n\\n        for (int fy = 0; fy < \"+t.height_shape+\"; fy++) {\\n            int oy = oy_base + fy;\\n            if (oy >= \"+o.height_shape+\") {\\n                break;\\n            }\\n            if (oy < 0) {\\n                continue;\\n            }\\n            for (int fx = 0; fx < \"+t.width_shape+\"; fx++) {\\n                int ox = ox_base + fx;\\n                if (ox >= \"+o.width_shape+\") {\\n                    break;\\n                }\\n                if (ox < 0) {\\n                    continue;\\n                }\\n                // origin数据\\n                float curr = getValueFromTensorPosPacked_origin(out_pos[0], out_pos[1], oy, ox);\\n                if (\"+u+\" == 1) {\\n                    if (curr > res) {\\n                        res = curr;\\n                    }\\n                } else {\\n                    res += curr;\\n                    // 在平均池化模式忽略填充值(exclusive默认为true）\\n                    count_pool++;\\n                }\\n            }\\n        }\\n        if (\"+u+\" != 1) {\\n            res = res / float(count_pool);\\n        }\\n        setOutput(res);\\n    }\\n    \"},behaviors:[\"isMax\",\"setPacked\",\"setAdaptive\",\"isGlobalPooling\"]},elementwise_add:{mainFunc:function(n,e){var o=e.counterPos,t=e.Scale_y,r=void 0===t?1:t,i=e.Scale_x,s=void 0===i?1:i,a=e.Scale_out,u=void 0===a?1:a;return\"\\n    void main(void) {\\n        // 输出数据\\n        ivec4 oPos = getOutputTensorPos();\\n        float o = getValueFromTensorPos_origin(oPos.r, oPos.g, oPos.b, oPos.a);\\n\\n        float c = getValueFromTensorPos_counter(\"+o+\");\\n        float res = float(\"+u/r+\") * c + float(\"+u/s+\") * o;\\n        setOutput(float(res));\\n    }\\n    \"},textureFuncConf:{counter:[\"getValueFromTensorPos\"],origin:[\"getValueFromTensorPos\"]},behaviors:[\"processElementwiseAxis\",\"genElementwiseCounterPos\"]},elementwise_mul:{mainFunc:function(n,e){var o=n.counter,t=e.counterPos,r=e.Scale_y,i=void 0===r?1:r,s=e.Scale_x,a=void 0===s?1:s,u=e.Scale_out,l=void 0===u?1:u;return\"\\n    ivec4 formatNCHW(int n, int c, int h, int w) {\\n        int newN = n;\\n        int newC = c;\\n        int newH = h;\\n        int newW = w;\\n\\n        if (n >= \"+o.height_texture/o.height_shape+\") {\\n            newN = int(\"+o.height_texture/o.height_shape+\");\\n        }\\n        if (c >= \"+o.channel+\") {\\n            newC = int(\"+(o.channel-1)+\");\\n        }\\n        if (h >= \"+o.height_shape+\") {\\n            newH = \"+(o.height_shape-1)+\";\\n        }\\n        if (w >= \"+o.width_shape+\") {\\n            newW = \"+(o.width_shape-1)+\";\\n        }\\n        return ivec4(newN, newC, newH, newW);\\n    }\\n\\n    // start函数\\n    void main() {\\n        // 输出数据\\n        ivec4 oPos1 = getOutputTensorPos();\\n        float o = getValueFromTensorPos_origin(oPos1.r, oPos1.g, oPos1.b, oPos1.a);\\n        ivec4 oPos = formatNCHW(oPos1.r, oPos1.g, oPos1.b, oPos1.a);\\n\\n        float c = getValueFromTensorPos_counter(\"+t+\");\\n        float res = float(\"+l/a+\") * o * float(\"+1/i+\") * c;\\n        setOutput(float(res));\\n    }\\n\\n    \"},textureFuncConf:{counter:[\"getValueFromTensorPos\"],origin:[\"getValueFromTensorPos\"]},behaviors:[\"processElementwiseAxis\",\"genElementwiseCounterPos\"]},elementwise_div:{mainFunc:function(n,e){var o=n.counter,t=e.counterPos,r=e.Scale_y,i=void 0===r?1:r,s=e.Scale_x,a=void 0===s?1:s,u=e.Scale_out,l=void 0===u?1:u;return\"\\n    ivec4 formatNCHW(int n, int c, int h, int w) {\\n        int newN = n;\\n        int newC = c;\\n        int newH = h;\\n        int newW = w;\\n\\n        if (n >= \"+o.height_texture/o.height_shape+\") {\\n            newN = int(\"+o.height_texture/o.height_shape+\");\\n        }\\n        if (c >= \"+o.channel+\") {\\n            newC = int(\"+(o.channel-1)+\");\\n        }\\n        if (h >= \"+o.height_shape+\") {\\n            newH = \"+(o.height_shape-1)+\";\\n        }\\n        if (w >= \"+o.width_shape+\") {\\n            newW = \"+(o.width_shape-1)+\";\\n        }\\n        return ivec4(newN, newC, newH, newW);\\n    }\\n\\n    // start函数\\n    void main() {\\n        // 输出数据\\n        ivec4 oPos1 = getOutputTensorPos();\\n        float o = getValueFromTensorPos_origin(oPos1.r, oPos1.g, oPos1.b, oPos1.a);\\n        ivec4 oPos = formatNCHW(oPos1.r, oPos1.g, oPos1.b, oPos1.a);\\n\\n        float c = getValueFromTensorPos_counter(\"+t+\");\\n        float res = float(\"+l+\") * (float(\"+1/a+\") * o / (float(\"+1/i+\") * c));\\n        setOutput(float(res));\\n    }\\n\\n    \"},textureFuncConf:{counter:[\"getValueFromTensorPos\"],origin:[\"getValueFromTensorPos\"]},behaviors:[\"processElementwiseAxis\",\"genElementwiseCounterPos\"]},elementwise_pow:{mainFunc:function(n,e){var o=e.counterPos,t=e.Scale_y,r=void 0===t?1:t,i=e.Scale_x,s=void 0===i?1:i,a=e.Scale_out,u=void 0===a?1:a;return\"\\n    void main(void) {\\n        // 输出数据\\n        ivec4 oPos = getOutputTensorPos();\\n        float o = getValueFromTensorPos_origin(oPos.r, oPos.g, oPos.b, oPos.a);\\n\\n        float c = getValueFromTensorPos_counter(\"+o+\");\\n        float res = pow(float(\"+u/s+\") * o, float(\"+u/r+\") * c);\\n        setOutput(float(res));\\n    }\\n    \"},textureFuncConf:{counter:[\"getValueFromTensorPos\"],origin:[\"getValueFromTensorPos\"]},behaviors:[\"processElementwiseAxis\",\"genElementwiseCounterPos\"]},elementwise_sub:{mainFunc:function(n,e){var o=e.counterPos,t=e.Scale_y,r=void 0===t?1:t,i=e.Scale_x,s=void 0===i?1:i,a=e.Scale_out,u=void 0===a?1:a;return\"\\n    void main(void) {\\n        // 输出数据\\n        ivec4 oPos = getOutputTensorPos();\\n        float o = getValueFromTensorPos_origin(oPos.r, oPos.g, oPos.b, oPos.a);\\n\\n        float c = getValueFromTensorPos_counter(\"+o+\");\\n        float res = float(\"+u/s+\") * o - float(\"+u/r+\") * c;\\n        setOutput(float(res));\\n    }\\n    \"},textureFuncConf:{counter:[\"getValueFromTensorPos\"],origin:[\"getValueFromTensorPos\"]},behaviors:[\"processElementwiseAxis\",\"genElementwiseCounterPos\"]},mul:{mainFunc:function(n,e){var o=n.origin,t=n.counter,r=e.x_num_col_dims,i=e.y_num_col_dims,s=rn(o),a=rn(t),u=en(s,r),l=u[0],f=u[1],c=u[2],_=u[3],g=u[4],h=en(a,i),d=h[0],p=h[1],m=h[2],P=h[3];return\"\\n    \"+on(\"x1\",l,f)+\"\\n    \"+on(\"x2\",c,_)+\"\\n    \"+on(\"y1\",d,p)+\"\\n    \"+on(\"y2\",m,P)+\"\\n\\n    // start函数\\n    void main(void) {\\n        float res = 0.0;\\n        // 获取output的坐标\\n        ivec4 opos = getOutputTensorPos();\\n        float temp = 0.0;\\n\\n        // output is 2D\\n        int b = opos.b;\\n        int a = opos.a;\\n\\n        \"+tn(f)+\" x1 = getTensorPosFromArrayIndex_x1(b);\\n        \"+tn(P)+\" y2 = getTensorPosFromArrayIndex_y2(a);\\n\\n        for (int j = 0; j < \"+g[1]+\"; j++) {\\n            \"+tn(_)+\" x2 = getTensorPosFromArrayIndex_x2(j);\\n            \"+tn(p)+\" y1 = getTensorPosFromArrayIndex_y1(j);\\n\\n            ivec4 xPos = ivec4(\"+tn(f)+\"(x1), \"+tn(_)+\"(x2));\\n            ivec4 yPos = ivec4(\"+tn(p)+\"(y1), \"+tn(P)+\"(y2));\\n\\n            float o = getValueFromTensorPos_origin(xPos.r, xPos.g, xPos.b, xPos.a);\\n            float c = getValueFromTensorPos_counter(yPos.r, yPos.g, yPos.b, yPos.a);\\n            res += c * o;\\n        }\\n\\n        setOutput(res);\\n    }\\n    \"},textureFuncConf:{counter:[\"getValueFromTensorPos\"],origin:[\"getValueFromTensorPos\"]}},matmul:sn,matmul_v2:sn,fc:{mainFunc:function(n,e){var o=n.origin,t=n.weight,r=e.x_num_col_dims,i=e.y_num_col_dims,s=fn(o),a=fn(t),u=an(s,r),l=u[0],f=u[1],c=u[2],_=u[3],g=u[4],h=an(a,i),d=h[0],p=h[1],m=h[2],P=h[3];return\"\\n    \"+un(\"x1\",l,f)+\"\\n    \"+un(\"x2\",c,_)+\"\\n    \"+un(\"y1\",d,p)+\"\\n    \"+un(\"y2\",m,P)+\"\\n\\n    // start函数\\n    void main(void) {\\n        float res = 0.0;\\n        // 获取output的坐标\\n        ivec4 opos = getOutputTensorPos();\\n        float bias = getValueFromTensorPos_bias(opos.r, opos.g, opos.b, opos.a);\\n        float temp = 0.0;\\n\\n        // output is 2D\\n        int b = opos.b;\\n        int a = opos.a;\\n\\n        \"+ln(f)+\" x1 = getTensorPosFromArrayIndex_x1(b);\\n        \"+ln(P)+\" y2 = getTensorPosFromArrayIndex_y2(a);\\n\\n        for (int j = 0; j < \"+g[1]+\"; j++) {\\n            \"+ln(_)+\" x2 = getTensorPosFromArrayIndex_x2(j);\\n            \"+ln(p)+\" y1 = getTensorPosFromArrayIndex_y1(j);\\n\\n            ivec4 xPos = ivec4(\"+ln(f)+\"(x1), \"+ln(_)+\"(x2));\\n            ivec4 yPos = ivec4(\"+ln(p)+\"(y1), \"+ln(P)+\"(y2));\\n\\n            float o = getValueFromTensorPos_origin(xPos.r, xPos.g, xPos.b, xPos.a);\\n            float c = getValueFromTensorPos_weight(yPos.r, yPos.g, yPos.b, yPos.a);\\n            res += c * o;\\n        }\\n\\n        res = res + bias;\\n        setOutput(res);\\n    }\\n    \"},textureFuncConf:{weight:[\"getValueFromTensorPos\"],origin:[\"getValueFromTensorPos\"],bias:[\"getValueFromTensorPos\"]}},dropout:{mainFunc:function(n,e){return\"\\n    // start函数\\n    void main(void) {\\n        ivec4 oPos = getOutputTensorPos();\\n        // 输出坐标转换为输入坐标\\n        float o = 0.0;\\n        o = getValueFromTensorPos_origin(oPos.r, oPos.g, oPos.b, oPos.a);\\n        if (\"+(\"downgrade_in_infer\"===e.dropout_implementation)+\") {\\n            o = o * (1.0 - float(\"+e.dropout_prob+\"));\\n        }\\n        setOutput(float(o));\\n    }\\n    \"},textureFuncConf:{origin:[\"getValueFromTensorPos\"]}},concat:{mainFunc:function(n,e){var o=e.dim,t=Object.keys(n).filter((function(n){return\"out\"!==n})).map((function(e){return n[e]})).map((function(n){var e=n.width_shape,t=n.height_shape,r=n.channel;return[n.total_shape/(e*t*r),r,t,e][o]})),r=t.map((function(n,e){return t.slice(0,e+1).reduce((function(n,e){return n+e}),0)})),i=\"\";return r.forEach((function(n,e){i+=0===e?\"\\n            if (oPos[\"+o+\"] < \"+n+\") {\\n                o = getValueFromTensorPos_origin(oPos.r, oPos.g, oPos.b, oPos.a);\\n            }\\n            \":\"\\n            else if (oPos[\"+o+\"] < \"+n+\") {\\n                oPos[\"+o+\"] = oPos[\"+o+\"] - \"+r[e-1]+\";\\n                o = getValueFromTensorPos_origin_\"+e+\"(oPos.r, oPos.g, oPos.b, oPos.a);\\n            }\\n            \"})),\"\\n    // start函数\\n    void main(void) {\\n        ivec4 oPos = getOutputTensorPos();\\n        // 输出坐标转换为输入坐标\\n        float o = 0.0;\\n        \"+i+\"\\n        setOutput(float(o));\\n    }\\n    \"},textureFuncConf:{\"@all\":[\"getValueFromTensorPos\"]},behaviors:[\"normalizeDim\"]},concat_mul:{mainFunc:function(n,e){var o=e.dim,t=Object.keys(n).filter((function(n){return\"out\"!==n})).map((function(e){return n[e]})).map((function(n){var e=n.width_shape,t=n.height_shape,r=n.channel;return[n.total_shape/(e*t*r),r,t,e][o]})),r=t.map((function(n,e){return t.slice(0,e+1).reduce((function(n,e){return n+e}),0)})),i=\"\";return r.forEach((function(n,e){i+=0===e?\"\\n            if (oPos[\"+o+\"] < \"+n+\") {\\n                o = getValueFromTensorPos_origin(oPos.r, oPos.g, oPos.b, oPos.a);\\n            }\":\"\\n            else if (oPos[\"+o+\"] < \"+n+\") {\\n                oPos[\"+o+\"] = oPos[\"+o+\"] - \"+r[e-1]+\";\\n                o = getValueFromTensorPos_origin_\"+e+\"(oPos.r, oPos.g, oPos.b, oPos.a);\\n            }\\n            \"})),\"\\n    // start函数\\n    void main(void) {\\n        ivec4 oPos = getOutputTensorPos();\\n        // 输出坐标转换为输入坐标\\n        float o = 0.0;\\n        \"+i+\"\\n        setOutput(float(o));\\n    }\\n    \"},textureFuncConf:{\"@all\":[\"getValueFromTensorPos\"]},behaviors:[\"normalizeDim\"]},split:{mainFunc:function(n,e){var o=e.target_length,t=e.num,r=e.dim,i=e.sections;return\"\\n    // start函数\\n    void main(void) {\\n        int length = int(\"+(i&&i.length>1?i[0]:o/t)+\");\\n        ivec4 oPos = getOutputTensorPos();\\n        // 输出坐标转换为输入坐标\\n        oPos[\"+r+\"] = oPos[\"+r+\"] + layer_run_time * length;\\n        float o = getValueFromTensorPos_origin(oPos.r, oPos.g, oPos.b, oPos.a);\\n        setOutput(float(o));\\n    }\\n    \"},textureFuncConf:{origin:[\"getValueFromTensorPos\"]},behaviors:[\"normalizeDim\"]},softmax:{mainFunc:function(n,e){var o=n.origin,t=e.axis,r=t;return(!t||t<0)&&(r=(t||-1)+4),\"\\n    // start函数\\n    void main(void) {\\n        ivec4 oPos = getOutputTensorPos();\\n        const int n = int(\"+o.total_shape+\"/\"+o.channel+\"/\"+o.height_shape+\"/\"+o.width_shape+\");\\n        float o = getValueFromTensorPos_origin(oPos[0], oPos[1], oPos[2], oPos[3]);\\n        // 输出坐标转换为输入坐标\\n        float total = 0.0;\\n        float res = 0.0;\\n        if (\"+r+\" == 0) {\\n            for (int i = 0; i < n; i++){\\n            float temp = getValueFromTensorPos_origin(i, oPos[1], oPos[2], oPos[3]);\\n            total += exp(temp);\\n            }\\n            res = exp(o) / total;\\n        }\\n        else if (\"+r+\" == 1) {\\n            for (int i = 0; i < \"+o.channel+\"; i++){\\n            float temp = getValueFromTensorPos_origin(oPos[0], i, oPos[2], oPos[3]);\\n            total += exp(temp);\\n            }\\n            res = exp(o) / total;\\n        }\\n        else {\\n            for (int i = 0; i < \"+o.width_shape+\"; i++){\\n            float temp = getValueFromTensorPos_origin(oPos[0], oPos[1], oPos[2], i);\\n            total += exp(temp);\\n            }\\n            res = exp(o) / total;\\n        }\\n        setOutput(res);\\n    }\\n    \"},textureFuncConf:{origin:[\"getValueFromTensorPos\"]}},batchnorm:{mainFunc:function(n,e){var o=n.bias,t=n.scale,r=n.mean,i=n.variance,s=e.epsilon;return\"\\n    // start函数\\n    void main(void) {\\n        // 输出数据\\n        ivec4 oPos = getOutputTensorPos();\\n        float o = getValueFromTensorPos_origin(oPos.r, oPos.g, oPos.b, oPos.a);\\n\\n        // 归一化数据\\n        vec4 scale = getPixelsFromTexturePos_scale(vec2( float(oPos.g) / float(\"+t.width_texture+\") + 0.00001, 0.0));\\n        vec4 bias = getPixelsFromTexturePos_bias(vec2( float(oPos.g) / float(\"+o.width_texture+\") + 0.00001, 0.0));\\n        vec4 mean = getPixelsFromTexturePos_mean(vec2((float(oPos.g)) / float(\"+r.width_texture+\")  + 0.00001, 0.0));\\n        vec4 variance = getPixelsFromTexturePos_variance(\\n            vec2((float(oPos.g)) / float(\"+i.width_texture+\") + 0.00001,\\n            0.0)\\n        );\\n\\n        float x = (o - mean[0]) / sqrt(variance[0] + \"+s+\");\\n        float res = scale[0] * x + bias[0];\\n        setOutput(res);\\n    }\\n    \"},textureFuncConf:{origin:[\"getValueFromTensorPos\"],scale:[\"getPixelsFromTexturePos\"],bias:[\"getPixelsFromTexturePos\"],mean:[\"getPixelsFromTexturePos\"],variance:[\"getPixelsFromTexturePos\"]}},reshape:cn,reshape2:cn,bilinear_interp:_n,transpose2:{mainFunc:function(n,e){var o=e.perm_arr,t=e.perm_size,r=o[0],i=o[1],s=o[2];return\"\\n    // start函数\\n    void main(void) {\\n        // 输出数据\\n        ivec4 oPos = getOutputTensorPos();\\n\\n        // 转置 坐标变换\\n        float o = 0.0;\\n        if (\"+t+\" == 1) {\\n            o = getValueFromTensorPos_origin(oPos[0], oPos[1], oPos[2], oPos[3]);\\n        }\\n        else if (\"+t+\" == 2) {\\n            o = getValueFromTensorPos_origin(\\n                oPos[0], oPos[1],\\n                oPos[(2 + \"+r+\") > 3 ? 3 : (2 + \"+r+\")],\\n                oPos[(2 + \"+i+\") > 3 ? 3 : (2 + \"+i+\")]\\n            );\\n        }\\n        else if (\"+t+\" == 3) {\\n            o = getValueFromTensorPos_origin(\\n                oPos[0],\\n                oPos[(1 + \"+r+\") > 3 ? 3 : (1 + \"+r+\")],\\n                oPos[(1 + \"+i+\") > 3 ? 3 : (1 + \"+i+\")],\\n                oPos[(1 + \"+s+\") > 3 ? 3 : (1 + \"+s+\")]\\n            );\\n        }\\n        else if (\"+t+\" == 4) {\\n            o = getValueFromTensorPos_origin(\\n                oPos[\"+r+\"],\\n                oPos[\"+i+\"],\\n                oPos[\"+s+\"],\\n                oPos[\"+o[3]+\"]\\n            );\\n        }\\n\\n        setOutput(float(o));\\n    }\\n    \"},textureFuncConf:{origin:[\"getValueFromTensorPos\"]},behaviors:[\"normalizePerm\"]},unpacked_2_packed:{mainFunc:function(n,e){return\"\\n    // start函数\\n    void main() {\\n        ivec4 oPos = getOutputTensorPos();\\n        vec4 out4;\\n        for (int i = 0; i < 4; i++) {\\n            vec4 o = getValueFromTensorPosPacking_origin(oPos[0], oPos[1] * 4 + i, oPos[2], oPos[3]);\\n            out4[i] = o[0];\\n        }\\n        setPackedOutput(out4);\\n    }\\n    \"},textureFuncConf:{origin:[\"getValueFromTensorPosPacking\"]}},packed_2_unpacked:{mainFunc:function(n,e){return\"\\n    // start函数\\n    void main() {\\n        ivec4 oPos = getOutputTensorPos();\\n        float res = 0.0;\\n        int c1 = calMod(oPos[1], 4);\\n        vec4 o = getValueFromTensorPosPacking_origin(oPos[0], oPos[1] / 4, oPos[2], oPos[3]);\\n\\n        if (c1 == 0) {\\n            res = o.r;\\n        } else if (c1 == 1) {\\n            res = o.g;\\n        } else if (c1 == 2) {\\n            res = o.b;\\n        } else if (c1 == 3) {\\n            res = o.a;\\n        }\\n        setOutput(res);\\n    }\\n    \"},textureFuncConf:{origin:[\"getValueFromTensorPosPacking\"]}},unsqueeze2:{mainFunc:function(n,e){var o=n.origin,t=e.axes,r=o.length_unformatted_shape,i=Array.isArray(t)?t:[t],s=4-r-i.length,a=i.map((function(n){return n+s})),u=[0,1,2,3].filter((function(n){return-1===a.indexOf(n)})).map((function(n){return\"oPos[\"+n+\"]\"})),l=Array.from(new Array(a.length),(function(){return\"0\"}));return u.splice.apply(u,function(){for(var n=0,e=0,o=arguments.length;e<o;e++)n+=arguments[e].length;var t=Array(n),r=0;for(e=0;e<o;e++)for(var i=arguments[e],s=0,a=i.length;s<a;s++,r++)t[r]=i[s];return t}([0,0],l)),\"\\n    void main() {\\n        ivec4 oPos = getOutputTensorPos();\\n        float o = 0.0;\\n        o = getValueFromTensorPos_origin(\"+u.join(\",\")+\");\\n        setOutput(float(o));\\n    }\\n    \"},textureFuncConf:{origin:[\"getValueFromTensorPos\"]}},flatten_contiguous_range:{mainFunc:function(n,e){var o=n.origin,t=n.out;return\"\\n    void main() {\\n        ivec4 oPos = getOutputTensorPos();\\n        // 输出坐标转换为输入坐标\\n        int sumVal = oPos.a\\n            + oPos.b * \"+t.width_shape+\"\\n            + oPos.g * \"+t.height_shape+\" * \"+t.width_shape+\"\\n            + oPos.r * \"+t.channel+\" * \"+t.width_shape+\" * \"+t.height_shape+\";\\n        ivec4 new_oPos = transferFromNHWCtoNCHW(\\n            sumVal,\\n            \"+o.channel+\",\\n            \"+o.width_shape+\",\\n            \"+o.height_shape+\",\\n            \"+o.total_shape+\"\\n        );\\n        float o = getValueFromTensorPos_origin(new_oPos.r, new_oPos.g, new_oPos.b, new_oPos.a);\\n        setOutput(float(o));\\n    }\\n    \"},textureFuncConf:{origin:[\"getValueFromTensorPos\"]},commonFuncConf:[\"transferFromNHWCtoNCHW\"]},flatten2:cn,greater_than:{mainFunc:function(n,e){return\"\\n    // start函数\\n    void main(void) {\\n        ivec4 oPos = getOutputTensorPos();\\n        // 输出坐标转换为输入坐标\\n        float x = getValueFromTensorPos_input(oPos.r, oPos.g, oPos.b, oPos.a);\\n        float y = getValueFromTensorPos_counter(oPos.r, oPos.g, oPos.b, oPos.a);\\n\\n        setOutput(bool(x >= y));\\n    }\\n    \"},textureFuncConf:{origin:[\"getValueFromTensorPos\"],counter:[\"getValueFromTensorPos\"]}},reduce_sum:{mainFunc:function(n,e){return\"\\n    // start函数\\n    void main(void) {\\n        ivec4 oPos = getOutputTensorPos();\\n        // 输出坐标转换为输入坐标\\n        float o = 0.0;\\n        for (int i = 0; i < \"+e.inputs_dim+\"; i++) {\\n            oPos[\"+e.dim+\"] = i;\\n            o += getValueFromTensorPos_origin(oPos.r, oPos.g, oPos.b, oPos.a);;\\n        }\\n        setOutput(float(o));\\n    }\\n    \"},textureFuncConf:{origin:[\"getValueFromTensorPos\"]},behaviors:[\"normalizeDim\"]},where:{mainFunc:function(n,e){return\"\\n    // start函数\\n    void main(void) {\\n        ivec4 oPos = getOutputTensorPos();\\n        // 输出坐标转换为输入坐标\\n        float x = getValueFromTensorPos_input(oPos.r, oPos.g, oPos.b, oPos.a);\\n        float y = getValueFromTensorPos_counter(oPos.r, oPos.g, oPos.b, oPos.a);\\n        float condition = getValueFromTensorPos_condition(oPos.r, oPos.g, oPos.b, oPos.a);\\n        float o = 0.0;\\n\\n        if (bool(condition)) {\\n            o = x;\\n        }\\n        else {\\n            o = y;\\n        }\\n        setOutput(o);\\n    }\\n    \"},textureFuncConf:{origin:[\"getValueFromTensorPos\"],counter:[\"getValueFromTensorPos\"],condition:[\"getValueFromTensorPos\"]}},connect:{mainFunc:function(n,e){var o=n.out,t=o.total_shape,r=o.width_shape,i=o.height_shape,s=o.channel,a=g([t/(r*i*s),s,i,r]),u=Object.keys(n).filter((function(n){return\"out\"!==n})).map((function(e){return n[e].total_shape})),l=u.map((function(n,e){return u.slice(0,e+1).reduce((function(n,e){return n+e}),0)})),f=\"\";return l.forEach((function(n,e){f+=0===e?\"\\n            if (sumVal < \"+n+\") {\\n                co = getTensorPosFromArrayIndex_origin(sumVal);\\n                o = getValueFromTensorPos_origin(co.r, co.g, co.b, co.a);\\n            }\":\"\\n            else if (sumVal < \"+n+\") {\\n                co = getTensorPosFromArrayIndex_origin_\"+e+\"(sumVal - \"+l[e-1]+\");\\n                o = getValueFromTensorPos_origin_\"+e+\"(co.r, co.g, co.b, co.a);\\n            }\\n            \"})),\"\\n    // start函数\\n    void main(void) {\\n        ivec4 oPos = getOutputTensorPos();\\n        float o = 0.0;\\n        ivec4 co;\\n        int sumVal = oPos.b * \"+a[2]+\" + oPos.a;\\n        \"+f+\"\\n        setOutput(float(o));\\n    }\\n    \"},textureFuncConf:{\"@all\":[\"getValueFromTensorPos\",\"getTensorPosFromArrayIndex\"]}},reduce_mean:{mainFunc:function(n,e){var o=e.inputs_dim;return\"\\n    // start函数\\n    void main(void) {\\n        ivec4 oPos = getOutputTensorPos();\\n        // 输出坐标转换为输入坐标\\n        float o = 0.0;\\n        for (int i = 0; i < \"+o+\"; i++) {\\n            oPos[\"+e.dim+\"] = i;\\n            o += getValueFromTensorPos_origin(oPos.r, oPos.g, oPos.b, oPos.a);\\n        }\\n        o = o / float(\"+o+\");\\n        setOutput(o);\\n    }\\n    \"},textureFuncConf:{origin:[\"getValueFromTensorPos\"]},behaviors:[\"normalizeDim\"]},hard_swish:{mainFunc:function(n,e){var o=e.offset,t=void 0===o?3:o,r=e.scale,i=void 0===r?6:r,s=e.threshold;return\"\\n    void main(void) {\\n        // 输出数据\\n        ivec4 oPos = getOutputTensorPos();\\n        float o = getValueFromTensorPos_origin(oPos.r, oPos.g, oPos.b, oPos.a);\\n        float res = o * min(max(0.0, o + float(\"+t+\")), float(\"+(void 0===s?6:s)+\")) / float(\"+i+\");\\n        setOutput(res);\\n    }\\n    \"},textureFuncConf:{origin:[\"getValueFromTensorPos\"]}},nearest_interp:Pn,nearest_interp_v2:Pn,cast:{mainFunc:function(n,e){var o=\"\";switch(e.out_dtype){case 0:o=\"\\n            float res_bool = 0.0;\\n            if (o != 0.0) {\\n                res_bool = 1.0;\\n            }\\n            setOutput(res_bool);\";break;case 1:case 2:case 3:o=\"\\n            int res_int = int(o);\\n            setOutput(float(res_int));\";break;default:o=\"       \\n            float res_float = o;\\n            setOutput(res_float);\"}return\"\\n    void main() {\\n       // 输出数据\\n        ivec4 oPos = getOutputTensorPos();\\n        float o = getValueFromTensorPos_origin(oPos.r, oPos.g, oPos.b, oPos.a);\\n        \"+o+\"\\n    }\\n    \"},textureFuncConf:{origin:[\"getValueFromTensorPos\"]}},fill_constant_batch_size_like:{mainFunc:function(n,e){return\"\\n    // start函数\\n    void main(void) {\\n        float res = float(\"+e.value+\");\\n        setOutput(res);\\n    }\\n\"}},rnn_matmul:{mainFunc:function(n,e){var o=n.weightlist_0,t=e.input_axis,r=e.state_axis,i=e.batch,s=e.reverse,a=void 0!==s&&s?i-t-1:t;return\"\\n    void main() {\\n         float res = 0.0;\\n        // 获取output的坐标\\n        ivec4 out_pos = getOutputTensorPos();\\n        \\n        if (\"+(0===t)+\") {\\n            res = getValueFromTensorPos_origin(out_pos[0], \"+a+\", out_pos[2], out_pos[3]);\\n            setOutput(res);\\n            return;\\n        }\\n        \\n        ivec4 origin_pos = out_pos;\\n        ivec4 weight_pos = out_pos;\\n\\n        weight_pos[1] = 0;\\n        weight_pos[2] = weight_pos[3];\\n\\n        float o = 0.0;\\n        float w_hh = 0.0;\\n        float prestate_h = 0.0;\\n        res = getValueFromTensorPos_origin(out_pos[0], \"+a+\", out_pos[2], out_pos[3]);\\n        for (int j = 0; j < \"+o.width_shape+\"; j++) {\\n            prestate_h = getValueFromTensorPos_prestate(origin_pos[0], origin_pos[1], origin_pos[2], j);\\n            w_hh = getValueFromTensorPos_weightlist_0(out_pos[0], \"+r+\", out_pos[3], j);\\n            o += w_hh * prestate_h;\\n        }\\n        res += o;\\n\\n        setOutput(res);\\n    }\\n    \"},textureFuncConf:{origin:[\"getValueFromTensorPos\"],prestate:[\"getValueFromTensorPos\"],weightlist_0:[\"getValueFromTensorPos\"]}},rnn_hidden:{mainFunc:function(n,e){var o=e.state_axis,t=e.hidden_size;return\"\\n    // start函数\\n    void main(void) {\\n        ivec4 oPos = getOutputTensorPos();\\n        float origin = getValueFromTensorPos_origin(oPos.r, oPos.g, oPos.b, oPos.a);\\n        float cell = getValueFromTensorPos_origin(oPos.r, oPos.g, oPos.b, oPos.a + \"+t+\");\\n        float appender = getValueFromTensorPos_origin(oPos.r, oPos.g, oPos.b, oPos.a + \"+2*t+\");\\n        float fourth = getValueFromTensorPos_origin(oPos.r, oPos.g, oPos.b, oPos.a + \"+3*t+\");\\n        float counter  = getValueFromTensorPos_counter(oPos.r, \"+o+\", oPos.b, oPos.a);\\n        float i = 1.0 / (1.0 + exp(-origin));\\n        float f = 1.0 / (1.0 + exp(-cell));\\n        float o = 1.0 / (1.0 + exp(-fourth));\\n        float c = f * counter + i * tanh_calc(appender);\\n        float h = o * tanh_calc(c);\\n        \\n        setOutput(h);\\n    }\\n    \"},textureFuncConf:{origin:[\"getValueFromTensorPos\"],counter:[\"getValueFromTensorPos\"]}},rnn_cell:{mainFunc:function(n,e){var o=e.state_axis,t=e.hidden_size;return\"\\n    // start函数\\n    void main(void) {\\n        ivec4 oPos = getOutputTensorPos();\\n        float origin = getValueFromTensorPos_origin(oPos.r, oPos.g, oPos.b, oPos.a);\\n        float cell = getValueFromTensorPos_origin(oPos.r, oPos.g, oPos.b, oPos.a + \"+t+\");\\n        float appender = getValueFromTensorPos_origin(oPos.r, oPos.g, oPos.b, oPos.a + \"+2*t+\");\\n        float fourth = getValueFromTensorPos_origin(oPos.r, oPos.g, oPos.b, oPos.a + \"+3*t+\");\\n        float counter  = getValueFromTensorPos_counter(oPos.r, \"+o+\", oPos.b, oPos.a);\\n        float i = 1.0 / (1.0 + exp(-origin));\\n        float f = 1.0 / (1.0 + exp(-cell));\\n        float c = f * counter + i * tanh_calc(appender);\\n        \\n        setOutput(c);\\n    }\\n    \"},textureFuncConf:{origin:[\"getValueFromTensorPos\"],counter:[\"getValueFromTensorPos\"]}},rnn_origin:{mainFunc:function(n,e){var o=n.weightlist_0,t=n.weightlist_1,r=e.state_axis;return\"\\n    void main() {\\n        float res = 0.0;\\n        // 获取output的坐标\\n        ivec4 out_pos = getOutputTensorPos();\\n        ivec4 origin_pos = out_pos;\\n        ivec4 weight_pos = out_pos;\\n      \\n        weight_pos[1] = 0;\\n        weight_pos[2] = weight_pos[3];\\n\\n        float b_ih = getValueFromTensorPos_weightlist_2(0, 0, 0, out_pos[3]);\\n        float b_hh = getValueFromTensorPos_weightlist_3(0, 0, 0, out_pos[3]);\\n        \\n        for (int j = 0; j < \"+o.width_shape+\"; j++) {\\n            float o = getValueFromTensorPos_origin(origin_pos[0], origin_pos[1], 0, j);\\n            float w_ih = getValueFromTensorPos_weightlist_0(0, 0, out_pos[3], j);\\n            res += w_ih * o;\\n        }\\n        res += b_ih;\\n\\n        for (int j = 0; j < \"+t.width_shape+\"; j++) {\\n                float prestate = getValueFromTensorPos_prestate(0, 0, 0, j);\\n                float w_hh = getValueFromTensorPos_weightlist_1(0, \"+r+\", out_pos[3], j);\\n                res += w_hh * prestate;\\n        }\\n        res += b_hh;\\n \\n        setOutput(res);\\n    }\\n    \"},textureFuncConf:{origin:[\"getValueFromTensorPos\"],prestate:[\"getValueFromTensorPos\"],weightlist_0:[\"getValueFromTensorPos\"],weightlist_1:[\"getValueFromTensorPos\"],weightlist_2:[\"getValueFromTensorPos\"],weightlist_3:[\"getValueFromTensorPos\"]}},pool2d_avg:{mainFunc:function(n,e){var o=n.origin,t=e.strides,r=void 0===t?[]:t,i=e.paddings,s=void 0===i?[]:i,a=e.ksize,u=r[0],l=void 0===u?1:u,f=r[1],c=void 0===f?1:f,_=s[0],g=void 0===_?0:_,h=s[1],d=void 0===h?0:h,p=a[0],m=a[1];return\"\\n    // start函数\\n    void main(void) {\\n        float res = 0.0;\\n        // 获取output的坐标\\n        ivec4 out_pos = getOutputTensorPos();\\n        // X、Y方向的移动步长\\n        int oy_base = out_pos[2] * \"+l+\" - \"+g+\";\\n        int ox_base = out_pos[3] * \"+c+\" - \"+d+\";\\n        for (int fy = 0; fy < \"+p+\"; fy++) {\\n            int oy = oy_base + fy;\\n            if (oy >= \"+o.height_shape+\") {\\n                break;\\n            }\\n            if (oy < 0) {\\n                continue;\\n            }\\n            for (int fx = 0; fx < \"+m+\"; fx++) {\\n                int ox = ox_base + fx;\\n                if (ox >= \"+o.width_shape+\") {\\n                    break;\\n                }\\n                if (ox < 0) {\\n                    continue;\\n                }\\n                // origin数据\\n                float curr = getValueFromTensorPos_origin(out_pos[0], out_pos[1], oy, ox);\\n                res += curr;\\n                // 在平均池化模式忽略填充值(exclusive默认为true）\\n            }\\n        }\\n        res = res / float(\"+p+\" * \"+m+\");\\n        setOutput(res);\\n    }\\n    \"},textureFuncConf:{origin:[\"getValueFromTensorPos\"]},behaviors:[\"setPacked\",\"setAdaptive\",\"isGlobalPooling\"]},prelu:pn(\"prelu\"),relu6:pn(\"relu6\"),leakyRelu:pn(\"leakyRelu\"),scale:pn(\"scale\"),sigmoid:pn(\"sigmoid\"),relu:pn(\"relu\"),hard_sigmoid:pn(\"hard_sigmoid\"),pow:pn(\"pow\"),sqrt:pn(\"sqrt\"),tanh:pn(\"tanh\"),exp:pn(\"exp\"),squeeze2:mn,pad3d:{mainFunc:function(n,e){var o=n.origin,t=e.paddings,r=e.mode,i=e.value,s=function(n){var e=n.total_shape,o=n.channel,t=n.height_shape,r=n.width_shape;return[e/o/t/r,o,t,r]}(o),a={reflect:\"\\n            int a;\\n            int b;\\n            if (oPos.a - \"+t[0]+\" < 0) {\\n                a = \"+t[0]+\" - oPos.a;\\n            }\\n            else if (oPos.a - \"+t[0]+\" >= \"+s[3]+\") {\\n                a = \"+s[3]+\" - (oPos.a - \"+t[0]+\" - \"+s[3]+\" + 1) - 1;\\n            }\\n            else {\\n                a = oPos.a - \"+t[0]+\";\\n            }\\n            if (oPos.b - \"+t[2]+\" < 0) {\\n                b = \"+t[2]+\" - oPos.b;\\n            }\\n            else if (oPos.b - \"+t[2]+\" >= \"+s[2]+\") {\\n                b = \"+s[2]+\" - (oPos.b - \"+t[2]+\" - \"+s[2]+\" + 1) - 1;\\n            }\\n            else {\\n                b = oPos.b - \"+t[2]+\";\\n            }\\n            o = getValueFromTensorPos_origin(oPos.r, oPos.g, b, a);\\n        \",replicate:\"\\n            int a;\\n            int b;\\n            if (oPos.a - \"+t[0]+\" < 0) {\\n                a = 0;\\n            }\\n            else if (oPos.a - \"+t[0]+\" >= \"+s[3]+\") {\\n                a = \"+s[3]+\" - 1;\\n            }\\n            else {\\n                a = oPos.a - \"+t[0]+\";\\n            }\\n            if (oPos.b - \"+t[2]+\" < 0) {\\n                b = 0;\\n            }\\n            else if (oPos.b - \"+t[2]+\" >= \"+s[2]+\") {\\n                b = \"+s[2]+\" - 1;\\n            }\\n            else {\\n                b = oPos.b - \"+t[2]+\";\\n            }\\n            o = getValueFromTensorPos_origin(oPos.r, oPos.g, b, a);\\n        \",circular:\"\\n            int a;\\n            int b;\\n            if (oPos.a - \"+t[0]+\" < 0) {\\n                a = int(mod(float(\"+t[0]+\" + oPos.a - 1), float(\"+s[3]+\")));\\n            }\\n            else if (oPos.a - \"+t[0]+\" >= \"+s[3]+\") {\\n                a = int(mod(float(oPos.a - \"+t[0]+\" - \"+s[3]+\"), float(\"+s[3]+\")));\\n            }\\n            else {\\n                a = oPos.a - \"+t[0]+\";\\n            }\\n            if (oPos.b - \"+t[2]+\" < 0) {\\n                b = int(mod(float(\"+t[2]+\" + oPos.b - 1), float(\"+s[2]+\")));\\n            }\\n            else if (oPos.b - \"+t[2]+\" >= \"+s[2]+\") {\\n                b = int(mod(float(oPos.b - \"+t[2]+\" - \"+s[2]+\"), float(\"+s[2]+\")));\\n            }\\n            else {\\n                b = oPos.b - \"+t[2]+\";\\n            }\\n            o = getValueFromTensorPos_origin(oPos.r, oPos.g, b, a);\\n        \",constant:\"\",undefined:\"\"};return\"\\n    // start函数\\n    void main(void) {\\n        ivec4 oPos = getOutputTensorPos();\\n        float o = \"+(i||\"0.0\")+\";\\n        if (oPos.a - \"+t[0]+\" >= 0\\n            && oPos.b - \"+t[2]+\" >= 0\\n            && oPos.a - \"+t[0]+\" < \"+s[3]+\"\\n            && oPos.b - \"+t[2]+\" < \"+s[2]+\"\\n        ) {\\n            o = getValueFromTensorPos_origin(oPos.r, oPos.g, oPos.b - \"+t[2]+\", oPos.a - \"+t[0]+\");\\n        }\\n        else {\\n            \"+a[r]+\"\\n        }\\n        setOutput(float(o));\\n    }\\n    \"},textureFuncConf:{origin:[\"getValueFromTensorPos\"]}},bilinear_interp_v2:gn,shuffle_channel:{mainFunc:function(n,e){var o=n.out,t=e.group,r=void 0===t?2:t,i=o.total_shape,s=o.height_shape,a=o.width_shape,u=o.channel,l=[1,0,2,3];return\"\\n    // start函数\\n    void main(void) {\\n        // 输出数据\\n        ivec4 oPos = getOutputTensorPos();\\n        float o = 0.0;\\n\\n        int sumVal = oPos.a\\n            + oPos.b * \"+a+\"\\n            + oPos.g * \"+s+\" * \"+a+\"\\n            + oPos.r * \"+u+\" * \"+a+\" * \"+s+\";\\n\\n        ivec4 transpose_out_pos = transferFromNHWCtoNCHW(\\n            sumVal,\\n            \"+r+\",\\n            \"+a+\",\\n            \"+s+\",\\n            \"+i+\"\\n        );\\n\\n        ivec4 transpose_in_pos = ivec4(transpose_out_pos[\"+l[0]+\"],\\n            transpose_out_pos[\"+l[1]+\"], transpose_out_pos[\"+l[2]+\"], transpose_out_pos[\"+l[3]+\"]);\\n        int sumVal2 = transpose_in_pos.a\\n            + transpose_in_pos.b * \"+a+\"\\n            + transpose_in_pos.g * \"+s+\" * \"+a+\"\\n            + transpose_in_pos.r * \"+u/r+\" * \"+a+\" * \"+s+\";\\n        ivec4 origin_oPos = transferFromNHWCtoNCHW(\\n            sumVal2,\\n            \"+u+\",\\n            \"+a+\",\\n            \"+s+\",\\n            \"+i+\"\\n        );\\n\\n\\n        o = getValueFromTensorPos_origin(\\n            origin_oPos[0],\\n            origin_oPos[1],\\n            origin_oPos[2],\\n            origin_oPos[3]\\n        );\\n\\n        setOutput(float(o));\\n    }\\n    \"},textureFuncConf:{origin:[\"getValueFromTensorPos\"]},commonFuncConf:[\"transferFromNHWCtoNCHW\"]},pack_out:{mainFunc:function(n,e){return\"\\n\\n    // start函数\\n    void main() {\\n        ivec4 oPos = getOutputTensorPos();\\n        vec2 outCoord = vCoord.xy * _2d_shape_texture_out;\\n        int index = int(outCoord.x) + int(outCoord.y) * int(\"+n.out.width_texture+\");\\n\\n        int first = index * 4;\\n        int sec = index * 4 + 1;\\n        int third = index * 4 + 2;\\n        int fourth = index * 4 + 3;\\n\\n        ivec4 rPos = getTensorPosFromArrayIndex_origin(first);\\n        ivec4 gPos = getTensorPosFromArrayIndex_origin(sec);\\n        ivec4 bPos = getTensorPosFromArrayIndex_origin(third);\\n        ivec4 aPos = getTensorPosFromArrayIndex_origin(fourth);\\n\\n        float r = getValueFromTensorPos_origin(rPos.r, rPos.g, rPos.b, rPos.a);\\n        float g = getValueFromTensorPos_origin(gPos.r, gPos.g, gPos.b, gPos.a);\\n        float b = getValueFromTensorPos_origin(bPos.r, bPos.g, bPos.b, bPos.a);\\n        float a = getValueFromTensorPos_origin(aPos.r, aPos.g, aPos.b, aPos.a);\\n\\n        setPackedOutput(vec4(r, g, b, a));\\n    }\\n    \"},textureFuncConf:{origin:[\"getValueFromTensorPos\",\"getTensorPosFromArrayIndex\"]}},nhwc_2_nchw:{mainFunc:function(n,e){var o=n.origin,t=n.out;return\"\\n    void main() {\\n        ivec4 oPos = getOutputTensorPos();\\n        // 输出坐标转换为输入坐标\\n        int sumVal = oPos.a * \"+t.channel+\"\\n            + oPos.b * \"+t.width_shape+\" * \"+t.channel+\"\\n            + oPos.g\\n            + oPos.r * \"+t.channel+\" * \"+t.width_shape+\" * \"+t.height_shape+\";\\n        ivec4 new_oPos = transferFromNHWCtoNCHW(\\n            sumVal,\\n            \"+o.channel+\",\\n            \"+o.width_shape+\",\\n            \"+o.height_shape+\",\\n            \"+o.total_shape+\"\\n        );\\n        float o = getValueFromTensorPos_origin(new_oPos.r, new_oPos.g, new_oPos.b, new_oPos.a);\\n        setOutput(float(o));\\n    }\\n    \"},textureFuncConf:{origin:[\"getValueFromTensorPos\"]},commonFuncConf:[\"transferFromNHWCtoNCHW\"]},feedPost:{mainFunc:function(n,e){var o=n.out,t=e.mean,r=void 0===t?[0,0,0]:t,i=e.std,s=void 0===i?[1,1,1]:i,a=o.total_shape,u=o.height_shape,l=o.width_shape,f=o.channel;return\"\\n    // start函数\\n    void main(void) {\\n        ivec4 nhwcPos = getOutputTensorPos();\\n        int sumVal = nhwcPos.a\\n            + nhwcPos.b * \"+l+\"\\n            + nhwcPos.g * \"+u+\" * \"+l+\"\\n            + nhwcPos.r * \"+f+\" * \"+l+\" * \"+u+\";\\n\\n        ivec4 oPos = transferFromNHWCtoNCHW(\\n            sumVal,\\n            \"+f+\",\\n            \"+l+\",\\n            \"+u+\",\\n            \"+a+\"\\n        );\\n        float res = 0.0;\\n        int c1 = int(mod(float(oPos[1]), 4.0));\\n        int c = oPos[1];\\n        vec4 o = getValueFromTensorPosPacking_origin(oPos[0], c / 4, oPos[2], oPos[3]);\\n\\n        if (c1 == 0) {\\n            res = o.r;\\n        } else if (c1 == 1) {\\n            res = o.g;\\n        } else if (c1 == 2) {\\n            res = o.b;\\n        } else if (c1 == 3) {\\n            res = o.a;\\n        }\\n\\n        if (c == 0) {\\n            res = (res - float(\"+r[0]+\")) / float(\"+s[0]+\");\\n        } else if (c == 1) {\\n            res = (res - float(\"+r[1]+\")) / float(\"+s[1]+\");\\n        } else if (c == 2) {\\n            res = (res - float(\"+r[2]+\")) / float(\"+s[2]+\");\\n        }\\n        setOutput(float(res));\\n    }\\n    \"},textureFuncConf:{origin:[\"getValueFromTensorPosPacking\"]},commonFuncConf:[\"transferFromNHWCtoNCHW\"]},imgFeed:{mainFunc:function(){return\"\\n    uniform vec2 u_scale;\\n    uniform int u_keep_ratio;\\n\\n    void main(void) {\\n        vec2 outCoord = vCoord.xy;\\n        // 支持模型不按比例拉伸\\n        if (u_keep_ratio == 0) {\\n            vec4 origin = TEXTURE2D(texture_origin, outCoord);\\n            setPackedOutput(origin);\\n            return;\\n        }\\n        float startX = (1.0 - u_scale.x) / 2.0;\\n        float endX = startX + u_scale.x;\\n        float startY = (1.0 - u_scale.y) / 2.0;\\n        float endY = startY + u_scale.y;\\n\\n        if (outCoord.x >= startX && outCoord.x <= endX && outCoord.y >= startY && outCoord.y <= endY) {\\n            vec2 newPos = (outCoord - vec2(startX, startY)) / u_scale;\\n            vec4 origin = TEXTURE2D(texture_origin, newPos);\\n            setPackedOutput(origin);\\n        }\\n        else {\\n            setPackedOutput(vec4(1.0));\\n        }\\n    }\\n    \"},textureFuncConf:{origin:[]}},box_coder:{mainFunc:function(n,e){var o=\"decode_center_size\"===e.code_type;return\"\\n    // start函数\\n    vec2 getPriorBoxData(int r, int g, int b, int m, int n) {\\n        float start = getValueFromTensorPos_priorbox(r, g, b, m);\\n        float end = getValueFromTensorPos_priorbox(r, g, b, n);\\n        float len = end - start;\\n        return vec2(start + len / 2.0, len);\\n    }\\n    vec2 getBoxVarData(int r, int g, int b, int m, int n) {\\n        return vec2(\\n            getValueFromTensorPos_priorboxvar(r, g, b, m),\\n            getValueFromTensorPos_priorboxvar(r, g, b, n)\\n        );\\n    }\\n    vec2 getTargetBoxData(int r, int g, int b, int m, int n) {\\n        \"+(o?\"\\n            return vec2(\\n                getValueFromTensorPos_targetbox(r, g, b, m),\\n                getValueFromTensorPos_targetbox(r, g, b, n)\\n            );\\n        \":\"\\n            float start = getValueFromTensorPos_targetbox(r, g, b, m);\\n            float end = getValueFromTensorPos_targetbox(r, g, b, n);\\n            float len = end - start;\\n            return vec2(start + len / 2.0, len);\\n        \")+\"\\n    }\\n\\n    void main(void) {\\n        ivec4 oPos = getOutputTensorPos();\\n        int r = int(oPos.r);\\n        int g = int(oPos.g);\\n        int b = int(oPos.b);\\n        int a = int(oPos.a);\\n        // 输出坐标转换为输入坐标\\n        float o = 0.0;\\n\\n        int m = 0;\\n        int n = 0;\\n        if (a == 0 || a == \"+(o?2:1)+\") {\\n            m = 0;\\n            n = 2;\\n        }\\n        else {\\n            m = 1;\\n            n = 3;\\n        }\\n        vec2 priorbox = getPriorBoxData(r, g, b, m, n);\\n        vec2 boxvar = getBoxVarData(r, g, b, m, n);\\n        vec2 targetbox = getTargetBoxData(r, g, b, m, n);\\n        float p1 = priorbox.r;\\n        float p2 = priorbox.g;\\n        float t1 = targetbox.r;\\n        float t2 = targetbox.g;\\n        float v1 = boxvar.r;\\n        float v2 = boxvar.g;\\n\\n        \"+(o?\"\\n            float b1 = p2 * v1 * t1 + p1;\\n            float b2 = exp(v2 * t2) * p2;\\n            if (a == 0 || a == 1) {\\n                o = b1 - b2 / 2.0 ;\\n            }\\n            else {\\n                o = b1 + b2 / 2.0;\\n            }\\n        \":\"\\n            if (a == 0 || a == 1) {\\n                o = (t1 - p1) / p2 / v1;\\n            }\\n            else {\\n                o = log(abs(t2 / p2)) / v2;\\n            }\\n        \")+\"\\n        setOutput(float(o));\\n    }\\n    \"},textureFuncConf:{targetbox:[\"getValueFromTensorPos\"],priorbox:[\"getValueFromTensorPos\"],priorboxvar:[\"getValueFromTensorPos\"]},behaviors:[]},density_prior_box:xn,prior_box:Tn,stack:Fn,slice:bn},En=new $;!function(n,e,o){n&&(u.backend=n),e&&(u.backendInstance=e),o&&Object.keys(o).forEach((function(n){!function(n,e){var o=n.conf,t=n.params,r=n.main,i=n.mainFunc,s=n.textureFuncConf,a=n.commonFuncConf,l=n.behaviors,f=void 0===l?[]:l,c=u.backend+\"_\"+e;u.opRegistry.ops[c]||(u.opRegistry.ops[c]={name:e,conf:o,params:t,main:r,mainFunc:i,textureFuncConf:s,commonFuncConf:a,behaviors:f})}(o[n],n)}))}(\"webgl\",En,yn)}},e={};function o(t){if(e[t])return e[t].exports;var r=e[t]={exports:{}};return n[t](r,r.exports,o),r.exports}return o.d=(n,e)=>{for(var t in e)o.o(e,t)&&!o.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:e[t]})},o.g=function(){if(\"object\"==typeof globalThis)return globalThis;try{return this||new Function(\"return this\")()}catch(n){if(\"object\"==typeof window)return window}}(),o.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),o.r=n=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(n,\"__esModule\",{value:!0})},o(400)})()}));","// rev 452\n/********************************************************************************\n*                                                                              *\n* Author    :  Angus Johnson                                                   *\n* Version   :  6.1.3a                                                          *\n* Date      :  22 January 2014                                                 *\n* Website   :  http://www.angusj.com                                           *\n* Copyright :  Angus Johnson 2010-2014                                         *\n*                                                                              *\n* License:                                                                     *\n* Use, modification & distribution is subject to Boost Software License Ver 1. *\n* http://www.boost.org/LICENSE_1_0.txt                                         *\n*                                                                              *\n* Attributions:                                                                *\n* The code in this library is an extension of Bala Vatti's clipping algorithm: *\n* \"A generic solution to polygon clipping\"                                     *\n* Communications of the ACM, Vol 35, Issue 7 (July 1992) pp 56-63.             *\n* http://portal.acm.org/citation.cfm?id=129906                                 *\n*                                                                              *\n* Computer graphics and geometric modeling: implementation and algorithms      *\n* By Max K. Agoston                                                            *\n* Springer; 1 edition (January 4, 2005)                                        *\n* http://books.google.com/books?q=vatti+clipping+agoston                       *\n*                                                                              *\n* See also:                                                                    *\n* \"Polygon Offsetting by Computing Winding Numbers\"                            *\n* Paper no. DETC2005-85513 pp. 565-575                                         *\n* ASME 2005 International Design Engineering Technical Conferences             *\n* and Computers and Information in Engineering Conference (IDETC/CIE2005)      *\n* September 24-28, 2005 , Long Beach, California, USA                          *\n* http://www.me.berkeley.edu/~mcmains/pubs/DAC05OffsetPolygon.pdf              *\n*                                                                              *\n*******************************************************************************/\n/*******************************************************************************\n*                                                                              *\n* Author    :  Timo                                                            *\n* Version   :  6.1.3.2                                                         *\n* Date      :  1 February 2014                                                 *\n*                                                                              *\n* This is a translation of the C# Clipper library to Javascript.               *\n* Int128 struct of C# is implemented using JSBN of Tom Wu.                     *\n* Because Javascript lacks support for 64-bit integers, the space              *\n* is a little more restricted than in C# version.                              *\n*                                                                              *\n* C# version has support for coordinate space:                                 *\n* +-4611686018427387903 ( sqrt(2^127 -1)/2 )                                   *\n* while Javascript version has support for space:                              *\n* +-4503599627370495 ( sqrt(2^106 -1)/2 )                                      *\n*                                                                              *\n* Tom Wu's JSBN proved to be the fastest big integer library:                  *\n* http://jsperf.com/big-integer-library-test                                   *\n*                                                                              *\n* This class can be made simpler when (if ever) 64-bit integer support comes.  *\n*                                                                              *\n*******************************************************************************/\n/*******************************************************************************\n*                                                                              *\n* Basic JavaScript BN library - subset useful for RSA encryption.              *\n* http://www-cs-students.stanford.edu/~tjw/jsbn/                               *\n* Copyright (c) 2005  Tom Wu                                                   *\n* All Rights Reserved.                                                         *\n* See \"LICENSE\" for details:                                                   *\n* http://www-cs-students.stanford.edu/~tjw/jsbn/LICENSE                        *\n*                                                                              *\n*******************************************************************************/\n\n\"use strict\";\n//use_int32: When enabled 32bit ints are used instead of 64bit ints. This\n//improve performance but coordinate values are limited to the range +/- 46340\nvar use_int32 = false;\n//use_xyz: adds a Z member to IntPoint. Adds a minor cost to performance.\nvar use_xyz = false;\n//UseLines: Enables line clipping. Adds a very minor cost to performance.\nvar use_lines = true;\n//use_deprecated: Enables support for the obsolete OffsetPaths() function\n//which has been replace with the ClipperOffset class.\nvar use_deprecated = false;\n\nvar ClipperLib = {};\nvar isNode = false;\nif (typeof module !== 'undefined' && module.exports)\n{\n  module.exports = ClipperLib;\n  isNode = true;\n}\nelse\n{\n  if (typeof (document) !== \"undefined\") window.ClipperLib = ClipperLib;\n  else self['ClipperLib'] = ClipperLib;\n}\nvar navigator_appName;\nif (!isNode)\n{\n  var nav = navigator.userAgent.toString().toLowerCase();\n  navigator_appName = navigator.appName;\n}\nelse\n{\n  var nav = \"chrome\"; // Node.js uses Chrome's V8 engine\n  navigator_appName = \"Netscape\"; // Firefox, Chrome and Safari returns \"Netscape\", so Node.js should also\n}\n// Browser test to speedup performance critical functions\nvar browser = {};\nif (nav.indexOf(\"chrome\") != -1 && nav.indexOf(\"chromium\") == -1) browser.chrome = 1;\nelse browser.chrome = 0;\nif (nav.indexOf(\"chromium\") != -1) browser.chromium = 1;\nelse browser.chromium = 0;\nif (nav.indexOf(\"safari\") != -1 && nav.indexOf(\"chrome\") == -1 && nav.indexOf(\"chromium\") == -1) browser.safari = 1;\nelse browser.safari = 0;\nif (nav.indexOf(\"firefox\") != -1) browser.firefox = 1;\nelse browser.firefox = 0;\nif (nav.indexOf(\"firefox/17\") != -1) browser.firefox17 = 1;\nelse browser.firefox17 = 0;\nif (nav.indexOf(\"firefox/15\") != -1) browser.firefox15 = 1;\nelse browser.firefox15 = 0;\nif (nav.indexOf(\"firefox/3\") != -1) browser.firefox3 = 1;\nelse browser.firefox3 = 0;\nif (nav.indexOf(\"opera\") != -1) browser.opera = 1;\nelse browser.opera = 0;\nif (nav.indexOf(\"msie 10\") != -1) browser.msie10 = 1;\nelse browser.msie10 = 0;\nif (nav.indexOf(\"msie 9\") != -1) browser.msie9 = 1;\nelse browser.msie9 = 0;\nif (nav.indexOf(\"msie 8\") != -1) browser.msie8 = 1;\nelse browser.msie8 = 0;\nif (nav.indexOf(\"msie 7\") != -1) browser.msie7 = 1;\nelse browser.msie7 = 0;\nif (nav.indexOf(\"msie \") != -1) browser.msie = 1;\nelse browser.msie = 0;\nClipperLib.biginteger_used = null;\n// Copyright (c) 2005  Tom Wu\n// All Rights Reserved.\n// See \"LICENSE\" for details.\n// Basic JavaScript BN library - subset useful for RSA encryption.\n// Bits per digit\nvar dbits;\n// JavaScript engine analysis\nvar canary = 0xdeadbeefcafe;\nvar j_lm = ((canary & 0xffffff) == 0xefcafe);\n// (public) Constructor\nfunction BigInteger(a, b, c)\n{\n  // This test variable can be removed,\n  // but at least for performance tests it is useful piece of knowledge\n  // This is the only ClipperLib related variable in BigInteger library\n  ClipperLib.biginteger_used = 1;\n  if (a != null)\n    if (\"number\" == typeof a && \"undefined\" == typeof (b)) this.fromInt(a); // faster conversion\n    else if (\"number\" == typeof a) this.fromNumber(a, b, c);\n  else if (b == null && \"string\" != typeof a) this.fromString(a, 256);\n  else this.fromString(a, b);\n}\n// return new, unset BigInteger\nfunction nbi()\n{\n  return new BigInteger(null);\n}\n// am: Compute w_j += (x*this_i), propagate carries,\n// c is initial carry, returns final carry.\n// c < 3*dvalue, x < 2*dvalue, this_i < dvalue\n// We need to select the fastest one that works in this environment.\n// am1: use a single mult and divide to get the high bits,\n// max digit bits should be 26 because\n// max internal value = 2*dvalue^2-2*dvalue (< 2^53)\nfunction am1(i, x, w, j, c, n)\n{\n  while (--n >= 0)\n  {\n    var v = x * this[i++] + w[j] + c;\n    c = Math.floor(v / 0x4000000);\n    w[j++] = v & 0x3ffffff;\n  }\n  return c;\n}\n// am2 avoids a big mult-and-extract completely.\n// Max digit bits should be <= 30 because we do bitwise ops\n// on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)\nfunction am2(i, x, w, j, c, n)\n{\n  var xl = x & 0x7fff,\n    xh = x >> 15;\n  while (--n >= 0)\n  {\n    var l = this[i] & 0x7fff;\n    var h = this[i++] >> 15;\n    var m = xh * l + h * xl;\n    l = xl * l + ((m & 0x7fff) << 15) + w[j] + (c & 0x3fffffff);\n    c = (l >>> 30) + (m >>> 15) + xh * h + (c >>> 30);\n    w[j++] = l & 0x3fffffff;\n  }\n  return c;\n}\n// Alternately, set max digit bits to 28 since some\n// browsers slow down when dealing with 32-bit numbers.\nfunction am3(i, x, w, j, c, n)\n{\n  var xl = x & 0x3fff,\n    xh = x >> 14;\n  while (--n >= 0)\n  {\n    var l = this[i] & 0x3fff;\n    var h = this[i++] >> 14;\n    var m = xh * l + h * xl;\n    l = xl * l + ((m & 0x3fff) << 14) + w[j] + c;\n    c = (l >> 28) + (m >> 14) + xh * h;\n    w[j++] = l & 0xfffffff;\n  }\n  return c;\n}\nif (j_lm && (navigator_appName == \"Microsoft Internet Explorer\"))\n{\n  BigInteger.prototype.am = am2;\n  dbits = 30;\n}\nelse if (j_lm && (navigator_appName != \"Netscape\"))\n{\n  BigInteger.prototype.am = am1;\n  dbits = 26;\n}\nelse\n{ // Mozilla/Netscape seems to prefer am3\n  BigInteger.prototype.am = am3;\n  dbits = 28;\n}\nBigInteger.prototype.DB = dbits;\nBigInteger.prototype.DM = ((1 << dbits) - 1);\nBigInteger.prototype.DV = (1 << dbits);\nvar BI_FP = 52;\nBigInteger.prototype.FV = Math.pow(2, BI_FP);\nBigInteger.prototype.F1 = BI_FP - dbits;\nBigInteger.prototype.F2 = 2 * dbits - BI_FP;\n// Digit conversions\nvar BI_RM = \"0123456789abcdefghijklmnopqrstuvwxyz\";\nvar BI_RC = new Array();\nvar rr, vv;\nrr = \"0\".charCodeAt(0);\nfor (vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;\nrr = \"a\".charCodeAt(0);\nfor (vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\nrr = \"A\".charCodeAt(0);\nfor (vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\n\nfunction int2char(n)\n{\n  return BI_RM.charAt(n);\n}\n\nfunction intAt(s, i)\n{\n  var c = BI_RC[s.charCodeAt(i)];\n  return (c == null) ? -1 : c;\n}\n// (protected) copy this to r\nfunction bnpCopyTo(r)\n{\n  for (var i = this.t - 1; i >= 0; --i) r[i] = this[i];\n  r.t = this.t;\n  r.s = this.s;\n}\n// (protected) set from integer value x, -DV <= x < DV\nfunction bnpFromInt(x)\n{\n  this.t = 1;\n  this.s = (x < 0) ? -1 : 0;\n  if (x > 0) this[0] = x;\n  else if (x < -1) this[0] = x + this.DV;\n  else this.t = 0;\n}\n// return bigint initialized to value\nfunction nbv(i)\n{\n  var r = nbi();\n  r.fromInt(i);\n  return r;\n}\n// (protected) set from string and radix\nfunction bnpFromString(s, b)\n{\n  var k;\n  if (b == 16) k = 4;\n  else if (b == 8) k = 3;\n  else if (b == 256) k = 8; // byte array\n  else if (b == 2) k = 1;\n  else if (b == 32) k = 5;\n  else if (b == 4) k = 2;\n  else\n  {\n    this.fromRadix(s, b);\n    return;\n  }\n  this.t = 0;\n  this.s = 0;\n  var i = s.length,\n    mi = false,\n    sh = 0;\n  while (--i >= 0)\n  {\n    var x = (k == 8) ? s[i] & 0xff : intAt(s, i);\n    if (x < 0)\n    {\n      if (s.charAt(i) == \"-\") mi = true;\n      continue;\n    }\n    mi = false;\n    if (sh == 0)\n      this[this.t++] = x;\n    else if (sh + k > this.DB)\n    {\n      this[this.t - 1] |= (x & ((1 << (this.DB - sh)) - 1)) << sh;\n      this[this.t++] = (x >> (this.DB - sh));\n    }\n    else\n      this[this.t - 1] |= x << sh;\n    sh += k;\n    if (sh >= this.DB) sh -= this.DB;\n  }\n  if (k == 8 && (s[0] & 0x80) != 0)\n  {\n    this.s = -1;\n    if (sh > 0) this[this.t - 1] |= ((1 << (this.DB - sh)) - 1) << sh;\n  }\n  this.clamp();\n  if (mi) BigInteger.ZERO.subTo(this, this);\n}\n// (protected) clamp off excess high words\nfunction bnpClamp()\n{\n  var c = this.s & this.DM;\n  while (this.t > 0 && this[this.t - 1] == c)--this.t;\n}\n// (public) return string representation in given radix\nfunction bnToString(b)\n{\n  if (this.s < 0) return \"-\" + this.negate().toString(b);\n  var k;\n  if (b == 16) k = 4;\n  else if (b == 8) k = 3;\n  else if (b == 2) k = 1;\n  else if (b == 32) k = 5;\n  else if (b == 4) k = 2;\n  else return this.toRadix(b);\n  var km = (1 << k) - 1,\n    d, m = false,\n    r = \"\",\n    i = this.t;\n  var p = this.DB - (i * this.DB) % k;\n  if (i-- > 0)\n  {\n    if (p < this.DB && (d = this[i] >> p) > 0)\n    {\n      m = true;\n      r = int2char(d);\n    }\n    while (i >= 0)\n    {\n      if (p < k)\n      {\n        d = (this[i] & ((1 << p) - 1)) << (k - p);\n        d |= this[--i] >> (p += this.DB - k);\n      }\n      else\n      {\n        d = (this[i] >> (p -= k)) & km;\n        if (p <= 0)\n        {\n          p += this.DB;\n          --i;\n        }\n      }\n      if (d > 0) m = true;\n      if (m) r += int2char(d);\n    }\n  }\n  return m ? r : \"0\";\n}\n// (public) -this\nfunction bnNegate()\n{\n  var r = nbi();\n  BigInteger.ZERO.subTo(this, r);\n  return r;\n}\n// (public) |this|\nfunction bnAbs()\n{\n  return (this.s < 0) ? this.negate() : this;\n}\n// (public) return + if this > a, - if this < a, 0 if equal\nfunction bnCompareTo(a)\n{\n  var r = this.s - a.s;\n  if (r != 0) return r;\n  var i = this.t;\n  r = i - a.t;\n  if (r != 0) return (this.s < 0) ? -r : r;\n  while (--i >= 0)\n    if ((r = this[i] - a[i]) != 0) return r;\n  return 0;\n}\n// returns bit length of the integer x\nfunction nbits(x)\n{\n  var r = 1,\n    t;\n  if ((t = x >>> 16) != 0)\n  {\n    x = t;\n    r += 16;\n  }\n  if ((t = x >> 8) != 0)\n  {\n    x = t;\n    r += 8;\n  }\n  if ((t = x >> 4) != 0)\n  {\n    x = t;\n    r += 4;\n  }\n  if ((t = x >> 2) != 0)\n  {\n    x = t;\n    r += 2;\n  }\n  if ((t = x >> 1) != 0)\n  {\n    x = t;\n    r += 1;\n  }\n  return r;\n}\n// (public) return the number of bits in \"this\"\nfunction bnBitLength()\n{\n  if (this.t <= 0) return 0;\n  return this.DB * (this.t - 1) + nbits(this[this.t - 1] ^ (this.s & this.DM));\n}\n// (protected) r = this << n*DB\nfunction bnpDLShiftTo(n, r)\n{\n  var i;\n  for (i = this.t - 1; i >= 0; --i) r[i + n] = this[i];\n  for (i = n - 1; i >= 0; --i) r[i] = 0;\n  r.t = this.t + n;\n  r.s = this.s;\n}\n// (protected) r = this >> n*DB\nfunction bnpDRShiftTo(n, r)\n{\n  for (var i = n; i < this.t; ++i) r[i - n] = this[i];\n  r.t = Math.max(this.t - n, 0);\n  r.s = this.s;\n}\n// (protected) r = this << n\nfunction bnpLShiftTo(n, r)\n{\n  var bs = n % this.DB;\n  var cbs = this.DB - bs;\n  var bm = (1 << cbs) - 1;\n  var ds = Math.floor(n / this.DB),\n    c = (this.s << bs) & this.DM,\n    i;\n  for (i = this.t - 1; i >= 0; --i)\n  {\n    r[i + ds + 1] = (this[i] >> cbs) | c;\n    c = (this[i] & bm) << bs;\n  }\n  for (i = ds - 1; i >= 0; --i) r[i] = 0;\n  r[ds] = c;\n  r.t = this.t + ds + 1;\n  r.s = this.s;\n  r.clamp();\n}\n// (protected) r = this >> n\nfunction bnpRShiftTo(n, r)\n{\n  r.s = this.s;\n  var ds = Math.floor(n / this.DB);\n  if (ds >= this.t)\n  {\n    r.t = 0;\n    return;\n  }\n  var bs = n % this.DB;\n  var cbs = this.DB - bs;\n  var bm = (1 << bs) - 1;\n  r[0] = this[ds] >> bs;\n  for (var i = ds + 1; i < this.t; ++i)\n  {\n    r[i - ds - 1] |= (this[i] & bm) << cbs;\n    r[i - ds] = this[i] >> bs;\n  }\n  if (bs > 0) r[this.t - ds - 1] |= (this.s & bm) << cbs;\n  r.t = this.t - ds;\n  r.clamp();\n}\n// (protected) r = this - a\nfunction bnpSubTo(a, r)\n{\n  var i = 0,\n    c = 0,\n    m = Math.min(a.t, this.t);\n  while (i < m)\n  {\n    c += this[i] - a[i];\n    r[i++] = c & this.DM;\n    c >>= this.DB;\n  }\n  if (a.t < this.t)\n  {\n    c -= a.s;\n    while (i < this.t)\n    {\n      c += this[i];\n      r[i++] = c & this.DM;\n      c >>= this.DB;\n    }\n    c += this.s;\n  }\n  else\n  {\n    c += this.s;\n    while (i < a.t)\n    {\n      c -= a[i];\n      r[i++] = c & this.DM;\n      c >>= this.DB;\n    }\n    c -= a.s;\n  }\n  r.s = (c < 0) ? -1 : 0;\n  if (c < -1) r[i++] = this.DV + c;\n  else if (c > 0) r[i++] = c;\n  r.t = i;\n  r.clamp();\n}\n// (protected) r = this * a, r != this,a (HAC 14.12)\n// \"this\" should be the larger one if appropriate.\nfunction bnpMultiplyTo(a, r)\n{\n  var x = this.abs(),\n    y = a.abs();\n  var i = x.t;\n  r.t = i + y.t;\n  while (--i >= 0) r[i] = 0;\n  for (i = 0; i < y.t; ++i) r[i + x.t] = x.am(0, y[i], r, i, 0, x.t);\n  r.s = 0;\n  r.clamp();\n  if (this.s != a.s) BigInteger.ZERO.subTo(r, r);\n}\n// (protected) r = this^2, r != this (HAC 14.16)\nfunction bnpSquareTo(r)\n{\n  var x = this.abs();\n  var i = r.t = 2 * x.t;\n  while (--i >= 0) r[i] = 0;\n  for (i = 0; i < x.t - 1; ++i)\n  {\n    var c = x.am(i, x[i], r, 2 * i, 0, 1);\n    if ((r[i + x.t] += x.am(i + 1, 2 * x[i], r, 2 * i + 1, c, x.t - i - 1)) >= x.DV)\n    {\n      r[i + x.t] -= x.DV;\n      r[i + x.t + 1] = 1;\n    }\n  }\n  if (r.t > 0) r[r.t - 1] += x.am(i, x[i], r, 2 * i, 0, 1);\n  r.s = 0;\n  r.clamp();\n}\n// (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)\n// r != q, this != m.  q or r may be null.\nfunction bnpDivRemTo(m, q, r)\n{\n  var pm = m.abs();\n  if (pm.t <= 0) return;\n  var pt = this.abs();\n  if (pt.t < pm.t)\n  {\n    if (q != null) q.fromInt(0);\n    if (r != null) this.copyTo(r);\n    return;\n  }\n  if (r == null) r = nbi();\n  var y = nbi(),\n    ts = this.s,\n    ms = m.s;\n  var nsh = this.DB - nbits(pm[pm.t - 1]); // normalize modulus\n  if (nsh > 0)\n  {\n    pm.lShiftTo(nsh, y);\n    pt.lShiftTo(nsh, r);\n  }\n  else\n  {\n    pm.copyTo(y);\n    pt.copyTo(r);\n  }\n  var ys = y.t;\n  var y0 = y[ys - 1];\n  if (y0 == 0) return;\n  var yt = y0 * (1 << this.F1) + ((ys > 1) ? y[ys - 2] >> this.F2 : 0);\n  var d1 = this.FV / yt,\n    d2 = (1 << this.F1) / yt,\n    e = 1 << this.F2;\n  var i = r.t,\n    j = i - ys,\n    t = (q == null) ? nbi() : q;\n  y.dlShiftTo(j, t);\n  if (r.compareTo(t) >= 0)\n  {\n    r[r.t++] = 1;\n    r.subTo(t, r);\n  }\n  BigInteger.ONE.dlShiftTo(ys, t);\n  t.subTo(y, y); // \"negative\" y so we can replace sub with am later\n  while (y.t < ys) y[y.t++] = 0;\n  while (--j >= 0)\n  {\n    // Estimate quotient digit\n    var qd = (r[--i] == y0) ? this.DM : Math.floor(r[i] * d1 + (r[i - 1] + e) * d2);\n    if ((r[i] += y.am(0, qd, r, j, 0, ys)) < qd)\n    { // Try it out\n      y.dlShiftTo(j, t);\n      r.subTo(t, r);\n      while (r[i] < --qd) r.subTo(t, r);\n    }\n  }\n  if (q != null)\n  {\n    r.drShiftTo(ys, q);\n    if (ts != ms) BigInteger.ZERO.subTo(q, q);\n  }\n  r.t = ys;\n  r.clamp();\n  if (nsh > 0) r.rShiftTo(nsh, r); // Denormalize remainder\n  if (ts < 0) BigInteger.ZERO.subTo(r, r);\n}\n// (public) this mod a\nfunction bnMod(a)\n{\n  var r = nbi();\n  this.abs().divRemTo(a, null, r);\n  if (this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r, r);\n  return r;\n}\n// Modular reduction using \"classic\" algorithm\nfunction Classic(m)\n{\n  this.m = m;\n}\n\nfunction cConvert(x)\n{\n  if (x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);\n  else return x;\n}\n\nfunction cRevert(x)\n{\n  return x;\n}\n\nfunction cReduce(x)\n{\n  x.divRemTo(this.m, null, x);\n}\n\nfunction cMulTo(x, y, r)\n{\n  x.multiplyTo(y, r);\n  this.reduce(r);\n}\n\nfunction cSqrTo(x, r)\n{\n  x.squareTo(r);\n  this.reduce(r);\n}\nClassic.prototype.convert = cConvert;\nClassic.prototype.revert = cRevert;\nClassic.prototype.reduce = cReduce;\nClassic.prototype.mulTo = cMulTo;\nClassic.prototype.sqrTo = cSqrTo;\n// (protected) return \"-1/this % 2^DB\"; useful for Mont. reduction\n// justification:\n//         xy == 1 (mod m)\n//         xy =  1+km\n//   xy(2-xy) = (1+km)(1-km)\n// x[y(2-xy)] = 1-k^2m^2\n// x[y(2-xy)] == 1 (mod m^2)\n// if y is 1/x mod m, then y(2-xy) is 1/x mod m^2\n// should reduce x and y(2-xy) by m^2 at each step to keep size bounded.\n// JS multiply \"overflows\" differently from C/C++, so care is needed here.\nfunction bnpInvDigit()\n{\n  if (this.t < 1) return 0;\n  var x = this[0];\n  if ((x & 1) == 0) return 0;\n  var y = x & 3; // y == 1/x mod 2^2\n  y = (y * (2 - (x & 0xf) * y)) & 0xf; // y == 1/x mod 2^4\n  y = (y * (2 - (x & 0xff) * y)) & 0xff; // y == 1/x mod 2^8\n  y = (y * (2 - (((x & 0xffff) * y) & 0xffff))) & 0xffff; // y == 1/x mod 2^16\n  // last step - calculate inverse mod DV directly;\n  // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints\n  y = (y * (2 - x * y % this.DV)) % this.DV; // y == 1/x mod 2^dbits\n  // we really want the negative inverse, and -DV < y < DV\n  return (y > 0) ? this.DV - y : -y;\n}\n// Montgomery reduction\nfunction Montgomery(m)\n{\n  this.m = m;\n  this.mp = m.invDigit();\n  this.mpl = this.mp & 0x7fff;\n  this.mph = this.mp >> 15;\n  this.um = (1 << (m.DB - 15)) - 1;\n  this.mt2 = 2 * m.t;\n}\n// xR mod m\nfunction montConvert(x)\n{\n  var r = nbi();\n  x.abs().dlShiftTo(this.m.t, r);\n  r.divRemTo(this.m, null, r);\n  if (x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r, r);\n  return r;\n}\n// x/R mod m\nfunction montRevert(x)\n{\n  var r = nbi();\n  x.copyTo(r);\n  this.reduce(r);\n  return r;\n}\n// x = x/R mod m (HAC 14.32)\nfunction montReduce(x)\n{\n  while (x.t <= this.mt2) // pad x so am has enough room later\n    x[x.t++] = 0;\n  for (var i = 0; i < this.m.t; ++i)\n  {\n    // faster way of calculating u0 = x[i]*mp mod DV\n    var j = x[i] & 0x7fff;\n    var u0 = (j * this.mpl + (((j * this.mph + (x[i] >> 15) * this.mpl) & this.um) << 15)) & x.DM;\n    // use am to combine the multiply-shift-add into one call\n    j = i + this.m.t;\n    x[j] += this.m.am(0, u0, x, i, 0, this.m.t);\n    // propagate carry\n    while (x[j] >= x.DV)\n    {\n      x[j] -= x.DV;\n      x[++j]++;\n    }\n  }\n  x.clamp();\n  x.drShiftTo(this.m.t, x);\n  if (x.compareTo(this.m) >= 0) x.subTo(this.m, x);\n}\n// r = \"x^2/R mod m\"; x != r\nfunction montSqrTo(x, r)\n{\n  x.squareTo(r);\n  this.reduce(r);\n}\n// r = \"xy/R mod m\"; x,y != r\nfunction montMulTo(x, y, r)\n{\n  x.multiplyTo(y, r);\n  this.reduce(r);\n}\nMontgomery.prototype.convert = montConvert;\nMontgomery.prototype.revert = montRevert;\nMontgomery.prototype.reduce = montReduce;\nMontgomery.prototype.mulTo = montMulTo;\nMontgomery.prototype.sqrTo = montSqrTo;\n// (protected) true iff this is even\nfunction bnpIsEven()\n{\n  return ((this.t > 0) ? (this[0] & 1) : this.s) == 0;\n}\n// (protected) this^e, e < 2^32, doing sqr and mul with \"r\" (HAC 14.79)\nfunction bnpExp(e, z)\n{\n  if (e > 0xffffffff || e < 1) return BigInteger.ONE;\n  var r = nbi(),\n    r2 = nbi(),\n    g = z.convert(this),\n    i = nbits(e) - 1;\n  g.copyTo(r);\n  while (--i >= 0)\n  {\n    z.sqrTo(r, r2);\n    if ((e & (1 << i)) > 0) z.mulTo(r2, g, r);\n    else\n    {\n      var t = r;\n      r = r2;\n      r2 = t;\n    }\n  }\n  return z.revert(r);\n}\n// (public) this^e % m, 0 <= e < 2^32\nfunction bnModPowInt(e, m)\n{\n  var z;\n  if (e < 256 || m.isEven()) z = new Classic(m);\n  else z = new Montgomery(m);\n  return this.exp(e, z);\n}\n// protected\nBigInteger.prototype.copyTo = bnpCopyTo;\nBigInteger.prototype.fromInt = bnpFromInt;\nBigInteger.prototype.fromString = bnpFromString;\nBigInteger.prototype.clamp = bnpClamp;\nBigInteger.prototype.dlShiftTo = bnpDLShiftTo;\nBigInteger.prototype.drShiftTo = bnpDRShiftTo;\nBigInteger.prototype.lShiftTo = bnpLShiftTo;\nBigInteger.prototype.rShiftTo = bnpRShiftTo;\nBigInteger.prototype.subTo = bnpSubTo;\nBigInteger.prototype.multiplyTo = bnpMultiplyTo;\nBigInteger.prototype.squareTo = bnpSquareTo;\nBigInteger.prototype.divRemTo = bnpDivRemTo;\nBigInteger.prototype.invDigit = bnpInvDigit;\nBigInteger.prototype.isEven = bnpIsEven;\nBigInteger.prototype.exp = bnpExp;\n// public\nBigInteger.prototype.toString = bnToString;\nBigInteger.prototype.negate = bnNegate;\nBigInteger.prototype.abs = bnAbs;\nBigInteger.prototype.compareTo = bnCompareTo;\nBigInteger.prototype.bitLength = bnBitLength;\nBigInteger.prototype.mod = bnMod;\nBigInteger.prototype.modPowInt = bnModPowInt;\n// \"constants\"\nBigInteger.ZERO = nbv(0);\nBigInteger.ONE = nbv(1);\n// Copyright (c) 2005-2009  Tom Wu\n// All Rights Reserved.\n// See \"LICENSE\" for details.\n// Extended JavaScript BN functions, required for RSA private ops.\n// Version 1.1: new BigInteger(\"0\", 10) returns \"proper\" zero\n// Version 1.2: square() API, isProbablePrime fix\n// (public)\nfunction bnClone()\n{\n  var r = nbi();\n  this.copyTo(r);\n  return r;\n}\n// (public) return value as integer\nfunction bnIntValue()\n{\n  if (this.s < 0)\n  {\n    if (this.t == 1) return this[0] - this.DV;\n    else if (this.t == 0) return -1;\n  }\n  else if (this.t == 1) return this[0];\n  else if (this.t == 0) return 0;\n  // assumes 16 < DB < 32\n  return ((this[1] & ((1 << (32 - this.DB)) - 1)) << this.DB) | this[0];\n}\n// (public) return value as byte\nfunction bnByteValue()\n{\n  return (this.t == 0) ? this.s : (this[0] << 24) >> 24;\n}\n// (public) return value as short (assumes DB>=16)\nfunction bnShortValue()\n{\n  return (this.t == 0) ? this.s : (this[0] << 16) >> 16;\n}\n// (protected) return x s.t. r^x < DV\nfunction bnpChunkSize(r)\n{\n  return Math.floor(Math.LN2 * this.DB / Math.log(r));\n}\n// (public) 0 if this == 0, 1 if this > 0\nfunction bnSigNum()\n{\n  if (this.s < 0) return -1;\n  else if (this.t <= 0 || (this.t == 1 && this[0] <= 0)) return 0;\n  else return 1;\n}\n// (protected) convert to radix string\nfunction bnpToRadix(b)\n{\n  if (b == null) b = 10;\n  if (this.signum() == 0 || b < 2 || b > 36) return \"0\";\n  var cs = this.chunkSize(b);\n  var a = Math.pow(b, cs);\n  var d = nbv(a),\n    y = nbi(),\n    z = nbi(),\n    r = \"\";\n  this.divRemTo(d, y, z);\n  while (y.signum() > 0)\n  {\n    r = (a + z.intValue()).toString(b).substr(1) + r;\n    y.divRemTo(d, y, z);\n  }\n  return z.intValue().toString(b) + r;\n}\n// (protected) convert from radix string\nfunction bnpFromRadix(s, b)\n{\n  this.fromInt(0);\n  if (b == null) b = 10;\n  var cs = this.chunkSize(b);\n  var d = Math.pow(b, cs),\n    mi = false,\n    j = 0,\n    w = 0;\n  for (var i = 0; i < s.length; ++i)\n  {\n    var x = intAt(s, i);\n    if (x < 0)\n    {\n      if (s.charAt(i) == \"-\" && this.signum() == 0) mi = true;\n      continue;\n    }\n    w = b * w + x;\n    if (++j >= cs)\n    {\n      this.dMultiply(d);\n      this.dAddOffset(w, 0);\n      j = 0;\n      w = 0;\n    }\n  }\n  if (j > 0)\n  {\n    this.dMultiply(Math.pow(b, j));\n    this.dAddOffset(w, 0);\n  }\n  if (mi) BigInteger.ZERO.subTo(this, this);\n}\n// (protected) alternate constructor\nfunction bnpFromNumber(a, b, c)\n{\n  if (\"number\" == typeof b)\n  {\n    // new BigInteger(int,int,RNG)\n    if (a < 2) this.fromInt(1);\n    else\n    {\n      this.fromNumber(a, c);\n      if (!this.testBit(a - 1)) // force MSB set\n        this.bitwiseTo(BigInteger.ONE.shiftLeft(a - 1), op_or, this);\n      if (this.isEven()) this.dAddOffset(1, 0); // force odd\n      while (!this.isProbablePrime(b))\n      {\n        this.dAddOffset(2, 0);\n        if (this.bitLength() > a) this.subTo(BigInteger.ONE.shiftLeft(a - 1), this);\n      }\n    }\n  }\n  else\n  {\n    // new BigInteger(int,RNG)\n    var x = new Array(),\n      t = a & 7;\n    x.length = (a >> 3) + 1;\n    b.nextBytes(x);\n    if (t > 0) x[0] &= ((1 << t) - 1);\n    else x[0] = 0;\n    this.fromString(x, 256);\n  }\n}\n// (public) convert to bigendian byte array\nfunction bnToByteArray()\n{\n  var i = this.t,\n    r = new Array();\n  r[0] = this.s;\n  var p = this.DB - (i * this.DB) % 8,\n    d, k = 0;\n  if (i-- > 0)\n  {\n    if (p < this.DB && (d = this[i] >> p) != (this.s & this.DM) >> p)\n      r[k++] = d | (this.s << (this.DB - p));\n    while (i >= 0)\n    {\n      if (p < 8)\n      {\n        d = (this[i] & ((1 << p) - 1)) << (8 - p);\n        d |= this[--i] >> (p += this.DB - 8);\n      }\n      else\n      {\n        d = (this[i] >> (p -= 8)) & 0xff;\n        if (p <= 0)\n        {\n          p += this.DB;\n          --i;\n        }\n      }\n      if ((d & 0x80) != 0) d |= -256;\n      if (k == 0 && (this.s & 0x80) != (d & 0x80))++k;\n      if (k > 0 || d != this.s) r[k++] = d;\n    }\n  }\n  return r;\n}\n\nfunction bnEquals(a)\n{\n  return (this.compareTo(a) == 0);\n}\n\nfunction bnMin(a)\n{\n  return (this.compareTo(a) < 0) ? this : a;\n}\n\nfunction bnMax(a)\n{\n  return (this.compareTo(a) > 0) ? this : a;\n}\n// (protected) r = this op a (bitwise)\nfunction bnpBitwiseTo(a, op, r)\n{\n  var i, f, m = Math.min(a.t, this.t);\n  for (i = 0; i < m; ++i) r[i] = op(this[i], a[i]);\n  if (a.t < this.t)\n  {\n    f = a.s & this.DM;\n    for (i = m; i < this.t; ++i) r[i] = op(this[i], f);\n    r.t = this.t;\n  }\n  else\n  {\n    f = this.s & this.DM;\n    for (i = m; i < a.t; ++i) r[i] = op(f, a[i]);\n    r.t = a.t;\n  }\n  r.s = op(this.s, a.s);\n  r.clamp();\n}\n// (public) this & a\nfunction op_and(x, y)\n{\n  return x & y;\n}\n\nfunction bnAnd(a)\n{\n  var r = nbi();\n  this.bitwiseTo(a, op_and, r);\n  return r;\n}\n// (public) this | a\nfunction op_or(x, y)\n{\n  return x | y;\n}\n\nfunction bnOr(a)\n{\n  var r = nbi();\n  this.bitwiseTo(a, op_or, r);\n  return r;\n}\n// (public) this ^ a\nfunction op_xor(x, y)\n{\n  return x ^ y;\n}\n\nfunction bnXor(a)\n{\n  var r = nbi();\n  this.bitwiseTo(a, op_xor, r);\n  return r;\n}\n// (public) this & ~a\nfunction op_andnot(x, y)\n{\n  return x & ~y;\n}\n\nfunction bnAndNot(a)\n{\n  var r = nbi();\n  this.bitwiseTo(a, op_andnot, r);\n  return r;\n}\n// (public) ~this\nfunction bnNot()\n{\n  var r = nbi();\n  for (var i = 0; i < this.t; ++i) r[i] = this.DM & ~this[i];\n  r.t = this.t;\n  r.s = ~this.s;\n  return r;\n}\n// (public) this << n\nfunction bnShiftLeft(n)\n{\n  var r = nbi();\n  if (n < 0) this.rShiftTo(-n, r);\n  else this.lShiftTo(n, r);\n  return r;\n}\n// (public) this >> n\nfunction bnShiftRight(n)\n{\n  var r = nbi();\n  if (n < 0) this.lShiftTo(-n, r);\n  else this.rShiftTo(n, r);\n  return r;\n}\n// return index of lowest 1-bit in x, x < 2^31\nfunction lbit(x)\n{\n  if (x == 0) return -1;\n  var r = 0;\n  if ((x & 0xffff) == 0)\n  {\n    x >>= 16;\n    r += 16;\n  }\n  if ((x & 0xff) == 0)\n  {\n    x >>= 8;\n    r += 8;\n  }\n  if ((x & 0xf) == 0)\n  {\n    x >>= 4;\n    r += 4;\n  }\n  if ((x & 3) == 0)\n  {\n    x >>= 2;\n    r += 2;\n  }\n  if ((x & 1) == 0)++r;\n  return r;\n}\n// (public) returns index of lowest 1-bit (or -1 if none)\nfunction bnGetLowestSetBit()\n{\n  for (var i = 0; i < this.t; ++i)\n    if (this[i] != 0) return i * this.DB + lbit(this[i]);\n  if (this.s < 0) return this.t * this.DB;\n  return -1;\n}\n// return number of 1 bits in x\nfunction cbit(x)\n{\n  var r = 0;\n  while (x != 0)\n  {\n    x &= x - 1;\n    ++r;\n  }\n  return r;\n}\n// (public) return number of set bits\nfunction bnBitCount()\n{\n  var r = 0,\n    x = this.s & this.DM;\n  for (var i = 0; i < this.t; ++i) r += cbit(this[i] ^ x);\n  return r;\n}\n// (public) true iff nth bit is set\nfunction bnTestBit(n)\n{\n  var j = Math.floor(n / this.DB);\n  if (j >= this.t) return (this.s != 0);\n  return ((this[j] & (1 << (n % this.DB))) != 0);\n}\n// (protected) this op (1<<n)\nfunction bnpChangeBit(n, op)\n{\n  var r = BigInteger.ONE.shiftLeft(n);\n  this.bitwiseTo(r, op, r);\n  return r;\n}\n// (public) this | (1<<n)\nfunction bnSetBit(n)\n{\n  return this.changeBit(n, op_or);\n}\n// (public) this & ~(1<<n)\nfunction bnClearBit(n)\n{\n  return this.changeBit(n, op_andnot);\n}\n// (public) this ^ (1<<n)\nfunction bnFlipBit(n)\n{\n  return this.changeBit(n, op_xor);\n}\n// (protected) r = this + a\nfunction bnpAddTo(a, r)\n{\n  var i = 0,\n    c = 0,\n    m = Math.min(a.t, this.t);\n  while (i < m)\n  {\n    c += this[i] + a[i];\n    r[i++] = c & this.DM;\n    c >>= this.DB;\n  }\n  if (a.t < this.t)\n  {\n    c += a.s;\n    while (i < this.t)\n    {\n      c += this[i];\n      r[i++] = c & this.DM;\n      c >>= this.DB;\n    }\n    c += this.s;\n  }\n  else\n  {\n    c += this.s;\n    while (i < a.t)\n    {\n      c += a[i];\n      r[i++] = c & this.DM;\n      c >>= this.DB;\n    }\n    c += a.s;\n  }\n  r.s = (c < 0) ? -1 : 0;\n  if (c > 0) r[i++] = c;\n  else if (c < -1) r[i++] = this.DV + c;\n  r.t = i;\n  r.clamp();\n}\n// (public) this + a\nfunction bnAdd(a)\n{\n  var r = nbi();\n  this.addTo(a, r);\n  return r;\n}\n// (public) this - a\nfunction bnSubtract(a)\n{\n  var r = nbi();\n  this.subTo(a, r);\n  return r;\n}\n// (public) this * a\nfunction bnMultiply(a)\n{\n  var r = nbi();\n  this.multiplyTo(a, r);\n  return r;\n}\n// (public) this^2\nfunction bnSquare()\n{\n  var r = nbi();\n  this.squareTo(r);\n  return r;\n}\n// (public) this / a\nfunction bnDivide(a)\n{\n  var r = nbi();\n  this.divRemTo(a, r, null);\n  return r;\n}\n// (public) this % a\nfunction bnRemainder(a)\n{\n  var r = nbi();\n  this.divRemTo(a, null, r);\n  return r;\n}\n// (public) [this/a,this%a]\nfunction bnDivideAndRemainder(a)\n{\n  var q = nbi(),\n    r = nbi();\n  this.divRemTo(a, q, r);\n  return new Array(q, r);\n}\n// (protected) this *= n, this >= 0, 1 < n < DV\nfunction bnpDMultiply(n)\n{\n  this[this.t] = this.am(0, n - 1, this, 0, 0, this.t);\n  ++this.t;\n  this.clamp();\n}\n// (protected) this += n << w words, this >= 0\nfunction bnpDAddOffset(n, w)\n{\n  if (n == 0) return;\n  while (this.t <= w) this[this.t++] = 0;\n  this[w] += n;\n  while (this[w] >= this.DV)\n  {\n    this[w] -= this.DV;\n    if (++w >= this.t) this[this.t++] = 0;\n    ++this[w];\n  }\n}\n// A \"null\" reducer\nfunction NullExp()\n{}\n\nfunction nNop(x)\n{\n  return x;\n}\n\nfunction nMulTo(x, y, r)\n{\n  x.multiplyTo(y, r);\n}\n\nfunction nSqrTo(x, r)\n{\n  x.squareTo(r);\n}\nNullExp.prototype.convert = nNop;\nNullExp.prototype.revert = nNop;\nNullExp.prototype.mulTo = nMulTo;\nNullExp.prototype.sqrTo = nSqrTo;\n// (public) this^e\nfunction bnPow(e)\n{\n  return this.exp(e, new NullExp());\n}\n// (protected) r = lower n words of \"this * a\", a.t <= n\n// \"this\" should be the larger one if appropriate.\nfunction bnpMultiplyLowerTo(a, n, r)\n{\n  var i = Math.min(this.t + a.t, n);\n  r.s = 0; // assumes a,this >= 0\n  r.t = i;\n  while (i > 0) r[--i] = 0;\n  var j;\n  for (j = r.t - this.t; i < j; ++i) r[i + this.t] = this.am(0, a[i], r, i, 0, this.t);\n  for (j = Math.min(a.t, n); i < j; ++i) this.am(0, a[i], r, i, 0, n - i);\n  r.clamp();\n}\n// (protected) r = \"this * a\" without lower n words, n > 0\n// \"this\" should be the larger one if appropriate.\nfunction bnpMultiplyUpperTo(a, n, r)\n{\n  --n;\n  var i = r.t = this.t + a.t - n;\n  r.s = 0; // assumes a,this >= 0\n  while (--i >= 0) r[i] = 0;\n  for (i = Math.max(n - this.t, 0); i < a.t; ++i)\n    r[this.t + i - n] = this.am(n - i, a[i], r, 0, 0, this.t + i - n);\n  r.clamp();\n  r.drShiftTo(1, r);\n}\n// Barrett modular reduction\nfunction Barrett(m)\n{\n  // setup Barrett\n  this.r2 = nbi();\n  this.q3 = nbi();\n  BigInteger.ONE.dlShiftTo(2 * m.t, this.r2);\n  this.mu = this.r2.divide(m);\n  this.m = m;\n}\n\nfunction barrettConvert(x)\n{\n  if (x.s < 0 || x.t > 2 * this.m.t) return x.mod(this.m);\n  else if (x.compareTo(this.m) < 0) return x;\n  else\n  {\n    var r = nbi();\n    x.copyTo(r);\n    this.reduce(r);\n    return r;\n  }\n}\n\nfunction barrettRevert(x)\n{\n  return x;\n}\n// x = x mod m (HAC 14.42)\nfunction barrettReduce(x)\n{\n  x.drShiftTo(this.m.t - 1, this.r2);\n  if (x.t > this.m.t + 1)\n  {\n    x.t = this.m.t + 1;\n    x.clamp();\n  }\n  this.mu.multiplyUpperTo(this.r2, this.m.t + 1, this.q3);\n  this.m.multiplyLowerTo(this.q3, this.m.t + 1, this.r2);\n  while (x.compareTo(this.r2) < 0) x.dAddOffset(1, this.m.t + 1);\n  x.subTo(this.r2, x);\n  while (x.compareTo(this.m) >= 0) x.subTo(this.m, x);\n}\n// r = x^2 mod m; x != r\nfunction barrettSqrTo(x, r)\n{\n  x.squareTo(r);\n  this.reduce(r);\n}\n// r = x*y mod m; x,y != r\nfunction barrettMulTo(x, y, r)\n{\n  x.multiplyTo(y, r);\n  this.reduce(r);\n}\nBarrett.prototype.convert = barrettConvert;\nBarrett.prototype.revert = barrettRevert;\nBarrett.prototype.reduce = barrettReduce;\nBarrett.prototype.mulTo = barrettMulTo;\nBarrett.prototype.sqrTo = barrettSqrTo;\n// (public) this^e % m (HAC 14.85)\nfunction bnModPow(e, m)\n{\n  var i = e.bitLength(),\n    k, r = nbv(1),\n    z;\n  if (i <= 0) return r;\n  else if (i < 18) k = 1;\n  else if (i < 48) k = 3;\n  else if (i < 144) k = 4;\n  else if (i < 768) k = 5;\n  else k = 6;\n  if (i < 8)\n    z = new Classic(m);\n  else if (m.isEven())\n    z = new Barrett(m);\n  else\n    z = new Montgomery(m);\n  // precomputation\n  var g = new Array(),\n    n = 3,\n    k1 = k - 1,\n    km = (1 << k) - 1;\n  g[1] = z.convert(this);\n  if (k > 1)\n  {\n    var g2 = nbi();\n    z.sqrTo(g[1], g2);\n    while (n <= km)\n    {\n      g[n] = nbi();\n      z.mulTo(g2, g[n - 2], g[n]);\n      n += 2;\n    }\n  }\n  var j = e.t - 1,\n    w, is1 = true,\n    r2 = nbi(),\n    t;\n  i = nbits(e[j]) - 1;\n  while (j >= 0)\n  {\n    if (i >= k1) w = (e[j] >> (i - k1)) & km;\n    else\n    {\n      w = (e[j] & ((1 << (i + 1)) - 1)) << (k1 - i);\n      if (j > 0) w |= e[j - 1] >> (this.DB + i - k1);\n    }\n    n = k;\n    while ((w & 1) == 0)\n    {\n      w >>= 1;\n      --n;\n    }\n    if ((i -= n) < 0)\n    {\n      i += this.DB;\n      --j;\n    }\n    if (is1)\n    { // ret == 1, don't bother squaring or multiplying it\n      g[w].copyTo(r);\n      is1 = false;\n    }\n    else\n    {\n      while (n > 1)\n      {\n        z.sqrTo(r, r2);\n        z.sqrTo(r2, r);\n        n -= 2;\n      }\n      if (n > 0) z.sqrTo(r, r2);\n      else\n      {\n        t = r;\n        r = r2;\n        r2 = t;\n      }\n      z.mulTo(r2, g[w], r);\n    }\n    while (j >= 0 && (e[j] & (1 << i)) == 0)\n    {\n      z.sqrTo(r, r2);\n      t = r;\n      r = r2;\n      r2 = t;\n      if (--i < 0)\n      {\n        i = this.DB - 1;\n        --j;\n      }\n    }\n  }\n  return z.revert(r);\n}\n// (public) gcd(this,a) (HAC 14.54)\nfunction bnGCD(a)\n{\n  var x = (this.s < 0) ? this.negate() : this.clone();\n  var y = (a.s < 0) ? a.negate() : a.clone();\n  if (x.compareTo(y) < 0)\n  {\n    var t = x;\n    x = y;\n    y = t;\n  }\n  var i = x.getLowestSetBit(),\n    g = y.getLowestSetBit();\n  if (g < 0) return x;\n  if (i < g) g = i;\n  if (g > 0)\n  {\n    x.rShiftTo(g, x);\n    y.rShiftTo(g, y);\n  }\n  while (x.signum() > 0)\n  {\n    if ((i = x.getLowestSetBit()) > 0) x.rShiftTo(i, x);\n    if ((i = y.getLowestSetBit()) > 0) y.rShiftTo(i, y);\n    if (x.compareTo(y) >= 0)\n    {\n      x.subTo(y, x);\n      x.rShiftTo(1, x);\n    }\n    else\n    {\n      y.subTo(x, y);\n      y.rShiftTo(1, y);\n    }\n  }\n  if (g > 0) y.lShiftTo(g, y);\n  return y;\n}\n// (protected) this % n, n < 2^26\nfunction bnpModInt(n)\n{\n  if (n <= 0) return 0;\n  var d = this.DV % n,\n    r = (this.s < 0) ? n - 1 : 0;\n  if (this.t > 0)\n    if (d == 0) r = this[0] % n;\n    else\n      for (var i = this.t - 1; i >= 0; --i) r = (d * r + this[i]) % n;\n  return r;\n}\n// (public) 1/this % m (HAC 14.61)\nfunction bnModInverse(m)\n{\n  var ac = m.isEven();\n  if ((this.isEven() && ac) || m.signum() == 0) return BigInteger.ZERO;\n  var u = m.clone(),\n    v = this.clone();\n  var a = nbv(1),\n    b = nbv(0),\n    c = nbv(0),\n    d = nbv(1);\n  while (u.signum() != 0)\n  {\n    while (u.isEven())\n    {\n      u.rShiftTo(1, u);\n      if (ac)\n      {\n        if (!a.isEven() || !b.isEven())\n        {\n          a.addTo(this, a);\n          b.subTo(m, b);\n        }\n        a.rShiftTo(1, a);\n      }\n      else if (!b.isEven()) b.subTo(m, b);\n      b.rShiftTo(1, b);\n    }\n    while (v.isEven())\n    {\n      v.rShiftTo(1, v);\n      if (ac)\n      {\n        if (!c.isEven() || !d.isEven())\n        {\n          c.addTo(this, c);\n          d.subTo(m, d);\n        }\n        c.rShiftTo(1, c);\n      }\n      else if (!d.isEven()) d.subTo(m, d);\n      d.rShiftTo(1, d);\n    }\n    if (u.compareTo(v) >= 0)\n    {\n      u.subTo(v, u);\n      if (ac) a.subTo(c, a);\n      b.subTo(d, b);\n    }\n    else\n    {\n      v.subTo(u, v);\n      if (ac) c.subTo(a, c);\n      d.subTo(b, d);\n    }\n  }\n  if (v.compareTo(BigInteger.ONE) != 0) return BigInteger.ZERO;\n  if (d.compareTo(m) >= 0) return d.subtract(m);\n  if (d.signum() < 0) d.addTo(m, d);\n  else return d;\n  if (d.signum() < 0) return d.add(m);\n  else return d;\n}\nvar lowprimes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997];\nvar lplim = (1 << 26) / lowprimes[lowprimes.length - 1];\n// (public) test primality with certainty >= 1-.5^t\nfunction bnIsProbablePrime(t)\n{\n  var i, x = this.abs();\n  if (x.t == 1 && x[0] <= lowprimes[lowprimes.length - 1])\n  {\n    for (i = 0; i < lowprimes.length; ++i)\n      if (x[0] == lowprimes[i]) return true;\n    return false;\n  }\n  if (x.isEven()) return false;\n  i = 1;\n  while (i < lowprimes.length)\n  {\n    var m = lowprimes[i],\n      j = i + 1;\n    while (j < lowprimes.length && m < lplim) m *= lowprimes[j++];\n    m = x.modInt(m);\n    while (i < j)\n      if (m % lowprimes[i++] == 0) return false;\n  }\n  return x.millerRabin(t);\n}\n// (protected) true if probably prime (HAC 4.24, Miller-Rabin)\nfunction bnpMillerRabin(t)\n{\n  var n1 = this.subtract(BigInteger.ONE);\n  var k = n1.getLowestSetBit();\n  if (k <= 0) return false;\n  var r = n1.shiftRight(k);\n  t = (t + 1) >> 1;\n  if (t > lowprimes.length) t = lowprimes.length;\n  var a = nbi();\n  for (var i = 0; i < t; ++i)\n  {\n    //Pick bases at random, instead of starting at 2\n    a.fromInt(lowprimes[Math.floor(Math.random() * lowprimes.length)]);\n    var y = a.modPow(r, this);\n    if (y.compareTo(BigInteger.ONE) != 0 && y.compareTo(n1) != 0)\n    {\n      var j = 1;\n      while (j++ < k && y.compareTo(n1) != 0)\n      {\n        y = y.modPowInt(2, this);\n        if (y.compareTo(BigInteger.ONE) == 0) return false;\n      }\n      if (y.compareTo(n1) != 0) return false;\n    }\n  }\n  return true;\n}\n// protected\nBigInteger.prototype.chunkSize = bnpChunkSize;\nBigInteger.prototype.toRadix = bnpToRadix;\nBigInteger.prototype.fromRadix = bnpFromRadix;\nBigInteger.prototype.fromNumber = bnpFromNumber;\nBigInteger.prototype.bitwiseTo = bnpBitwiseTo;\nBigInteger.prototype.changeBit = bnpChangeBit;\nBigInteger.prototype.addTo = bnpAddTo;\nBigInteger.prototype.dMultiply = bnpDMultiply;\nBigInteger.prototype.dAddOffset = bnpDAddOffset;\nBigInteger.prototype.multiplyLowerTo = bnpMultiplyLowerTo;\nBigInteger.prototype.multiplyUpperTo = bnpMultiplyUpperTo;\nBigInteger.prototype.modInt = bnpModInt;\nBigInteger.prototype.millerRabin = bnpMillerRabin;\n// public\nBigInteger.prototype.clone = bnClone;\nBigInteger.prototype.intValue = bnIntValue;\nBigInteger.prototype.byteValue = bnByteValue;\nBigInteger.prototype.shortValue = bnShortValue;\nBigInteger.prototype.signum = bnSigNum;\nBigInteger.prototype.toByteArray = bnToByteArray;\nBigInteger.prototype.equals = bnEquals;\nBigInteger.prototype.min = bnMin;\nBigInteger.prototype.max = bnMax;\nBigInteger.prototype.and = bnAnd;\nBigInteger.prototype.or = bnOr;\nBigInteger.prototype.xor = bnXor;\nBigInteger.prototype.andNot = bnAndNot;\nBigInteger.prototype.not = bnNot;\nBigInteger.prototype.shiftLeft = bnShiftLeft;\nBigInteger.prototype.shiftRight = bnShiftRight;\nBigInteger.prototype.getLowestSetBit = bnGetLowestSetBit;\nBigInteger.prototype.bitCount = bnBitCount;\nBigInteger.prototype.testBit = bnTestBit;\nBigInteger.prototype.setBit = bnSetBit;\nBigInteger.prototype.clearBit = bnClearBit;\nBigInteger.prototype.flipBit = bnFlipBit;\nBigInteger.prototype.add = bnAdd;\nBigInteger.prototype.subtract = bnSubtract;\nBigInteger.prototype.multiply = bnMultiply;\nBigInteger.prototype.divide = bnDivide;\nBigInteger.prototype.remainder = bnRemainder;\nBigInteger.prototype.divideAndRemainder = bnDivideAndRemainder;\nBigInteger.prototype.modPow = bnModPow;\nBigInteger.prototype.modInverse = bnModInverse;\nBigInteger.prototype.pow = bnPow;\nBigInteger.prototype.gcd = bnGCD;\nBigInteger.prototype.isProbablePrime = bnIsProbablePrime;\n// JSBN-specific extension\nBigInteger.prototype.square = bnSquare;\nvar Int128 = BigInteger;\n// BigInteger interfaces not implemented in jsbn:\n// BigInteger(int signum, byte[] magnitude)\n// double doubleValue()\n// float floatValue()\n// int hashCode()\n// long longValue()\n// static BigInteger valueOf(long val)\n// Helper functions to make BigInteger functions callable with two parameters\n// as in original C# Clipper\nInt128.prototype.IsNegative = function ()\n{\n  if (this.compareTo(Int128.ZERO) == -1) return true;\n  else return false;\n};\nInt128.op_Equality = function (val1, val2)\n{\n  if (val1.compareTo(val2) == 0) return true;\n  else return false;\n};\nInt128.op_Inequality = function (val1, val2)\n{\n  if (val1.compareTo(val2) != 0) return true;\n  else return false;\n};\nInt128.op_GreaterThan = function (val1, val2)\n{\n  if (val1.compareTo(val2) > 0) return true;\n  else return false;\n};\nInt128.op_LessThan = function (val1, val2)\n{\n  if (val1.compareTo(val2) < 0) return true;\n  else return false;\n};\nInt128.op_Addition = function (lhs, rhs)\n{\n  return new Int128(lhs).add(new Int128(rhs));\n};\nInt128.op_Subtraction = function (lhs, rhs)\n{\n  return new Int128(lhs).subtract(new Int128(rhs));\n};\nInt128.Int128Mul = function (lhs, rhs)\n{\n  return new Int128(lhs).multiply(new Int128(rhs));\n};\nInt128.op_Division = function (lhs, rhs)\n{\n  return lhs.divide(rhs);\n};\nInt128.prototype.ToDouble = function ()\n{\n  return parseFloat(this.toString()); // This could be something faster\n};\n// end of Int128 section\n/*\n// Uncomment the following two lines if you want to use Int128 outside ClipperLib\nif (typeof(document) !== \"undefined\") window.Int128 = Int128;\nelse self.Int128 = Int128;\n*/\n// ---------------------------------------------  \n// Here starts the actual Clipper library:\n// Helper function to support Inheritance in Javascript\nif (typeof (Inherit) == 'undefined')\n{\n  var Inherit = function (ce, ce2)\n  {\n    var p;\n    if (typeof (Object.getOwnPropertyNames) == 'undefined')\n    {\n      for (p in ce2.prototype)\n        if (typeof (ce.prototype[p]) == 'undefined' || ce.prototype[p] == Object.prototype[p]) ce.prototype[p] = ce2.prototype[p];\n      for (p in ce2)\n        if (typeof (ce[p]) == 'undefined') ce[p] = ce2[p];\n      ce.$baseCtor = ce2;\n    }\n    else\n    {\n      var props = Object.getOwnPropertyNames(ce2.prototype);\n      for (var i = 0; i < props.length; i++)\n        if (typeof (Object.getOwnPropertyDescriptor(ce.prototype, props[i])) == 'undefined') Object.defineProperty(ce.prototype, props[i], Object.getOwnPropertyDescriptor(ce2.prototype, props[i]));\n      for (p in ce2)\n        if (typeof (ce[p]) == 'undefined') ce[p] = ce2[p];\n      ce.$baseCtor = ce2;\n    }\n  };\n}\nClipperLib.Path = function ()\n{\n  return [];\n};\nClipperLib.Paths = function ()\n{\n  return []; // Was previously [[]], but caused problems when pushed\n};\n// Preserves the calling way of original C# Clipper\n// Is essential due to compatibility, because DoublePoint is public class in original C# version\nClipperLib.DoublePoint = function ()\n{\n  var a = arguments;\n  this.X = 0;\n  this.Y = 0;\n  // public DoublePoint(DoublePoint dp)\n  // public DoublePoint(IntPoint ip)\n  if (a.length == 1)\n  {\n    this.X = a[0].X;\n    this.Y = a[0].Y;\n  }\n  else if (a.length == 2)\n  {\n    this.X = a[0];\n    this.Y = a[1];\n  }\n}; // This is internal faster function when called without arguments\nClipperLib.DoublePoint0 = function ()\n{\n  this.X = 0;\n  this.Y = 0;\n};\n// This is internal faster function when called with 1 argument (dp or ip)\nClipperLib.DoublePoint1 = function (dp)\n{\n  this.X = dp.X;\n  this.Y = dp.Y;\n};\n// This is internal faster function when called with 2 arguments (x and y)\nClipperLib.DoublePoint2 = function (x, y)\n{\n  this.X = x;\n  this.Y = y;\n};\n// PolyTree & PolyNode start\n// -------------------------------\nClipperLib.PolyNode = function ()\n{\n  this.m_Parent = null;\n  this.m_polygon = new ClipperLib.Path();\n  this.m_Index = 0;\n  this.m_jointype = 0;\n  this.m_endtype = 0;\n  this.m_Childs = [];\n  this.IsOpen = false;\n};\nClipperLib.PolyNode.prototype.IsHoleNode = function ()\n{\n  var result = true;\n  var node = this.m_Parent;\n  while (node !== null)\n  {\n    result = !result;\n    node = node.m_Parent;\n  }\n  return result;\n};\nClipperLib.PolyNode.prototype.ChildCount = function ()\n{\n  return this.m_Childs.length;\n};\nClipperLib.PolyNode.prototype.Contour = function ()\n{\n  return this.m_polygon;\n};\nClipperLib.PolyNode.prototype.AddChild = function (Child)\n{\n  var cnt = this.m_Childs.length;\n  this.m_Childs.push(Child);\n  Child.m_Parent = this;\n  Child.m_Index = cnt;\n};\nClipperLib.PolyNode.prototype.GetNext = function ()\n{\n  if (this.m_Childs.length > 0)\n    return this.m_Childs[0];\n  else\n    return this.GetNextSiblingUp();\n};\nClipperLib.PolyNode.prototype.GetNextSiblingUp = function ()\n{\n  if (this.m_Parent === null)\n    return null;\n  else if (this.m_Index == this.m_Parent.m_Childs.length - 1)\n    return this.m_Parent.GetNextSiblingUp();\n  else\n    return this.m_Parent.m_Childs[this.m_Index + 1];\n};\nClipperLib.PolyNode.prototype.Childs = function ()\n{\n  return this.m_Childs;\n};\nClipperLib.PolyNode.prototype.Parent = function ()\n{\n  return this.m_Parent;\n};\nClipperLib.PolyNode.prototype.IsHole = function ()\n{\n  return this.IsHoleNode();\n};\n// PolyTree : PolyNode\nClipperLib.PolyTree = function ()\n{\n  this.m_AllPolys = [];\n  ClipperLib.PolyNode.call(this);\n};\nClipperLib.PolyTree.prototype.Clear = function ()\n{\n  for (var i = 0, ilen = this.m_AllPolys.length; i < ilen; i++)\n    this.m_AllPolys[i] = null;\n  this.m_AllPolys.length = 0;\n  this.m_Childs.length = 0;\n};\nClipperLib.PolyTree.prototype.GetFirst = function ()\n{\n  if (this.m_Childs.length > 0)\n    return this.m_Childs[0];\n  else\n    return null;\n};\nClipperLib.PolyTree.prototype.Total = function ()\n{\n  return this.m_AllPolys.length;\n};\nInherit(ClipperLib.PolyTree, ClipperLib.PolyNode);\n// -------------------------------\n// PolyTree & PolyNode end\nClipperLib.Math_Abs_Int64 = ClipperLib.Math_Abs_Int32 = ClipperLib.Math_Abs_Double = function (a)\n{\n  return Math.abs(a);\n};\nClipperLib.Math_Max_Int32_Int32 = function (a, b)\n{\n  return Math.max(a, b);\n};\n/*\n-----------------------------------\ncast_32 speedtest: http://jsperf.com/truncate-float-to-integer/2\n-----------------------------------\n*/\nif (browser.msie || browser.opera || browser.safari) ClipperLib.Cast_Int32 = function (a)\n{\n  return a | 0;\n};\nelse ClipperLib.Cast_Int32 = function (a)\n{ // eg. browser.chrome || browser.chromium || browser.firefox\n  return~~ a;\n};\n/*\n--------------------------\ncast_64 speedtests: http://jsperf.com/truncate-float-to-integer\nChrome: bitwise_not_floor\nFirefox17: toInteger (typeof test)\nIE9: bitwise_or_floor\nIE7 and IE8: to_parseint\nChromium: to_floor_or_ceil\nFirefox3: to_floor_or_ceil\nFirefox15: to_floor_or_ceil\nOpera: to_floor_or_ceil\nSafari: to_floor_or_ceil\n--------------------------\n*/\nif (browser.chrome) ClipperLib.Cast_Int64 = function (a)\n{\n  if (a < -2147483648 || a > 2147483647)\n    return a < 0 ? Math.ceil(a) : Math.floor(a);\n  else return~~ a;\n};\nelse if (browser.firefox && typeof (Number.toInteger) == \"function\") ClipperLib.Cast_Int64 = function (a)\n{\n  return Number.toInteger(a);\n};\nelse if (browser.msie7 || browser.msie8) ClipperLib.Cast_Int64 = function (a)\n{\n  return parseInt(a, 10);\n};\nelse if (browser.msie) ClipperLib.Cast_Int64 = function (a)\n{\n  if (a < -2147483648 || a > 2147483647)\n    return a < 0 ? Math.ceil(a) : Math.floor(a);\n  return a | 0;\n};\n// eg. browser.chromium || browser.firefox || browser.opera || browser.safari\nelse ClipperLib.Cast_Int64 = function (a)\n{\n  return a < 0 ? Math.ceil(a) : Math.floor(a);\n};\nClipperLib.Clear = function (a)\n{\n  a.length = 0;\n};\n//ClipperLib.MaxSteps = 64; // How many steps at maximum in arc in BuildArc() function\nClipperLib.PI = 3.141592653589793;\nClipperLib.PI2 = 2 * 3.141592653589793;\nClipperLib.IntPoint = function ()\n{\n  var a = arguments,\n    alen = a.length;\n  this.X = 0;\n  this.Y = 0;\n  if (use_xyz)\n  {\n    this.Z = 0;\n    if (alen == 3) // public IntPoint(cInt x, cInt y, cInt z = 0)\n    {\n      this.X = a[0];\n      this.Y = a[1];\n      this.Z = a[2];\n    }\n    else if (alen == 2) // public IntPoint(cInt x, cInt y)\n    {\n      this.X = a[0];\n      this.Y = a[1];\n      this.Z = 0;\n    }\n    else if (alen == 1)\n    {\n      if (a[0] instanceof ClipperLib.DoublePoint) // public IntPoint(DoublePoint dp)\n      {\n        var dp = a[0];\n        this.X = ClipperLib.Clipper.Round(dp.X);\n        this.Y = ClipperLib.Clipper.Round(dp.Y);\n        this.Z = 0;\n      }\n      else // public IntPoint(IntPoint pt)\n      {\n        var pt = a[0];\n        if (typeof (pt.Z) == \"undefined\") pt.Z = 0;\n        this.X = pt.X;\n        this.Y = pt.Y;\n        this.Z = pt.Z;\n      }\n    }\n    else // public IntPoint()\n    {\n      this.X = 0;\n      this.Y = 0;\n      this.Z = 0;\n    }\n  }\n  else // if (!use_xyz)\n  {\n    if (alen == 2) // public IntPoint(cInt X, cInt Y)\n    {\n      this.X = a[0];\n      this.Y = a[1];\n    }\n    else if (alen == 1)\n    {\n      if (a[0] instanceof ClipperLib.DoublePoint) // public IntPoint(DoublePoint dp)\n      {\n        var dp = a[0];\n        this.X = ClipperLib.Clipper.Round(dp.X);\n        this.Y = ClipperLib.Clipper.Round(dp.Y);\n      }\n      else // public IntPoint(IntPoint pt)\n      {\n        var pt = a[0];\n        this.X = pt.X;\n        this.Y = pt.Y;\n      }\n    }\n    else // public IntPoint(IntPoint pt)\n    {\n      this.X = 0;\n      this.Y = 0;\n    }\n  }\n};\nClipperLib.IntPoint.op_Equality = function (a, b)\n{\n  //return a == b;\n  return a.X == b.X && a.Y == b.Y;\n};\nClipperLib.IntPoint.op_Inequality = function (a, b)\n{\n  //return a != b;\n  return a.X != b.X || a.Y != b.Y;\n};\n/*\nClipperLib.IntPoint.prototype.Equals = function (obj)\n{\n  if (obj === null)\n      return false;\n  if (obj instanceof ClipperLib.IntPoint)\n  {\n      var a = Cast(obj, ClipperLib.IntPoint);\n      return (this.X == a.X) && (this.Y == a.Y);\n  }\n  else\n      return false;\n};\n*/\nif (use_xyz)\n{\n  ClipperLib.IntPoint0 = function ()\n  {\n    this.X = 0;\n    this.Y = 0;\n    this.Z = 0;\n  };\n  ClipperLib.IntPoint1 = function (pt)\n  {\n    this.X = pt.X;\n    this.Y = pt.Y;\n    this.Z = pt.Z;\n  };\n  ClipperLib.IntPoint1dp = function (dp)\n  {\n    this.X = ClipperLib.Clipper.Round(dp.X);\n    this.Y = ClipperLib.Clipper.Round(dp.Y);\n    this.Z = 0;\n  };\n  ClipperLib.IntPoint2 = function (x, y)\n  {\n    this.X = x;\n    this.Y = y;\n    this.Z = 0;\n  };\n  ClipperLib.IntPoint3 = function (x, y, z)\n  {\n    this.X = x;\n    this.Y = y;\n    this.Z = z;\n  };\n}\nelse // if (!use_xyz)\n{\n  ClipperLib.IntPoint0 = function ()\n  {\n    this.X = 0;\n    this.Y = 0;\n  };\n  ClipperLib.IntPoint1 = function (pt)\n  {\n    this.X = pt.X;\n    this.Y = pt.Y;\n  };\n  ClipperLib.IntPoint1dp = function (dp)\n  {\n    this.X = ClipperLib.Clipper.Round(dp.X);\n    this.Y = ClipperLib.Clipper.Round(dp.Y);\n  };\n  ClipperLib.IntPoint2 = function (x, y)\n  {\n    this.X = x;\n    this.Y = y;\n  };\n}\nClipperLib.IntRect = function ()\n{\n  var a = arguments,\n    alen = a.length;\n  if (alen == 4) // function (l, t, r, b)\n  {\n    this.left = a[0];\n    this.top = a[1];\n    this.right = a[2];\n    this.bottom = a[3];\n  }\n  else if (alen == 1) // function (ir)\n  {\n    this.left = ir.left;\n    this.top = ir.top;\n    this.right = ir.right;\n    this.bottom = ir.bottom;\n  }\n  else // function ()\n  {\n    this.left = 0;\n    this.top = 0;\n    this.right = 0;\n    this.bottom = 0;\n  }\n};\nClipperLib.IntRect0 = function ()\n{\n  this.left = 0;\n  this.top = 0;\n  this.right = 0;\n  this.bottom = 0;\n};\nClipperLib.IntRect1 = function (ir)\n{\n  this.left = ir.left;\n  this.top = ir.top;\n  this.right = ir.right;\n  this.bottom = ir.bottom;\n};\nClipperLib.IntRect4 = function (l, t, r, b)\n{\n  this.left = l;\n  this.top = t;\n  this.right = r;\n  this.bottom = b;\n};\nClipperLib.ClipType = {\n  ctIntersection: 0,\n  ctUnion: 1,\n  ctDifference: 2,\n  ctXor: 3\n};\nClipperLib.PolyType = {\n  ptSubject: 0,\n  ptClip: 1\n};\nClipperLib.PolyFillType = {\n  pftEvenOdd: 0,\n  pftNonZero: 1,\n  pftPositive: 2,\n  pftNegative: 3\n};\nClipperLib.JoinType = {\n  jtSquare: 0,\n  jtRound: 1,\n  jtMiter: 2\n};\nClipperLib.EndType = {\n  etOpenSquare: 0,\n  etOpenRound: 1,\n  etOpenButt: 2,\n  etClosedLine: 3,\n  etClosedPolygon: 4\n};\nif (use_deprecated)\n  ClipperLib.EndType_ = {\n    etSquare: 0,\n    etRound: 1,\n    etButt: 2,\n    etClosed: 3\n  };\nClipperLib.EdgeSide = {\n  esLeft: 0,\n  esRight: 1\n};\nClipperLib.Direction = {\n  dRightToLeft: 0,\n  dLeftToRight: 1\n};\nClipperLib.TEdge = function ()\n{\n  this.Bot = new ClipperLib.IntPoint();\n  this.Curr = new ClipperLib.IntPoint();\n  this.Top = new ClipperLib.IntPoint();\n  this.Delta = new ClipperLib.IntPoint();\n  this.Dx = 0;\n  this.PolyTyp = ClipperLib.PolyType.ptSubject;\n  this.Side = ClipperLib.EdgeSide.esLeft;\n  this.WindDelta = 0;\n  this.WindCnt = 0;\n  this.WindCnt2 = 0;\n  this.OutIdx = 0;\n  this.Next = null;\n  this.Prev = null;\n  this.NextInLML = null;\n  this.NextInAEL = null;\n  this.PrevInAEL = null;\n  this.NextInSEL = null;\n  this.PrevInSEL = null;\n};\nClipperLib.IntersectNode = function ()\n{\n  this.Edge1 = null;\n  this.Edge2 = null;\n  this.Pt = new ClipperLib.IntPoint();\n};\nClipperLib.MyIntersectNodeSort = function () {};\nClipperLib.MyIntersectNodeSort.Compare = function (node1, node2)\n{\n  return (node2.Pt.Y - node1.Pt.Y);\n};\nClipperLib.LocalMinima = function ()\n{\n  this.Y = 0;\n  this.LeftBound = null;\n  this.RightBound = null;\n  this.Next = null;\n};\nClipperLib.Scanbeam = function ()\n{\n  this.Y = 0;\n  this.Next = null;\n};\nClipperLib.OutRec = function ()\n{\n  this.Idx = 0;\n  this.IsHole = false;\n  this.IsOpen = false;\n  this.FirstLeft = null;\n  this.Pts = null;\n  this.BottomPt = null;\n  this.PolyNode = null;\n};\nClipperLib.OutPt = function ()\n{\n  this.Idx = 0;\n  this.Pt = new ClipperLib.IntPoint();\n  this.Next = null;\n  this.Prev = null;\n};\nClipperLib.Join = function ()\n{\n  this.OutPt1 = null;\n  this.OutPt2 = null;\n  this.OffPt = new ClipperLib.IntPoint();\n};\nClipperLib.ClipperBase = function ()\n{\n  this.m_MinimaList = null;\n  this.m_CurrentLM = null;\n  this.m_edges = new Array();\n  this.m_UseFullRange = false;\n  this.m_HasOpenPaths = false;\n  this.PreserveCollinear = false;\n  this.m_MinimaList = null;\n  this.m_CurrentLM = null;\n  this.m_UseFullRange = false;\n  this.m_HasOpenPaths = false;\n};\n// Ranges are in original C# too high for Javascript (in current state 2013 september):\n// protected const double horizontal = -3.4E+38;\n// internal const cInt loRange = 0x3FFFFFFF; // = 1073741823 = sqrt(2^63 -1)/2\n// internal const cInt hiRange = 0x3FFFFFFFFFFFFFFFL; // = 4611686018427387903 = sqrt(2^127 -1)/2\n// So had to adjust them to more suitable for Javascript.\n// If JS some day supports truly 64-bit integers, then these ranges can be as in C#\n// and biginteger library can be more simpler (as then 128bit can be represented as two 64bit numbers)\nClipperLib.ClipperBase.horizontal = -9007199254740992; //-2^53\nClipperLib.ClipperBase.Skip = -2;\nClipperLib.ClipperBase.Unassigned = -1;\nClipperLib.ClipperBase.tolerance = 1E-20;\nif (use_int32)\n{\n  ClipperLib.ClipperBase.loRange = 46340;\n  ClipperLib.ClipperBase.hiRange = 46340;\n}\nelse\n{\n  ClipperLib.ClipperBase.loRange = 47453132; // sqrt(2^53 -1)/2\n  ClipperLib.ClipperBase.hiRange = 4503599627370495; // sqrt(2^106 -1)/2\n}\nClipperLib.ClipperBase.near_zero = function (val)\n{\n  return (val > -ClipperLib.ClipperBase.tolerance) && (val < ClipperLib.ClipperBase.tolerance);\n};\nClipperLib.ClipperBase.IsHorizontal = function (e)\n{\n  return e.Delta.Y === 0;\n};\nClipperLib.ClipperBase.prototype.PointIsVertex = function (pt, pp)\n{\n  var pp2 = pp;\n  do {\n    if (ClipperLib.IntPoint.op_Equality(pp2.Pt, pt))\n      return true;\n    pp2 = pp2.Next;\n  }\n  while (pp2 != pp)\n  return false;\n};\nClipperLib.ClipperBase.prototype.PointOnLineSegment = function (pt, linePt1, linePt2, UseFullRange)\n{\n  if (UseFullRange)\n    return ((pt.X == linePt1.X) && (pt.Y == linePt1.Y)) ||\n      ((pt.X == linePt2.X) && (pt.Y == linePt2.Y)) ||\n      (((pt.X > linePt1.X) == (pt.X < linePt2.X)) &&\n      ((pt.Y > linePt1.Y) == (pt.Y < linePt2.Y)) &&\n      (Int128.op_Equality(Int128.Int128Mul((pt.X - linePt1.X), (linePt2.Y - linePt1.Y)),\n        Int128.Int128Mul((linePt2.X - linePt1.X), (pt.Y - linePt1.Y)))));\n  else\n    return ((pt.X == linePt1.X) && (pt.Y == linePt1.Y)) || ((pt.X == linePt2.X) && (pt.Y == linePt2.Y)) || (((pt.X > linePt1.X) == (pt.X < linePt2.X)) && ((pt.Y > linePt1.Y) == (pt.Y < linePt2.Y)) && ((pt.X - linePt1.X) * (linePt2.Y - linePt1.Y) == (linePt2.X - linePt1.X) * (pt.Y - linePt1.Y)));\n};\nClipperLib.ClipperBase.prototype.PointOnPolygon = function (pt, pp, UseFullRange)\n{\n  var pp2 = pp;\n  while (true)\n  {\n    if (this.PointOnLineSegment(pt, pp2.Pt, pp2.Next.Pt, UseFullRange))\n      return true;\n    pp2 = pp2.Next;\n    if (pp2 == pp)\n      break;\n  }\n  return false;\n};\nClipperLib.ClipperBase.prototype.SlopesEqual = ClipperLib.ClipperBase.SlopesEqual = function ()\n{\n  var a = arguments,\n    alen = a.length;\n  var e1, e2, pt1, pt2, pt3, pt4, UseFullRange;\n  if (alen == 3) // function (e1, e2, UseFullRange)\n  {\n    e1 = a[0];\n    e2 = a[1];\n    UseFullRange = a[2];\n    if (UseFullRange)\n      return Int128.op_Equality(Int128.Int128Mul(e1.Delta.Y, e2.Delta.X), Int128.Int128Mul(e1.Delta.X, e2.Delta.Y));\n    else\n      return ClipperLib.Cast_Int64((e1.Delta.Y) * (e2.Delta.X)) == ClipperLib.Cast_Int64((e1.Delta.X) * (e2.Delta.Y));\n  }\n  else if (alen == 4) // function (pt1, pt2, pt3, UseFullRange)\n  {\n    pt1 = a[0];\n    pt2 = a[1];\n    pt3 = a[2];\n    UseFullRange = a[3];\n    if (UseFullRange)\n      return Int128.op_Equality(Int128.Int128Mul(pt1.Y - pt2.Y, pt2.X - pt3.X), Int128.Int128Mul(pt1.X - pt2.X, pt2.Y - pt3.Y));\n    else\n      return ClipperLib.Cast_Int64((pt1.Y - pt2.Y) * (pt2.X - pt3.X)) - ClipperLib.Cast_Int64((pt1.X - pt2.X) * (pt2.Y - pt3.Y)) === 0;\n  }\n  else // function (pt1, pt2, pt3, pt4, UseFullRange)\n  {\n    pt1 = a[0];\n    pt2 = a[1];\n    pt3 = a[2];\n    pt4 = a[3];\n    UseFullRange = a[4];\n    if (UseFullRange)\n      return Int128.op_Equality(Int128.Int128Mul(pt1.Y - pt2.Y, pt3.X - pt4.X), Int128.Int128Mul(pt1.X - pt2.X, pt3.Y - pt4.Y));\n    else\n      return ClipperLib.Cast_Int64((pt1.Y - pt2.Y) * (pt3.X - pt4.X)) - ClipperLib.Cast_Int64((pt1.X - pt2.X) * (pt3.Y - pt4.Y)) === 0;\n  }\n};\nClipperLib.ClipperBase.SlopesEqual3 = function (e1, e2, UseFullRange)\n{\n  if (UseFullRange)\n    return Int128.op_Equality(Int128.Int128Mul(e1.Delta.Y, e2.Delta.X), Int128.Int128Mul(e1.Delta.X, e2.Delta.Y));\n  else\n    return ClipperLib.Cast_Int64((e1.Delta.Y) * (e2.Delta.X)) == ClipperLib.Cast_Int64((e1.Delta.X) * (e2.Delta.Y));\n};\nClipperLib.ClipperBase.SlopesEqual4 = function (pt1, pt2, pt3, UseFullRange)\n{\n  if (UseFullRange)\n    return Int128.op_Equality(Int128.Int128Mul(pt1.Y - pt2.Y, pt2.X - pt3.X), Int128.Int128Mul(pt1.X - pt2.X, pt2.Y - pt3.Y));\n  else\n    return ClipperLib.Cast_Int64((pt1.Y - pt2.Y) * (pt2.X - pt3.X)) - ClipperLib.Cast_Int64((pt1.X - pt2.X) * (pt2.Y - pt3.Y)) === 0;\n};\nClipperLib.ClipperBase.SlopesEqual5 = function (pt1, pt2, pt3, pt4, UseFullRange)\n{\n  if (UseFullRange)\n    return Int128.op_Equality(Int128.Int128Mul(pt1.Y - pt2.Y, pt3.X - pt4.X), Int128.Int128Mul(pt1.X - pt2.X, pt3.Y - pt4.Y));\n  else\n    return ClipperLib.Cast_Int64((pt1.Y - pt2.Y) * (pt3.X - pt4.X)) - ClipperLib.Cast_Int64((pt1.X - pt2.X) * (pt3.Y - pt4.Y)) === 0;\n};\nClipperLib.ClipperBase.prototype.Clear = function ()\n{\n  this.DisposeLocalMinimaList();\n  for (var i = 0, ilen = this.m_edges.length; i < ilen; ++i)\n  {\n    for (var j = 0, jlen = this.m_edges[i].length; j < jlen; ++j)\n      this.m_edges[i][j] = null;\n    ClipperLib.Clear(this.m_edges[i]);\n  }\n  ClipperLib.Clear(this.m_edges);\n  this.m_UseFullRange = false;\n  this.m_HasOpenPaths = false;\n};\nClipperLib.ClipperBase.prototype.DisposeLocalMinimaList = function ()\n{\n  while (this.m_MinimaList !== null)\n  {\n    var tmpLm = this.m_MinimaList.Next;\n    this.m_MinimaList = null;\n    this.m_MinimaList = tmpLm;\n  }\n  this.m_CurrentLM = null;\n};\nClipperLib.ClipperBase.prototype.RangeTest = function (Pt, useFullRange)\n{\n  if (useFullRange.Value)\n  {\n    if (Pt.X > ClipperLib.ClipperBase.hiRange || Pt.Y > ClipperLib.ClipperBase.hiRange || -Pt.X > ClipperLib.ClipperBase.hiRange || -Pt.Y > ClipperLib.ClipperBase.hiRange)\n      ClipperLib.Error(\"Coordinate outside allowed range in RangeTest().\");\n  }\n  else if (Pt.X > ClipperLib.ClipperBase.loRange || Pt.Y > ClipperLib.ClipperBase.loRange || -Pt.X > ClipperLib.ClipperBase.loRange || -Pt.Y > ClipperLib.ClipperBase.loRange)\n  {\n    useFullRange.Value = true;\n    this.RangeTest(Pt, useFullRange);\n  }\n};\nClipperLib.ClipperBase.prototype.InitEdge = function (e, eNext, ePrev, pt)\n{\n  e.Next = eNext;\n  e.Prev = ePrev;\n  //e.Curr = pt;\n  e.Curr.X = pt.X;\n  e.Curr.Y = pt.Y;\n  e.OutIdx = -1;\n};\nClipperLib.ClipperBase.prototype.InitEdge2 = function (e, polyType)\n{\n  if (e.Curr.Y >= e.Next.Curr.Y)\n  {\n    //e.Bot = e.Curr;\n    e.Bot.X = e.Curr.X;\n    e.Bot.Y = e.Curr.Y;\n    //e.Top = e.Next.Curr;\n    e.Top.X = e.Next.Curr.X;\n    e.Top.Y = e.Next.Curr.Y;\n  }\n  else\n  {\n    //e.Top = e.Curr;\n    e.Top.X = e.Curr.X;\n    e.Top.Y = e.Curr.Y;\n    //e.Bot = e.Next.Curr;\n    e.Bot.X = e.Next.Curr.X;\n    e.Bot.Y = e.Next.Curr.Y;\n  }\n  this.SetDx(e);\n  e.PolyTyp = polyType;\n};\nClipperLib.ClipperBase.prototype.FindNextLocMin = function (E)\n{\n  var E2;\n  for (;;)\n  {\n    while (ClipperLib.IntPoint.op_Inequality(E.Bot, E.Prev.Bot) || ClipperLib.IntPoint.op_Equality(E.Curr, E.Top))\n      E = E.Next;\n    if (E.Dx != ClipperLib.ClipperBase.horizontal && E.Prev.Dx != ClipperLib.ClipperBase.horizontal)\n      break;\n    while (E.Prev.Dx == ClipperLib.ClipperBase.horizontal)\n      E = E.Prev;\n    E2 = E;\n    while (E.Dx == ClipperLib.ClipperBase.horizontal)\n      E = E.Next;\n    if (E.Top.Y == E.Prev.Bot.Y)\n      continue;\n    //ie just an intermediate horz.\n    if (E2.Prev.Bot.X < E.Bot.X)\n      E = E2;\n    break;\n  }\n  return E;\n};\nClipperLib.ClipperBase.prototype.ProcessBound = function (E, IsClockwise)\n{\n  var EStart = E,\n    Result = E;\n  var Horz;\n  var StartX;\n  if (E.Dx == ClipperLib.ClipperBase.horizontal)\n  {\n    //it's possible for adjacent overlapping horz edges to start heading left\n    //before finishing right, so ...\n    if (IsClockwise)\n      StartX = E.Prev.Bot.X;\n    else\n      StartX = E.Next.Bot.X;\n    if (E.Bot.X != StartX)\n      this.ReverseHorizontal(E);\n  }\n  if (Result.OutIdx != ClipperLib.ClipperBase.Skip)\n  {\n    if (IsClockwise)\n    {\n      while (Result.Top.Y == Result.Next.Bot.Y && Result.Next.OutIdx != ClipperLib.ClipperBase.Skip)\n        Result = Result.Next;\n      if (Result.Dx == ClipperLib.ClipperBase.horizontal && Result.Next.OutIdx != ClipperLib.ClipperBase.Skip)\n      {\n        //nb: at the top of a bound, horizontals are added to the bound\n        //only when the preceding edge attaches to the horizontal's left vertex\n        //unless a Skip edge is encountered when that becomes the top divide\n        Horz = Result;\n        while (Horz.Prev.Dx == ClipperLib.ClipperBase.horizontal)\n          Horz = Horz.Prev;\n        if (Horz.Prev.Top.X == Result.Next.Top.X)\n        {\n          if (!IsClockwise)\n            Result = Horz.Prev;\n        }\n        else if (Horz.Prev.Top.X > Result.Next.Top.X)\n          Result = Horz.Prev;\n      }\n      while (E != Result)\n      {\n        E.NextInLML = E.Next;\n        if (E.Dx == ClipperLib.ClipperBase.horizontal && E != EStart && E.Bot.X != E.Prev.Top.X)\n          this.ReverseHorizontal(E);\n        E = E.Next;\n      }\n      if (E.Dx == ClipperLib.ClipperBase.horizontal && E != EStart && E.Bot.X != E.Prev.Top.X)\n        this.ReverseHorizontal(E);\n      Result = Result.Next;\n      //move to the edge just beyond current bound\n    }\n    else\n    {\n      while (Result.Top.Y == Result.Prev.Bot.Y && Result.Prev.OutIdx != ClipperLib.ClipperBase.Skip)\n        Result = Result.Prev;\n      if (Result.Dx == ClipperLib.ClipperBase.horizontal && Result.Prev.OutIdx != ClipperLib.ClipperBase.Skip)\n      {\n        Horz = Result;\n        while (Horz.Next.Dx == ClipperLib.ClipperBase.horizontal)\n          Horz = Horz.Next;\n        if (Horz.Next.Top.X == Result.Prev.Top.X)\n        {\n          if (!IsClockwise)\n            Result = Horz.Next;\n        }\n        else if (Horz.Next.Top.X > Result.Prev.Top.X)\n          Result = Horz.Next;\n      }\n      while (E != Result)\n      {\n        E.NextInLML = E.Prev;\n        if (E.Dx == ClipperLib.ClipperBase.horizontal && E != EStart && E.Bot.X != E.Next.Top.X)\n          this.ReverseHorizontal(E);\n        E = E.Prev;\n      }\n      if (E.Dx == ClipperLib.ClipperBase.horizontal && E != EStart && E.Bot.X != E.Next.Top.X)\n        this.ReverseHorizontal(E);\n      Result = Result.Prev;\n      //move to the edge just beyond current bound\n    }\n  }\n  if (Result.OutIdx == ClipperLib.ClipperBase.Skip)\n  {\n    //if edges still remain in the current bound beyond the skip edge then\n    //create another LocMin and call ProcessBound once more\n    E = Result;\n    if (IsClockwise)\n    {\n      while (E.Top.Y == E.Next.Bot.Y)\n        E = E.Next;\n      //don't include top horizontals when parsing a bound a second time,\n      //they will be contained in the opposite bound ...\n      while (E != Result && E.Dx == ClipperLib.ClipperBase.horizontal)\n        E = E.Prev;\n    }\n    else\n    {\n      while (E.Top.Y == E.Prev.Bot.Y)\n        E = E.Prev;\n      while (E != Result && E.Dx == ClipperLib.ClipperBase.horizontal)\n        E = E.Next;\n    }\n    if (E == Result)\n    {\n      if (IsClockwise)\n        Result = E.Next;\n      else\n        Result = E.Prev;\n    }\n    else\n    {\n      //there are more edges in the bound beyond result starting with E\n      if (IsClockwise)\n        E = Result.Next;\n      else\n        E = Result.Prev;\n      var locMin = new ClipperLib.LocalMinima();\n      locMin.Next = null;\n      locMin.Y = E.Bot.Y;\n      locMin.LeftBound = null;\n      locMin.RightBound = E;\n      locMin.RightBound.WindDelta = 0;\n      Result = this.ProcessBound(locMin.RightBound, IsClockwise);\n      this.InsertLocalMinima(locMin);\n    }\n  }\n  return Result;\n};\nClipperLib.ClipperBase.prototype.AddPath = function (pg, polyType, Closed)\n{\n  if (use_lines)\n  {\n    if (!Closed && polyType == ClipperLib.PolyType.ptClip)\n      ClipperLib.Error(\"AddPath: Open paths must be subject.\");\n  }\n  else\n  {\n    if (!Closed)\n      ClipperLib.Error(\"AddPath: Open paths have been disabled.\");\n  }\n  var highI = pg.length - 1;\n  if (Closed)\n    while (highI > 0 && (ClipperLib.IntPoint.op_Equality(pg[highI], pg[0])))\n  --highI;\n  while (highI > 0 && (ClipperLib.IntPoint.op_Equality(pg[highI], pg[highI - 1])))\n  --highI;\n  if ((Closed && highI < 2) || (!Closed && highI < 1))\n    return false;\n  //create a new edge array ...\n  var edges = new Array();\n  for (var i = 0; i <= highI; i++)\n    edges.push(new ClipperLib.TEdge());\n  var IsFlat = true;\n  //1. Basic (first) edge initialization ...\n\n  //edges[1].Curr = pg[1];\n  edges[1].Curr.X = pg[1].X;\n  edges[1].Curr.Y = pg[1].Y;\n\n  var $1 = {Value: this.m_UseFullRange};\n  this.RangeTest(pg[0], $1);\n  this.m_UseFullRange = $1.Value;\n\n  $1.Value = this.m_UseFullRange;\n  this.RangeTest(pg[highI], $1);\n  this.m_UseFullRange = $1.Value;\n\n  this.InitEdge(edges[0], edges[1], edges[highI], pg[0]);\n  this.InitEdge(edges[highI], edges[0], edges[highI - 1], pg[highI]);\n  for (var i = highI - 1; i >= 1; --i)\n  {\n    $1.Value = this.m_UseFullRange;\n    this.RangeTest(pg[i], $1);\n    this.m_UseFullRange = $1.Value;\n\n    this.InitEdge(edges[i], edges[i + 1], edges[i - 1], pg[i]);\n  }\n\n  var eStart = edges[0];\n  //2. Remove duplicate vertices, and (when closed) collinear edges ...\n  var E = eStart,\n    eLoopStop = eStart;\n  for (;;)\n  {\n    if (ClipperLib.IntPoint.op_Equality(E.Curr, E.Next.Curr))\n    {\n      if (E == E.Next)\n        break;\n      if (E == eStart)\n        eStart = E.Next;\n      E = this.RemoveEdge(E);\n      eLoopStop = E;\n      continue;\n    }\n    if (E.Prev == E.Next)\n      break;\n    else if (Closed && ClipperLib.ClipperBase.SlopesEqual(E.Prev.Curr, E.Curr, E.Next.Curr, this.m_UseFullRange) && (!this.PreserveCollinear || !this.Pt2IsBetweenPt1AndPt3(E.Prev.Curr, E.Curr, E.Next.Curr)))\n    {\n      //Collinear edges are allowed for open paths but in closed paths\n      //the default is to merge adjacent collinear edges into a single edge.\n      //However, if the PreserveCollinear property is enabled, only overlapping\n      //collinear edges (ie spikes) will be removed from closed paths.\n      if (E == eStart)\n        eStart = E.Next;\n      E = this.RemoveEdge(E);\n      E = E.Prev;\n      eLoopStop = E;\n      continue;\n    }\n    E = E.Next;\n    if (E == eLoopStop)\n      break;\n  }\n  if ((!Closed && (E == E.Next)) || (Closed && (E.Prev == E.Next)))\n    return false;\n  if (!Closed)\n  {\n    this.m_HasOpenPaths = true;\n    eStart.Prev.OutIdx = ClipperLib.ClipperBase.Skip;\n  }\n  //3. Do second stage of edge initialization ...\n  var eHighest = eStart;\n  E = eStart;\n  do {\n    this.InitEdge2(E, polyType);\n    E = E.Next;\n    if (IsFlat && E.Curr.Y != eStart.Curr.Y)\n      IsFlat = false;\n  }\n  while (E != eStart)\n  //4. Finally, add edge bounds to LocalMinima list ...\n  //Totally flat paths must be handled differently when adding them\n  //to LocalMinima list to avoid endless loops etc ...\n  if (IsFlat)\n  {\n    if (Closed)\n      return false;\n    E.Prev.OutIdx = ClipperLib.ClipperBase.Skip;\n    if (E.Prev.Bot.X < E.Prev.Top.X)\n      this.ReverseHorizontal(E.Prev);\n    var locMin = new ClipperLib.LocalMinima();\n    locMin.Next = null;\n    locMin.Y = E.Bot.Y;\n    locMin.LeftBound = null;\n    locMin.RightBound = E;\n    locMin.RightBound.Side = ClipperLib.EdgeSide.esRight;\n    locMin.RightBound.WindDelta = 0;\n    while (E.Next.OutIdx != ClipperLib.ClipperBase.Skip)\n    {\n      E.NextInLML = E.Next;\n      if (E.Bot.X != E.Prev.Top.X)\n        this.ReverseHorizontal(E);\n      E = E.Next;\n    }\n    this.InsertLocalMinima(locMin);\n    this.m_edges.push(edges);\n    return true;\n  }\n  this.m_edges.push(edges);\n  var clockwise;\n  var EMin = null;\n  for (;;)\n  {\n    E = this.FindNextLocMin(E);\n    if (E == EMin)\n      break;\n    else if (EMin == null)\n      EMin = E;\n    //E and E.Prev now share a local minima (left aligned if horizontal).\n    //Compare their slopes to find which starts which bound ...\n    var locMin = new ClipperLib.LocalMinima();\n    locMin.Next = null;\n    locMin.Y = E.Bot.Y;\n    if (E.Dx < E.Prev.Dx)\n    {\n      locMin.LeftBound = E.Prev;\n      locMin.RightBound = E;\n      clockwise = false;\n      //Q.nextInLML = Q.prev\n    }\n    else\n    {\n      locMin.LeftBound = E;\n      locMin.RightBound = E.Prev;\n      clockwise = true;\n      //Q.nextInLML = Q.next\n    }\n    locMin.LeftBound.Side = ClipperLib.EdgeSide.esLeft;\n    locMin.RightBound.Side = ClipperLib.EdgeSide.esRight;\n    if (!Closed)\n      locMin.LeftBound.WindDelta = 0;\n    else if (locMin.LeftBound.Next == locMin.RightBound)\n      locMin.LeftBound.WindDelta = -1;\n    else\n      locMin.LeftBound.WindDelta = 1;\n    locMin.RightBound.WindDelta = -locMin.LeftBound.WindDelta;\n    E = this.ProcessBound(locMin.LeftBound, clockwise);\n    var E2 = this.ProcessBound(locMin.RightBound, !clockwise);\n    if (locMin.LeftBound.OutIdx == ClipperLib.ClipperBase.Skip)\n      locMin.LeftBound = null;\n    else if (locMin.RightBound.OutIdx == ClipperLib.ClipperBase.Skip)\n      locMin.RightBound = null;\n    this.InsertLocalMinima(locMin);\n    if (!clockwise)\n      E = E2;\n  }\n  return true;\n};\nClipperLib.ClipperBase.prototype.AddPaths = function (ppg, polyType, closed)\n{\n  //  console.log(\"-------------------------------------------\");\n  //  console.log(JSON.stringify(ppg));\n  var result = false;\n  for (var i = 0, ilen = ppg.length; i < ilen; ++i)\n    if (this.AddPath(ppg[i], polyType, closed))\n      result = true;\n  return result;\n};\n//------------------------------------------------------------------------------\nClipperLib.ClipperBase.prototype.Pt2IsBetweenPt1AndPt3 = function (pt1, pt2, pt3)\n{\n  if ((ClipperLib.IntPoint.op_Equality(pt1, pt3)) || (ClipperLib.IntPoint.op_Equality(pt1, pt2)) ||\n    (ClipperLib.IntPoint.op_Equality(pt3, pt2)))\n    return false;\n  else if (pt1.X != pt3.X)\n    return (pt2.X > pt1.X) == (pt2.X < pt3.X);\n  else\n    return (pt2.Y > pt1.Y) == (pt2.Y < pt3.Y);\n};\nClipperLib.ClipperBase.prototype.RemoveEdge = function (e)\n{\n  //removes e from double_linked_list (but without removing from memory)\n  e.Prev.Next = e.Next;\n  e.Next.Prev = e.Prev;\n  var result = e.Next;\n  e.Prev = null; //flag as removed (see ClipperBase.Clear)\n  return result;\n};\nClipperLib.ClipperBase.prototype.SetDx = function (e)\n{\n  e.Delta.X = (e.Top.X - e.Bot.X);\n  e.Delta.Y = (e.Top.Y - e.Bot.Y);\n  if (e.Delta.Y === 0) e.Dx = ClipperLib.ClipperBase.horizontal;\n  else e.Dx = (e.Delta.X) / (e.Delta.Y);\n};\nClipperLib.ClipperBase.prototype.InsertLocalMinima = function (newLm)\n{\n  if (this.m_MinimaList === null)\n  {\n    this.m_MinimaList = newLm;\n  }\n  else if (newLm.Y >= this.m_MinimaList.Y)\n  {\n    newLm.Next = this.m_MinimaList;\n    this.m_MinimaList = newLm;\n  }\n  else\n  {\n    var tmpLm = this.m_MinimaList;\n    while (tmpLm.Next !== null && (newLm.Y < tmpLm.Next.Y))\n      tmpLm = tmpLm.Next;\n    newLm.Next = tmpLm.Next;\n    tmpLm.Next = newLm;\n  }\n};\nClipperLib.ClipperBase.prototype.PopLocalMinima = function ()\n{\n  if (this.m_CurrentLM === null)\n    return;\n  this.m_CurrentLM = this.m_CurrentLM.Next;\n};\nClipperLib.ClipperBase.prototype.ReverseHorizontal = function (e)\n{\n  //swap horizontal edges' top and bottom x's so they follow the natural\n  //progression of the bounds - ie so their xbots will align with the\n  //adjoining lower edge. [Helpful in the ProcessHorizontal() method.]\n  var tmp = e.Top.X;\n  e.Top.X = e.Bot.X;\n  e.Bot.X = tmp;\n  if (use_xyz)\n  {\n    tmp = e.Top.Z;\n    e.Top.Z = e.Bot.Z;\n    e.Bot.Z = tmp;\n  }\n};\nClipperLib.ClipperBase.prototype.Reset = function ()\n{\n  this.m_CurrentLM = this.m_MinimaList;\n  if (this.m_CurrentLM == null)\n    return;\n  //ie nothing to process\n  //reset all edges ...\n  var lm = this.m_MinimaList;\n  while (lm != null)\n  {\n    var e = lm.LeftBound;\n    if (e != null)\n    {\n      //e.Curr = e.Bot;\n      e.Curr.X = e.Bot.X;\n      e.Curr.Y = e.Bot.Y;\n      e.Side = ClipperLib.EdgeSide.esLeft;\n      e.OutIdx = ClipperLib.ClipperBase.Unassigned;\n    }\n    e = lm.RightBound;\n    if (e != null)\n    {\n      //e.Curr = e.Bot;\n      e.Curr.X = e.Bot.X;\n      e.Curr.Y = e.Bot.Y;\n      e.Side = ClipperLib.EdgeSide.esRight;\n      e.OutIdx = ClipperLib.ClipperBase.Unassigned;\n    }\n    lm = lm.Next;\n  }\n};\nClipperLib.Clipper = function (InitOptions) // public Clipper(int InitOptions = 0)\n{\n  if (typeof (InitOptions) == \"undefined\") InitOptions = 0;\n  this.m_PolyOuts = null;\n  this.m_ClipType = ClipperLib.ClipType.ctIntersection;\n  this.m_Scanbeam = null;\n  this.m_ActiveEdges = null;\n  this.m_SortedEdges = null;\n  this.m_IntersectList = null;\n  this.m_IntersectNodeComparer = null;\n  this.m_ExecuteLocked = false;\n  this.m_ClipFillType = ClipperLib.PolyFillType.pftEvenOdd;\n  this.m_SubjFillType = ClipperLib.PolyFillType.pftEvenOdd;\n  this.m_Joins = null;\n  this.m_GhostJoins = null;\n  this.m_UsingPolyTree = false;\n  this.ReverseSolution = false;\n  this.StrictlySimple = false;\n  ClipperLib.ClipperBase.call(this);\n  this.m_Scanbeam = null;\n  this.m_ActiveEdges = null;\n  this.m_SortedEdges = null;\n  this.m_IntersectList = new Array();\n  this.m_IntersectNodeComparer = ClipperLib.MyIntersectNodeSort.Compare;\n  this.m_ExecuteLocked = false;\n  this.m_UsingPolyTree = false;\n  this.m_PolyOuts = new Array();\n  this.m_Joins = new Array();\n  this.m_GhostJoins = new Array();\n  this.ReverseSolution = (1 & InitOptions) !== 0;\n  this.StrictlySimple = (2 & InitOptions) !== 0;\n  this.PreserveCollinear = (4 & InitOptions) !== 0;\n  if (use_xyz)\n  {\n    this.ZFillFunction = null; // function (IntPoint vert1, IntPoint vert2, ref IntPoint intersectPt);\n  }\n};\nClipperLib.Clipper.ioReverseSolution = 1;\nClipperLib.Clipper.ioStrictlySimple = 2;\nClipperLib.Clipper.ioPreserveCollinear = 4;\n\nClipperLib.Clipper.prototype.Clear = function ()\n{\n  if (this.m_edges.length === 0)\n    return;\n  //avoids problems with ClipperBase destructor\n  this.DisposeAllPolyPts();\n  ClipperLib.ClipperBase.prototype.Clear.call(this);\n};\n\nClipperLib.Clipper.prototype.DisposeScanbeamList = function ()\n{\n  while (this.m_Scanbeam !== null)\n  {\n    var sb2 = this.m_Scanbeam.Next;\n    this.m_Scanbeam = null;\n    this.m_Scanbeam = sb2;\n  }\n};\nClipperLib.Clipper.prototype.Reset = function ()\n{\n  ClipperLib.ClipperBase.prototype.Reset.call(this);\n  this.m_Scanbeam = null;\n  this.m_ActiveEdges = null;\n  this.m_SortedEdges = null;\n\n  var lm = this.m_MinimaList;\n  while (lm !== null)\n  {\n    this.InsertScanbeam(lm.Y);\n    lm = lm.Next;\n  }\n};\nClipperLib.Clipper.prototype.InsertScanbeam = function (Y)\n{\n  if (this.m_Scanbeam === null)\n  {\n    this.m_Scanbeam = new ClipperLib.Scanbeam();\n    this.m_Scanbeam.Next = null;\n    this.m_Scanbeam.Y = Y;\n  }\n  else if (Y > this.m_Scanbeam.Y)\n  {\n    var newSb = new ClipperLib.Scanbeam();\n    newSb.Y = Y;\n    newSb.Next = this.m_Scanbeam;\n    this.m_Scanbeam = newSb;\n  }\n  else\n  {\n    var sb2 = this.m_Scanbeam;\n    while (sb2.Next !== null && (Y <= sb2.Next.Y))\n      sb2 = sb2.Next;\n    if (Y == sb2.Y)\n      return;\n    //ie ignores duplicates\n    var newSb = new ClipperLib.Scanbeam();\n    newSb.Y = Y;\n    newSb.Next = sb2.Next;\n    sb2.Next = newSb;\n  }\n};\n// ************************************\nClipperLib.Clipper.prototype.Execute = function ()\n{\n  var a = arguments,\n    alen = a.length,\n    ispolytree = a[1] instanceof ClipperLib.PolyTree;\n  if (alen == 4 && !ispolytree) // function (clipType, solution, subjFillType, clipFillType)\n  {\n    var clipType = a[0],\n      solution = a[1],\n      subjFillType = a[2],\n      clipFillType = a[3];\n    if (this.m_ExecuteLocked)\n      return false;\n    if (this.m_HasOpenPaths)\n      ClipperLib.Error(\"Error: PolyTree struct is need for open path clipping.\");\n    this.m_ExecuteLocked = true;\n    ClipperLib.Clear(solution);\n    this.m_SubjFillType = subjFillType;\n    this.m_ClipFillType = clipFillType;\n    this.m_ClipType = clipType;\n    this.m_UsingPolyTree = false;\n    try\n    {\n      var succeeded = this.ExecuteInternal();\n      //build the return polygons ...\n      if (succeeded) this.BuildResult(solution);\n    }\n    finally\n    {\n      this.DisposeAllPolyPts();\n      this.m_ExecuteLocked = false;\n    }\n    return succeeded;\n  }\n  else if (alen == 4 && ispolytree) // function (clipType, polytree, subjFillType, clipFillType)\n  {\n    var clipType = a[0],\n      polytree = a[1],\n      subjFillType = a[2],\n      clipFillType = a[3];\n    if (this.m_ExecuteLocked)\n      return false;\n    this.m_ExecuteLocked = true;\n    this.m_SubjFillType = subjFillType;\n    this.m_ClipFillType = clipFillType;\n    this.m_ClipType = clipType;\n    this.m_UsingPolyTree = true;\n    try\n    {\n      var succeeded = this.ExecuteInternal();\n      //build the return polygons ...\n      if (succeeded) this.BuildResult2(polytree);\n    }\n    finally\n    {\n      this.DisposeAllPolyPts();\n      this.m_ExecuteLocked = false;\n    }\n    return succeeded;\n  }\n  else if (alen == 2 && !ispolytree) // function (clipType, solution)\n  {\n    var clipType = a[0],\n      solution = a[1];\n    return this.Execute(clipType, solution, ClipperLib.PolyFillType.pftEvenOdd, ClipperLib.PolyFillType.pftEvenOdd);\n  }\n  else if (alen == 2 && ispolytree) // function (clipType, polytree)\n  {\n    var clipType = a[0],\n      polytree = a[1];\n    return this.Execute(clipType, polytree, ClipperLib.PolyFillType.pftEvenOdd, ClipperLib.PolyFillType.pftEvenOdd);\n  }\n};\nClipperLib.Clipper.prototype.FixHoleLinkage = function (outRec)\n{\n  //skip if an outermost polygon or\n  //already already points to the correct FirstLeft ...\n  if (outRec.FirstLeft === null || (outRec.IsHole != outRec.FirstLeft.IsHole && outRec.FirstLeft.Pts !== null))\n    return;\n  var orfl = outRec.FirstLeft;\n  while (orfl !== null && ((orfl.IsHole == outRec.IsHole) || orfl.Pts === null))\n    orfl = orfl.FirstLeft;\n  outRec.FirstLeft = orfl;\n};\nClipperLib.Clipper.prototype.ExecuteInternal = function ()\n{\n  try\n  {\n    this.Reset();\n    if (this.m_CurrentLM === null)\n      return false;\n    var botY = this.PopScanbeam();\n    do {\n      this.InsertLocalMinimaIntoAEL(botY);\n      ClipperLib.Clear(this.m_GhostJoins);\n      this.ProcessHorizontals(false);\n      if (this.m_Scanbeam === null)\n        break;\n      var topY = this.PopScanbeam();\n      //console.log(\"botY:\" + botY + \", topY:\" + topY);\n      if (!this.ProcessIntersections(botY, topY))\n        return false;\n      this.ProcessEdgesAtTopOfScanbeam(topY);\n      botY = topY;\n    }\n    while (this.m_Scanbeam !== null || this.m_CurrentLM !== null)\n    //fix orientations ...\n    for (var i = 0, ilen = this.m_PolyOuts.length; i < ilen; i++)\n    {\n      var outRec = this.m_PolyOuts[i];\n      if (outRec.Pts === null || outRec.IsOpen)\n        continue;\n      if ((outRec.IsHole ^ this.ReverseSolution) == (this.Area(outRec) > 0))\n        this.ReversePolyPtLinks(outRec.Pts);\n    }\n    this.JoinCommonEdges();\n    for (var i = 0, ilen = this.m_PolyOuts.length; i < ilen; i++)\n    {\n      var outRec = this.m_PolyOuts[i];\n      if (outRec.Pts !== null && !outRec.IsOpen)\n        this.FixupOutPolygon(outRec);\n    }\n    if (this.StrictlySimple)\n      this.DoSimplePolygons();\n    return true;\n  }\n  finally\n  {\n    ClipperLib.Clear(this.m_Joins);\n    ClipperLib.Clear(this.m_GhostJoins);\n  }\n};\nClipperLib.Clipper.prototype.PopScanbeam = function ()\n{\n  var Y = this.m_Scanbeam.Y;\n  var sb2 = this.m_Scanbeam;\n  this.m_Scanbeam = this.m_Scanbeam.Next;\n  sb2 = null;\n  return Y;\n};\nClipperLib.Clipper.prototype.DisposeAllPolyPts = function ()\n{\n  for (var i = 0, ilen = this.m_PolyOuts.length; i < ilen; ++i)\n    this.DisposeOutRec(i);\n  ClipperLib.Clear(this.m_PolyOuts);\n};\nClipperLib.Clipper.prototype.DisposeOutRec = function (index)\n{\n  var outRec = this.m_PolyOuts[index];\n  if (outRec.Pts !== null)\n    this.DisposeOutPts(outRec.Pts);\n  outRec = null;\n  this.m_PolyOuts[index] = null;\n};\nClipperLib.Clipper.prototype.DisposeOutPts = function (pp)\n{\n  if (pp === null)\n    return;\n  var tmpPp = null;\n  pp.Prev.Next = null;\n  while (pp !== null)\n  {\n    tmpPp = pp;\n    pp = pp.Next;\n    tmpPp = null;\n  }\n};\nClipperLib.Clipper.prototype.AddJoin = function (Op1, Op2, OffPt)\n{\n  var j = new ClipperLib.Join();\n  j.OutPt1 = Op1;\n  j.OutPt2 = Op2;\n  //j.OffPt = OffPt;\n  j.OffPt.X = OffPt.X;\n  j.OffPt.Y = OffPt.Y;\n  this.m_Joins.push(j);\n};\nClipperLib.Clipper.prototype.AddGhostJoin = function (Op, OffPt)\n{\n  var j = new ClipperLib.Join();\n  j.OutPt1 = Op;\n  //j.OffPt = OffPt;\n  j.OffPt.X = OffPt.X;\n  j.OffPt.Y = OffPt.Y;\n  this.m_GhostJoins.push(j);\n};\nif (use_xyz)\n{\n  ClipperLib.Clipper.prototype.SetZ = function (pt, e)\n  {\n    pt.Z = 0;\n    if (this.ZFillFunction !== null)\n    {\n      //put the 'preferred' point as first parameter ...\n      if (e.OutIdx < 0)\n        this.ZFillFunction(e.Bot, e.Top, pt); //outside a path so presume entering\n      else\n        this.ZFillFunction(e.Top, e.Bot, pt); //inside a path so presume exiting\n    }\n  };\n  //------------------------------------------------------------------------------\n}\nClipperLib.Clipper.prototype.InsertLocalMinimaIntoAEL = function (botY)\n{\n  while (this.m_CurrentLM !== null && (this.m_CurrentLM.Y == botY))\n  {\n    var lb = this.m_CurrentLM.LeftBound;\n    var rb = this.m_CurrentLM.RightBound;\n    this.PopLocalMinima();\n    var Op1 = null;\n    if (lb === null)\n    {\n      this.InsertEdgeIntoAEL(rb, null);\n      this.SetWindingCount(rb);\n      if (this.IsContributing(rb))\n        Op1 = this.AddOutPt(rb, rb.Bot);\n    }\n    else if (rb == null)\n    {\n      this.InsertEdgeIntoAEL(lb, null);\n      this.SetWindingCount(lb);\n      if (this.IsContributing(lb))\n        Op1 = this.AddOutPt(lb, lb.Bot);\n      this.InsertScanbeam(lb.Top.Y);\n    }\n    else\n    {\n      this.InsertEdgeIntoAEL(lb, null);\n      this.InsertEdgeIntoAEL(rb, lb);\n      this.SetWindingCount(lb);\n      rb.WindCnt = lb.WindCnt;\n      rb.WindCnt2 = lb.WindCnt2;\n      if (this.IsContributing(lb))\n        Op1 = this.AddLocalMinPoly(lb, rb, lb.Bot);\n      this.InsertScanbeam(lb.Top.Y);\n    }\n    if (rb != null)\n    {\n      if (ClipperLib.ClipperBase.IsHorizontal(rb))\n        this.AddEdgeToSEL(rb);\n      else\n        this.InsertScanbeam(rb.Top.Y);\n    }\n    if (lb == null || rb == null) continue;\n    //if output polygons share an Edge with a horizontal rb, they'll need joining later ...\n    if (Op1 !== null && ClipperLib.ClipperBase.IsHorizontal(rb) && this.m_GhostJoins.length > 0 && rb.WindDelta !== 0)\n    {\n      for (var i = 0, ilen = this.m_GhostJoins.length; i < ilen; i++)\n      {\n        //if the horizontal Rb and a 'ghost' horizontal overlap, then convert\n        //the 'ghost' join to a real join ready for later ...\n        var j = this.m_GhostJoins[i];\n        if (this.HorzSegmentsOverlap(j.OutPt1.Pt, j.OffPt, rb.Bot, rb.Top))\n          this.AddJoin(j.OutPt1, Op1, j.OffPt);\n      }\n    }\n    if (lb.OutIdx >= 0 && lb.PrevInAEL !== null &&\n      lb.PrevInAEL.Curr.X == lb.Bot.X &&\n      lb.PrevInAEL.OutIdx >= 0 &&\n      ClipperLib.ClipperBase.SlopesEqual(lb.PrevInAEL, lb, this.m_UseFullRange) &&\n      lb.WindDelta !== 0 && lb.PrevInAEL.WindDelta !== 0)\n    {\n      var Op2 = this.AddOutPt(lb.PrevInAEL, lb.Bot);\n      this.AddJoin(Op1, Op2, lb.Top);\n    }\n    if (lb.NextInAEL != rb)\n    {\n      if (rb.OutIdx >= 0 && rb.PrevInAEL.OutIdx >= 0 &&\n        ClipperLib.ClipperBase.SlopesEqual(rb.PrevInAEL, rb, this.m_UseFullRange) &&\n        rb.WindDelta !== 0 && rb.PrevInAEL.WindDelta !== 0)\n      {\n        var Op2 = this.AddOutPt(rb.PrevInAEL, rb.Bot);\n        this.AddJoin(Op1, Op2, rb.Top);\n      }\n      var e = lb.NextInAEL;\n      if (e !== null)\n        while (e != rb)\n        {\n          //nb: For calculating winding counts etc, IntersectEdges() assumes\n          //that param1 will be to the right of param2 ABOVE the intersection ...\n          this.IntersectEdges(rb, e, lb.Curr, false);\n          //order important here\n          e = e.NextInAEL;\n        }\n    }\n  }\n};\nClipperLib.Clipper.prototype.InsertEdgeIntoAEL = function (edge, startEdge)\n{\n  if (this.m_ActiveEdges === null)\n  {\n    edge.PrevInAEL = null;\n    edge.NextInAEL = null;\n    this.m_ActiveEdges = edge;\n  }\n  else if (startEdge === null && this.E2InsertsBeforeE1(this.m_ActiveEdges, edge))\n  {\n    edge.PrevInAEL = null;\n    edge.NextInAEL = this.m_ActiveEdges;\n    this.m_ActiveEdges.PrevInAEL = edge;\n    this.m_ActiveEdges = edge;\n  }\n  else\n  {\n    if (startEdge === null)\n      startEdge = this.m_ActiveEdges;\n    while (startEdge.NextInAEL !== null && !this.E2InsertsBeforeE1(startEdge.NextInAEL, edge))\n      startEdge = startEdge.NextInAEL;\n    edge.NextInAEL = startEdge.NextInAEL;\n    if (startEdge.NextInAEL !== null)\n      startEdge.NextInAEL.PrevInAEL = edge;\n    edge.PrevInAEL = startEdge;\n    startEdge.NextInAEL = edge;\n  }\n};\nClipperLib.Clipper.prototype.E2InsertsBeforeE1 = function (e1, e2)\n{\n  if (e2.Curr.X == e1.Curr.X)\n  {\n    if (e2.Top.Y > e1.Top.Y)\n      return e2.Top.X < ClipperLib.Clipper.TopX(e1, e2.Top.Y);\n    else\n      return e1.Top.X > ClipperLib.Clipper.TopX(e2, e1.Top.Y);\n  }\n  else\n    return e2.Curr.X < e1.Curr.X;\n};\nClipperLib.Clipper.prototype.IsEvenOddFillType = function (edge)\n{\n  if (edge.PolyTyp == ClipperLib.PolyType.ptSubject)\n    return this.m_SubjFillType == ClipperLib.PolyFillType.pftEvenOdd;\n  else\n    return this.m_ClipFillType == ClipperLib.PolyFillType.pftEvenOdd;\n};\nClipperLib.Clipper.prototype.IsEvenOddAltFillType = function (edge)\n{\n  if (edge.PolyTyp == ClipperLib.PolyType.ptSubject)\n    return this.m_ClipFillType == ClipperLib.PolyFillType.pftEvenOdd;\n  else\n    return this.m_SubjFillType == ClipperLib.PolyFillType.pftEvenOdd;\n};\nClipperLib.Clipper.prototype.IsContributing = function (edge)\n{\n  var pft, pft2;\n  if (edge.PolyTyp == ClipperLib.PolyType.ptSubject)\n  {\n    pft = this.m_SubjFillType;\n    pft2 = this.m_ClipFillType;\n  }\n  else\n  {\n    pft = this.m_ClipFillType;\n    pft2 = this.m_SubjFillType;\n  }\n  switch (pft)\n  {\n  case ClipperLib.PolyFillType.pftEvenOdd:\n    if (edge.WindDelta === 0 && edge.WindCnt != 1)\n      return false;\n    break;\n  case ClipperLib.PolyFillType.pftNonZero:\n    if (Math.abs(edge.WindCnt) != 1)\n      return false;\n    break;\n  case ClipperLib.PolyFillType.pftPositive:\n    if (edge.WindCnt != 1)\n      return false;\n    break;\n  default:\n    if (edge.WindCnt != -1)\n      return false;\n    break;\n  }\n  switch (this.m_ClipType)\n  {\n  case ClipperLib.ClipType.ctIntersection:\n    switch (pft2)\n    {\n    case ClipperLib.PolyFillType.pftEvenOdd:\n    case ClipperLib.PolyFillType.pftNonZero:\n      return (edge.WindCnt2 !== 0);\n    case ClipperLib.PolyFillType.pftPositive:\n      return (edge.WindCnt2 > 0);\n    default:\n      return (edge.WindCnt2 < 0);\n    }\n  case ClipperLib.ClipType.ctUnion:\n    switch (pft2)\n    {\n    case ClipperLib.PolyFillType.pftEvenOdd:\n    case ClipperLib.PolyFillType.pftNonZero:\n      return (edge.WindCnt2 === 0);\n    case ClipperLib.PolyFillType.pftPositive:\n      return (edge.WindCnt2 <= 0);\n    default:\n      return (edge.WindCnt2 >= 0);\n    }\n  case ClipperLib.ClipType.ctDifference:\n    if (edge.PolyTyp == ClipperLib.PolyType.ptSubject)\n      switch (pft2)\n      {\n      case ClipperLib.PolyFillType.pftEvenOdd:\n      case ClipperLib.PolyFillType.pftNonZero:\n        return (edge.WindCnt2 === 0);\n      case ClipperLib.PolyFillType.pftPositive:\n        return (edge.WindCnt2 <= 0);\n      default:\n        return (edge.WindCnt2 >= 0);\n      }\n    else\n      switch (pft2)\n      {\n      case ClipperLib.PolyFillType.pftEvenOdd:\n      case ClipperLib.PolyFillType.pftNonZero:\n        return (edge.WindCnt2 !== 0);\n      case ClipperLib.PolyFillType.pftPositive:\n        return (edge.WindCnt2 > 0);\n      default:\n        return (edge.WindCnt2 < 0);\n      }\n  case ClipperLib.ClipType.ctXor:\n    if (edge.WindDelta === 0)\n      switch (pft2)\n      {\n      case ClipperLib.PolyFillType.pftEvenOdd:\n      case ClipperLib.PolyFillType.pftNonZero:\n        return (edge.WindCnt2 === 0);\n      case ClipperLib.PolyFillType.pftPositive:\n        return (edge.WindCnt2 <= 0);\n      default:\n        return (edge.WindCnt2 >= 0);\n      }\n    else\n      return true;\n  }\n  return true;\n};\nClipperLib.Clipper.prototype.SetWindingCount = function (edge)\n{\n  var e = edge.PrevInAEL;\n  //find the edge of the same polytype that immediately preceeds 'edge' in AEL\n  while (e !== null && ((e.PolyTyp != edge.PolyTyp) || (e.WindDelta === 0)))\n    e = e.PrevInAEL;\n  if (e === null)\n  {\n    edge.WindCnt = (edge.WindDelta === 0 ? 1 : edge.WindDelta);\n    edge.WindCnt2 = 0;\n    e = this.m_ActiveEdges;\n    //ie get ready to calc WindCnt2\n  }\n  else if (edge.WindDelta === 0 && this.m_ClipType != ClipperLib.ClipType.ctUnion)\n  {\n    edge.WindCnt = 1;\n    edge.WindCnt2 = e.WindCnt2;\n    e = e.NextInAEL;\n    //ie get ready to calc WindCnt2\n  }\n  else if (this.IsEvenOddFillType(edge))\n  {\n    //EvenOdd filling ...\n    if (edge.WindDelta === 0)\n    {\n      //are we inside a subj polygon ...\n      var Inside = true;\n      var e2 = e.PrevInAEL;\n      while (e2 !== null)\n      {\n        if (e2.PolyTyp == e.PolyTyp && e2.WindDelta !== 0)\n          Inside = !Inside;\n        e2 = e2.PrevInAEL;\n      }\n      edge.WindCnt = (Inside ? 0 : 1);\n    }\n    else\n    {\n      edge.WindCnt = edge.WindDelta;\n    }\n    edge.WindCnt2 = e.WindCnt2;\n    e = e.NextInAEL;\n    //ie get ready to calc WindCnt2\n  }\n  else\n  {\n    //nonZero, Positive or Negative filling ...\n    if (e.WindCnt * e.WindDelta < 0)\n    {\n      //prev edge is 'decreasing' WindCount (WC) toward zero\n      //so we're outside the previous polygon ...\n      if (Math.abs(e.WindCnt) > 1)\n      {\n        //outside prev poly but still inside another.\n        //when reversing direction of prev poly use the same WC \n        if (e.WindDelta * edge.WindDelta < 0)\n          edge.WindCnt = e.WindCnt;\n        else\n          edge.WindCnt = e.WindCnt + edge.WindDelta;\n      }\n      else\n        edge.WindCnt = (edge.WindDelta === 0 ? 1 : edge.WindDelta);\n    }\n    else\n    {\n      //prev edge is 'increasing' WindCount (WC) away from zero\n      //so we're inside the previous polygon ...\n      if (edge.WindDelta === 0)\n        edge.WindCnt = (e.WindCnt < 0 ? e.WindCnt - 1 : e.WindCnt + 1);\n      else if (e.WindDelta * edge.WindDelta < 0)\n        edge.WindCnt = e.WindCnt;\n      else\n        edge.WindCnt = e.WindCnt + edge.WindDelta;\n    }\n    edge.WindCnt2 = e.WindCnt2;\n    e = e.NextInAEL;\n    //ie get ready to calc WindCnt2\n  }\n  //update WindCnt2 ...\n  if (this.IsEvenOddAltFillType(edge))\n  {\n    //EvenOdd filling ...\n    while (e != edge)\n    {\n      if (e.WindDelta !== 0)\n        edge.WindCnt2 = (edge.WindCnt2 === 0 ? 1 : 0);\n      e = e.NextInAEL;\n    }\n  }\n  else\n  {\n    //nonZero, Positive or Negative filling ...\n    while (e != edge)\n    {\n      edge.WindCnt2 += e.WindDelta;\n      e = e.NextInAEL;\n    }\n  }\n};\nClipperLib.Clipper.prototype.AddEdgeToSEL = function (edge)\n{\n  //SEL pointers in PEdge are reused to build a list of horizontal edges.\n  //However, we don't need to worry about order with horizontal edge processing.\n  if (this.m_SortedEdges === null)\n  {\n    this.m_SortedEdges = edge;\n    edge.PrevInSEL = null;\n    edge.NextInSEL = null;\n  }\n  else\n  {\n    edge.NextInSEL = this.m_SortedEdges;\n    edge.PrevInSEL = null;\n    this.m_SortedEdges.PrevInSEL = edge;\n    this.m_SortedEdges = edge;\n  }\n};\nClipperLib.Clipper.prototype.CopyAELToSEL = function ()\n{\n  var e = this.m_ActiveEdges;\n  this.m_SortedEdges = e;\n  while (e !== null)\n  {\n    e.PrevInSEL = e.PrevInAEL;\n    e.NextInSEL = e.NextInAEL;\n    e = e.NextInAEL;\n  }\n};\nClipperLib.Clipper.prototype.SwapPositionsInAEL = function (edge1, edge2)\n{\n  //check that one or other edge hasn't already been removed from AEL ...\n  if (edge1.NextInAEL == edge1.PrevInAEL || edge2.NextInAEL == edge2.PrevInAEL)\n    return;\n  if (edge1.NextInAEL == edge2)\n  {\n    var next = edge2.NextInAEL;\n    if (next !== null)\n      next.PrevInAEL = edge1;\n    var prev = edge1.PrevInAEL;\n    if (prev !== null)\n      prev.NextInAEL = edge2;\n    edge2.PrevInAEL = prev;\n    edge2.NextInAEL = edge1;\n    edge1.PrevInAEL = edge2;\n    edge1.NextInAEL = next;\n  }\n  else if (edge2.NextInAEL == edge1)\n  {\n    var next = edge1.NextInAEL;\n    if (next !== null)\n      next.PrevInAEL = edge2;\n    var prev = edge2.PrevInAEL;\n    if (prev !== null)\n      prev.NextInAEL = edge1;\n    edge1.PrevInAEL = prev;\n    edge1.NextInAEL = edge2;\n    edge2.PrevInAEL = edge1;\n    edge2.NextInAEL = next;\n  }\n  else\n  {\n    var next = edge1.NextInAEL;\n    var prev = edge1.PrevInAEL;\n    edge1.NextInAEL = edge2.NextInAEL;\n    if (edge1.NextInAEL !== null)\n      edge1.NextInAEL.PrevInAEL = edge1;\n    edge1.PrevInAEL = edge2.PrevInAEL;\n    if (edge1.PrevInAEL !== null)\n      edge1.PrevInAEL.NextInAEL = edge1;\n    edge2.NextInAEL = next;\n    if (edge2.NextInAEL !== null)\n      edge2.NextInAEL.PrevInAEL = edge2;\n    edge2.PrevInAEL = prev;\n    if (edge2.PrevInAEL !== null)\n      edge2.PrevInAEL.NextInAEL = edge2;\n  }\n  if (edge1.PrevInAEL === null)\n    this.m_ActiveEdges = edge1;\n  else if (edge2.PrevInAEL === null)\n    this.m_ActiveEdges = edge2;\n};\nClipperLib.Clipper.prototype.SwapPositionsInSEL = function (edge1, edge2)\n{\n  if (edge1.NextInSEL === null && edge1.PrevInSEL === null)\n    return;\n  if (edge2.NextInSEL === null && edge2.PrevInSEL === null)\n    return;\n  if (edge1.NextInSEL == edge2)\n  {\n    var next = edge2.NextInSEL;\n    if (next !== null)\n      next.PrevInSEL = edge1;\n    var prev = edge1.PrevInSEL;\n    if (prev !== null)\n      prev.NextInSEL = edge2;\n    edge2.PrevInSEL = prev;\n    edge2.NextInSEL = edge1;\n    edge1.PrevInSEL = edge2;\n    edge1.NextInSEL = next;\n  }\n  else if (edge2.NextInSEL == edge1)\n  {\n    var next = edge1.NextInSEL;\n    if (next !== null)\n      next.PrevInSEL = edge2;\n    var prev = edge2.PrevInSEL;\n    if (prev !== null)\n      prev.NextInSEL = edge1;\n    edge1.PrevInSEL = prev;\n    edge1.NextInSEL = edge2;\n    edge2.PrevInSEL = edge1;\n    edge2.NextInSEL = next;\n  }\n  else\n  {\n    var next = edge1.NextInSEL;\n    var prev = edge1.PrevInSEL;\n    edge1.NextInSEL = edge2.NextInSEL;\n    if (edge1.NextInSEL !== null)\n      edge1.NextInSEL.PrevInSEL = edge1;\n    edge1.PrevInSEL = edge2.PrevInSEL;\n    if (edge1.PrevInSEL !== null)\n      edge1.PrevInSEL.NextInSEL = edge1;\n    edge2.NextInSEL = next;\n    if (edge2.NextInSEL !== null)\n      edge2.NextInSEL.PrevInSEL = edge2;\n    edge2.PrevInSEL = prev;\n    if (edge2.PrevInSEL !== null)\n      edge2.PrevInSEL.NextInSEL = edge2;\n  }\n  if (edge1.PrevInSEL === null)\n    this.m_SortedEdges = edge1;\n  else if (edge2.PrevInSEL === null)\n    this.m_SortedEdges = edge2;\n};\nClipperLib.Clipper.prototype.AddLocalMaxPoly = function (e1, e2, pt)\n{\n  this.AddOutPt(e1, pt);\n  if (e2.WindDelta == 0) this.AddOutPt(e2, pt);\n  if (e1.OutIdx == e2.OutIdx)\n  {\n    e1.OutIdx = -1;\n    e2.OutIdx = -1;\n  }\n  else if (e1.OutIdx < e2.OutIdx)\n    this.AppendPolygon(e1, e2);\n  else\n    this.AppendPolygon(e2, e1);\n};\nClipperLib.Clipper.prototype.AddLocalMinPoly = function (e1, e2, pt)\n{\n  var result;\n  var e, prevE;\n  if (ClipperLib.ClipperBase.IsHorizontal(e2) || (e1.Dx > e2.Dx))\n  {\n    result = this.AddOutPt(e1, pt);\n    e2.OutIdx = e1.OutIdx;\n    e1.Side = ClipperLib.EdgeSide.esLeft;\n    e2.Side = ClipperLib.EdgeSide.esRight;\n    e = e1;\n    if (e.PrevInAEL == e2)\n      prevE = e2.PrevInAEL;\n    else\n      prevE = e.PrevInAEL;\n  }\n  else\n  {\n    result = this.AddOutPt(e2, pt);\n    e1.OutIdx = e2.OutIdx;\n    e1.Side = ClipperLib.EdgeSide.esRight;\n    e2.Side = ClipperLib.EdgeSide.esLeft;\n    e = e2;\n    if (e.PrevInAEL == e1)\n      prevE = e1.PrevInAEL;\n    else\n      prevE = e.PrevInAEL;\n  }\n  if (prevE !== null && prevE.OutIdx >= 0 && (ClipperLib.Clipper.TopX(prevE, pt.Y) == ClipperLib.Clipper.TopX(e, pt.Y)) && ClipperLib.ClipperBase.SlopesEqual(e, prevE, this.m_UseFullRange) && (e.WindDelta !== 0) && (prevE.WindDelta !== 0))\n  {\n    var outPt = this.AddOutPt(prevE, pt);\n    this.AddJoin(result, outPt, e.Top);\n  }\n  return result;\n};\nClipperLib.Clipper.prototype.CreateOutRec = function ()\n{\n  var result = new ClipperLib.OutRec();\n  result.Idx = -1;\n  result.IsHole = false;\n  result.IsOpen = false;\n  result.FirstLeft = null;\n  result.Pts = null;\n  result.BottomPt = null;\n  result.PolyNode = null;\n  this.m_PolyOuts.push(result);\n  result.Idx = this.m_PolyOuts.length - 1;\n  return result;\n};\nClipperLib.Clipper.prototype.AddOutPt = function (e, pt)\n{\n  var ToFront = (e.Side == ClipperLib.EdgeSide.esLeft);\n  if (e.OutIdx < 0)\n  {\n    var outRec = this.CreateOutRec();\n    outRec.IsOpen = (e.WindDelta === 0);\n    var newOp = new ClipperLib.OutPt();\n    outRec.Pts = newOp;\n    newOp.Idx = outRec.Idx;\n    //newOp.Pt = pt;\n    newOp.Pt.X = pt.X;\n    newOp.Pt.Y = pt.Y;\n    newOp.Next = newOp;\n    newOp.Prev = newOp;\n    if (!outRec.IsOpen)\n      this.SetHoleState(e, outRec);\n    if (use_xyz)\n    {\n      if (ClipperLib.IntPoint.op_Equality(pt, e.Bot))\n      {\n        //newOp.Pt = e.Bot;\n        newOp.Pt.X = e.Bot.X;\n        newOp.Pt.Y = e.Bot.Y;\n        newOp.Pt.Z = e.Bot.Z;\n      }\n      else if (ClipperLib.IntPoint.op_Equality(pt, e.Top))\n      {\n        //newOp.Pt = e.Top;\n        newOp.Pt.X = e.Top.X;\n        newOp.Pt.Y = e.Top.Y;\n        newOp.Pt.Z = e.Top.Z;\n      }\n      else\n        this.SetZ(newOp.Pt, e);\n    }\n    e.OutIdx = outRec.Idx;\n    //nb: do this after SetZ !\n    return newOp;\n  }\n  else\n  {\n    var outRec = this.m_PolyOuts[e.OutIdx];\n    //OutRec.Pts is the 'Left-most' point & OutRec.Pts.Prev is the 'Right-most'\n    var op = outRec.Pts;\n    if (ToFront && ClipperLib.IntPoint.op_Equality(pt, op.Pt))\n      return op;\n    else if (!ToFront && ClipperLib.IntPoint.op_Equality(pt, op.Prev.Pt))\n      return op.Prev;\n    var newOp = new ClipperLib.OutPt();\n    newOp.Idx = outRec.Idx;\n    //newOp.Pt = pt;\n    newOp.Pt.X = pt.X;\n    newOp.Pt.Y = pt.Y;\n    newOp.Next = op;\n    newOp.Prev = op.Prev;\n    newOp.Prev.Next = newOp;\n    op.Prev = newOp;\n    if (ToFront)\n      outRec.Pts = newOp;\n    if (use_xyz)\n    {\n      if (ClipperLib.IntPoint.op_Equality(pt, e.Bot))\n      {\n        //newOp.Pt = e.Bot;\n        newOp.Pt.X = e.Bot.X;\n        newOp.Pt.Y = e.Bot.Y;\n        newOp.Pt.Z = e.Bot.Z;\n      }\n      else if (ClipperLib.IntPoint.op_Equality(pt, e.Top))\n      {\n        //newOp.Pt = e.Top;\n        newOp.Pt.X = e.Top.X;\n        newOp.Pt.Y = e.Top.Y;\n        newOp.Pt.Z = e.Top.Z;\n      }\n      else\n        this.SetZ(newOp.Pt, e);\n    }\n    return newOp;\n  }\n};\nClipperLib.Clipper.prototype.SwapPoints = function (pt1, pt2)\n{\n  var tmp = new ClipperLib.IntPoint(pt1.Value);\n  //pt1.Value = pt2.Value;\n  pt1.Value.X = pt2.Value.X;\n  pt1.Value.Y = pt2.Value.Y;\n  //pt2.Value = tmp;\n  pt2.Value.X = tmp.X;\n  pt2.Value.Y = tmp.Y;\n};\nClipperLib.Clipper.prototype.HorzSegmentsOverlap = function (Pt1a, Pt1b, Pt2a, Pt2b)\n{\n  //precondition: both segments are horizontal\n  if ((Pt1a.X > Pt2a.X) == (Pt1a.X < Pt2b.X))\n    return true;\n  else if ((Pt1b.X > Pt2a.X) == (Pt1b.X < Pt2b.X))\n    return true;\n  else if ((Pt2a.X > Pt1a.X) == (Pt2a.X < Pt1b.X))\n    return true;\n  else if ((Pt2b.X > Pt1a.X) == (Pt2b.X < Pt1b.X))\n    return true;\n  else if ((Pt1a.X == Pt2a.X) && (Pt1b.X == Pt2b.X))\n    return true;\n  else if ((Pt1a.X == Pt2b.X) && (Pt1b.X == Pt2a.X))\n    return true;\n  else\n    return false;\n};\nClipperLib.Clipper.prototype.InsertPolyPtBetween = function (p1, p2, pt)\n{\n  var result = new ClipperLib.OutPt();\n  //result.Pt = pt;\n  result.Pt.X = pt.X;\n  result.Pt.Y = pt.Y;\n  if (p2 == p1.Next)\n  {\n    p1.Next = result;\n    p2.Prev = result;\n    result.Next = p2;\n    result.Prev = p1;\n  }\n  else\n  {\n    p2.Next = result;\n    p1.Prev = result;\n    result.Next = p1;\n    result.Prev = p2;\n  }\n  return result;\n};\nClipperLib.Clipper.prototype.SetHoleState = function (e, outRec)\n{\n  var isHole = false;\n  var e2 = e.PrevInAEL;\n  while (e2 !== null)\n  {\n    if (e2.OutIdx >= 0 && e2.WindDelta != 0)\n    {\n      isHole = !isHole;\n      if (outRec.FirstLeft === null)\n        outRec.FirstLeft = this.m_PolyOuts[e2.OutIdx];\n    }\n    e2 = e2.PrevInAEL;\n  }\n  if (isHole)\n    outRec.IsHole = true;\n};\nClipperLib.Clipper.prototype.GetDx = function (pt1, pt2)\n{\n  if (pt1.Y == pt2.Y)\n    return ClipperLib.ClipperBase.horizontal;\n  else\n    return (pt2.X - pt1.X) / (pt2.Y - pt1.Y);\n};\nClipperLib.Clipper.prototype.FirstIsBottomPt = function (btmPt1, btmPt2)\n{\n  var p = btmPt1.Prev;\n  while ((ClipperLib.IntPoint.op_Equality(p.Pt, btmPt1.Pt)) && (p != btmPt1))\n    p = p.Prev;\n  var dx1p = Math.abs(this.GetDx(btmPt1.Pt, p.Pt));\n  p = btmPt1.Next;\n  while ((ClipperLib.IntPoint.op_Equality(p.Pt, btmPt1.Pt)) && (p != btmPt1))\n    p = p.Next;\n  var dx1n = Math.abs(this.GetDx(btmPt1.Pt, p.Pt));\n  p = btmPt2.Prev;\n  while ((ClipperLib.IntPoint.op_Equality(p.Pt, btmPt2.Pt)) && (p != btmPt2))\n    p = p.Prev;\n  var dx2p = Math.abs(this.GetDx(btmPt2.Pt, p.Pt));\n  p = btmPt2.Next;\n  while ((ClipperLib.IntPoint.op_Equality(p.Pt, btmPt2.Pt)) && (p != btmPt2))\n    p = p.Next;\n  var dx2n = Math.abs(this.GetDx(btmPt2.Pt, p.Pt));\n  return (dx1p >= dx2p && dx1p >= dx2n) || (dx1n >= dx2p && dx1n >= dx2n);\n};\nClipperLib.Clipper.prototype.GetBottomPt = function (pp)\n{\n  var dups = null;\n  var p = pp.Next;\n  while (p != pp)\n  {\n    if (p.Pt.Y > pp.Pt.Y)\n    {\n      pp = p;\n      dups = null;\n    }\n    else if (p.Pt.Y == pp.Pt.Y && p.Pt.X <= pp.Pt.X)\n    {\n      if (p.Pt.X < pp.Pt.X)\n      {\n        dups = null;\n        pp = p;\n      }\n      else\n      {\n        if (p.Next != pp && p.Prev != pp)\n          dups = p;\n      }\n    }\n    p = p.Next;\n  }\n  if (dups !== null)\n  {\n    //there appears to be at least 2 vertices at bottomPt so ...\n    while (dups != p)\n    {\n      if (!this.FirstIsBottomPt(p, dups))\n        pp = dups;\n      dups = dups.Next;\n      while (ClipperLib.IntPoint.op_Inequality(dups.Pt, pp.Pt))\n        dups = dups.Next;\n    }\n  }\n  return pp;\n};\nClipperLib.Clipper.prototype.GetLowermostRec = function (outRec1, outRec2)\n{\n  //work out which polygon fragment has the correct hole state ...\n  if (outRec1.BottomPt === null)\n    outRec1.BottomPt = this.GetBottomPt(outRec1.Pts);\n  if (outRec2.BottomPt === null)\n    outRec2.BottomPt = this.GetBottomPt(outRec2.Pts);\n  var bPt1 = outRec1.BottomPt;\n  var bPt2 = outRec2.BottomPt;\n  if (bPt1.Pt.Y > bPt2.Pt.Y)\n    return outRec1;\n  else if (bPt1.Pt.Y < bPt2.Pt.Y)\n    return outRec2;\n  else if (bPt1.Pt.X < bPt2.Pt.X)\n    return outRec1;\n  else if (bPt1.Pt.X > bPt2.Pt.X)\n    return outRec2;\n  else if (bPt1.Next == bPt1)\n    return outRec2;\n  else if (bPt2.Next == bPt2)\n    return outRec1;\n  else if (this.FirstIsBottomPt(bPt1, bPt2))\n    return outRec1;\n  else\n    return outRec2;\n};\nClipperLib.Clipper.prototype.Param1RightOfParam2 = function (outRec1, outRec2)\n{\n  do {\n    outRec1 = outRec1.FirstLeft;\n    if (outRec1 == outRec2)\n      return true;\n  }\n  while (outRec1 !== null)\n  return false;\n};\nClipperLib.Clipper.prototype.GetOutRec = function (idx)\n{\n  var outrec = this.m_PolyOuts[idx];\n  while (outrec != this.m_PolyOuts[outrec.Idx])\n    outrec = this.m_PolyOuts[outrec.Idx];\n  return outrec;\n};\nClipperLib.Clipper.prototype.AppendPolygon = function (e1, e2)\n{\n  //get the start and ends of both output polygons ...\n  var outRec1 = this.m_PolyOuts[e1.OutIdx];\n  var outRec2 = this.m_PolyOuts[e2.OutIdx];\n  var holeStateRec;\n  if (this.Param1RightOfParam2(outRec1, outRec2))\n    holeStateRec = outRec2;\n  else if (this.Param1RightOfParam2(outRec2, outRec1))\n    holeStateRec = outRec1;\n  else\n    holeStateRec = this.GetLowermostRec(outRec1, outRec2);\n  var p1_lft = outRec1.Pts;\n  var p1_rt = p1_lft.Prev;\n  var p2_lft = outRec2.Pts;\n  var p2_rt = p2_lft.Prev;\n  var side;\n  //join e2 poly onto e1 poly and delete pointers to e2 ...\n  if (e1.Side == ClipperLib.EdgeSide.esLeft)\n  {\n    if (e2.Side == ClipperLib.EdgeSide.esLeft)\n    {\n      //z y x a b c\n      this.ReversePolyPtLinks(p2_lft);\n      p2_lft.Next = p1_lft;\n      p1_lft.Prev = p2_lft;\n      p1_rt.Next = p2_rt;\n      p2_rt.Prev = p1_rt;\n      outRec1.Pts = p2_rt;\n    }\n    else\n    {\n      //x y z a b c\n      p2_rt.Next = p1_lft;\n      p1_lft.Prev = p2_rt;\n      p2_lft.Prev = p1_rt;\n      p1_rt.Next = p2_lft;\n      outRec1.Pts = p2_lft;\n    }\n    side = ClipperLib.EdgeSide.esLeft;\n  }\n  else\n  {\n    if (e2.Side == ClipperLib.EdgeSide.esRight)\n    {\n      //a b c z y x\n      this.ReversePolyPtLinks(p2_lft);\n      p1_rt.Next = p2_rt;\n      p2_rt.Prev = p1_rt;\n      p2_lft.Next = p1_lft;\n      p1_lft.Prev = p2_lft;\n    }\n    else\n    {\n      //a b c x y z\n      p1_rt.Next = p2_lft;\n      p2_lft.Prev = p1_rt;\n      p1_lft.Prev = p2_rt;\n      p2_rt.Next = p1_lft;\n    }\n    side = ClipperLib.EdgeSide.esRight;\n  }\n  outRec1.BottomPt = null;\n  if (holeStateRec == outRec2)\n  {\n    if (outRec2.FirstLeft != outRec1)\n      outRec1.FirstLeft = outRec2.FirstLeft;\n    outRec1.IsHole = outRec2.IsHole;\n  }\n  outRec2.Pts = null;\n  outRec2.BottomPt = null;\n  outRec2.FirstLeft = outRec1;\n  var OKIdx = e1.OutIdx;\n  var ObsoleteIdx = e2.OutIdx;\n  e1.OutIdx = -1;\n  //nb: safe because we only get here via AddLocalMaxPoly\n  e2.OutIdx = -1;\n  var e = this.m_ActiveEdges;\n  while (e !== null)\n  {\n    if (e.OutIdx == ObsoleteIdx)\n    {\n      e.OutIdx = OKIdx;\n      e.Side = side;\n      break;\n    }\n    e = e.NextInAEL;\n  }\n  outRec2.Idx = outRec1.Idx;\n};\nClipperLib.Clipper.prototype.ReversePolyPtLinks = function (pp)\n{\n  if (pp === null)\n    return;\n  var pp1;\n  var pp2;\n  pp1 = pp;\n  do {\n    pp2 = pp1.Next;\n    pp1.Next = pp1.Prev;\n    pp1.Prev = pp2;\n    pp1 = pp2;\n  }\n  while (pp1 != pp)\n};\nClipperLib.Clipper.SwapSides = function (edge1, edge2)\n{\n  var side = edge1.Side;\n  edge1.Side = edge2.Side;\n  edge2.Side = side;\n};\nClipperLib.Clipper.SwapPolyIndexes = function (edge1, edge2)\n{\n  var outIdx = edge1.OutIdx;\n  edge1.OutIdx = edge2.OutIdx;\n  edge2.OutIdx = outIdx;\n};\nClipperLib.Clipper.prototype.IntersectEdges = function (e1, e2, pt, protect)\n{\n  //e1 will be to the left of e2 BELOW the intersection. Therefore e1 is before\n  //e2 in AEL except when e1 is being inserted at the intersection point ...\n  var e1stops = !protect && e1.NextInLML === null &&\n    e1.Top.X == pt.X && e1.Top.Y == pt.Y;\n  var e2stops = !protect && e2.NextInLML === null &&\n    e2.Top.X == pt.X && e2.Top.Y == pt.Y;\n  var e1Contributing = (e1.OutIdx >= 0);\n  var e2Contributing = (e2.OutIdx >= 0);\n  if (use_lines)\n  {\n    //if either edge is on an OPEN path ...\n    if (e1.WindDelta === 0 || e2.WindDelta === 0)\n    {\n      //ignore subject-subject open path intersections UNLESS they\n      //are both open paths, AND they are both 'contributing maximas' ...\n      if (e1.WindDelta === 0 && e2.WindDelta === 0)\n      {\n        if ((e1stops || e2stops) && e1Contributing && e2Contributing)\n          this.AddLocalMaxPoly(e1, e2, pt);\n      }\n      //if intersecting a subj line with a subj poly ...\n      else if (e1.PolyTyp == e2.PolyTyp &&\n        e1.WindDelta != e2.WindDelta && this.m_ClipType == ClipperLib.ClipType.ctUnion)\n      {\n        if (e1.WindDelta === 0)\n        {\n          if (e2Contributing)\n          {\n            this.AddOutPt(e1, pt);\n            if (e1Contributing)\n              e1.OutIdx = -1;\n          }\n        }\n        else\n        {\n          if (e1Contributing)\n          {\n            this.AddOutPt(e2, pt);\n            if (e2Contributing)\n              e2.OutIdx = -1;\n          }\n        }\n      }\n      else if (e1.PolyTyp != e2.PolyTyp)\n      {\n        if ((e1.WindDelta === 0) && Math.abs(e2.WindCnt) == 1 &&\n          (this.m_ClipType != ClipperLib.ClipType.ctUnion || e2.WindCnt2 === 0))\n        {\n          this.AddOutPt(e1, pt);\n          if (e1Contributing)\n            e1.OutIdx = -1;\n        }\n        else if ((e2.WindDelta === 0) && (Math.abs(e1.WindCnt) == 1) &&\n          (this.m_ClipType != ClipperLib.ClipType.ctUnion || e1.WindCnt2 === 0))\n        {\n          this.AddOutPt(e2, pt);\n          if (e2Contributing)\n            e2.OutIdx = -1;\n        }\n      }\n      if (e1stops)\n        if (e1.OutIdx < 0)\n          this.DeleteFromAEL(e1);\n        else\n          ClipperLib.Error(\"Error intersecting polylines\");\n      if (e2stops)\n        if (e2.OutIdx < 0)\n          this.DeleteFromAEL(e2);\n        else\n          ClipperLib.Error(\"Error intersecting polylines\");\n      return;\n    }\n  }\n  //update winding counts...\n  //assumes that e1 will be to the Right of e2 ABOVE the intersection\n  if (e1.PolyTyp == e2.PolyTyp)\n  {\n    if (this.IsEvenOddFillType(e1))\n    {\n      var oldE1WindCnt = e1.WindCnt;\n      e1.WindCnt = e2.WindCnt;\n      e2.WindCnt = oldE1WindCnt;\n    }\n    else\n    {\n      if (e1.WindCnt + e2.WindDelta === 0)\n        e1.WindCnt = -e1.WindCnt;\n      else\n        e1.WindCnt += e2.WindDelta;\n      if (e2.WindCnt - e1.WindDelta === 0)\n        e2.WindCnt = -e2.WindCnt;\n      else\n        e2.WindCnt -= e1.WindDelta;\n    }\n  }\n  else\n  {\n    if (!this.IsEvenOddFillType(e2))\n      e1.WindCnt2 += e2.WindDelta;\n    else\n      e1.WindCnt2 = (e1.WindCnt2 === 0) ? 1 : 0;\n    if (!this.IsEvenOddFillType(e1))\n      e2.WindCnt2 -= e1.WindDelta;\n    else\n      e2.WindCnt2 = (e2.WindCnt2 === 0) ? 1 : 0;\n  }\n  var e1FillType, e2FillType, e1FillType2, e2FillType2;\n  if (e1.PolyTyp == ClipperLib.PolyType.ptSubject)\n  {\n    e1FillType = this.m_SubjFillType;\n    e1FillType2 = this.m_ClipFillType;\n  }\n  else\n  {\n    e1FillType = this.m_ClipFillType;\n    e1FillType2 = this.m_SubjFillType;\n  }\n  if (e2.PolyTyp == ClipperLib.PolyType.ptSubject)\n  {\n    e2FillType = this.m_SubjFillType;\n    e2FillType2 = this.m_ClipFillType;\n  }\n  else\n  {\n    e2FillType = this.m_ClipFillType;\n    e2FillType2 = this.m_SubjFillType;\n  }\n  var e1Wc, e2Wc;\n  switch (e1FillType)\n  {\n  case ClipperLib.PolyFillType.pftPositive:\n    e1Wc = e1.WindCnt;\n    break;\n  case ClipperLib.PolyFillType.pftNegative:\n    e1Wc = -e1.WindCnt;\n    break;\n  default:\n    e1Wc = Math.abs(e1.WindCnt);\n    break;\n  }\n  switch (e2FillType)\n  {\n  case ClipperLib.PolyFillType.pftPositive:\n    e2Wc = e2.WindCnt;\n    break;\n  case ClipperLib.PolyFillType.pftNegative:\n    e2Wc = -e2.WindCnt;\n    break;\n  default:\n    e2Wc = Math.abs(e2.WindCnt);\n    break;\n  }\n  if (e1Contributing && e2Contributing)\n  {\n    if (e1stops || e2stops || (e1Wc !== 0 && e1Wc != 1) || (e2Wc !== 0 && e2Wc != 1) ||\n      (e1.PolyTyp != e2.PolyTyp && this.m_ClipType != ClipperLib.ClipType.ctXor))\n      this.AddLocalMaxPoly(e1, e2, pt);\n    else\n    {\n      this.AddOutPt(e1, pt);\n      this.AddOutPt(e2, pt);\n      ClipperLib.Clipper.SwapSides(e1, e2);\n      ClipperLib.Clipper.SwapPolyIndexes(e1, e2);\n    }\n  }\n  else if (e1Contributing)\n  {\n    if (e2Wc === 0 || e2Wc == 1)\n    {\n      this.AddOutPt(e1, pt);\n      ClipperLib.Clipper.SwapSides(e1, e2);\n      ClipperLib.Clipper.SwapPolyIndexes(e1, e2);\n    }\n  }\n  else if (e2Contributing)\n  {\n    if (e1Wc === 0 || e1Wc == 1)\n    {\n      this.AddOutPt(e2, pt);\n      ClipperLib.Clipper.SwapSides(e1, e2);\n      ClipperLib.Clipper.SwapPolyIndexes(e1, e2);\n    }\n  }\n  else if ((e1Wc === 0 || e1Wc == 1) &&\n    (e2Wc === 0 || e2Wc == 1) && !e1stops && !e2stops)\n  {\n    //neither edge is currently contributing ...\n    var e1Wc2, e2Wc2;\n    switch (e1FillType2)\n    {\n    case ClipperLib.PolyFillType.pftPositive:\n      e1Wc2 = e1.WindCnt2;\n      break;\n    case ClipperLib.PolyFillType.pftNegative:\n      e1Wc2 = -e1.WindCnt2;\n      break;\n    default:\n      e1Wc2 = Math.abs(e1.WindCnt2);\n      break;\n    }\n    switch (e2FillType2)\n    {\n    case ClipperLib.PolyFillType.pftPositive:\n      e2Wc2 = e2.WindCnt2;\n      break;\n    case ClipperLib.PolyFillType.pftNegative:\n      e2Wc2 = -e2.WindCnt2;\n      break;\n    default:\n      e2Wc2 = Math.abs(e2.WindCnt2);\n      break;\n    }\n    if (e1.PolyTyp != e2.PolyTyp)\n      this.AddLocalMinPoly(e1, e2, pt);\n    else if (e1Wc == 1 && e2Wc == 1)\n      switch (this.m_ClipType)\n      {\n      case ClipperLib.ClipType.ctIntersection:\n        if (e1Wc2 > 0 && e2Wc2 > 0)\n          this.AddLocalMinPoly(e1, e2, pt);\n        break;\n      case ClipperLib.ClipType.ctUnion:\n        if (e1Wc2 <= 0 && e2Wc2 <= 0)\n          this.AddLocalMinPoly(e1, e2, pt);\n        break;\n      case ClipperLib.ClipType.ctDifference:\n        if (((e1.PolyTyp == ClipperLib.PolyType.ptClip) && (e1Wc2 > 0) && (e2Wc2 > 0)) ||\n          ((e1.PolyTyp == ClipperLib.PolyType.ptSubject) && (e1Wc2 <= 0) && (e2Wc2 <= 0)))\n          this.AddLocalMinPoly(e1, e2, pt);\n        break;\n      case ClipperLib.ClipType.ctXor:\n        this.AddLocalMinPoly(e1, e2, pt);\n        break;\n      }\n    else\n      ClipperLib.Clipper.SwapSides(e1, e2);\n  }\n  if ((e1stops != e2stops) &&\n    ((e1stops && (e1.OutIdx >= 0)) || (e2stops && (e2.OutIdx >= 0))))\n  {\n    ClipperLib.Clipper.SwapSides(e1, e2);\n    ClipperLib.Clipper.SwapPolyIndexes(e1, e2);\n  }\n  //finally, delete any non-contributing maxima edges  ...\n  if (e1stops)\n    this.DeleteFromAEL(e1);\n  if (e2stops)\n    this.DeleteFromAEL(e2);\n};\nClipperLib.Clipper.prototype.DeleteFromAEL = function (e)\n{\n  var AelPrev = e.PrevInAEL;\n  var AelNext = e.NextInAEL;\n  if (AelPrev === null && AelNext === null && (e != this.m_ActiveEdges))\n    return;\n  //already deleted\n  if (AelPrev !== null)\n    AelPrev.NextInAEL = AelNext;\n  else\n    this.m_ActiveEdges = AelNext;\n  if (AelNext !== null)\n    AelNext.PrevInAEL = AelPrev;\n  e.NextInAEL = null;\n  e.PrevInAEL = null;\n};\nClipperLib.Clipper.prototype.DeleteFromSEL = function (e)\n{\n  var SelPrev = e.PrevInSEL;\n  var SelNext = e.NextInSEL;\n  if (SelPrev === null && SelNext === null && (e != this.m_SortedEdges))\n    return;\n  //already deleted\n  if (SelPrev !== null)\n    SelPrev.NextInSEL = SelNext;\n  else\n    this.m_SortedEdges = SelNext;\n  if (SelNext !== null)\n    SelNext.PrevInSEL = SelPrev;\n  e.NextInSEL = null;\n  e.PrevInSEL = null;\n};\nClipperLib.Clipper.prototype.UpdateEdgeIntoAEL = function (e)\n{\n  if (e.NextInLML === null)\n    ClipperLib.Error(\"UpdateEdgeIntoAEL: invalid call\");\n  var AelPrev = e.PrevInAEL;\n  var AelNext = e.NextInAEL;\n  e.NextInLML.OutIdx = e.OutIdx;\n  if (AelPrev !== null)\n    AelPrev.NextInAEL = e.NextInLML;\n  else\n    this.m_ActiveEdges = e.NextInLML;\n  if (AelNext !== null)\n    AelNext.PrevInAEL = e.NextInLML;\n  e.NextInLML.Side = e.Side;\n  e.NextInLML.WindDelta = e.WindDelta;\n  e.NextInLML.WindCnt = e.WindCnt;\n  e.NextInLML.WindCnt2 = e.WindCnt2;\n  e = e.NextInLML;\n  //    e.Curr = e.Bot;\n  e.Curr.X = e.Bot.X;\n  e.Curr.Y = e.Bot.Y;\n  e.PrevInAEL = AelPrev;\n  e.NextInAEL = AelNext;\n  if (!ClipperLib.ClipperBase.IsHorizontal(e))\n    this.InsertScanbeam(e.Top.Y);\n  return e;\n};\nClipperLib.Clipper.prototype.ProcessHorizontals = function (isTopOfScanbeam)\n{\n  var horzEdge = this.m_SortedEdges;\n  while (horzEdge !== null)\n  {\n    this.DeleteFromSEL(horzEdge);\n    this.ProcessHorizontal(horzEdge, isTopOfScanbeam);\n    horzEdge = this.m_SortedEdges;\n  }\n};\nClipperLib.Clipper.prototype.GetHorzDirection = function (HorzEdge, $var)\n{\n  if (HorzEdge.Bot.X < HorzEdge.Top.X)\n  {\n      $var.Left = HorzEdge.Bot.X;\n      $var.Right = HorzEdge.Top.X;\n      $var.Dir = ClipperLib.Direction.dLeftToRight;\n  }\n  else\n  {\n      $var.Left = HorzEdge.Top.X;\n      $var.Right = HorzEdge.Bot.X;\n      $var.Dir = ClipperLib.Direction.dRightToLeft;\n  }\n};\nClipperLib.Clipper.prototype.PrepareHorzJoins = function (horzEdge, isTopOfScanbeam)\n{\n  //get the last Op for this horizontal edge\n  //the point may be anywhere along the horizontal ...\n  var outPt = this.m_PolyOuts[horzEdge.OutIdx].Pts;\n  if (horzEdge.Side != ClipperLib.EdgeSide.esLeft)\n    outPt = outPt.Prev;\n  //First, match up overlapping horizontal edges (eg when one polygon's\n  //intermediate horz edge overlaps an intermediate horz edge of another, or\n  //when one polygon sits on top of another) ...\n  //for (var i = 0, ilen = this.m_GhostJoins.length; i < ilen; ++i) {\n  //  var j = this.m_GhostJoins[i];\n  //  if (this.HorzSegmentsOverlap(j.OutPt1.Pt, j.OffPt, horzEdge.Bot, horzEdge.Top))\n  //    this.AddJoin(j.OutPt1, outPt, j.OffPt);\n  //}\n\n  //Also, since horizontal edges at the top of one SB are often removed from\n  //the AEL before we process the horizontal edges at the bottom of the next,\n  //we need to create 'ghost' Join records of 'contrubuting' horizontals that\n  //we can compare with horizontals at the bottom of the next SB.\n  if (isTopOfScanbeam)\n    if (ClipperLib.IntPoint.op_Equality(outPt.Pt, horzEdge.Top))\n      this.AddGhostJoin(outPt, horzEdge.Bot);\n    else\n      this.AddGhostJoin(outPt, horzEdge.Top);\n};\nClipperLib.Clipper.prototype.ProcessHorizontal = function (horzEdge, isTopOfScanbeam)\n{\n  var $var = {Dir: null, Left: null, Right: null};\n  this.GetHorzDirection(horzEdge, $var);\n  var dir = $var.Dir;\n  var horzLeft = $var.Left;\n  var horzRight = $var.Right;\n\n  var eLastHorz = horzEdge,\n    eMaxPair = null;\n  while (eLastHorz.NextInLML !== null && ClipperLib.ClipperBase.IsHorizontal(eLastHorz.NextInLML))\n    eLastHorz = eLastHorz.NextInLML;\n  if (eLastHorz.NextInLML === null)\n    eMaxPair = this.GetMaximaPair(eLastHorz);\n  for (;;)\n  {\n    var IsLastHorz = (horzEdge == eLastHorz);\n    var e = this.GetNextInAEL(horzEdge, dir);\n    while (e !== null)\n    {\n      //Break if we've got to the end of an intermediate horizontal edge ...\n      //nb: Smaller Dx's are to the right of larger Dx's ABOVE the horizontal.\n      if (e.Curr.X == horzEdge.Top.X && horzEdge.NextInLML !== null && e.Dx < horzEdge.NextInLML.Dx)\n        break;\n      var eNext = this.GetNextInAEL(e, dir);\n      //saves eNext for later\n      if ((dir == ClipperLib.Direction.dLeftToRight && e.Curr.X <= horzRight) || (dir == ClipperLib.Direction.dRightToLeft && e.Curr.X >= horzLeft))\n      {\n\n        if (horzEdge.OutIdx >= 0 && horzEdge.WindDelta != 0)\n          this.PrepareHorzJoins(horzEdge, isTopOfScanbeam);\n\n        //so far we're still in range of the horizontal Edge  but make sure\n        //we're at the last of consec. horizontals when matching with eMaxPair\n        if (e == eMaxPair && IsLastHorz)\n        {\n          if (dir == ClipperLib.Direction.dLeftToRight)\n            this.IntersectEdges(horzEdge, e, e.Top, false);\n          else\n            this.IntersectEdges(e, horzEdge, e.Top, false);\n          if (eMaxPair.OutIdx >= 0)\n            ClipperLib.Error(\"ProcessHorizontal error\");\n          return;\n        }\n        else if (dir == ClipperLib.Direction.dLeftToRight)\n        {\n          var Pt = new ClipperLib.IntPoint(e.Curr.X, horzEdge.Curr.Y);\n          this.IntersectEdges(horzEdge, e, Pt, true);\n        }\n        else\n        {\n          var Pt = new ClipperLib.IntPoint(e.Curr.X, horzEdge.Curr.Y);\n          this.IntersectEdges(e, horzEdge, Pt, true);\n        }\n        this.SwapPositionsInAEL(horzEdge, e);\n      }\n      else if ((dir == ClipperLib.Direction.dLeftToRight && e.Curr.X >= horzRight) || (dir == ClipperLib.Direction.dRightToLeft && e.Curr.X <= horzLeft))\n        break;\n      e = eNext;\n    }\n    //end while\n    if (horzEdge.OutIdx >= 0 && horzEdge.WindDelta !== 0)\n      this.PrepareHorzJoins(horzEdge, isTopOfScanbeam);\n    if (horzEdge.NextInLML !== null && ClipperLib.ClipperBase.IsHorizontal(horzEdge.NextInLML))\n    {\n      horzEdge = this.UpdateEdgeIntoAEL(horzEdge);\n      if (horzEdge.OutIdx >= 0)\n        this.AddOutPt(horzEdge, horzEdge.Bot);\n        \n        var $var = {Dir: dir, Left: horzLeft, Right: horzRight};\n        this.GetHorzDirection(horzEdge, $var);\n        dir = $var.Dir;\n        horzLeft = $var.Left;\n        horzRight = $var.Right;\n    }\n    else\n      break;\n  }\n  //end for (;;)\n  if (horzEdge.NextInLML !== null)\n  {\n    if (horzEdge.OutIdx >= 0)\n    {\n      var op1 = this.AddOutPt(horzEdge, horzEdge.Top);\n      horzEdge = this.UpdateEdgeIntoAEL(horzEdge);\n      if (horzEdge.WindDelta === 0)\n        return;\n      //nb: HorzEdge is no longer horizontal here\n      var ePrev = horzEdge.PrevInAEL;\n      var eNext = horzEdge.NextInAEL;\n      if (ePrev !== null && ePrev.Curr.X == horzEdge.Bot.X &&\n        ePrev.Curr.Y == horzEdge.Bot.Y && ePrev.WindDelta !== 0 &&\n        (ePrev.OutIdx >= 0 && ePrev.Curr.Y > ePrev.Top.Y &&\n          ClipperLib.ClipperBase.SlopesEqual(horzEdge, ePrev, this.m_UseFullRange)))\n      {\n        var op2 = this.AddOutPt(ePrev, horzEdge.Bot);\n        this.AddJoin(op1, op2, horzEdge.Top);\n      }\n      else if (eNext !== null && eNext.Curr.X == horzEdge.Bot.X &&\n        eNext.Curr.Y == horzEdge.Bot.Y && eNext.WindDelta !== 0 &&\n        eNext.OutIdx >= 0 && eNext.Curr.Y > eNext.Top.Y &&\n        ClipperLib.ClipperBase.SlopesEqual(horzEdge, eNext, this.m_UseFullRange))\n      {\n        var op2 = this.AddOutPt(eNext, horzEdge.Bot);\n        this.AddJoin(op1, op2, horzEdge.Top);\n      }\n    }\n    else horzEdge = this.UpdateEdgeIntoAEL(horzEdge);\n  }\n  else if (eMaxPair !== null)\n  {\n    if (eMaxPair.OutIdx >= 0)\n    {\n      if (dir == ClipperLib.Direction.dLeftToRight)\n        this.IntersectEdges(horzEdge, eMaxPair, horzEdge.Top, false);\n      else\n        this.IntersectEdges(eMaxPair, horzEdge, horzEdge.Top, false);\n      if (eMaxPair.OutIdx >= 0)\n        ClipperLib.Error(\"ProcessHorizontal error\");\n    }\n    else\n    {\n      this.DeleteFromAEL(horzEdge);\n      this.DeleteFromAEL(eMaxPair);\n    }\n  }\n  else\n  {\n    if (horzEdge.OutIdx >= 0)\n      this.AddOutPt(horzEdge, horzEdge.Top);\n    this.DeleteFromAEL(horzEdge);\n  }\n};\nClipperLib.Clipper.prototype.GetNextInAEL = function (e, Direction)\n{\n  return Direction == ClipperLib.Direction.dLeftToRight ? e.NextInAEL : e.PrevInAEL;\n};\nClipperLib.Clipper.prototype.IsMinima = function (e)\n{\n  return e !== null && (e.Prev.NextInLML != e) && (e.Next.NextInLML != e);\n};\nClipperLib.Clipper.prototype.IsMaxima = function (e, Y)\n{\n  return (e !== null && e.Top.Y == Y && e.NextInLML === null);\n};\nClipperLib.Clipper.prototype.IsIntermediate = function (e, Y)\n{\n  return (e.Top.Y == Y && e.NextInLML !== null);\n};\nClipperLib.Clipper.prototype.GetMaximaPair = function (e)\n{\n  var result = null;\n  if ((ClipperLib.IntPoint.op_Equality(e.Next.Top, e.Top)) && e.Next.NextInLML === null)\n    result = e.Next;\n  else if ((ClipperLib.IntPoint.op_Equality(e.Prev.Top, e.Top)) && e.Prev.NextInLML === null)\n    result = e.Prev;\n  if (result !== null && (result.OutIdx == -2 || (result.NextInAEL == result.PrevInAEL && !ClipperLib.ClipperBase.IsHorizontal(result))))\n    return null;\n  return result;\n};\nClipperLib.Clipper.prototype.ProcessIntersections = function (botY, topY)\n{\n  if (this.m_ActiveEdges == null)\n    return true;\n  try\n  {\n    this.BuildIntersectList(botY, topY);\n    if (this.m_IntersectList.length == 0)\n      return true;\n    if (this.m_IntersectList.length == 1 || this.FixupIntersectionOrder())\n      this.ProcessIntersectList();\n    else\n      return false;\n  }\n  catch ($$e2)\n  {\n    this.m_SortedEdges = null;\n    this.m_IntersectList.length = 0;\n    ClipperLib.Error(\"ProcessIntersections error\");\n  }\n  this.m_SortedEdges = null;\n  return true;\n};\nClipperLib.Clipper.prototype.BuildIntersectList = function (botY, topY)\n{\n  if (this.m_ActiveEdges === null)\n    return;\n  //prepare for sorting ...\n  var e = this.m_ActiveEdges;\n  //console.log(JSON.stringify(JSON.decycle( e )));\n  this.m_SortedEdges = e;\n  while (e !== null)\n  {\n    e.PrevInSEL = e.PrevInAEL;\n    e.NextInSEL = e.NextInAEL;\n    e.Curr.X = ClipperLib.Clipper.TopX(e, topY);\n    e = e.NextInAEL;\n  }\n  //bubblesort ...\n  var isModified = true;\n  while (isModified && this.m_SortedEdges !== null)\n  {\n    isModified = false;\n    e = this.m_SortedEdges;\n    while (e.NextInSEL !== null)\n    {\n      var eNext = e.NextInSEL;\n      var pt = new ClipperLib.IntPoint();\n      //console.log(\"e.Curr.X: \" + e.Curr.X + \" eNext.Curr.X\" + eNext.Curr.X);\n      if (e.Curr.X > eNext.Curr.X)\n      {\n        if (!this.IntersectPoint(e, eNext, pt) && e.Curr.X > eNext.Curr.X + 1)\n        {\n          //console.log(\"e.Curr.X: \"+JSON.stringify(JSON.decycle( e.Curr.X )));\n          //console.log(\"eNext.Curr.X+1: \"+JSON.stringify(JSON.decycle( eNext.Curr.X+1)));\n          ClipperLib.Error(\"Intersection error\");\n        }\n        if (pt.Y > botY)\n        {\n          pt.Y = botY;\n          if (Math.abs(e.Dx) > Math.abs(eNext.Dx))\n            pt.X = ClipperLib.Clipper.TopX(eNext, botY);\n          else\n            pt.X = ClipperLib.Clipper.TopX(e, botY);\n        }\n        var newNode = new ClipperLib.IntersectNode();\n        newNode.Edge1 = e;\n        newNode.Edge2 = eNext;\n        //newNode.Pt = pt;\n        newNode.Pt.X = pt.X;\n        newNode.Pt.Y = pt.Y;\n        this.m_IntersectList.push(newNode);\n        this.SwapPositionsInSEL(e, eNext);\n        isModified = true;\n      }\n      else\n        e = eNext;\n    }\n    if (e.PrevInSEL !== null)\n      e.PrevInSEL.NextInSEL = null;\n    else\n      break;\n  }\n  this.m_SortedEdges = null;\n};\nClipperLib.Clipper.prototype.EdgesAdjacent = function (inode)\n{\n  return (inode.Edge1.NextInSEL == inode.Edge2) || (inode.Edge1.PrevInSEL == inode.Edge2);\n};\nClipperLib.Clipper.IntersectNodeSort = function (node1, node2)\n{\n  //the following typecast is safe because the differences in Pt.Y will\n  //be limited to the height of the scanbeam.\n  return (node2.Pt.Y - node1.Pt.Y);\n};\nClipperLib.Clipper.prototype.FixupIntersectionOrder = function ()\n{\n  //pre-condition: intersections are sorted bottom-most first.\n  //Now it's crucial that intersections are made only between adjacent edges,\n  //so to ensure this the order of intersections may need adjusting ...\n  this.m_IntersectList.sort(this.m_IntersectNodeComparer);\n  this.CopyAELToSEL();\n  var cnt = this.m_IntersectList.length;\n  for (var i = 0; i < cnt; i++)\n  {\n    if (!this.EdgesAdjacent(this.m_IntersectList[i]))\n    {\n      var j = i + 1;\n      while (j < cnt && !this.EdgesAdjacent(this.m_IntersectList[j]))\n        j++;\n      if (j == cnt)\n        return false;\n      var tmp = this.m_IntersectList[i];\n      this.m_IntersectList[i] = this.m_IntersectList[j];\n      this.m_IntersectList[j] = tmp;\n    }\n    this.SwapPositionsInSEL(this.m_IntersectList[i].Edge1, this.m_IntersectList[i].Edge2);\n  }\n  return true;\n};\nClipperLib.Clipper.prototype.ProcessIntersectList = function ()\n{\n  for (var i = 0, ilen = this.m_IntersectList.length; i < ilen; i++)\n  {\n    var iNode = this.m_IntersectList[i];\n    this.IntersectEdges(iNode.Edge1, iNode.Edge2, iNode.Pt, true);\n    this.SwapPositionsInAEL(iNode.Edge1, iNode.Edge2);\n  }\n  this.m_IntersectList.length = 0;\n};\n/*\n--------------------------------\nRound speedtest: http://jsperf.com/fastest-round\n--------------------------------\n*/\nvar R1 = function (a)\n{\n  return a < 0 ? Math.ceil(a - 0.5) : Math.round(a)\n};\nvar R2 = function (a)\n{\n  return a < 0 ? Math.ceil(a - 0.5) : Math.floor(a + 0.5)\n};\nvar R3 = function (a)\n{\n  return a < 0 ? -Math.round(Math.abs(a)) : Math.round(a)\n};\nvar R4 = function (a)\n{\n  if (a < 0)\n  {\n    a -= 0.5;\n    return a < -2147483648 ? Math.ceil(a) : a | 0;\n  }\n  else\n  {\n    a += 0.5;\n    return a > 2147483647 ? Math.floor(a) : a | 0;\n  }\n};\nif (browser.msie) ClipperLib.Clipper.Round = R1;\nelse if (browser.chromium) ClipperLib.Clipper.Round = R3;\nelse if (browser.safari) ClipperLib.Clipper.Round = R4;\nelse ClipperLib.Clipper.Round = R2; // eg. browser.chrome || browser.firefox || browser.opera\nClipperLib.Clipper.TopX = function (edge, currentY)\n{\n  //if (edge.Bot == edge.Curr) alert (\"edge.Bot = edge.Curr\");\n  //if (edge.Bot == edge.Top) alert (\"edge.Bot = edge.Top\");\n  if (currentY == edge.Top.Y)\n    return edge.Top.X;\n  return edge.Bot.X + ClipperLib.Clipper.Round(edge.Dx * (currentY - edge.Bot.Y));\n};\nClipperLib.Clipper.prototype.IntersectPoint = function (edge1, edge2, ip)\n{\n  ip.X = 0;\n  ip.Y = 0;\n  var b1, b2;\n  //nb: with very large coordinate values, it's possible for SlopesEqual() to \n  //return false but for the edge.Dx value be equal due to double precision rounding.\n  if (ClipperLib.ClipperBase.SlopesEqual(edge1, edge2, this.m_UseFullRange) || edge1.Dx == edge2.Dx)\n  {\n    if (edge2.Bot.Y > edge1.Bot.Y)\n    {\n      ip.X = edge2.Bot.X;\n      ip.Y = edge2.Bot.Y;\n    }\n    else\n    {\n      ip.X = edge1.Bot.X;\n      ip.Y = edge1.Bot.Y;\n    }\n    return false;\n  }\n  else if (edge1.Delta.X === 0)\n  {\n    ip.X = edge1.Bot.X;\n    if (ClipperLib.ClipperBase.IsHorizontal(edge2))\n    {\n      ip.Y = edge2.Bot.Y;\n    }\n    else\n    {\n      b2 = edge2.Bot.Y - (edge2.Bot.X / edge2.Dx);\n      ip.Y = ClipperLib.Clipper.Round(ip.X / edge2.Dx + b2);\n    }\n  }\n  else if (edge2.Delta.X === 0)\n  {\n    ip.X = edge2.Bot.X;\n    if (ClipperLib.ClipperBase.IsHorizontal(edge1))\n    {\n      ip.Y = edge1.Bot.Y;\n    }\n    else\n    {\n      b1 = edge1.Bot.Y - (edge1.Bot.X / edge1.Dx);\n      ip.Y = ClipperLib.Clipper.Round(ip.X / edge1.Dx + b1);\n    }\n  }\n  else\n  {\n    b1 = edge1.Bot.X - edge1.Bot.Y * edge1.Dx;\n    b2 = edge2.Bot.X - edge2.Bot.Y * edge2.Dx;\n    var q = (b2 - b1) / (edge1.Dx - edge2.Dx);\n    ip.Y = ClipperLib.Clipper.Round(q);\n    if (Math.abs(edge1.Dx) < Math.abs(edge2.Dx))\n      ip.X = ClipperLib.Clipper.Round(edge1.Dx * q + b1);\n    else\n      ip.X = ClipperLib.Clipper.Round(edge2.Dx * q + b2);\n  }\n  if (ip.Y < edge1.Top.Y || ip.Y < edge2.Top.Y)\n  {\n    if (edge1.Top.Y > edge2.Top.Y)\n    {\n      ip.Y = edge1.Top.Y;\n      ip.X = ClipperLib.Clipper.TopX(edge2, edge1.Top.Y);\n      return ip.X < edge1.Top.X;\n    }\n    else\n      ip.Y = edge2.Top.Y;\n    if (Math.abs(edge1.Dx) < Math.abs(edge2.Dx))\n      ip.X = ClipperLib.Clipper.TopX(edge1, ip.Y);\n    else\n      ip.X = ClipperLib.Clipper.TopX(edge2, ip.Y);\n  }\n  return true;\n};\nClipperLib.Clipper.prototype.ProcessEdgesAtTopOfScanbeam = function (topY)\n{\n  var e = this.m_ActiveEdges;\n  while (e !== null)\n  {\n    //1. process maxima, treating them as if they're 'bent' horizontal edges,\n    //   but exclude maxima with horizontal edges. nb: e can't be a horizontal.\n    var IsMaximaEdge = this.IsMaxima(e, topY);\n    if (IsMaximaEdge)\n    {\n      var eMaxPair = this.GetMaximaPair(e);\n      IsMaximaEdge = (eMaxPair === null || !ClipperLib.ClipperBase.IsHorizontal(eMaxPair));\n    }\n    if (IsMaximaEdge)\n    {\n      var ePrev = e.PrevInAEL;\n      this.DoMaxima(e);\n      if (ePrev === null)\n        e = this.m_ActiveEdges;\n      else\n        e = ePrev.NextInAEL;\n    }\n    else\n    {\n      //2. promote horizontal edges, otherwise update Curr.X and Curr.Y ...\n      if (this.IsIntermediate(e, topY) && ClipperLib.ClipperBase.IsHorizontal(e.NextInLML))\n      {\n        e = this.UpdateEdgeIntoAEL(e);\n        if (e.OutIdx >= 0)\n          this.AddOutPt(e, e.Bot);\n        this.AddEdgeToSEL(e);\n      }\n      else\n      {\n        e.Curr.X = ClipperLib.Clipper.TopX(e, topY);\n        e.Curr.Y = topY;\n      }\n      if (this.StrictlySimple)\n      {\n        var ePrev = e.PrevInAEL;\n        if ((e.OutIdx >= 0) && (e.WindDelta !== 0) && ePrev !== null &&\n          (ePrev.OutIdx >= 0) && (ePrev.Curr.X == e.Curr.X) &&\n          (ePrev.WindDelta !== 0))\n        {\n          var op = this.AddOutPt(ePrev, e.Curr);\n          var op2 = this.AddOutPt(e, e.Curr);\n          this.AddJoin(op, op2, e.Curr);\n          //StrictlySimple (type-3) join\n        }\n      }\n      e = e.NextInAEL;\n    }\n  }\n  //3. Process horizontals at the Top of the scanbeam ...\n  this.ProcessHorizontals(true);\n  //4. Promote intermediate vertices ...\n  e = this.m_ActiveEdges;\n  while (e !== null)\n  {\n    if (this.IsIntermediate(e, topY))\n    {\n      var op = null;\n      if (e.OutIdx >= 0)\n        op = this.AddOutPt(e, e.Top);\n      e = this.UpdateEdgeIntoAEL(e);\n      //if output polygons share an edge, they'll need joining later ...\n      var ePrev = e.PrevInAEL;\n      var eNext = e.NextInAEL;\n      if (ePrev !== null && ePrev.Curr.X == e.Bot.X &&\n        ePrev.Curr.Y == e.Bot.Y && op !== null &&\n        ePrev.OutIdx >= 0 && ePrev.Curr.Y > ePrev.Top.Y &&\n        ClipperLib.ClipperBase.SlopesEqual(e, ePrev, this.m_UseFullRange) &&\n        (e.WindDelta !== 0) && (ePrev.WindDelta !== 0))\n      {\n        var op2 = this.AddOutPt(ePrev, e.Bot);\n        this.AddJoin(op, op2, e.Top);\n      }\n      else if (eNext !== null && eNext.Curr.X == e.Bot.X &&\n        eNext.Curr.Y == e.Bot.Y && op !== null &&\n        eNext.OutIdx >= 0 && eNext.Curr.Y > eNext.Top.Y &&\n        ClipperLib.ClipperBase.SlopesEqual(e, eNext, this.m_UseFullRange) &&\n        (e.WindDelta !== 0) && (eNext.WindDelta !== 0))\n      {\n        var op2 = this.AddOutPt(eNext, e.Bot);\n        this.AddJoin(op, op2, e.Top);\n      }\n    }\n    e = e.NextInAEL;\n  }\n};\nClipperLib.Clipper.prototype.DoMaxima = function (e)\n{\n  var eMaxPair = this.GetMaximaPair(e);\n  if (eMaxPair === null)\n  {\n    if (e.OutIdx >= 0)\n      this.AddOutPt(e, e.Top);\n    this.DeleteFromAEL(e);\n    return;\n  }\n  var eNext = e.NextInAEL;\n  var use_lines = true;\n  while (eNext !== null && eNext != eMaxPair)\n  {\n    this.IntersectEdges(e, eNext, e.Top, true);\n    this.SwapPositionsInAEL(e, eNext);\n    eNext = e.NextInAEL;\n  }\n  if (e.OutIdx == -1 && eMaxPair.OutIdx == -1)\n  {\n    this.DeleteFromAEL(e);\n    this.DeleteFromAEL(eMaxPair);\n  }\n  else if (e.OutIdx >= 0 && eMaxPair.OutIdx >= 0)\n  {\n    this.IntersectEdges(e, eMaxPair, e.Top, false);\n  }\n  else if (use_lines && e.WindDelta === 0)\n  {\n    if (e.OutIdx >= 0)\n    {\n      this.AddOutPt(e, e.Top);\n      e.OutIdx = -1;\n    }\n    this.DeleteFromAEL(e);\n    if (eMaxPair.OutIdx >= 0)\n    {\n      this.AddOutPt(eMaxPair, e.Top);\n      eMaxPair.OutIdx = -1;\n    }\n    this.DeleteFromAEL(eMaxPair);\n  }\n  else\n    ClipperLib.Error(\"DoMaxima error\");\n};\nClipperLib.Clipper.ReversePaths = function (polys)\n{\n  for (var i = 0, len = polys.length; i < len; i++)\n    polys[i].reverse();\n};\nClipperLib.Clipper.Orientation = function (poly)\n{\n  return ClipperLib.Clipper.Area(poly) >= 0;\n};\nClipperLib.Clipper.prototype.PointCount = function (pts)\n{\n  if (pts === null)\n    return 0;\n  var result = 0;\n  var p = pts;\n  do {\n    result++;\n    p = p.Next;\n  }\n  while (p != pts)\n  return result;\n};\nClipperLib.Clipper.prototype.BuildResult = function (polyg)\n{\n  ClipperLib.Clear(polyg);\n  for (var i = 0, ilen = this.m_PolyOuts.length; i < ilen; i++)\n  {\n    var outRec = this.m_PolyOuts[i];\n    if (outRec.Pts === null)\n      continue;\n    var p = outRec.Pts.Prev;\n    var cnt = this.PointCount(p);\n    if (cnt < 2)\n      continue;\n    var pg = new Array(cnt);\n    for (var j = 0; j < cnt; j++)\n    {\n      pg[j] = p.Pt;\n      p = p.Prev;\n    }\n    polyg.push(pg);\n  }\n};\nClipperLib.Clipper.prototype.BuildResult2 = function (polytree)\n{\n  polytree.Clear();\n  //add each output polygon/contour to polytree ...\n  //polytree.m_AllPolys.set_Capacity(this.m_PolyOuts.length);\n  for (var i = 0, ilen = this.m_PolyOuts.length; i < ilen; i++)\n  {\n    var outRec = this.m_PolyOuts[i];\n    var cnt = this.PointCount(outRec.Pts);\n    if ((outRec.IsOpen && cnt < 2) || (!outRec.IsOpen && cnt < 3))\n      continue;\n    this.FixHoleLinkage(outRec);\n    var pn = new ClipperLib.PolyNode();\n    polytree.m_AllPolys.push(pn);\n    outRec.PolyNode = pn;\n    pn.m_polygon.length = cnt;\n    var op = outRec.Pts.Prev;\n    for (var j = 0; j < cnt; j++)\n    {\n      pn.m_polygon[j] = op.Pt;\n      op = op.Prev;\n    }\n  }\n  //fixup PolyNode links etc ...\n  //polytree.m_Childs.set_Capacity(this.m_PolyOuts.length);\n  for (var i = 0, ilen = this.m_PolyOuts.length; i < ilen; i++)\n  {\n    var outRec = this.m_PolyOuts[i];\n    if (outRec.PolyNode === null)\n      continue;\n    else if (outRec.IsOpen)\n    {\n      outRec.PolyNode.IsOpen = true;\n      polytree.AddChild(outRec.PolyNode);\n    }\n    else if (outRec.FirstLeft !== null && outRec.FirstLeft.PolyNode != null)\n      outRec.FirstLeft.PolyNode.AddChild(outRec.PolyNode);\n    else\n      polytree.AddChild(outRec.PolyNode);\n  }\n};\nClipperLib.Clipper.prototype.FixupOutPolygon = function (outRec)\n{\n  //FixupOutPolygon() - removes duplicate points and simplifies consecutive\n  //parallel edges by removing the middle vertex.\n  var lastOK = null;\n  outRec.BottomPt = null;\n  var pp = outRec.Pts;\n  for (;;)\n  {\n    if (pp.Prev == pp || pp.Prev == pp.Next)\n    {\n      this.DisposeOutPts(pp);\n      outRec.Pts = null;\n      return;\n    }\n    //test for duplicate points and collinear edges ...\n    if ((ClipperLib.IntPoint.op_Equality(pp.Pt, pp.Next.Pt)) || (ClipperLib.IntPoint.op_Equality(pp.Pt, pp.Prev.Pt)) ||\n      (ClipperLib.ClipperBase.SlopesEqual(pp.Prev.Pt, pp.Pt, pp.Next.Pt, this.m_UseFullRange) &&\n        (!this.PreserveCollinear || !this.Pt2IsBetweenPt1AndPt3(pp.Prev.Pt, pp.Pt, pp.Next.Pt))))\n    {\n      lastOK = null;\n      var tmp = pp;\n      pp.Prev.Next = pp.Next;\n      pp.Next.Prev = pp.Prev;\n      pp = pp.Prev;\n      tmp = null;\n    }\n    else if (pp == lastOK)\n      break;\n    else\n    {\n      if (lastOK === null)\n        lastOK = pp;\n      pp = pp.Next;\n    }\n  }\n  outRec.Pts = pp;\n};\nClipperLib.Clipper.prototype.DupOutPt = function (outPt, InsertAfter)\n{\n  var result = new ClipperLib.OutPt();\n  //result.Pt = outPt.Pt;\n  result.Pt.X = outPt.Pt.X;\n  result.Pt.Y = outPt.Pt.Y;\n  result.Idx = outPt.Idx;\n  if (InsertAfter)\n  {\n    result.Next = outPt.Next;\n    result.Prev = outPt;\n    outPt.Next.Prev = result;\n    outPt.Next = result;\n  }\n  else\n  {\n    result.Prev = outPt.Prev;\n    result.Next = outPt;\n    outPt.Prev.Next = result;\n    outPt.Prev = result;\n  }\n  return result;\n};\nClipperLib.Clipper.prototype.GetOverlap = function (a1, a2, b1, b2, $val)\n{\n  if (a1 < a2)\n  {\n    if (b1 < b2)\n    {\n      $val.Left = Math.max(a1, b1);\n      $val.Right = Math.min(a2, b2);\n    }\n    else\n    {\n      $val.Left = Math.max(a1, b2);\n      $val.Right = Math.min(a2, b1);\n    }\n  }\n  else\n  {\n    if (b1 < b2)\n    {\n      $val.Left = Math.max(a2, b1);\n      $val.Right = Math.min(a1, b2);\n    }\n    else\n    {\n      $val.Left = Math.max(a2, b2);\n      $val.Right = Math.min(a1, b1);\n    }\n  }\n  return $val.Left < $val.Right;\n};\nClipperLib.Clipper.prototype.JoinHorz = function (op1, op1b, op2, op2b, Pt, DiscardLeft)\n{\n  var Dir1 = (op1.Pt.X > op1b.Pt.X ? ClipperLib.Direction.dRightToLeft : ClipperLib.Direction.dLeftToRight);\n  var Dir2 = (op2.Pt.X > op2b.Pt.X ? ClipperLib.Direction.dRightToLeft : ClipperLib.Direction.dLeftToRight);\n  if (Dir1 == Dir2)\n    return false;\n  //When DiscardLeft, we want Op1b to be on the Left of Op1, otherwise we\n  //want Op1b to be on the Right. (And likewise with Op2 and Op2b.)\n  //So, to facilitate this while inserting Op1b and Op2b ...\n  //when DiscardLeft, make sure we're AT or RIGHT of Pt before adding Op1b,\n  //otherwise make sure we're AT or LEFT of Pt. (Likewise with Op2b.)\n  if (Dir1 == ClipperLib.Direction.dLeftToRight)\n  {\n    while (op1.Next.Pt.X <= Pt.X &&\n      op1.Next.Pt.X >= op1.Pt.X && op1.Next.Pt.Y == Pt.Y)\n      op1 = op1.Next;\n    if (DiscardLeft && (op1.Pt.X != Pt.X))\n      op1 = op1.Next;\n    op1b = this.DupOutPt(op1, !DiscardLeft);\n    if (ClipperLib.IntPoint.op_Inequality(op1b.Pt, Pt))\n    {\n      op1 = op1b;\n      //op1.Pt = Pt;\n      op1.Pt.X = Pt.X;\n      op1.Pt.Y = Pt.Y;\n      op1b = this.DupOutPt(op1, !DiscardLeft);\n    }\n  }\n  else\n  {\n    while (op1.Next.Pt.X >= Pt.X &&\n      op1.Next.Pt.X <= op1.Pt.X && op1.Next.Pt.Y == Pt.Y)\n      op1 = op1.Next;\n    if (!DiscardLeft && (op1.Pt.X != Pt.X))\n      op1 = op1.Next;\n    op1b = this.DupOutPt(op1, DiscardLeft);\n    if (ClipperLib.IntPoint.op_Inequality(op1b.Pt, Pt))\n    {\n      op1 = op1b;\n      //op1.Pt = Pt;\n      op1.Pt.X = Pt.X;\n      op1.Pt.Y = Pt.Y;\n      op1b = this.DupOutPt(op1, DiscardLeft);\n    }\n  }\n  if (Dir2 == ClipperLib.Direction.dLeftToRight)\n  {\n    while (op2.Next.Pt.X <= Pt.X &&\n      op2.Next.Pt.X >= op2.Pt.X && op2.Next.Pt.Y == Pt.Y)\n      op2 = op2.Next;\n    if (DiscardLeft && (op2.Pt.X != Pt.X))\n      op2 = op2.Next;\n    op2b = this.DupOutPt(op2, !DiscardLeft);\n    if (ClipperLib.IntPoint.op_Inequality(op2b.Pt, Pt))\n    {\n      op2 = op2b;\n      //op2.Pt = Pt;\n      op2.Pt.X = Pt.X;\n      op2.Pt.Y = Pt.Y;\n      op2b = this.DupOutPt(op2, !DiscardLeft);\n    }\n  }\n  else\n  {\n    while (op2.Next.Pt.X >= Pt.X &&\n      op2.Next.Pt.X <= op2.Pt.X && op2.Next.Pt.Y == Pt.Y)\n      op2 = op2.Next;\n    if (!DiscardLeft && (op2.Pt.X != Pt.X))\n      op2 = op2.Next;\n    op2b = this.DupOutPt(op2, DiscardLeft);\n    if (ClipperLib.IntPoint.op_Inequality(op2b.Pt, Pt))\n    {\n      op2 = op2b;\n      //op2.Pt = Pt;\n      op2.Pt.X = Pt.X;\n      op2.Pt.Y = Pt.Y;\n      op2b = this.DupOutPt(op2, DiscardLeft);\n    }\n  }\n  if ((Dir1 == ClipperLib.Direction.dLeftToRight) == DiscardLeft)\n  {\n    op1.Prev = op2;\n    op2.Next = op1;\n    op1b.Next = op2b;\n    op2b.Prev = op1b;\n  }\n  else\n  {\n    op1.Next = op2;\n    op2.Prev = op1;\n    op1b.Prev = op2b;\n    op2b.Next = op1b;\n  }\n  return true;\n};\nClipperLib.Clipper.prototype.JoinPoints = function (j, outRec1, outRec2)\n{\n  var op1 = j.OutPt1,\n    op1b = new ClipperLib.OutPt();\n  var op2 = j.OutPt2,\n    op2b = new ClipperLib.OutPt();\n  //There are 3 kinds of joins for output polygons ...\n  //1. Horizontal joins where Join.OutPt1 & Join.OutPt2 are a vertices anywhere\n  //along (horizontal) collinear edges (& Join.OffPt is on the same horizontal).\n  //2. Non-horizontal joins where Join.OutPt1 & Join.OutPt2 are at the same\n  //location at the Bottom of the overlapping segment (& Join.OffPt is above).\n  //3. StrictlySimple joins where edges touch but are not collinear and where\n  //Join.OutPt1, Join.OutPt2 & Join.OffPt all share the same point.\n  var isHorizontal = (j.OutPt1.Pt.Y == j.OffPt.Y);\n  if (isHorizontal && (ClipperLib.IntPoint.op_Equality(j.OffPt, j.OutPt1.Pt)) && (ClipperLib.IntPoint.op_Equality(j.OffPt, j.OutPt2.Pt)))\n  {\n    //Strictly Simple join ...\n    op1b = j.OutPt1.Next;\n    while (op1b != op1 && (ClipperLib.IntPoint.op_Equality(op1b.Pt, j.OffPt)))\n      op1b = op1b.Next;\n    var reverse1 = (op1b.Pt.Y > j.OffPt.Y);\n    op2b = j.OutPt2.Next;\n    while (op2b != op2 && (ClipperLib.IntPoint.op_Equality(op2b.Pt, j.OffPt)))\n      op2b = op2b.Next;\n    var reverse2 = (op2b.Pt.Y > j.OffPt.Y);\n    if (reverse1 == reverse2)\n      return false;\n    if (reverse1)\n    {\n      op1b = this.DupOutPt(op1, false);\n      op2b = this.DupOutPt(op2, true);\n      op1.Prev = op2;\n      op2.Next = op1;\n      op1b.Next = op2b;\n      op2b.Prev = op1b;\n      j.OutPt1 = op1;\n      j.OutPt2 = op1b;\n      return true;\n    }\n    else\n    {\n      op1b = this.DupOutPt(op1, true);\n      op2b = this.DupOutPt(op2, false);\n      op1.Next = op2;\n      op2.Prev = op1;\n      op1b.Prev = op2b;\n      op2b.Next = op1b;\n      j.OutPt1 = op1;\n      j.OutPt2 = op1b;\n      return true;\n    }\n  }\n  else if (isHorizontal)\n  {\n    //treat horizontal joins differently to non-horizontal joins since with\n    //them we're not yet sure where the overlapping is. OutPt1.Pt & OutPt2.Pt\n    //may be anywhere along the horizontal edge.\n    op1b = op1;\n    while (op1.Prev.Pt.Y == op1.Pt.Y && op1.Prev != op1b && op1.Prev != op2)\n      op1 = op1.Prev;\n    while (op1b.Next.Pt.Y == op1b.Pt.Y && op1b.Next != op1 && op1b.Next != op2)\n      op1b = op1b.Next;\n    if (op1b.Next == op1 || op1b.Next == op2)\n      return false;\n    //a flat 'polygon'\n    op2b = op2;\n    while (op2.Prev.Pt.Y == op2.Pt.Y && op2.Prev != op2b && op2.Prev != op1b)\n      op2 = op2.Prev;\n    while (op2b.Next.Pt.Y == op2b.Pt.Y && op2b.Next != op2 && op2b.Next != op1)\n      op2b = op2b.Next;\n    if (op2b.Next == op2 || op2b.Next == op1)\n      return false;\n    //a flat 'polygon'\n    //Op1 -. Op1b & Op2 -. Op2b are the extremites of the horizontal edges\n\n    var $val = {Left: null, Right: null};\n    if (!this.GetOverlap(op1.Pt.X, op1b.Pt.X, op2.Pt.X, op2b.Pt.X, $val))\n      return false;\n    var Left = $val.Left;\n    var Right = $val.Right;\n\n    //DiscardLeftSide: when overlapping edges are joined, a spike will created\n    //which needs to be cleaned up. However, we don't want Op1 or Op2 caught up\n    //on the discard Side as either may still be needed for other joins ...\n    var Pt = new ClipperLib.IntPoint();\n    var DiscardLeftSide;\n    if (op1.Pt.X >= Left && op1.Pt.X <= Right)\n    {\n      //Pt = op1.Pt;\n      Pt.X = op1.Pt.X;\n      Pt.Y = op1.Pt.Y;\n      DiscardLeftSide = (op1.Pt.X > op1b.Pt.X);\n    }\n    else if (op2.Pt.X >= Left && op2.Pt.X <= Right)\n    {\n      //Pt = op2.Pt;\n      Pt.X = op2.Pt.X;\n      Pt.Y = op2.Pt.Y;\n      DiscardLeftSide = (op2.Pt.X > op2b.Pt.X);\n    }\n    else if (op1b.Pt.X >= Left && op1b.Pt.X <= Right)\n    {\n      //Pt = op1b.Pt;\n      Pt.X = op1b.Pt.X;\n      Pt.Y = op1b.Pt.Y;\n      DiscardLeftSide = op1b.Pt.X > op1.Pt.X;\n    }\n    else\n    {\n      //Pt = op2b.Pt;\n      Pt.X = op2b.Pt.X;\n      Pt.Y = op2b.Pt.Y;\n      DiscardLeftSide = (op2b.Pt.X > op2.Pt.X);\n    }\n    j.OutPt1 = op1;\n    j.OutPt2 = op2;\n    return this.JoinHorz(op1, op1b, op2, op2b, Pt, DiscardLeftSide);\n  }\n  else\n  {\n    //nb: For non-horizontal joins ...\n    //    1. Jr.OutPt1.Pt.Y == Jr.OutPt2.Pt.Y\n    //    2. Jr.OutPt1.Pt > Jr.OffPt.Y\n    //make sure the polygons are correctly oriented ...\n    op1b = op1.Next;\n    while ((ClipperLib.IntPoint.op_Equality(op1b.Pt, op1.Pt)) && (op1b != op1))\n      op1b = op1b.Next;\n    var Reverse1 = ((op1b.Pt.Y > op1.Pt.Y) || !ClipperLib.ClipperBase.SlopesEqual(op1.Pt, op1b.Pt, j.OffPt, this.m_UseFullRange));\n    if (Reverse1)\n    {\n      op1b = op1.Prev;\n      while ((ClipperLib.IntPoint.op_Equality(op1b.Pt, op1.Pt)) && (op1b != op1))\n        op1b = op1b.Prev;\n      if ((op1b.Pt.Y > op1.Pt.Y) || !ClipperLib.ClipperBase.SlopesEqual(op1.Pt, op1b.Pt, j.OffPt, this.m_UseFullRange))\n        return false;\n    }\n    op2b = op2.Next;\n    while ((ClipperLib.IntPoint.op_Equality(op2b.Pt, op2.Pt)) && (op2b != op2))\n      op2b = op2b.Next;\n    var Reverse2 = ((op2b.Pt.Y > op2.Pt.Y) || !ClipperLib.ClipperBase.SlopesEqual(op2.Pt, op2b.Pt, j.OffPt, this.m_UseFullRange));\n    if (Reverse2)\n    {\n      op2b = op2.Prev;\n      while ((ClipperLib.IntPoint.op_Equality(op2b.Pt, op2.Pt)) && (op2b != op2))\n        op2b = op2b.Prev;\n      if ((op2b.Pt.Y > op2.Pt.Y) || !ClipperLib.ClipperBase.SlopesEqual(op2.Pt, op2b.Pt, j.OffPt, this.m_UseFullRange))\n        return false;\n    }\n    if ((op1b == op1) || (op2b == op2) || (op1b == op2b) ||\n      ((outRec1 == outRec2) && (Reverse1 == Reverse2)))\n      return false;\n    if (Reverse1)\n    {\n      op1b = this.DupOutPt(op1, false);\n      op2b = this.DupOutPt(op2, true);\n      op1.Prev = op2;\n      op2.Next = op1;\n      op1b.Next = op2b;\n      op2b.Prev = op1b;\n      j.OutPt1 = op1;\n      j.OutPt2 = op1b;\n      return true;\n    }\n    else\n    {\n      op1b = this.DupOutPt(op1, true);\n      op2b = this.DupOutPt(op2, false);\n      op1.Next = op2;\n      op2.Prev = op1;\n      op1b.Prev = op2b;\n      op2b.Next = op1b;\n      j.OutPt1 = op1;\n      j.OutPt2 = op1b;\n      return true;\n    }\n  }\n};\nClipperLib.Clipper.GetBounds = function (paths)\n{\n  var i = 0,\n    cnt = paths.length;\n  while (i < cnt && paths[i].length == 0) i++;\n  if (i == cnt) return new ClipperLib.IntRect(0, 0, 0, 0);\n  var result = new ClipperLib.IntRect();\n  result.left = paths[i][0].X;\n  result.right = result.left;\n  result.top = paths[i][0].Y;\n  result.bottom = result.top;\n  for (; i < cnt; i++)\n    for (var j = 0, jlen = paths[i].length; j < jlen; j++)\n    {\n      if (paths[i][j].X < result.left) result.left = paths[i][j].X;\n      else if (paths[i][j].X > result.right) result.right = paths[i][j].X;\n      if (paths[i][j].Y < result.top) result.top = paths[i][j].Y;\n      else if (paths[i][j].Y > result.bottom) result.bottom = paths[i][j].Y;\n    }\n  return result;\n}\nClipperLib.Clipper.prototype.GetBounds2 = function (ops)\n{\n  var opStart = ops;\n  var result = new ClipperLib.IntRect();\n  result.left = ops.Pt.X;\n  result.right = ops.Pt.X;\n  result.top = ops.Pt.Y;\n  result.bottom = ops.Pt.Y;\n  ops = ops.Next;\n  while (ops != opStart)\n  {\n    if (ops.Pt.X < result.left)\n      result.left = ops.Pt.X;\n    if (ops.Pt.X > result.right)\n      result.right = ops.Pt.X;\n    if (ops.Pt.Y < result.top)\n      result.top = ops.Pt.Y;\n    if (ops.Pt.Y > result.bottom)\n      result.bottom = ops.Pt.Y;\n    ops = ops.Next;\n  }\n  return result;\n};\n\nClipperLib.Clipper.PointInPolygon = function (pt, path)\n{\n  //returns 0 if false, +1 if true, -1 if pt ON polygon boundary\n  //http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.88.5498&rep=rep1&type=pdf\n  var result = 0,\n    cnt = path.length;\n  if (cnt < 3)\n    return 0;\n  var ip = path[0];\n  for (var i = 1; i <= cnt; ++i)\n  {\n    var ipNext = (i == cnt ? path[0] : path[i]);\n    if (ipNext.Y == pt.Y)\n    {\n      if ((ipNext.X == pt.X) || (ip.Y == pt.Y && ((ipNext.X > pt.X) == (ip.X < pt.X))))\n        return -1;\n    }\n    if ((ip.Y < pt.Y) != (ipNext.Y < pt.Y))\n    {\n      if (ip.X >= pt.X)\n      {\n        if (ipNext.X > pt.X)\n          result = 1 - result;\n        else\n        {\n          var d = (ip.X - pt.X) * (ipNext.Y - pt.Y) - (ipNext.X - pt.X) * (ip.Y - pt.Y);\n          if (d == 0)\n            return -1;\n          else if ((d > 0) == (ipNext.Y > ip.Y))\n            result = 1 - result;\n        }\n      }\n      else\n      {\n        if (ipNext.X > pt.X)\n        {\n          var d = (ip.X - pt.X) * (ipNext.Y - pt.Y) - (ipNext.X - pt.X) * (ip.Y - pt.Y);\n          if (d == 0)\n            return -1;\n          else if ((d > 0) == (ipNext.Y > ip.Y))\n            result = 1 - result;\n        }\n      }\n    }\n    ip = ipNext;\n  }\n  return result;\n};\n    \nClipperLib.Clipper.prototype.PointInPolygon = function (pt, op)\n{\n  //returns 0 if false, +1 if true, -1 if pt ON polygon boundary\n  //http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.88.5498&rep=rep1&type=pdf\n  var result = 0;\n  var startOp = op;\n  for (;;)\n  {\n    var poly0x = op.Pt.X,\n      poly0y = op.Pt.Y;\n    var poly1x = op.Next.Pt.X,\n      poly1y = op.Next.Pt.Y;\n    if (poly1y == pt.Y)\n    {\n      if ((poly1x == pt.X) || (poly0y == pt.Y && ((poly1x > pt.X) == (poly0x < pt.X))))\n        return -1;\n    }\n    if ((poly0y < pt.Y) != (poly1y < pt.Y))\n    {\n      if (poly0x >= pt.X)\n      {\n        if (poly1x > pt.X)\n          result = 1 - result;\n        else\n        {\n          var d = (poly0x - pt.X) * (poly1y - pt.Y) - (poly1x - pt.X) * (poly0y - pt.Y);\n          if (d == 0)\n            return -1;\n          if ((d > 0) == (poly1y > poly0y))\n            result = 1 - result;\n        }\n      }\n      else\n      {\n        if (poly1x > pt.X)\n        {\n          var d = (poly0x - pt.X) * (poly1y - pt.Y) - (poly1x - pt.X) * (poly0y - pt.Y);\n          if (d == 0)\n            return -1;\n          if ((d > 0) == (poly1y > poly0y))\n            result = 1 - result;\n        }\n      }\n    }\n    op = op.Next;\n    if (startOp == op)\n      break;\n  }\n  return result;\n};\n\nClipperLib.Clipper.prototype.Poly2ContainsPoly1 = function (outPt1, outPt2)\n{\n  var op = outPt1;\n  do {\n    var res = this.PointInPolygon(op.Pt, outPt2);\n    if (res >= 0)\n      return res != 0;\n    op = op.Next;\n  }\n  while (op != outPt1)\n  return true;\n};\nClipperLib.Clipper.prototype.FixupFirstLefts1 = function (OldOutRec, NewOutRec)\n{\n  for (var i = 0, ilen = this.m_PolyOuts.length; i < ilen; i++)\n  {\n    var outRec = this.m_PolyOuts[i];\n    if (outRec.Pts !== null && outRec.FirstLeft == OldOutRec)\n    {\n      if (this.Poly2ContainsPoly1(outRec.Pts, NewOutRec.Pts))\n        outRec.FirstLeft = NewOutRec;\n    }\n  }\n};\nClipperLib.Clipper.prototype.FixupFirstLefts2 = function (OldOutRec, NewOutRec)\n{\n  for (var $i2 = 0, $t2 = this.m_PolyOuts, $l2 = $t2.length, outRec = $t2[$i2]; $i2 < $l2; $i2++, outRec = $t2[$i2])\n    if (outRec.FirstLeft == OldOutRec)\n      outRec.FirstLeft = NewOutRec;\n};\nClipperLib.Clipper.ParseFirstLeft = function (FirstLeft)\n{\n  while (FirstLeft != null && FirstLeft.Pts == null)\n    FirstLeft = FirstLeft.FirstLeft;\n  return FirstLeft;\n};\nClipperLib.Clipper.prototype.JoinCommonEdges = function ()\n{\n  for (var i = 0, ilen = this.m_Joins.length; i < ilen; i++)\n  {\n    var join = this.m_Joins[i];\n    var outRec1 = this.GetOutRec(join.OutPt1.Idx);\n    var outRec2 = this.GetOutRec(join.OutPt2.Idx);\n    if (outRec1.Pts == null || outRec2.Pts == null)\n      continue;\n    //get the polygon fragment with the correct hole state (FirstLeft)\n    //before calling JoinPoints() ...\n    var holeStateRec;\n    if (outRec1 == outRec2)\n      holeStateRec = outRec1;\n    else if (this.Param1RightOfParam2(outRec1, outRec2))\n      holeStateRec = outRec2;\n    else if (this.Param1RightOfParam2(outRec2, outRec1))\n      holeStateRec = outRec1;\n    else\n      holeStateRec = this.GetLowermostRec(outRec1, outRec2);\n\n    if (!this.JoinPoints(join, outRec1, outRec2)) continue;\n\n    if (outRec1 == outRec2)\n    {\n      //instead of joining two polygons, we've just created a new one by\n      //splitting one polygon into two.\n      outRec1.Pts = join.OutPt1;\n      outRec1.BottomPt = null;\n      outRec2 = this.CreateOutRec();\n      outRec2.Pts = join.OutPt2;\n      //update all OutRec2.Pts Idx's ...\n      this.UpdateOutPtIdxs(outRec2);\n      //We now need to check every OutRec.FirstLeft pointer. If it points\n      //to OutRec1 it may need to point to OutRec2 instead ...\n      if (this.m_UsingPolyTree)\n        for (var j = 0, jlen = this.m_PolyOuts.length; j < jlen - 1; j++)\n        {\n          var oRec = this.m_PolyOuts[j];\n          if (oRec.Pts == null || ClipperLib.Clipper.ParseFirstLeft(oRec.FirstLeft) != outRec1 || oRec.IsHole == outRec1.IsHole)\n            continue;\n          if (this.Poly2ContainsPoly1(oRec.Pts, join.OutPt2))\n            oRec.FirstLeft = outRec2;\n        }\n      if (this.Poly2ContainsPoly1(outRec2.Pts, outRec1.Pts))\n      {\n        //outRec2 is contained by outRec1 ...\n        outRec2.IsHole = !outRec1.IsHole;\n        outRec2.FirstLeft = outRec1;\n        //fixup FirstLeft pointers that may need reassigning to OutRec1\n        if (this.m_UsingPolyTree)\n          this.FixupFirstLefts2(outRec2, outRec1);\n        if ((outRec2.IsHole ^ this.ReverseSolution) == (this.Area(outRec2) > 0))\n          this.ReversePolyPtLinks(outRec2.Pts);\n      }\n      else if (this.Poly2ContainsPoly1(outRec1.Pts, outRec2.Pts))\n      {\n        //outRec1 is contained by outRec2 ...\n        outRec2.IsHole = outRec1.IsHole;\n        outRec1.IsHole = !outRec2.IsHole;\n        outRec2.FirstLeft = outRec1.FirstLeft;\n        outRec1.FirstLeft = outRec2;\n        //fixup FirstLeft pointers that may need reassigning to OutRec1\n        if (this.m_UsingPolyTree)\n          this.FixupFirstLefts2(outRec1, outRec2);\n        if ((outRec1.IsHole ^ this.ReverseSolution) == (this.Area(outRec1) > 0))\n          this.ReversePolyPtLinks(outRec1.Pts);\n      }\n      else\n      {\n        //the 2 polygons are completely separate ...\n        outRec2.IsHole = outRec1.IsHole;\n        outRec2.FirstLeft = outRec1.FirstLeft;\n        //fixup FirstLeft pointers that may need reassigning to OutRec2\n        if (this.m_UsingPolyTree)\n          this.FixupFirstLefts1(outRec1, outRec2);\n      }\n    }\n    else\n    {\n      //joined 2 polygons together ...\n      outRec2.Pts = null;\n      outRec2.BottomPt = null;\n      outRec2.Idx = outRec1.Idx;\n      outRec1.IsHole = holeStateRec.IsHole;\n      if (holeStateRec == outRec2)\n        outRec1.FirstLeft = outRec2.FirstLeft;\n      outRec2.FirstLeft = outRec1;\n      //fixup FirstLeft pointers that may need reassigning to OutRec1\n      if (this.m_UsingPolyTree)\n        this.FixupFirstLefts2(outRec2, outRec1);\n    }\n  }\n};\nClipperLib.Clipper.prototype.UpdateOutPtIdxs = function (outrec)\n{\n  var op = outrec.Pts;\n  do {\n    op.Idx = outrec.Idx;\n    op = op.Prev;\n  }\n  while (op != outrec.Pts)\n};\nClipperLib.Clipper.prototype.DoSimplePolygons = function ()\n{\n  var i = 0;\n  while (i < this.m_PolyOuts.length)\n  {\n    var outrec = this.m_PolyOuts[i++];\n    var op = outrec.Pts;\n    if (op === null)\n      continue;\n    do //for each Pt in Polygon until duplicate found do ...\n    {\n      var op2 = op.Next;\n      while (op2 != outrec.Pts)\n      {\n        if ((ClipperLib.IntPoint.op_Equality(op.Pt, op2.Pt)) && op2.Next != op && op2.Prev != op)\n        {\n          //split the polygon into two ...\n          var op3 = op.Prev;\n          var op4 = op2.Prev;\n          op.Prev = op4;\n          op4.Next = op;\n          op2.Prev = op3;\n          op3.Next = op2;\n          outrec.Pts = op;\n          var outrec2 = this.CreateOutRec();\n          outrec2.Pts = op2;\n          this.UpdateOutPtIdxs(outrec2);\n          if (this.Poly2ContainsPoly1(outrec2.Pts, outrec.Pts))\n          {\n            //OutRec2 is contained by OutRec1 ...\n            outrec2.IsHole = !outrec.IsHole;\n            outrec2.FirstLeft = outrec;\n          }\n          else if (this.Poly2ContainsPoly1(outrec.Pts, outrec2.Pts))\n          {\n            //OutRec1 is contained by OutRec2 ...\n            outrec2.IsHole = outrec.IsHole;\n            outrec.IsHole = !outrec2.IsHole;\n            outrec2.FirstLeft = outrec.FirstLeft;\n            outrec.FirstLeft = outrec2;\n          }\n          else\n          {\n            //the 2 polygons are separate ...\n            outrec2.IsHole = outrec.IsHole;\n            outrec2.FirstLeft = outrec.FirstLeft;\n          }\n          op2 = op;\n          //ie get ready for the next iteration\n        }\n        op2 = op2.Next;\n      }\n      op = op.Next;\n    }\n    while (op != outrec.Pts)\n  }\n};\nClipperLib.Clipper.Area = function (poly)\n{\n  var cnt = poly.length;\n  if (cnt < 3)\n    return 0;\n  var a = 0;\n  for (var i = 0, j = cnt - 1; i < cnt; ++i)\n  {\n    a += (poly[j].X + poly[i].X) * (poly[j].Y - poly[i].Y);\n    j = i;\n  }\n  return -a * 0.5;\n};\nClipperLib.Clipper.prototype.Area = function (outRec)\n{\n  var op = outRec.Pts;\n  if (op == null)\n    return 0;\n  var a = 0;\n  do {\n    a = a + (op.Prev.Pt.X + op.Pt.X) * (op.Prev.Pt.Y - op.Pt.Y);\n    op = op.Next;\n  }\n  while (op != outRec.Pts)\n  return a * 0.5;\n};\nif (use_deprecated)\n{\n  ClipperLib.Clipper.OffsetPaths = function (polys, delta, jointype, endtype, MiterLimit)\n  {\n    var result = new ClipperLib.Paths();\n    var co = new ClipperLib.ClipperOffset(MiterLimit, MiterLimit);\n    co.AddPaths(polys, jointype, endtype);\n    co.Execute(result, delta);\n    return result;\n  };\n}\nClipperLib.Clipper.SimplifyPolygon = function (poly, fillType)\n{\n  var result = new Array();\n  var c = new ClipperLib.Clipper(0);\n  c.StrictlySimple = true;\n  c.AddPath(poly, ClipperLib.PolyType.ptSubject, true);\n  c.Execute(ClipperLib.ClipType.ctUnion, result, fillType, fillType);\n  return result;\n};\nClipperLib.Clipper.SimplifyPolygons = function (polys, fillType)\n{\n  if (typeof (fillType) == \"undefined\") fillType = ClipperLib.PolyFillType.pftEvenOdd;\n  var result = new Array();\n  var c = new ClipperLib.Clipper(0);\n  c.StrictlySimple = true;\n  c.AddPaths(polys, ClipperLib.PolyType.ptSubject, true);\n  c.Execute(ClipperLib.ClipType.ctUnion, result, fillType, fillType);\n  return result;\n};\nClipperLib.Clipper.DistanceSqrd = function (pt1, pt2)\n{\n  var dx = (pt1.X - pt2.X);\n  var dy = (pt1.Y - pt2.Y);\n  return (dx * dx + dy * dy);\n};\nClipperLib.Clipper.DistanceFromLineSqrd = function (pt, ln1, ln2)\n{\n  //The equation of a line in general form (Ax + By + C = 0)\n  //given 2 points (x�,y�) & (x�,y�) is ...\n  //(y� - y�)x + (x� - x�)y + (y� - y�)x� - (x� - x�)y� = 0\n  //A = (y� - y�); B = (x� - x�); C = (y� - y�)x� - (x� - x�)y�\n  //perpendicular distance of point (x�,y�) = (Ax� + By� + C)/Sqrt(A� + B�)\n  //see http://en.wikipedia.org/wiki/Perpendicular_distance\n  var A = ln1.Y - ln2.Y;\n  var B = ln2.X - ln1.X;\n  var C = A * ln1.X + B * ln1.Y;\n  C = A * pt.X + B * pt.Y - C;\n  return (C * C) / (A * A + B * B);\n};\nClipperLib.Clipper.SlopesNearCollinear = function (pt1, pt2, pt3, distSqrd)\n{\n  return ClipperLib.Clipper.DistanceFromLineSqrd(pt2, pt1, pt3) < distSqrd;\n};\nClipperLib.Clipper.PointsAreClose = function (pt1, pt2, distSqrd)\n{\n  var dx = pt1.X - pt2.X;\n  var dy = pt1.Y - pt2.Y;\n  return ((dx * dx) + (dy * dy) <= distSqrd);\n};\n//------------------------------------------------------------------------------\nClipperLib.Clipper.ExcludeOp = function (op)\n{\n  var result = op.Prev;\n  result.Next = op.Next;\n  op.Next.Prev = result;\n  result.Idx = 0;\n  return result;\n};\nClipperLib.Clipper.CleanPolygon = function (path, distance)\n{\n  if (typeof (distance) == \"undefined\") distance = 1.415;\n  //distance = proximity in units/pixels below which vertices will be stripped. \n  //Default ~= sqrt(2) so when adjacent vertices or semi-adjacent vertices have \n  //both x & y coords within 1 unit, then the second vertex will be stripped.\n  var cnt = path.length;\n  if (cnt == 0)\n    return new Array();\n  var outPts = new Array(cnt);\n  for (var i = 0; i < cnt; ++i)\n    outPts[i] = new ClipperLib.OutPt();\n  for (var i = 0; i < cnt; ++i)\n  {\n    outPts[i].Pt = path[i];\n    outPts[i].Next = outPts[(i + 1) % cnt];\n    outPts[i].Next.Prev = outPts[i];\n    outPts[i].Idx = 0;\n  }\n  var distSqrd = distance * distance;\n  var op = outPts[0];\n  while (op.Idx == 0 && op.Next != op.Prev)\n  {\n    if (ClipperLib.Clipper.PointsAreClose(op.Pt, op.Prev.Pt, distSqrd))\n    {\n      op = ClipperLib.Clipper.ExcludeOp(op);\n      cnt--;\n    }\n    else if (ClipperLib.Clipper.PointsAreClose(op.Prev.Pt, op.Next.Pt, distSqrd))\n    {\n      ClipperLib.Clipper.ExcludeOp(op.Next);\n      op = ClipperLib.Clipper.ExcludeOp(op);\n      cnt -= 2;\n    }\n    else if (ClipperLib.Clipper.SlopesNearCollinear(op.Prev.Pt, op.Pt, op.Next.Pt, distSqrd))\n    {\n      op = ClipperLib.Clipper.ExcludeOp(op);\n      cnt--;\n    }\n    else\n    {\n      op.Idx = 1;\n      op = op.Next;\n    }\n  }\n  if (cnt < 3)\n    cnt = 0;\n  var result = new Array(cnt);\n  for (var i = 0; i < cnt; ++i)\n  {\n    result[i] = new ClipperLib.IntPoint(op.Pt);\n    op = op.Next;\n  }\n  outPts = null;\n  return result;\n};\nClipperLib.Clipper.CleanPolygons = function (polys, distance)\n{\n  var result = new Array(polys.length);\n  for (var i = 0, ilen = polys.length; i < ilen; i++)\n    result[i] = ClipperLib.Clipper.CleanPolygon(polys[i], distance);\n  return result;\n};\nClipperLib.Clipper.Minkowski = function (pattern, path, IsSum, IsClosed)\n{\n  var delta = (IsClosed ? 1 : 0);\n  var polyCnt = pattern.length;\n  var pathCnt = path.length;\n  var result = new Array();\n  if (IsSum)\n    for (var i = 0; i < pathCnt; i++)\n    {\n      var p = new Array(polyCnt);\n      for (var j = 0, jlen = pattern.length, ip = pattern[j]; j < jlen; j++, ip = pattern[j])\n        p[j] = new ClipperLib.IntPoint(path[i].X + ip.X, path[i].Y + ip.Y);\n      result.push(p);\n    }\n  else\n    for (var i = 0; i < pathCnt; i++)\n    {\n      var p = new Array(polyCnt);\n      for (var j = 0, jlen = pattern.length, ip = pattern[j]; j < jlen; j++, ip = pattern[j])\n        p[j] = new ClipperLib.IntPoint(path[i].X - ip.X, path[i].Y - ip.Y);\n      result.push(p);\n    }\n  var quads = new Array();\n  for (var i = 0; i < pathCnt - 1 + delta; i++)\n    for (var j = 0; j < polyCnt; j++)\n    {\n      var quad = new Array();\n      quad.push(result[i % pathCnt][j % polyCnt]);\n      quad.push(result[(i + 1) % pathCnt][j % polyCnt]);\n      quad.push(result[(i + 1) % pathCnt][(j + 1) % polyCnt]);\n      quad.push(result[i % pathCnt][(j + 1) % polyCnt]);\n      if (!ClipperLib.Clipper.Orientation(quad))\n        quad.reverse();\n      quads.push(quad);\n    }\n  var c = new ClipperLib.Clipper(0);\n  c.AddPaths(quads, ClipperLib.PolyType.ptSubject, true);\n  c.Execute(ClipperLib.ClipType.ctUnion, result, ClipperLib.PolyFillType.pftNonZero, ClipperLib.PolyFillType.pftNonZero);\n  return result;\n};\n\nClipperLib.Clipper.MinkowskiSum = function ()\n{\n  var a = arguments,\n    alen = a.length;\n  if (alen == 3) // MinkowskiSum(Path pattern, path, pathIsClosed)\n  {\n    var pattern = a[0],\n      path = a[1],\n      pathIsClosed = a[2];\n    return ClipperLib.Clipper.Minkowski(pattern, path, true, pathIsClosed);\n  }\n  else if (alen == 4) // MinkowskiSum(pattern, paths, pathFillType, pathIsClosed)\n  {\n    var pattern = a[0],\n      paths = a[1],\n      pathFillType = a[2],\n      pathIsClosed = a[3];\n    var c = new ClipperLib.Clipper(),\n      tmp;\n    for (var i = 0, ilen = paths.length; i < ilen; ++i)\n    {\n      var tmp = ClipperLib.Clipper.Minkowski(pattern, paths[i], true, pathIsClosed);\n      c.AddPaths(tmp, ClipperLib.PolyType.ptSubject, true);\n    }\n    if (pathIsClosed) c.AddPaths(paths, ClipperLib.PolyType.ptClip, true);\n    var solution = new ClipperLib.Paths();\n    c.Execute(ClipperLib.ClipType.ctUnion, solution, pathFillType, pathFillType);\n    return solution;\n  }\n};\n\nClipperLib.Clipper.MinkowskiDiff = function (pattern, path, pathIsClosed)\n{\n  return ClipperLib.Clipper.Minkowski(pattern, path, false, pathIsClosed);\n};\n\nClipperLib.Clipper.PolyTreeToPaths = function (polytree)\n{\n  var result = new Array();\n  //result.set_Capacity(polytree.get_Total());\n  ClipperLib.Clipper.AddPolyNodeToPaths(polytree, ClipperLib.Clipper.NodeType.ntAny, result);\n  return result;\n};\nClipperLib.Clipper.AddPolyNodeToPaths = function (polynode, nt, paths)\n{\n  var match = true;\n  switch (nt)\n  {\n  case ClipperLib.Clipper.NodeType.ntOpen:\n    return;\n  case ClipperLib.Clipper.NodeType.ntClosed:\n    match = !polynode.IsOpen;\n    break;\n  default:\n    break;\n  }\n  if (polynode.m_polygon.length > 0 && match)\n    paths.push(polynode.m_polygon);\n  for (var $i3 = 0, $t3 = polynode.Childs(), $l3 = $t3.length, pn = $t3[$i3]; $i3 < $l3; $i3++, pn = $t3[$i3])\n    ClipperLib.Clipper.AddPolyNodeToPaths(pn, nt, paths);\n};\nClipperLib.Clipper.OpenPathsFromPolyTree = function (polytree)\n{\n  var result = new ClipperLib.Paths();\n  //result.set_Capacity(polytree.ChildCount());\n  for (var i = 0, ilen = polytree.ChildCount(); i < ilen; i++)\n    if (polytree.Childs()[i].IsOpen)\n      result.push(polytree.Childs()[i].m_polygon);\n  return result;\n};\nClipperLib.Clipper.ClosedPathsFromPolyTree = function (polytree)\n{\n  var result = new ClipperLib.Paths();\n  //result.set_Capacity(polytree.Total());\n  ClipperLib.Clipper.AddPolyNodeToPaths(polytree, ClipperLib.Clipper.NodeType.ntClosed, result);\n  return result;\n};\nInherit(ClipperLib.Clipper, ClipperLib.ClipperBase);\nClipperLib.Clipper.NodeType = {\n  ntAny: 0,\n  ntOpen: 1,\n  ntClosed: 2\n};\nClipperLib.ClipperOffset = function (miterLimit, arcTolerance)\n{\n  if (typeof (miterLimit) == \"undefined\") miterLimit = 2;\n  if (typeof (arcTolerance) == \"undefined\") arcTolerance = ClipperLib.ClipperOffset.def_arc_tolerance;\n  this.m_destPolys = new ClipperLib.Paths();\n  this.m_srcPoly = new ClipperLib.Path();\n  this.m_destPoly = new ClipperLib.Path();\n  this.m_normals = new Array();\n  this.m_delta = 0;\n  this.m_sinA = 0;\n  this.m_sin = 0;\n  this.m_cos = 0;\n  this.m_miterLim = 0;\n  this.m_StepsPerRad = 0;\n  this.m_lowest = new ClipperLib.IntPoint();\n  this.m_polyNodes = new ClipperLib.PolyNode();\n  this.MiterLimit = miterLimit;\n  this.ArcTolerance = arcTolerance;\n  this.m_lowest.X = -1;\n};\nClipperLib.ClipperOffset.two_pi = 6.28318530717959;\nClipperLib.ClipperOffset.def_arc_tolerance = 0.25;\nClipperLib.ClipperOffset.prototype.Clear = function ()\n{\n  ClipperLib.Clear(this.m_polyNodes.Childs());\n  this.m_lowest.X = -1;\n};\nClipperLib.ClipperOffset.Round = ClipperLib.Clipper.Round;\nClipperLib.ClipperOffset.prototype.AddPath = function (path, joinType, endType)\n{\n  var highI = path.length - 1;\n  if (highI < 0)\n    return;\n  var newNode = new ClipperLib.PolyNode();\n  newNode.m_jointype = joinType;\n  newNode.m_endtype = endType;\n  //strip duplicate points from path and also get index to the lowest point ...\n  if (endType == ClipperLib.EndType.etClosedLine || endType == ClipperLib.EndType.etClosedPolygon)\n    while (highI > 0 && ClipperLib.IntPoint.op_Equality(path[0], path[highI]))\n      highI--;\n  //newNode.m_polygon.set_Capacity(highI + 1);\n  newNode.m_polygon.push(path[0]);\n  var j = 0,\n    k = 0;\n  for (var i = 1; i <= highI; i++)\n    if (ClipperLib.IntPoint.op_Inequality(newNode.m_polygon[j], path[i]))\n    {\n      j++;\n      newNode.m_polygon.push(path[i]);\n      if (path[i].Y > newNode.m_polygon[k].Y || (path[i].Y == newNode.m_polygon[k].Y && path[i].X < newNode.m_polygon[k].X))\n        k = j;\n    }\n  if ((endType == ClipperLib.EndType.etClosedPolygon && j < 2) || (endType != ClipperLib.EndType.etClosedPolygon && j < 0))\n    return;\n  this.m_polyNodes.AddChild(newNode);\n  //if this path's lowest pt is lower than all the others then update m_lowest\n  if (endType != ClipperLib.EndType.etClosedPolygon)\n    return;\n  if (this.m_lowest.X < 0)\n    this.m_lowest = new ClipperLib.IntPoint(0, k);\n  else\n  {\n    var ip = this.m_polyNodes.Childs()[this.m_lowest.X].m_polygon[this.m_lowest.Y];\n    if (newNode.m_polygon[k].Y > ip.Y || (newNode.m_polygon[k].Y == ip.Y && newNode.m_polygon[k].X < ip.X))\n      this.m_lowest = new ClipperLib.IntPoint(this.m_polyNodes.ChildCount() - 1, k);\n  }\n};\nClipperLib.ClipperOffset.prototype.AddPaths = function (paths, joinType, endType)\n{\n  for (var i = 0, ilen = paths.length; i < ilen; i++)\n    this.AddPath(paths[i], joinType, endType);\n};\nClipperLib.ClipperOffset.prototype.FixOrientations = function ()\n{\n  //fixup orientations of all closed paths if the orientation of the\n  //closed path with the lowermost vertex is wrong ...\n  if (this.m_lowest.X >= 0 && !ClipperLib.Clipper.Orientation(this.m_polyNodes.Childs()[this.m_lowest.X].m_polygon))\n  {\n    for (var i = 0; i < this.m_polyNodes.ChildCount(); i++)\n    {\n      var node = this.m_polyNodes.Childs()[i];\n      if (node.m_endtype == ClipperLib.EndType.etClosedPolygon || (node.m_endtype == ClipperLib.EndType.etClosedLine && ClipperLib.Clipper.Orientation(node.m_polygon)))\n        node.m_polygon.reverse();\n    }\n  }\n  else\n  {\n    for (var i = 0; i < this.m_polyNodes.ChildCount(); i++)\n    {\n      var node = this.m_polyNodes.Childs()[i];\n      if (node.m_endtype == ClipperLib.EndType.etClosedLine && !ClipperLib.Clipper.Orientation(node.m_polygon))\n        node.m_polygon.reverse();\n    }\n  }\n};\nClipperLib.ClipperOffset.GetUnitNormal = function (pt1, pt2)\n{\n  var dx = (pt2.X - pt1.X);\n  var dy = (pt2.Y - pt1.Y);\n  if ((dx == 0) && (dy == 0))\n    return new ClipperLib.DoublePoint(0, 0);\n  var f = 1 / Math.sqrt(dx * dx + dy * dy);\n  dx *= f;\n  dy *= f;\n  return new ClipperLib.DoublePoint(dy, -dx);\n};\nClipperLib.ClipperOffset.prototype.DoOffset = function (delta)\n{\n  this.m_destPolys = new Array();\n  this.m_delta = delta;\n  //if Zero offset, just copy any CLOSED polygons to m_p and return ...\n  if (ClipperLib.ClipperBase.near_zero(delta))\n  {\n    //this.m_destPolys.set_Capacity(this.m_polyNodes.ChildCount);\n    for (var i = 0; i < this.m_polyNodes.ChildCount(); i++)\n    {\n      var node = this.m_polyNodes.Childs()[i];\n      if (node.m_endtype == ClipperLib.EndType.etClosedPolygon)\n        this.m_destPolys.push(node.m_polygon);\n    }\n    return;\n  }\n  //see offset_triginometry3.svg in the documentation folder ...\n  if (this.MiterLimit > 2)\n    this.m_miterLim = 2 / (this.MiterLimit * this.MiterLimit);\n  else\n    this.m_miterLim = 0.5;\n  var y;\n  if (this.ArcTolerance <= 0)\n    y = ClipperLib.ClipperOffset.def_arc_tolerance;\n  else if (this.ArcTolerance > Math.abs(delta) * ClipperLib.ClipperOffset.def_arc_tolerance)\n    y = Math.abs(delta) * ClipperLib.ClipperOffset.def_arc_tolerance;\n  else\n    y = this.ArcTolerance;\n  //see offset_triginometry2.svg in the documentation folder ...\n  var steps = 3.14159265358979 / Math.acos(1 - y / Math.abs(delta));\n  this.m_sin = Math.sin(ClipperLib.ClipperOffset.two_pi / steps);\n  this.m_cos = Math.cos(ClipperLib.ClipperOffset.two_pi / steps);\n  this.m_StepsPerRad = steps / ClipperLib.ClipperOffset.two_pi;\n  if (delta < 0)\n    this.m_sin = -this.m_sin;\n  //this.m_destPolys.set_Capacity(this.m_polyNodes.ChildCount * 2);\n  for (var i = 0; i < this.m_polyNodes.ChildCount(); i++)\n  {\n    var node = this.m_polyNodes.Childs()[i];\n    this.m_srcPoly = node.m_polygon;\n    var len = this.m_srcPoly.length;\n    if (len == 0 || (delta <= 0 && (len < 3 || node.m_endtype != ClipperLib.EndType.etClosedPolygon)))\n      continue;\n    this.m_destPoly = new Array();\n    if (len == 1)\n    {\n      if (node.m_jointype == ClipperLib.JoinType.jtRound)\n      {\n        var X = 1,\n          Y = 0;\n        for (var j = 1; j <= steps; j++)\n        {\n          this.m_destPoly.push(new ClipperLib.IntPoint(ClipperLib.ClipperOffset.Round(this.m_srcPoly[0].X + X * delta), ClipperLib.ClipperOffset.Round(this.m_srcPoly[0].Y + Y * delta)));\n          var X2 = X;\n          X = X * this.m_cos - this.m_sin * Y;\n          Y = X2 * this.m_sin + Y * this.m_cos;\n        }\n      }\n      else\n      {\n        var X = -1,\n          Y = -1;\n        for (var j = 0; j < 4; ++j)\n        {\n          this.m_destPoly.push(new ClipperLib.IntPoint(ClipperLib.ClipperOffset.Round(this.m_srcPoly[0].X + X * delta), ClipperLib.ClipperOffset.Round(this.m_srcPoly[0].Y + Y * delta)));\n          if (X < 0)\n            X = 1;\n          else if (Y < 0)\n            Y = 1;\n          else\n            X = -1;\n        }\n      }\n      this.m_destPolys.push(this.m_destPoly);\n      continue;\n    }\n    //build m_normals ...\n    this.m_normals.length = 0;\n    //this.m_normals.set_Capacity(len);\n    for (var j = 0; j < len - 1; j++)\n      this.m_normals.push(ClipperLib.ClipperOffset.GetUnitNormal(this.m_srcPoly[j], this.m_srcPoly[j + 1]));\n    if (node.m_endtype == ClipperLib.EndType.etClosedLine || node.m_endtype == ClipperLib.EndType.etClosedPolygon)\n      this.m_normals.push(ClipperLib.ClipperOffset.GetUnitNormal(this.m_srcPoly[len - 1], this.m_srcPoly[0]));\n    else\n      this.m_normals.push(new ClipperLib.DoublePoint(this.m_normals[len - 2]));\n    if (node.m_endtype == ClipperLib.EndType.etClosedPolygon)\n    {\n      var k = len - 1;\n      for (var j = 0; j < len; j++)\n        k = this.OffsetPoint(j, k, node.m_jointype);\n      this.m_destPolys.push(this.m_destPoly);\n    }\n    else if (node.m_endtype == ClipperLib.EndType.etClosedLine)\n    {\n      var k = len - 1;\n      for (var j = 0; j < len; j++)\n        k = this.OffsetPoint(j, k, node.m_jointype);\n      this.m_destPolys.push(this.m_destPoly);\n      this.m_destPoly = new Array();\n      //re-build m_normals ...\n      var n = this.m_normals[len - 1];\n      for (var j = len - 1; j > 0; j--)\n        this.m_normals[j] = new ClipperLib.DoublePoint(-this.m_normals[j - 1].X, -this.m_normals[j - 1].Y);\n      this.m_normals[0] = new ClipperLib.DoublePoint(-n.X, -n.Y);\n      k = 0;\n      for (var j = len - 1; j >= 0; j--)\n        k = this.OffsetPoint(j, k, node.m_jointype);\n      this.m_destPolys.push(this.m_destPoly);\n    }\n    else\n    {\n      var k = 0;\n      for (var j = 1; j < len - 1; ++j)\n        k = this.OffsetPoint(j, k, node.m_jointype);\n      var pt1;\n      if (node.m_endtype == ClipperLib.EndType.etOpenButt)\n      {\n        var j = len - 1;\n        pt1 = new ClipperLib.IntPoint(ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].X + this.m_normals[j].X * delta), ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].Y + this.m_normals[j].Y * delta));\n        this.m_destPoly.push(pt1);\n        pt1 = new ClipperLib.IntPoint(ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].X - this.m_normals[j].X * delta), ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].Y - this.m_normals[j].Y * delta));\n        this.m_destPoly.push(pt1);\n      }\n      else\n      {\n        var j = len - 1;\n        k = len - 2;\n        this.m_sinA = 0;\n        this.m_normals[j] = new ClipperLib.DoublePoint(-this.m_normals[j].X, -this.m_normals[j].Y);\n        if (node.m_endtype == ClipperLib.EndType.etOpenSquare)\n          this.DoSquare(j, k);\n        else\n          this.DoRound(j, k);\n      }\n      //re-build m_normals ...\n      for (var j = len - 1; j > 0; j--)\n        this.m_normals[j] = new ClipperLib.DoublePoint(-this.m_normals[j - 1].X, -this.m_normals[j - 1].Y);\n      this.m_normals[0] = new ClipperLib.DoublePoint(-this.m_normals[1].X, -this.m_normals[1].Y);\n      k = len - 1;\n      for (var j = k - 1; j > 0; --j)\n        k = this.OffsetPoint(j, k, node.m_jointype);\n      if (node.m_endtype == ClipperLib.EndType.etOpenButt)\n      {\n        pt1 = new ClipperLib.IntPoint(ClipperLib.ClipperOffset.Round(this.m_srcPoly[0].X - this.m_normals[0].X * delta), ClipperLib.ClipperOffset.Round(this.m_srcPoly[0].Y - this.m_normals[0].Y * delta));\n        this.m_destPoly.push(pt1);\n        pt1 = new ClipperLib.IntPoint(ClipperLib.ClipperOffset.Round(this.m_srcPoly[0].X + this.m_normals[0].X * delta), ClipperLib.ClipperOffset.Round(this.m_srcPoly[0].Y + this.m_normals[0].Y * delta));\n        this.m_destPoly.push(pt1);\n      }\n      else\n      {\n        k = 1;\n        this.m_sinA = 0;\n        if (node.m_endtype == ClipperLib.EndType.etOpenSquare)\n          this.DoSquare(0, 1);\n        else\n          this.DoRound(0, 1);\n      }\n      this.m_destPolys.push(this.m_destPoly);\n    }\n  }\n};\nClipperLib.ClipperOffset.prototype.Execute = function ()\n{\n  var a = arguments,\n    ispolytree = a[0] instanceof ClipperLib.PolyTree;\n  if (!ispolytree) // function (solution, delta)\n  {\n    var solution = a[0],\n      delta = a[1];\n    ClipperLib.Clear(solution);\n    this.FixOrientations();\n    this.DoOffset(delta);\n    //now clean up 'corners' ...\n    var clpr = new ClipperLib.Clipper(0);\n    clpr.AddPaths(this.m_destPolys, ClipperLib.PolyType.ptSubject, true);\n    if (delta > 0)\n    {\n      clpr.Execute(ClipperLib.ClipType.ctUnion, solution, ClipperLib.PolyFillType.pftPositive, ClipperLib.PolyFillType.pftPositive);\n    }\n    else\n    {\n      var r = ClipperLib.Clipper.GetBounds(this.m_destPolys);\n      var outer = new ClipperLib.Path();\n      outer.push(new ClipperLib.IntPoint(r.left - 10, r.bottom + 10));\n      outer.push(new ClipperLib.IntPoint(r.right + 10, r.bottom + 10));\n      outer.push(new ClipperLib.IntPoint(r.right + 10, r.top - 10));\n      outer.push(new ClipperLib.IntPoint(r.left - 10, r.top - 10));\n      clpr.AddPath(outer, ClipperLib.PolyType.ptSubject, true);\n      clpr.ReverseSolution = true;\n      clpr.Execute(ClipperLib.ClipType.ctUnion, solution, ClipperLib.PolyFillType.pftNegative, ClipperLib.PolyFillType.pftNegative);\n      if (solution.length > 0)\n        solution.splice(0, 1);\n    }\n    //console.log(JSON.stringify(solution));\n  }\n  else // function (polytree, delta)\n  {\n    var solution = a[0],\n      delta = a[1];\n    solution.Clear();\n    this.FixOrientations();\n    this.DoOffset(delta);\n    //now clean up 'corners' ...\n    var clpr = new ClipperLib.Clipper(0);\n    clpr.AddPaths(this.m_destPolys, ClipperLib.PolyType.ptSubject, true);\n    if (delta > 0)\n    {\n      clpr.Execute(ClipperLib.ClipType.ctUnion, solution, ClipperLib.PolyFillType.pftPositive, ClipperLib.PolyFillType.pftPositive);\n    }\n    else\n    {\n      var r = ClipperLib.Clipper.GetBounds(this.m_destPolys);\n      var outer = new ClipperLib.Path();\n      outer.push(new ClipperLib.IntPoint(r.left - 10, r.bottom + 10));\n      outer.push(new ClipperLib.IntPoint(r.right + 10, r.bottom + 10));\n      outer.push(new ClipperLib.IntPoint(r.right + 10, r.top - 10));\n      outer.push(new ClipperLib.IntPoint(r.left - 10, r.top - 10));\n      clpr.AddPath(outer, ClipperLib.PolyType.ptSubject, true);\n      clpr.ReverseSolution = true;\n      clpr.Execute(ClipperLib.ClipType.ctUnion, solution, ClipperLib.PolyFillType.pftNegative, ClipperLib.PolyFillType.pftNegative);\n      //remove the outer PolyNode rectangle ...\n      if (solution.ChildCount() == 1 && solution.Childs()[0].ChildCount() > 0)\n      {\n        var outerNode = solution.Childs()[0];\n        //solution.Childs.set_Capacity(outerNode.ChildCount);\n        solution.Childs()[0] = outerNode.Childs()[0];\n        for (var i = 1; i < outerNode.ChildCount(); i++)\n          solution.AddChild(outerNode.Childs()[i]);\n      }\n      else\n        solution.Clear();\n    }\n  }\n};\nClipperLib.ClipperOffset.prototype.OffsetPoint = function (j, k, jointype)\n{\n  this.m_sinA = (this.m_normals[k].X * this.m_normals[j].Y - this.m_normals[j].X * this.m_normals[k].Y);\n  if (this.m_sinA < 0.00005 && this.m_sinA > -0.00005)\n    return k;\n  else if (this.m_sinA > 1)\n    this.m_sinA = 1.0;\n  else if (this.m_sinA < -1)\n    this.m_sinA = -1.0;\n  if (this.m_sinA * this.m_delta < 0)\n  {\n    this.m_destPoly.push(new ClipperLib.IntPoint(ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].X + this.m_normals[k].X * this.m_delta),\n      ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].Y + this.m_normals[k].Y * this.m_delta)));\n    this.m_destPoly.push(new ClipperLib.IntPoint(this.m_srcPoly[j]));\n    this.m_destPoly.push(new ClipperLib.IntPoint(ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].X + this.m_normals[j].X * this.m_delta),\n      ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].Y + this.m_normals[j].Y * this.m_delta)));\n  }\n  else\n    switch (jointype)\n    {\n    case ClipperLib.JoinType.jtMiter:\n      {\n        var r = 1 + (this.m_normals[j].X * this.m_normals[k].X + this.m_normals[j].Y * this.m_normals[k].Y);\n        if (r >= this.m_miterLim)\n          this.DoMiter(j, k, r);\n        else\n          this.DoSquare(j, k);\n        break;\n      }\n    case ClipperLib.JoinType.jtSquare:\n      this.DoSquare(j, k);\n      break;\n    case ClipperLib.JoinType.jtRound:\n      this.DoRound(j, k);\n      break;\n    }\n  k = j;\n  return k;\n};\nClipperLib.ClipperOffset.prototype.DoSquare = function (j, k)\n{\n  var dx = Math.tan(Math.atan2(this.m_sinA,\n    this.m_normals[k].X * this.m_normals[j].X + this.m_normals[k].Y * this.m_normals[j].Y) / 4);\n  this.m_destPoly.push(new ClipperLib.IntPoint(\n    ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].X + this.m_delta * (this.m_normals[k].X - this.m_normals[k].Y * dx)),\n    ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].Y + this.m_delta * (this.m_normals[k].Y + this.m_normals[k].X * dx))));\n  this.m_destPoly.push(new ClipperLib.IntPoint(\n    ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].X + this.m_delta * (this.m_normals[j].X + this.m_normals[j].Y * dx)),\n    ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].Y + this.m_delta * (this.m_normals[j].Y - this.m_normals[j].X * dx))));\n};\nClipperLib.ClipperOffset.prototype.DoMiter = function (j, k, r)\n{\n  var q = this.m_delta / r;\n  this.m_destPoly.push(new ClipperLib.IntPoint(\n    ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].X + (this.m_normals[k].X + this.m_normals[j].X) * q),\n    ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].Y + (this.m_normals[k].Y + this.m_normals[j].Y) * q)));\n};\nClipperLib.ClipperOffset.prototype.DoRound = function (j, k)\n{\n  var a = Math.atan2(this.m_sinA,\n    this.m_normals[k].X * this.m_normals[j].X + this.m_normals[k].Y * this.m_normals[j].Y);\n  var steps = ClipperLib.Cast_Int32(ClipperLib.ClipperOffset.Round(this.m_StepsPerRad * Math.abs(a)));\n  var X = this.m_normals[k].X,\n    Y = this.m_normals[k].Y,\n    X2;\n  for (var i = 0; i < steps; ++i)\n  {\n    this.m_destPoly.push(new ClipperLib.IntPoint(\n      ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].X + X * this.m_delta),\n      ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].Y + Y * this.m_delta)));\n    X2 = X;\n    X = X * this.m_cos - this.m_sin * Y;\n    Y = X2 * this.m_sin + Y * this.m_cos;\n  }\n  this.m_destPoly.push(new ClipperLib.IntPoint(\n    ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].X + this.m_normals[j].X * this.m_delta),\n    ClipperLib.ClipperOffset.Round(this.m_srcPoly[j].Y + this.m_normals[j].Y * this.m_delta)));\n};\nClipperLib.Error = function (message)\n{\n  try\n  {\n    throw new Error(message);\n  }\n  catch (err)\n  {\n    alert(err.message);\n  }\n};\n// ---------------------------------\n// JS extension by Timo 2013\nClipperLib.JS = {};\nClipperLib.JS.AreaOfPolygon = function (poly, scale)\n{\n  if (!scale) scale = 1;\n  return ClipperLib.Clipper.Area(poly) / (scale * scale);\n};\nClipperLib.JS.AreaOfPolygons = function (poly, scale)\n{\n  if (!scale) scale = 1;\n  var area = 0;\n  for (var i = 0; i < poly.length; i++)\n  {\n    area += ClipperLib.Clipper.Area(poly[i]);\n  }\n  return area / (scale * scale);\n};\nClipperLib.JS.BoundsOfPath = function (path, scale)\n{\n  return ClipperLib.JS.BoundsOfPaths([path], scale);\n};\nClipperLib.JS.BoundsOfPaths = function (paths, scale)\n{\n  if (!scale) scale = 1;\n  var bounds = ClipperLib.Clipper.GetBounds(paths);\n  bounds.left /= scale;\n  bounds.bottom /= scale;\n  bounds.right /= scale;\n  bounds.top /= scale;\n  return bounds;\n};\n// Clean() joins vertices that are too near each other\n// and causes distortion to offsetted polygons without cleaning\nClipperLib.JS.Clean = function (polygon, delta)\n{\n  if (!(polygon instanceof Array)) return [];\n  var isPolygons = polygon[0] instanceof Array;\n  var polygon = ClipperLib.JS.Clone(polygon);\n  if (typeof delta != \"number\" || delta === null)\n  {\n    ClipperLib.Error(\"Delta is not a number in Clean().\");\n    return polygon;\n  }\n  if (polygon.length === 0 || (polygon.length == 1 && polygon[0].length === 0) || delta < 0) return polygon;\n  if (!isPolygons) polygon = [polygon];\n  var k_length = polygon.length;\n  var len, poly, result, d, p, j, i;\n  var results = [];\n  for (var k = 0; k < k_length; k++)\n  {\n    poly = polygon[k];\n    len = poly.length;\n    if (len === 0) continue;\n    else if (len < 3)\n    {\n      result = poly;\n      results.push(result);\n      continue;\n    }\n    result = poly;\n    d = delta * delta;\n    //d = Math.floor(c_delta * c_delta);\n    p = poly[0];\n    j = 1;\n    for (i = 1; i < len; i++)\n    {\n      if ((poly[i].X - p.X) * (poly[i].X - p.X) +\n        (poly[i].Y - p.Y) * (poly[i].Y - p.Y) <= d)\n        continue;\n      result[j] = poly[i];\n      p = poly[i];\n      j++;\n    }\n    p = poly[j - 1];\n    if ((poly[0].X - p.X) * (poly[0].X - p.X) +\n      (poly[0].Y - p.Y) * (poly[0].Y - p.Y) <= d)\n      j--;\n    if (j < len)\n      result.splice(j, len - j);\n    if (result.length) results.push(result);\n  }\n  if (!isPolygons && results.length) results = results[0];\n  else if (!isPolygons && results.length === 0) results = [];\n  else if (isPolygons && results.length === 0) results = [\n    []\n  ];\n  return results;\n}\n// Make deep copy of Polygons or Polygon\n// so that also IntPoint objects are cloned and not only referenced\n// This should be the fastest way\nClipperLib.JS.Clone = function (polygon)\n{\n  if (!(polygon instanceof Array)) return [];\n  if (polygon.length === 0) return [];\n  else if (polygon.length == 1 && polygon[0].length === 0) return [[]];\n  var isPolygons = polygon[0] instanceof Array;\n  if (!isPolygons) polygon = [polygon];\n  var len = polygon.length,\n    plen, i, j, result;\n  var results = new Array(len);\n  for (i = 0; i < len; i++)\n  {\n    plen = polygon[i].length;\n    result = new Array(plen);\n    for (j = 0; j < plen; j++)\n    {\n      result[j] = {\n        X: polygon[i][j].X,\n        Y: polygon[i][j].Y\n      };\n    }\n    results[i] = result;\n  }\n  if (!isPolygons) results = results[0];\n  return results;\n};\n// Removes points that doesn't affect much to the visual appearance.\n// If middle point is at or under certain distance (tolerance) of the line segment between \n// start and end point, the middle point is removed.\nClipperLib.JS.Lighten = function (polygon, tolerance)\n{\n  if (!(polygon instanceof Array)) return [];\n  if (typeof tolerance != \"number\" || tolerance === null)\n  {\n    ClipperLib.Error(\"Tolerance is not a number in Lighten().\")\n    return ClipperLib.JS.Clone(polygon);\n  }\n  if (polygon.length === 0 || (polygon.length == 1 && polygon[0].length === 0) || tolerance < 0)\n  {\n    return ClipperLib.JS.Clone(polygon);\n  }\n  if (!(polygon[0] instanceof Array)) polygon = [polygon];\n  var i, j, poly, k, poly2, plen, A, B, P, d, rem, addlast;\n  var bxax, byay, l, ax, ay;\n  var len = polygon.length;\n  var toleranceSq = tolerance * tolerance;\n  var results = [];\n  for (i = 0; i < len; i++)\n  {\n    poly = polygon[i];\n    plen = poly.length;\n    if (plen == 0) continue;\n    for (k = 0; k < 1000000; k++) // could be forever loop, but wiser to restrict max repeat count\n    {\n      poly2 = [];\n      plen = poly.length;\n      // the first have to added to the end, if first and last are not the same\n      // this way we ensure that also the actual last point can be removed if needed\n      if (poly[plen - 1].X != poly[0].X || poly[plen - 1].Y != poly[0].Y)\n      {\n        addlast = 1;\n        poly.push(\n        {\n          X: poly[0].X,\n          Y: poly[0].Y\n        });\n        plen = poly.length;\n      }\n      else addlast = 0;\n      rem = []; // Indexes of removed points\n      for (j = 0; j < plen - 2; j++)\n      {\n        A = poly[j]; // Start point of line segment\n        P = poly[j + 1]; // Middle point. This is the one to be removed.\n        B = poly[j + 2]; // End point of line segment\n        ax = A.X;\n        ay = A.Y;\n        bxax = B.X - ax;\n        byay = B.Y - ay;\n        if (bxax !== 0 || byay !== 0) // To avoid Nan, when A==P && P==B. And to avoid peaks (A==B && A!=P), which have lenght, but not area.\n        {\n          l = ((P.X - ax) * bxax + (P.Y - ay) * byay) / (bxax * bxax + byay * byay);\n          if (l > 1)\n          {\n            ax = B.X;\n            ay = B.Y;\n          }\n          else if (l > 0)\n          {\n            ax += bxax * l;\n            ay += byay * l;\n          }\n        }\n        bxax = P.X - ax;\n        byay = P.Y - ay;\n        d = bxax * bxax + byay * byay;\n        if (d <= toleranceSq)\n        {\n          rem[j + 1] = 1;\n          j++; // when removed, transfer the pointer to the next one\n        }\n      }\n      // add all unremoved points to poly2\n      poly2.push(\n      {\n        X: poly[0].X,\n        Y: poly[0].Y\n      });\n      for (j = 1; j < plen - 1; j++)\n        if (!rem[j]) poly2.push(\n        {\n          X: poly[j].X,\n          Y: poly[j].Y\n        });\n      poly2.push(\n      {\n        X: poly[plen - 1].X,\n        Y: poly[plen - 1].Y\n      });\n      // if the first point was added to the end, remove it\n      if (addlast) poly.pop();\n      // break, if there was not anymore removed points\n      if (!rem.length) break;\n      // else continue looping using poly2, to check if there are points to remove\n      else poly = poly2;\n    }\n    plen = poly2.length;\n    // remove duplicate from end, if needed\n    if (poly2[plen - 1].X == poly2[0].X && poly2[plen - 1].Y == poly2[0].Y)\n    {\n      poly2.pop();\n    }\n    if (poly2.length > 2) // to avoid two-point-polygons\n      results.push(poly2);\n  }\n  if (!polygon[0] instanceof Array) results = results[0];\n  if (typeof (results) == \"undefined\") results = [\n    []\n  ];\n  return results;\n}\nClipperLib.JS.PerimeterOfPath = function (path, closed, scale)\n{\n  if (typeof (path) == \"undefined\") return 0;\n  var sqrt = Math.sqrt;\n  var perimeter = 0.0;\n  var p1, p2, p1x = 0.0,\n    p1y = 0.0,\n    p2x = 0.0,\n    p2y = 0.0;\n  var j = path.length;\n  if (j < 2) return 0;\n  if (closed)\n  {\n    path[j] = path[0];\n    j++;\n  }\n  while (--j)\n  {\n    p1 = path[j];\n    p1x = p1.X;\n    p1y = p1.Y;\n    p2 = path[j - 1];\n    p2x = p2.X;\n    p2y = p2.Y;\n    perimeter += sqrt((p1x - p2x) * (p1x - p2x) + (p1y - p2y) * (p1y - p2y));\n  }\n  if (closed) path.pop();\n  return perimeter / scale;\n};\nClipperLib.JS.PerimeterOfPaths = function (paths, closed, scale)\n{\n  if (!scale) scale = 1;\n  var perimeter = 0;\n  for (var i = 0; i < paths.length; i++)\n  {\n    perimeter += ClipperLib.JS.PerimeterOfPath(paths[i], closed, scale);\n  }\n  return perimeter;\n};\nClipperLib.JS.ScaleDownPath = function (path, scale)\n{\n  var i, p;\n  if (!scale) scale = 1;\n  i = path.length;\n  while (i--)\n  {\n    p = path[i];\n    p.X = p.X / scale;\n    p.Y = p.Y / scale;\n  }\n};\nClipperLib.JS.ScaleDownPaths = function (paths, scale)\n{\n  var i, j, p, round = Math.round;\n  if (!scale) scale = 1;\n  i = paths.length;\n  while (i--)\n  {\n    j = paths[i].length;\n    while (j--)\n    {\n      p = paths[i][j];\n      p.X = p.X / scale;\n      p.Y = p.Y / scale;\n    }\n  }\n};\nClipperLib.JS.ScaleUpPath = function (path, scale)\n{\n  var i, p, round = Math.round;\n  if (!scale) scale = 1;\n  i = path.length;\n  while (i--)\n  {\n    p = path[i];\n    p.X = round(p.X * scale);\n    p.Y = round(p.Y * scale);\n  }\n};\nClipperLib.JS.ScaleUpPaths = function (paths, scale)\n{\n  var i, j, p, round = Math.round;\n  if (!scale) scale = 1;\n  i = paths.length;\n  while (i--)\n  {\n    j = paths[i].length;\n    while (j--)\n    {\n      p = paths[i][j];\n      p.X = round(p.X * scale);\n      p.Y = round(p.Y * scale);\n    }\n  }\n};\nClipperLib.ExPolygons = function ()\n{\n  return [];\n}\nClipperLib.ExPolygon = function ()\n{\n  this.outer = null;\n  this.holes = null;\n};\nClipperLib.JS.AddOuterPolyNodeToExPolygons = function (polynode, expolygons)\n{\n  var ep = new ClipperLib.ExPolygon();\n  ep.outer = polynode.Contour();\n  var childs = polynode.Childs();\n  var ilen = childs.length;\n  ep.holes = new Array(ilen);\n  var node, n, i, j, childs2, jlen;\n  for (i = 0; i < ilen; i++)\n  {\n    node = childs[i];\n    ep.holes[i] = node.Contour();\n    //Add outer polygons contained by (nested within) holes ...\n    for (j = 0, childs2 = node.Childs(), jlen = childs2.length; j < jlen; j++)\n    {\n      n = childs2[j];\n      ClipperLib.JS.AddOuterPolyNodeToExPolygons(n, expolygons);\n    }\n  }\n  expolygons.push(ep);\n};\nClipperLib.JS.ExPolygonsToPaths = function (expolygons)\n{\n  var a, i, alen, ilen;\n  var paths = new ClipperLib.Paths();\n  for (a = 0, alen = expolygons.length; a < alen; a++)\n  {\n    paths.push(expolygons[a].outer);\n    for (i = 0, ilen = expolygons[a].holes.length; i < ilen; i++)\n    {\n      paths.push(expolygons[a].holes[i]);\n    }\n  }\n  return paths;\n}\nClipperLib.JS.PolyTreeToExPolygons = function (polytree)\n{\n  var expolygons = new ClipperLib.ExPolygons();\n  var node, i, childs, ilen;\n  for (i = 0, childs = polytree.Childs(), ilen = childs.length; i < ilen; i++)\n  {\n    node = childs[i];\n    ClipperLib.JS.AddOuterPolyNodeToExPolygons(node, expolygons);\n  }\n  return expolygons;\n};\n\n\nmodule.exports = ClipperLib;","/**\r\n * @desc 解决浮动运算问题，避免小数点后产生多位数和计算精度损失。\r\n *\r\n * 问题示例：2.3 + 2.4 = 4.699999999999999，1.0 - 0.9 = 0.09999999999999998\r\n */\r\n/**\r\n * Correct the given number to specifying significant digits.\r\n *\r\n * @param num The input number\r\n * @param precision An integer specifying the number of significant digits\r\n *\r\n * @example strip(0.09999999999999998) === 0.1 // true\r\n */\r\nfunction strip(num, precision) {\r\n    if (precision === void 0) { precision = 15; }\r\n    return +parseFloat(Number(num).toPrecision(precision));\r\n}\r\n/**\r\n * Return digits length of a number.\r\n *\r\n * @param num The input number\r\n */\r\nfunction digitLength(num) {\r\n    // Get digit length of e\r\n    var eSplit = num.toString().split(/[eE]/);\r\n    var len = (eSplit[0].split('.')[1] || '').length - +(eSplit[1] || 0);\r\n    return len > 0 ? len : 0;\r\n}\r\n/**\r\n * Convert the given number to integer, support scientific notation.\r\n * The number will be scale up if it is decimal.\r\n *\r\n * @param num The input number\r\n */\r\nfunction float2Fixed(num) {\r\n    if (num.toString().indexOf('e') === -1) {\r\n        return Number(num.toString().replace('.', ''));\r\n    }\r\n    var dLen = digitLength(num);\r\n    return dLen > 0 ? strip(Number(num) * Math.pow(10, dLen)) : Number(num);\r\n}\r\n/**\r\n * Log a warning if the given number is out of bounds.\r\n *\r\n * @param num The input number\r\n */\r\nfunction checkBoundary(num) {\r\n    if (_boundaryCheckingState) {\r\n        if (num > Number.MAX_SAFE_INTEGER || num < Number.MIN_SAFE_INTEGER) {\r\n            console.warn(num + \" is beyond boundary when transfer to integer, the results may not be accurate\");\r\n        }\r\n    }\r\n}\r\n/**\r\n * Create an operation to support rest params.\r\n *\r\n * @param operation The original operation\r\n */\r\nfunction createOperation(operation) {\r\n    return function () {\r\n        var nums = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            nums[_i] = arguments[_i];\r\n        }\r\n        var first = nums[0], others = nums.slice(1);\r\n        return others.reduce(function (prev, next) { return operation(prev, next); }, first);\r\n    };\r\n}\r\n/**\r\n * Accurate multiplication.\r\n *\r\n * @param nums The numbers to multiply\r\n */\r\nvar times = createOperation(function (num1, num2) {\r\n    var num1Changed = float2Fixed(num1);\r\n    var num2Changed = float2Fixed(num2);\r\n    var baseNum = digitLength(num1) + digitLength(num2);\r\n    var leftValue = num1Changed * num2Changed;\r\n    checkBoundary(leftValue);\r\n    return leftValue / Math.pow(10, baseNum);\r\n});\r\n/**\r\n * Accurate addition.\r\n *\r\n * @param nums The numbers to add\r\n */\r\nvar plus = createOperation(function (num1, num2) {\r\n    // 取最大的小数位\r\n    var baseNum = Math.pow(10, Math.max(digitLength(num1), digitLength(num2)));\r\n    // 把小数都转为整数然后再计算\r\n    return (times(num1, baseNum) + times(num2, baseNum)) / baseNum;\r\n});\r\n/**\r\n * Accurate subtraction.\r\n *\r\n * @param nums The numbers to subtract\r\n */\r\nvar minus = createOperation(function (num1, num2) {\r\n    var baseNum = Math.pow(10, Math.max(digitLength(num1), digitLength(num2)));\r\n    return (times(num1, baseNum) - times(num2, baseNum)) / baseNum;\r\n});\r\n/**\r\n * Accurate division.\r\n *\r\n * @param nums The numbers to divide\r\n */\r\nvar divide = createOperation(function (num1, num2) {\r\n    var num1Changed = float2Fixed(num1);\r\n    var num2Changed = float2Fixed(num2);\r\n    checkBoundary(num1Changed);\r\n    checkBoundary(num2Changed);\r\n    // fix: 类似 10 ** -4 为 0.00009999999999999999，strip 修正\r\n    return times(num1Changed / num2Changed, strip(Math.pow(10, digitLength(num2) - digitLength(num1))));\r\n});\r\n/**\r\n * Accurate rounding method.\r\n *\r\n * @param num The number to round\r\n * @param decimal An integer specifying the decimal digits\r\n */\r\nfunction round(num, decimal) {\r\n    var base = Math.pow(10, decimal);\r\n    var result = divide(Math.round(Math.abs(times(num, base))), base);\r\n    if (num < 0 && result !== 0) {\r\n        result = times(result, -1);\r\n    }\r\n    return result;\r\n}\r\nvar _boundaryCheckingState = true;\r\n/**\r\n * Whether to check the bounds of number, default is enabled.\r\n *\r\n * @param flag The value to indicate whether is enabled\r\n */\r\nfunction enableBoundaryChecking(flag) {\r\n    if (flag === void 0) { flag = true; }\r\n    _boundaryCheckingState = flag;\r\n}\r\nvar index = {\r\n    strip: strip,\r\n    plus: plus,\r\n    minus: minus,\r\n    times: times,\r\n    divide: divide,\r\n    round: round,\r\n    digitLength: digitLength,\r\n    float2Fixed: float2Fixed,\r\n    enableBoundaryChecking: enableBoundaryChecking,\r\n};\n\nexport { strip, plus, minus, times, divide, round, digitLength, float2Fixed, enableBoundaryChecking };\nexport default index;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47 /*/*/;\n  var end = -1;\n  var matchedSlash = true;\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.';\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n  return path.slice(0, end);\n};\n\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) return '';\n  return path.slice(start, end);\n}\n\n// Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\nexports.basename = function (path, ext) {\n  var f = basename(path);\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true;\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n  var preDotState = 0;\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n    if (code === 46 /*.*/) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n    } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n\n  if (startDot === -1 || end === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n  return path.slice(startDot, end);\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","'use strict'\n\n// limit of Crypto.getRandomValues()\n// https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues\nvar MAX_BYTES = 65536\n\n// Node supports requesting up to this number of bytes\n// https://github.com/nodejs/node/blob/master/lib/internal/crypto/random.js#L48\nvar MAX_UINT32 = 4294967295\n\nfunction oldBrowser () {\n  throw new Error('Secure random number generation is not supported by this browser.\\nUse Chrome, Firefox or Internet Explorer 11')\n}\n\nvar Buffer = require('safe-buffer').Buffer\nvar crypto = global.crypto || global.msCrypto\n\nif (crypto && crypto.getRandomValues) {\n  module.exports = randomBytes\n} else {\n  module.exports = oldBrowser\n}\n\nfunction randomBytes (size, cb) {\n  // phantomjs needs to throw\n  if (size > MAX_UINT32) throw new RangeError('requested too many random bytes')\n\n  var bytes = Buffer.allocUnsafe(size)\n\n  if (size > 0) {  // getRandomValues fails on IE if size == 0\n    if (size > MAX_BYTES) { // this is the max bytes crypto.getRandomValues\n      // can do at once see https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues\n      for (var generated = 0; generated < size; generated += MAX_BYTES) {\n        // buffer.slice automatically checks if the end is past the end of\n        // the buffer so we don't have to here\n        crypto.getRandomValues(bytes.slice(generated, generated + MAX_BYTES))\n      }\n    } else {\n      crypto.getRandomValues(bytes)\n    }\n  }\n\n  if (typeof cb === 'function') {\n    return process.nextTick(function () {\n      cb(null, bytes)\n    })\n  }\n\n  return bytes\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","'use strict';\n\nif (typeof process === 'undefined' ||\n    !process.version ||\n    process.version.indexOf('v0.') === 0 ||\n    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\n  module.exports = { nextTick: nextTick };\n} else {\n  module.exports = process\n}\n\nfunction nextTick(fn, arg1, arg2, arg3) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('\"callback\" argument must be a function');\n  }\n  var len = arguments.length;\n  var args, i;\n  switch (len) {\n  case 0:\n  case 1:\n    return process.nextTick(fn);\n  case 2:\n    return process.nextTick(function afterTickOne() {\n      fn.call(null, arg1);\n    });\n  case 3:\n    return process.nextTick(function afterTickTwo() {\n      fn.call(null, arg1, arg2);\n    });\n  case 4:\n    return process.nextTick(function afterTickThree() {\n      fn.call(null, arg1, arg2, arg3);\n    });\n  default:\n    args = new Array(len - 1);\n    i = 0;\n    while (i < args.length) {\n      args[i++] = arguments[i];\n    }\n    return process.nextTick(function afterTick() {\n      fn.apply(null, args);\n    });\n  }\n}\n\n","module.exports = require('events').EventEmitter;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('buffer').Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n","'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Buffer = require('safe-buffer').Buffer;\nvar util = require('util');\n\nfunction copyBuffer(src, target, offset) {\n  src.copy(target, offset);\n}\n\nmodule.exports = function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  BufferList.prototype.push = function push(v) {\n    var entry = { data: v, next: null };\n    if (this.length > 0) this.tail.next = entry;else this.head = entry;\n    this.tail = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.unshift = function unshift(v) {\n    var entry = { data: v, next: this.head };\n    if (this.length === 0) this.tail = entry;\n    this.head = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.shift = function shift() {\n    if (this.length === 0) return;\n    var ret = this.head.data;\n    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n    --this.length;\n    return ret;\n  };\n\n  BufferList.prototype.clear = function clear() {\n    this.head = this.tail = null;\n    this.length = 0;\n  };\n\n  BufferList.prototype.join = function join(s) {\n    if (this.length === 0) return '';\n    var p = this.head;\n    var ret = '' + p.data;\n    while (p = p.next) {\n      ret += s + p.data;\n    }return ret;\n  };\n\n  BufferList.prototype.concat = function concat(n) {\n    if (this.length === 0) return Buffer.alloc(0);\n    var ret = Buffer.allocUnsafe(n >>> 0);\n    var p = this.head;\n    var i = 0;\n    while (p) {\n      copyBuffer(p.data, ret, i);\n      i += p.data.length;\n      p = p.next;\n    }\n    return ret;\n  };\n\n  return BufferList;\n}();\n\nif (util && util.inspect && util.inspect.custom) {\n  module.exports.prototype[util.inspect.custom] = function () {\n    var obj = util.inspect({ length: this.length });\n    return this.constructor.name + ' ' + obj;\n  };\n}","'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      if (!this._writableState) {\n        pna.nextTick(emitErrorNT, this, err);\n      } else if (!this._writableState.errorEmitted) {\n        this._writableState.errorEmitted = true;\n        pna.nextTick(emitErrorNT, this, err);\n      }\n    }\n\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      if (!_this._writableState) {\n        pna.nextTick(emitErrorNT, _this, err);\n      } else if (!_this._writableState.errorEmitted) {\n        _this._writableState.errorEmitted = true;\n        pna.nextTick(emitErrorNT, _this, err);\n      }\n    } else if (cb) {\n      cb(err);\n    }\n  });\n\n  return this;\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finalCalled = false;\n    this._writableState.prefinished = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy\n};","\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = (typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nutil.inherits(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var writableHwm = options.writableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function () {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function (object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function (object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {\n    return new Writable(options);\n  }\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  pna.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    pna.nextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    pna.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    pna.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n      asyncWrite(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('_write() is not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      stream.emit('error', err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function') {\n      state.pendingcb++;\n      state.finalCalled = true;\n      pna.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n\n  // reuse the free corkReq.\n  state.corkedRequestsFree.next = corkReq;\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  get: function () {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\n\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  this.end();\n  cb(err);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    keys.push(key);\n  }return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\n{\n  // avoid scope creep, the keys array can then be collected\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  pna.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n\nDuplex.prototype._destroy = function (err, cb) {\n  this.push(null);\n  this.end();\n\n  pna.nextTick(cb, err);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function (emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = (typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug = void 0;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/BufferList');\nvar destroyImpl = require('./internal/streams/destroy');\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var readableHwm = options.readableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\n\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  this.push(null);\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      stream.emit('error', er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        stream.emit('error', new Error('stream.push() after EOF'));\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n    }\n  }\n\n  return needMoreData(state);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    stream.emit('data', chunk);\n    stream.read(0);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    pna.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('_read() is not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', state.awaitDrain);\n        state.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = { hasUnpiped: false };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, { hasUnpiped: false });\n    }return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this, unpipeInfo);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        pna.nextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    pna.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._readableState.highWaterMark;\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = Buffer.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    pna.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb) {\n    return this.emit('error', new Error('write callback called multiple times'));\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n\n  cb(er);\n\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function') {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('_transform() is not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  var _this2 = this;\n\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n    _this2.emit('close');\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');\n\n  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');\n\n  return stream.push(null);\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\n","module.exports = require('./lib/_stream_writable.js');\n","module.exports = require('./lib/_stream_duplex.js');\n","module.exports = require('./readable').Transform\n","module.exports = require('./readable').PassThrough\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = require('events').EventEmitter;\nvar inherits = require('inherits');\n\ninherits(Stream, EE);\nStream.Readable = require('readable-stream/readable.js');\nStream.Writable = require('readable-stream/writable.js');\nStream.Duplex = require('readable-stream/duplex.js');\nStream.Transform = require('readable-stream/transform.js');\nStream.PassThrough = require('readable-stream/passthrough.js');\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n","'use strict'\nvar Buffer = require('safe-buffer').Buffer\nvar Transform = require('stream').Transform\nvar inherits = require('inherits')\n\nfunction throwIfNotStringOrBuffer (val, prefix) {\n  if (!Buffer.isBuffer(val) && typeof val !== 'string') {\n    throw new TypeError(prefix + ' must be a string or a buffer')\n  }\n}\n\nfunction HashBase (blockSize) {\n  Transform.call(this)\n\n  this._block = Buffer.allocUnsafe(blockSize)\n  this._blockSize = blockSize\n  this._blockOffset = 0\n  this._length = [0, 0, 0, 0]\n\n  this._finalized = false\n}\n\ninherits(HashBase, Transform)\n\nHashBase.prototype._transform = function (chunk, encoding, callback) {\n  var error = null\n  try {\n    this.update(chunk, encoding)\n  } catch (err) {\n    error = err\n  }\n\n  callback(error)\n}\n\nHashBase.prototype._flush = function (callback) {\n  var error = null\n  try {\n    this.push(this.digest())\n  } catch (err) {\n    error = err\n  }\n\n  callback(error)\n}\n\nHashBase.prototype.update = function (data, encoding) {\n  throwIfNotStringOrBuffer(data, 'Data')\n  if (this._finalized) throw new Error('Digest already called')\n  if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)\n\n  // consume data\n  var block = this._block\n  var offset = 0\n  while (this._blockOffset + data.length - offset >= this._blockSize) {\n    for (var i = this._blockOffset; i < this._blockSize;) block[i++] = data[offset++]\n    this._update()\n    this._blockOffset = 0\n  }\n  while (offset < data.length) block[this._blockOffset++] = data[offset++]\n\n  // update length\n  for (var j = 0, carry = data.length * 8; carry > 0; ++j) {\n    this._length[j] += carry\n    carry = (this._length[j] / 0x0100000000) | 0\n    if (carry > 0) this._length[j] -= 0x0100000000 * carry\n  }\n\n  return this\n}\n\nHashBase.prototype._update = function () {\n  throw new Error('_update is not implemented')\n}\n\nHashBase.prototype.digest = function (encoding) {\n  if (this._finalized) throw new Error('Digest already called')\n  this._finalized = true\n\n  var digest = this._digest()\n  if (encoding !== undefined) digest = digest.toString(encoding)\n\n  // reset state\n  this._block.fill(0)\n  this._blockOffset = 0\n  for (var i = 0; i < 4; ++i) this._length[i] = 0\n\n  return digest\n}\n\nHashBase.prototype._digest = function () {\n  throw new Error('_digest is not implemented')\n}\n\nmodule.exports = HashBase\n","'use strict'\nvar inherits = require('inherits')\nvar HashBase = require('hash-base')\nvar Buffer = require('safe-buffer').Buffer\n\nvar ARRAY16 = new Array(16)\n\nfunction MD5 () {\n  HashBase.call(this, 64)\n\n  // state\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n}\n\ninherits(MD5, HashBase)\n\nMD5.prototype._update = function () {\n  var M = ARRAY16\n  for (var i = 0; i < 16; ++i) M[i] = this._block.readInt32LE(i * 4)\n\n  var a = this._a\n  var b = this._b\n  var c = this._c\n  var d = this._d\n\n  a = fnF(a, b, c, d, M[0], 0xd76aa478, 7)\n  d = fnF(d, a, b, c, M[1], 0xe8c7b756, 12)\n  c = fnF(c, d, a, b, M[2], 0x242070db, 17)\n  b = fnF(b, c, d, a, M[3], 0xc1bdceee, 22)\n  a = fnF(a, b, c, d, M[4], 0xf57c0faf, 7)\n  d = fnF(d, a, b, c, M[5], 0x4787c62a, 12)\n  c = fnF(c, d, a, b, M[6], 0xa8304613, 17)\n  b = fnF(b, c, d, a, M[7], 0xfd469501, 22)\n  a = fnF(a, b, c, d, M[8], 0x698098d8, 7)\n  d = fnF(d, a, b, c, M[9], 0x8b44f7af, 12)\n  c = fnF(c, d, a, b, M[10], 0xffff5bb1, 17)\n  b = fnF(b, c, d, a, M[11], 0x895cd7be, 22)\n  a = fnF(a, b, c, d, M[12], 0x6b901122, 7)\n  d = fnF(d, a, b, c, M[13], 0xfd987193, 12)\n  c = fnF(c, d, a, b, M[14], 0xa679438e, 17)\n  b = fnF(b, c, d, a, M[15], 0x49b40821, 22)\n\n  a = fnG(a, b, c, d, M[1], 0xf61e2562, 5)\n  d = fnG(d, a, b, c, M[6], 0xc040b340, 9)\n  c = fnG(c, d, a, b, M[11], 0x265e5a51, 14)\n  b = fnG(b, c, d, a, M[0], 0xe9b6c7aa, 20)\n  a = fnG(a, b, c, d, M[5], 0xd62f105d, 5)\n  d = fnG(d, a, b, c, M[10], 0x02441453, 9)\n  c = fnG(c, d, a, b, M[15], 0xd8a1e681, 14)\n  b = fnG(b, c, d, a, M[4], 0xe7d3fbc8, 20)\n  a = fnG(a, b, c, d, M[9], 0x21e1cde6, 5)\n  d = fnG(d, a, b, c, M[14], 0xc33707d6, 9)\n  c = fnG(c, d, a, b, M[3], 0xf4d50d87, 14)\n  b = fnG(b, c, d, a, M[8], 0x455a14ed, 20)\n  a = fnG(a, b, c, d, M[13], 0xa9e3e905, 5)\n  d = fnG(d, a, b, c, M[2], 0xfcefa3f8, 9)\n  c = fnG(c, d, a, b, M[7], 0x676f02d9, 14)\n  b = fnG(b, c, d, a, M[12], 0x8d2a4c8a, 20)\n\n  a = fnH(a, b, c, d, M[5], 0xfffa3942, 4)\n  d = fnH(d, a, b, c, M[8], 0x8771f681, 11)\n  c = fnH(c, d, a, b, M[11], 0x6d9d6122, 16)\n  b = fnH(b, c, d, a, M[14], 0xfde5380c, 23)\n  a = fnH(a, b, c, d, M[1], 0xa4beea44, 4)\n  d = fnH(d, a, b, c, M[4], 0x4bdecfa9, 11)\n  c = fnH(c, d, a, b, M[7], 0xf6bb4b60, 16)\n  b = fnH(b, c, d, a, M[10], 0xbebfbc70, 23)\n  a = fnH(a, b, c, d, M[13], 0x289b7ec6, 4)\n  d = fnH(d, a, b, c, M[0], 0xeaa127fa, 11)\n  c = fnH(c, d, a, b, M[3], 0xd4ef3085, 16)\n  b = fnH(b, c, d, a, M[6], 0x04881d05, 23)\n  a = fnH(a, b, c, d, M[9], 0xd9d4d039, 4)\n  d = fnH(d, a, b, c, M[12], 0xe6db99e5, 11)\n  c = fnH(c, d, a, b, M[15], 0x1fa27cf8, 16)\n  b = fnH(b, c, d, a, M[2], 0xc4ac5665, 23)\n\n  a = fnI(a, b, c, d, M[0], 0xf4292244, 6)\n  d = fnI(d, a, b, c, M[7], 0x432aff97, 10)\n  c = fnI(c, d, a, b, M[14], 0xab9423a7, 15)\n  b = fnI(b, c, d, a, M[5], 0xfc93a039, 21)\n  a = fnI(a, b, c, d, M[12], 0x655b59c3, 6)\n  d = fnI(d, a, b, c, M[3], 0x8f0ccc92, 10)\n  c = fnI(c, d, a, b, M[10], 0xffeff47d, 15)\n  b = fnI(b, c, d, a, M[1], 0x85845dd1, 21)\n  a = fnI(a, b, c, d, M[8], 0x6fa87e4f, 6)\n  d = fnI(d, a, b, c, M[15], 0xfe2ce6e0, 10)\n  c = fnI(c, d, a, b, M[6], 0xa3014314, 15)\n  b = fnI(b, c, d, a, M[13], 0x4e0811a1, 21)\n  a = fnI(a, b, c, d, M[4], 0xf7537e82, 6)\n  d = fnI(d, a, b, c, M[11], 0xbd3af235, 10)\n  c = fnI(c, d, a, b, M[2], 0x2ad7d2bb, 15)\n  b = fnI(b, c, d, a, M[9], 0xeb86d391, 21)\n\n  this._a = (this._a + a) | 0\n  this._b = (this._b + b) | 0\n  this._c = (this._c + c) | 0\n  this._d = (this._d + d) | 0\n}\n\nMD5.prototype._digest = function () {\n  // create padding and handle blocks\n  this._block[this._blockOffset++] = 0x80\n  if (this._blockOffset > 56) {\n    this._block.fill(0, this._blockOffset, 64)\n    this._update()\n    this._blockOffset = 0\n  }\n\n  this._block.fill(0, this._blockOffset, 56)\n  this._block.writeUInt32LE(this._length[0], 56)\n  this._block.writeUInt32LE(this._length[1], 60)\n  this._update()\n\n  // produce result\n  var buffer = Buffer.allocUnsafe(16)\n  buffer.writeInt32LE(this._a, 0)\n  buffer.writeInt32LE(this._b, 4)\n  buffer.writeInt32LE(this._c, 8)\n  buffer.writeInt32LE(this._d, 12)\n  return buffer\n}\n\nfunction rotl (x, n) {\n  return (x << n) | (x >>> (32 - n))\n}\n\nfunction fnF (a, b, c, d, m, k, s) {\n  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + b) | 0\n}\n\nfunction fnG (a, b, c, d, m, k, s) {\n  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + b) | 0\n}\n\nfunction fnH (a, b, c, d, m, k, s) {\n  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + b) | 0\n}\n\nfunction fnI (a, b, c, d, m, k, s) {\n  return (rotl((a + ((c ^ (b | (~d)))) + m + k) | 0, s) + b) | 0\n}\n\nmodule.exports = MD5\n","'use strict'\nvar Buffer = require('buffer').Buffer\nvar inherits = require('inherits')\nvar HashBase = require('hash-base')\n\nvar ARRAY16 = new Array(16)\n\nvar zl = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n]\n\nvar zr = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n]\n\nvar sl = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n]\n\nvar sr = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n]\n\nvar hl = [0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e]\nvar hr = [0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000]\n\nfunction RIPEMD160 () {\n  HashBase.call(this, 64)\n\n  // state\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n}\n\ninherits(RIPEMD160, HashBase)\n\nRIPEMD160.prototype._update = function () {\n  var words = ARRAY16\n  for (var j = 0; j < 16; ++j) words[j] = this._block.readInt32LE(j * 4)\n\n  var al = this._a | 0\n  var bl = this._b | 0\n  var cl = this._c | 0\n  var dl = this._d | 0\n  var el = this._e | 0\n\n  var ar = this._a | 0\n  var br = this._b | 0\n  var cr = this._c | 0\n  var dr = this._d | 0\n  var er = this._e | 0\n\n  // computation\n  for (var i = 0; i < 80; i += 1) {\n    var tl\n    var tr\n    if (i < 16) {\n      tl = fn1(al, bl, cl, dl, el, words[zl[i]], hl[0], sl[i])\n      tr = fn5(ar, br, cr, dr, er, words[zr[i]], hr[0], sr[i])\n    } else if (i < 32) {\n      tl = fn2(al, bl, cl, dl, el, words[zl[i]], hl[1], sl[i])\n      tr = fn4(ar, br, cr, dr, er, words[zr[i]], hr[1], sr[i])\n    } else if (i < 48) {\n      tl = fn3(al, bl, cl, dl, el, words[zl[i]], hl[2], sl[i])\n      tr = fn3(ar, br, cr, dr, er, words[zr[i]], hr[2], sr[i])\n    } else if (i < 64) {\n      tl = fn4(al, bl, cl, dl, el, words[zl[i]], hl[3], sl[i])\n      tr = fn2(ar, br, cr, dr, er, words[zr[i]], hr[3], sr[i])\n    } else { // if (i<80) {\n      tl = fn5(al, bl, cl, dl, el, words[zl[i]], hl[4], sl[i])\n      tr = fn1(ar, br, cr, dr, er, words[zr[i]], hr[4], sr[i])\n    }\n\n    al = el\n    el = dl\n    dl = rotl(cl, 10)\n    cl = bl\n    bl = tl\n\n    ar = er\n    er = dr\n    dr = rotl(cr, 10)\n    cr = br\n    br = tr\n  }\n\n  // update state\n  var t = (this._b + cl + dr) | 0\n  this._b = (this._c + dl + er) | 0\n  this._c = (this._d + el + ar) | 0\n  this._d = (this._e + al + br) | 0\n  this._e = (this._a + bl + cr) | 0\n  this._a = t\n}\n\nRIPEMD160.prototype._digest = function () {\n  // create padding and handle blocks\n  this._block[this._blockOffset++] = 0x80\n  if (this._blockOffset > 56) {\n    this._block.fill(0, this._blockOffset, 64)\n    this._update()\n    this._blockOffset = 0\n  }\n\n  this._block.fill(0, this._blockOffset, 56)\n  this._block.writeUInt32LE(this._length[0], 56)\n  this._block.writeUInt32LE(this._length[1], 60)\n  this._update()\n\n  // produce result\n  var buffer = Buffer.alloc ? Buffer.alloc(20) : new Buffer(20)\n  buffer.writeInt32LE(this._a, 0)\n  buffer.writeInt32LE(this._b, 4)\n  buffer.writeInt32LE(this._c, 8)\n  buffer.writeInt32LE(this._d, 12)\n  buffer.writeInt32LE(this._e, 16)\n  return buffer\n}\n\nfunction rotl (x, n) {\n  return (x << n) | (x >>> (32 - n))\n}\n\nfunction fn1 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn2 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn3 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + ((b | (~c)) ^ d) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn4 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn5 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + (b ^ (c | (~d))) + m + k) | 0, s) + e) | 0\n}\n\nmodule.exports = RIPEMD160\n","var Buffer = require('safe-buffer').Buffer\n\n// prototype class for hash functions\nfunction Hash (blockSize, finalSize) {\n  this._block = Buffer.alloc(blockSize)\n  this._finalSize = finalSize\n  this._blockSize = blockSize\n  this._len = 0\n}\n\nHash.prototype.update = function (data, enc) {\n  if (typeof data === 'string') {\n    enc = enc || 'utf8'\n    data = Buffer.from(data, enc)\n  }\n\n  var block = this._block\n  var blockSize = this._blockSize\n  var length = data.length\n  var accum = this._len\n\n  for (var offset = 0; offset < length;) {\n    var assigned = accum % blockSize\n    var remainder = Math.min(length - offset, blockSize - assigned)\n\n    for (var i = 0; i < remainder; i++) {\n      block[assigned + i] = data[offset + i]\n    }\n\n    accum += remainder\n    offset += remainder\n\n    if ((accum % blockSize) === 0) {\n      this._update(block)\n    }\n  }\n\n  this._len += length\n  return this\n}\n\nHash.prototype.digest = function (enc) {\n  var rem = this._len % this._blockSize\n\n  this._block[rem] = 0x80\n\n  // zero (rem + 1) trailing bits, where (rem + 1) is the smallest\n  // non-negative solution to the equation (length + 1 + (rem + 1)) === finalSize mod blockSize\n  this._block.fill(0, rem + 1)\n\n  if (rem >= this._finalSize) {\n    this._update(this._block)\n    this._block.fill(0)\n  }\n\n  var bits = this._len * 8\n\n  // uint32\n  if (bits <= 0xffffffff) {\n    this._block.writeUInt32BE(bits, this._blockSize - 4)\n\n  // uint64\n  } else {\n    var lowBits = (bits & 0xffffffff) >>> 0\n    var highBits = (bits - lowBits) / 0x100000000\n\n    this._block.writeUInt32BE(highBits, this._blockSize - 8)\n    this._block.writeUInt32BE(lowBits, this._blockSize - 4)\n  }\n\n  this._update(this._block)\n  var hash = this._hash()\n\n  return enc ? hash.toString(enc) : hash\n}\n\nHash.prototype._update = function () {\n  throw new Error('_update must be implemented by subclass')\n}\n\nmodule.exports = Hash\n","/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-0, as defined\n * in FIPS PUB 180-1\n * This source code is derived from sha1.js of the same repository.\n * The difference between SHA-0 and SHA-1 is just a bitwise rotate left\n * operation was added.\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0\n]\n\nvar W = new Array(80)\n\nfunction Sha () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha, Hash)\n\nSha.prototype.init = function () {\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n\n  return this\n}\n\nfunction rotl5 (num) {\n  return (num << 5) | (num >>> 27)\n}\n\nfunction rotl30 (num) {\n  return (num << 30) | (num >>> 2)\n}\n\nfunction ft (s, b, c, d) {\n  if (s === 0) return (b & c) | ((~b) & d)\n  if (s === 2) return (b & c) | (b & d) | (c & d)\n  return b ^ c ^ d\n}\n\nSha.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 80; ++i) W[i] = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16]\n\n  for (var j = 0; j < 80; ++j) {\n    var s = ~~(j / 20)\n    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0\n\n    e = d\n    d = c\n    c = rotl30(b)\n    b = a\n    a = t\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n}\n\nSha.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(20)\n\n  H.writeInt32BE(this._a | 0, 0)\n  H.writeInt32BE(this._b | 0, 4)\n  H.writeInt32BE(this._c | 0, 8)\n  H.writeInt32BE(this._d | 0, 12)\n  H.writeInt32BE(this._e | 0, 16)\n\n  return H\n}\n\nmodule.exports = Sha\n","/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined\n * in FIPS PUB 180-1\n * Version 2.1a Copyright Paul Johnston 2000 - 2002.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for details.\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0\n]\n\nvar W = new Array(80)\n\nfunction Sha1 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha1, Hash)\n\nSha1.prototype.init = function () {\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n\n  return this\n}\n\nfunction rotl1 (num) {\n  return (num << 1) | (num >>> 31)\n}\n\nfunction rotl5 (num) {\n  return (num << 5) | (num >>> 27)\n}\n\nfunction rotl30 (num) {\n  return (num << 30) | (num >>> 2)\n}\n\nfunction ft (s, b, c, d) {\n  if (s === 0) return (b & c) | ((~b) & d)\n  if (s === 2) return (b & c) | (b & d) | (c & d)\n  return b ^ c ^ d\n}\n\nSha1.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 80; ++i) W[i] = rotl1(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16])\n\n  for (var j = 0; j < 80; ++j) {\n    var s = ~~(j / 20)\n    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0\n\n    e = d\n    d = c\n    c = rotl30(b)\n    b = a\n    a = t\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n}\n\nSha1.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(20)\n\n  H.writeInt32BE(this._a | 0, 0)\n  H.writeInt32BE(this._b | 0, 4)\n  H.writeInt32BE(this._c | 0, 8)\n  H.writeInt32BE(this._d | 0, 12)\n  H.writeInt32BE(this._e | 0, 16)\n\n  return H\n}\n\nmodule.exports = Sha1\n","/**\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5,\n  0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5,\n  0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3,\n  0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174,\n  0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC,\n  0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA,\n  0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7,\n  0xC6E00BF3, 0xD5A79147, 0x06CA6351, 0x14292967,\n  0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13,\n  0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85,\n  0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3,\n  0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070,\n  0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5,\n  0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3,\n  0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208,\n  0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2\n]\n\nvar W = new Array(64)\n\nfunction Sha256 () {\n  this.init()\n\n  this._w = W // new Array(64)\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha256, Hash)\n\nSha256.prototype.init = function () {\n  this._a = 0x6a09e667\n  this._b = 0xbb67ae85\n  this._c = 0x3c6ef372\n  this._d = 0xa54ff53a\n  this._e = 0x510e527f\n  this._f = 0x9b05688c\n  this._g = 0x1f83d9ab\n  this._h = 0x5be0cd19\n\n  return this\n}\n\nfunction ch (x, y, z) {\n  return z ^ (x & (y ^ z))\n}\n\nfunction maj (x, y, z) {\n  return (x & y) | (z & (x | y))\n}\n\nfunction sigma0 (x) {\n  return (x >>> 2 | x << 30) ^ (x >>> 13 | x << 19) ^ (x >>> 22 | x << 10)\n}\n\nfunction sigma1 (x) {\n  return (x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7)\n}\n\nfunction gamma0 (x) {\n  return (x >>> 7 | x << 25) ^ (x >>> 18 | x << 14) ^ (x >>> 3)\n}\n\nfunction gamma1 (x) {\n  return (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ (x >>> 10)\n}\n\nSha256.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n  var f = this._f | 0\n  var g = this._g | 0\n  var h = this._h | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 64; ++i) W[i] = (gamma1(W[i - 2]) + W[i - 7] + gamma0(W[i - 15]) + W[i - 16]) | 0\n\n  for (var j = 0; j < 64; ++j) {\n    var T1 = (h + sigma1(e) + ch(e, f, g) + K[j] + W[j]) | 0\n    var T2 = (sigma0(a) + maj(a, b, c)) | 0\n\n    h = g\n    g = f\n    f = e\n    e = (d + T1) | 0\n    d = c\n    c = b\n    b = a\n    a = (T1 + T2) | 0\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n  this._f = (f + this._f) | 0\n  this._g = (g + this._g) | 0\n  this._h = (h + this._h) | 0\n}\n\nSha256.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(32)\n\n  H.writeInt32BE(this._a, 0)\n  H.writeInt32BE(this._b, 4)\n  H.writeInt32BE(this._c, 8)\n  H.writeInt32BE(this._d, 12)\n  H.writeInt32BE(this._e, 16)\n  H.writeInt32BE(this._f, 20)\n  H.writeInt32BE(this._g, 24)\n  H.writeInt32BE(this._h, 28)\n\n  return H\n}\n\nmodule.exports = Sha256\n","/**\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\n\nvar inherits = require('inherits')\nvar Sha256 = require('./sha256')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar W = new Array(64)\n\nfunction Sha224 () {\n  this.init()\n\n  this._w = W // new Array(64)\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha224, Sha256)\n\nSha224.prototype.init = function () {\n  this._a = 0xc1059ed8\n  this._b = 0x367cd507\n  this._c = 0x3070dd17\n  this._d = 0xf70e5939\n  this._e = 0xffc00b31\n  this._f = 0x68581511\n  this._g = 0x64f98fa7\n  this._h = 0xbefa4fa4\n\n  return this\n}\n\nSha224.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(28)\n\n  H.writeInt32BE(this._a, 0)\n  H.writeInt32BE(this._b, 4)\n  H.writeInt32BE(this._c, 8)\n  H.writeInt32BE(this._d, 12)\n  H.writeInt32BE(this._e, 16)\n  H.writeInt32BE(this._f, 20)\n  H.writeInt32BE(this._g, 24)\n\n  return H\n}\n\nmodule.exports = Sha224\n","var inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n]\n\nvar W = new Array(160)\n\nfunction Sha512 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 128, 112)\n}\n\ninherits(Sha512, Hash)\n\nSha512.prototype.init = function () {\n  this._ah = 0x6a09e667\n  this._bh = 0xbb67ae85\n  this._ch = 0x3c6ef372\n  this._dh = 0xa54ff53a\n  this._eh = 0x510e527f\n  this._fh = 0x9b05688c\n  this._gh = 0x1f83d9ab\n  this._hh = 0x5be0cd19\n\n  this._al = 0xf3bcc908\n  this._bl = 0x84caa73b\n  this._cl = 0xfe94f82b\n  this._dl = 0x5f1d36f1\n  this._el = 0xade682d1\n  this._fl = 0x2b3e6c1f\n  this._gl = 0xfb41bd6b\n  this._hl = 0x137e2179\n\n  return this\n}\n\nfunction Ch (x, y, z) {\n  return z ^ (x & (y ^ z))\n}\n\nfunction maj (x, y, z) {\n  return (x & y) | (z & (x | y))\n}\n\nfunction sigma0 (x, xl) {\n  return (x >>> 28 | xl << 4) ^ (xl >>> 2 | x << 30) ^ (xl >>> 7 | x << 25)\n}\n\nfunction sigma1 (x, xl) {\n  return (x >>> 14 | xl << 18) ^ (x >>> 18 | xl << 14) ^ (xl >>> 9 | x << 23)\n}\n\nfunction Gamma0 (x, xl) {\n  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7)\n}\n\nfunction Gamma0l (x, xl) {\n  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7 | xl << 25)\n}\n\nfunction Gamma1 (x, xl) {\n  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6)\n}\n\nfunction Gamma1l (x, xl) {\n  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6 | xl << 26)\n}\n\nfunction getCarry (a, b) {\n  return (a >>> 0) < (b >>> 0) ? 1 : 0\n}\n\nSha512.prototype._update = function (M) {\n  var W = this._w\n\n  var ah = this._ah | 0\n  var bh = this._bh | 0\n  var ch = this._ch | 0\n  var dh = this._dh | 0\n  var eh = this._eh | 0\n  var fh = this._fh | 0\n  var gh = this._gh | 0\n  var hh = this._hh | 0\n\n  var al = this._al | 0\n  var bl = this._bl | 0\n  var cl = this._cl | 0\n  var dl = this._dl | 0\n  var el = this._el | 0\n  var fl = this._fl | 0\n  var gl = this._gl | 0\n  var hl = this._hl | 0\n\n  for (var i = 0; i < 32; i += 2) {\n    W[i] = M.readInt32BE(i * 4)\n    W[i + 1] = M.readInt32BE(i * 4 + 4)\n  }\n  for (; i < 160; i += 2) {\n    var xh = W[i - 15 * 2]\n    var xl = W[i - 15 * 2 + 1]\n    var gamma0 = Gamma0(xh, xl)\n    var gamma0l = Gamma0l(xl, xh)\n\n    xh = W[i - 2 * 2]\n    xl = W[i - 2 * 2 + 1]\n    var gamma1 = Gamma1(xh, xl)\n    var gamma1l = Gamma1l(xl, xh)\n\n    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]\n    var Wi7h = W[i - 7 * 2]\n    var Wi7l = W[i - 7 * 2 + 1]\n\n    var Wi16h = W[i - 16 * 2]\n    var Wi16l = W[i - 16 * 2 + 1]\n\n    var Wil = (gamma0l + Wi7l) | 0\n    var Wih = (gamma0 + Wi7h + getCarry(Wil, gamma0l)) | 0\n    Wil = (Wil + gamma1l) | 0\n    Wih = (Wih + gamma1 + getCarry(Wil, gamma1l)) | 0\n    Wil = (Wil + Wi16l) | 0\n    Wih = (Wih + Wi16h + getCarry(Wil, Wi16l)) | 0\n\n    W[i] = Wih\n    W[i + 1] = Wil\n  }\n\n  for (var j = 0; j < 160; j += 2) {\n    Wih = W[j]\n    Wil = W[j + 1]\n\n    var majh = maj(ah, bh, ch)\n    var majl = maj(al, bl, cl)\n\n    var sigma0h = sigma0(ah, al)\n    var sigma0l = sigma0(al, ah)\n    var sigma1h = sigma1(eh, el)\n    var sigma1l = sigma1(el, eh)\n\n    // t1 = h + sigma1 + ch + K[j] + W[j]\n    var Kih = K[j]\n    var Kil = K[j + 1]\n\n    var chh = Ch(eh, fh, gh)\n    var chl = Ch(el, fl, gl)\n\n    var t1l = (hl + sigma1l) | 0\n    var t1h = (hh + sigma1h + getCarry(t1l, hl)) | 0\n    t1l = (t1l + chl) | 0\n    t1h = (t1h + chh + getCarry(t1l, chl)) | 0\n    t1l = (t1l + Kil) | 0\n    t1h = (t1h + Kih + getCarry(t1l, Kil)) | 0\n    t1l = (t1l + Wil) | 0\n    t1h = (t1h + Wih + getCarry(t1l, Wil)) | 0\n\n    // t2 = sigma0 + maj\n    var t2l = (sigma0l + majl) | 0\n    var t2h = (sigma0h + majh + getCarry(t2l, sigma0l)) | 0\n\n    hh = gh\n    hl = gl\n    gh = fh\n    gl = fl\n    fh = eh\n    fl = el\n    el = (dl + t1l) | 0\n    eh = (dh + t1h + getCarry(el, dl)) | 0\n    dh = ch\n    dl = cl\n    ch = bh\n    cl = bl\n    bh = ah\n    bl = al\n    al = (t1l + t2l) | 0\n    ah = (t1h + t2h + getCarry(al, t1l)) | 0\n  }\n\n  this._al = (this._al + al) | 0\n  this._bl = (this._bl + bl) | 0\n  this._cl = (this._cl + cl) | 0\n  this._dl = (this._dl + dl) | 0\n  this._el = (this._el + el) | 0\n  this._fl = (this._fl + fl) | 0\n  this._gl = (this._gl + gl) | 0\n  this._hl = (this._hl + hl) | 0\n\n  this._ah = (this._ah + ah + getCarry(this._al, al)) | 0\n  this._bh = (this._bh + bh + getCarry(this._bl, bl)) | 0\n  this._ch = (this._ch + ch + getCarry(this._cl, cl)) | 0\n  this._dh = (this._dh + dh + getCarry(this._dl, dl)) | 0\n  this._eh = (this._eh + eh + getCarry(this._el, el)) | 0\n  this._fh = (this._fh + fh + getCarry(this._fl, fl)) | 0\n  this._gh = (this._gh + gh + getCarry(this._gl, gl)) | 0\n  this._hh = (this._hh + hh + getCarry(this._hl, hl)) | 0\n}\n\nSha512.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(64)\n\n  function writeInt64BE (h, l, offset) {\n    H.writeInt32BE(h, offset)\n    H.writeInt32BE(l, offset + 4)\n  }\n\n  writeInt64BE(this._ah, this._al, 0)\n  writeInt64BE(this._bh, this._bl, 8)\n  writeInt64BE(this._ch, this._cl, 16)\n  writeInt64BE(this._dh, this._dl, 24)\n  writeInt64BE(this._eh, this._el, 32)\n  writeInt64BE(this._fh, this._fl, 40)\n  writeInt64BE(this._gh, this._gl, 48)\n  writeInt64BE(this._hh, this._hl, 56)\n\n  return H\n}\n\nmodule.exports = Sha512\n","var inherits = require('inherits')\nvar SHA512 = require('./sha512')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar W = new Array(160)\n\nfunction Sha384 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 128, 112)\n}\n\ninherits(Sha384, SHA512)\n\nSha384.prototype.init = function () {\n  this._ah = 0xcbbb9d5d\n  this._bh = 0x629a292a\n  this._ch = 0x9159015a\n  this._dh = 0x152fecd8\n  this._eh = 0x67332667\n  this._fh = 0x8eb44a87\n  this._gh = 0xdb0c2e0d\n  this._hh = 0x47b5481d\n\n  this._al = 0xc1059ed8\n  this._bl = 0x367cd507\n  this._cl = 0x3070dd17\n  this._dl = 0xf70e5939\n  this._el = 0xffc00b31\n  this._fl = 0x68581511\n  this._gl = 0x64f98fa7\n  this._hl = 0xbefa4fa4\n\n  return this\n}\n\nSha384.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(48)\n\n  function writeInt64BE (h, l, offset) {\n    H.writeInt32BE(h, offset)\n    H.writeInt32BE(l, offset + 4)\n  }\n\n  writeInt64BE(this._ah, this._al, 0)\n  writeInt64BE(this._bh, this._bl, 8)\n  writeInt64BE(this._ch, this._cl, 16)\n  writeInt64BE(this._dh, this._dl, 24)\n  writeInt64BE(this._eh, this._el, 32)\n  writeInt64BE(this._fh, this._fl, 40)\n\n  return H\n}\n\nmodule.exports = Sha384\n","var exports = module.exports = function SHA (algorithm) {\n  algorithm = algorithm.toLowerCase()\n\n  var Algorithm = exports[algorithm]\n  if (!Algorithm) throw new Error(algorithm + ' is not supported (we accept pull requests)')\n\n  return new Algorithm()\n}\n\nexports.sha = require('./sha')\nexports.sha1 = require('./sha1')\nexports.sha224 = require('./sha224')\nexports.sha256 = require('./sha256')\nexports.sha384 = require('./sha384')\nexports.sha512 = require('./sha512')\n","var Buffer = require('safe-buffer').Buffer\nvar Transform = require('stream').Transform\nvar StringDecoder = require('string_decoder').StringDecoder\nvar inherits = require('inherits')\n\nfunction CipherBase (hashMode) {\n  Transform.call(this)\n  this.hashMode = typeof hashMode === 'string'\n  if (this.hashMode) {\n    this[hashMode] = this._finalOrDigest\n  } else {\n    this.final = this._finalOrDigest\n  }\n  if (this._final) {\n    this.__final = this._final\n    this._final = null\n  }\n  this._decoder = null\n  this._encoding = null\n}\ninherits(CipherBase, Transform)\n\nCipherBase.prototype.update = function (data, inputEnc, outputEnc) {\n  if (typeof data === 'string') {\n    data = Buffer.from(data, inputEnc)\n  }\n\n  var outData = this._update(data)\n  if (this.hashMode) return this\n\n  if (outputEnc) {\n    outData = this._toString(outData, outputEnc)\n  }\n\n  return outData\n}\n\nCipherBase.prototype.setAutoPadding = function () {}\nCipherBase.prototype.getAuthTag = function () {\n  throw new Error('trying to get auth tag in unsupported state')\n}\n\nCipherBase.prototype.setAuthTag = function () {\n  throw new Error('trying to set auth tag in unsupported state')\n}\n\nCipherBase.prototype.setAAD = function () {\n  throw new Error('trying to set aad in unsupported state')\n}\n\nCipherBase.prototype._transform = function (data, _, next) {\n  var err\n  try {\n    if (this.hashMode) {\n      this._update(data)\n    } else {\n      this.push(this._update(data))\n    }\n  } catch (e) {\n    err = e\n  } finally {\n    next(err)\n  }\n}\nCipherBase.prototype._flush = function (done) {\n  var err\n  try {\n    this.push(this.__final())\n  } catch (e) {\n    err = e\n  }\n\n  done(err)\n}\nCipherBase.prototype._finalOrDigest = function (outputEnc) {\n  var outData = this.__final() || Buffer.alloc(0)\n  if (outputEnc) {\n    outData = this._toString(outData, outputEnc, true)\n  }\n  return outData\n}\n\nCipherBase.prototype._toString = function (value, enc, fin) {\n  if (!this._decoder) {\n    this._decoder = new StringDecoder(enc)\n    this._encoding = enc\n  }\n\n  if (this._encoding !== enc) throw new Error('can\\'t switch encodings')\n\n  var out = this._decoder.write(value)\n  if (fin) {\n    out += this._decoder.end()\n  }\n\n  return out\n}\n\nmodule.exports = CipherBase\n","'use strict'\nvar inherits = require('inherits')\nvar MD5 = require('md5.js')\nvar RIPEMD160 = require('ripemd160')\nvar sha = require('sha.js')\nvar Base = require('cipher-base')\n\nfunction Hash (hash) {\n  Base.call(this, 'digest')\n\n  this._hash = hash\n}\n\ninherits(Hash, Base)\n\nHash.prototype._update = function (data) {\n  this._hash.update(data)\n}\n\nHash.prototype._final = function () {\n  return this._hash.digest()\n}\n\nmodule.exports = function createHash (alg) {\n  alg = alg.toLowerCase()\n  if (alg === 'md5') return new MD5()\n  if (alg === 'rmd160' || alg === 'ripemd160') return new RIPEMD160()\n\n  return new Hash(sha(alg))\n}\n","'use strict'\nvar inherits = require('inherits')\nvar Buffer = require('safe-buffer').Buffer\n\nvar Base = require('cipher-base')\n\nvar ZEROS = Buffer.alloc(128)\nvar blocksize = 64\n\nfunction Hmac (alg, key) {\n  Base.call(this, 'digest')\n  if (typeof key === 'string') {\n    key = Buffer.from(key)\n  }\n\n  this._alg = alg\n  this._key = key\n\n  if (key.length > blocksize) {\n    key = alg(key)\n  } else if (key.length < blocksize) {\n    key = Buffer.concat([key, ZEROS], blocksize)\n  }\n\n  var ipad = this._ipad = Buffer.allocUnsafe(blocksize)\n  var opad = this._opad = Buffer.allocUnsafe(blocksize)\n\n  for (var i = 0; i < blocksize; i++) {\n    ipad[i] = key[i] ^ 0x36\n    opad[i] = key[i] ^ 0x5C\n  }\n\n  this._hash = [ipad]\n}\n\ninherits(Hmac, Base)\n\nHmac.prototype._update = function (data) {\n  this._hash.push(data)\n}\n\nHmac.prototype._final = function () {\n  var h = this._alg(Buffer.concat(this._hash))\n  return this._alg(Buffer.concat([this._opad, h]))\n}\nmodule.exports = Hmac\n","var MD5 = require('md5.js')\n\nmodule.exports = function (buffer) {\n  return new MD5().update(buffer).digest()\n}\n","'use strict'\nvar inherits = require('inherits')\nvar Legacy = require('./legacy')\nvar Base = require('cipher-base')\nvar Buffer = require('safe-buffer').Buffer\nvar md5 = require('create-hash/md5')\nvar RIPEMD160 = require('ripemd160')\n\nvar sha = require('sha.js')\n\nvar ZEROS = Buffer.alloc(128)\n\nfunction Hmac (alg, key) {\n  Base.call(this, 'digest')\n  if (typeof key === 'string') {\n    key = Buffer.from(key)\n  }\n\n  var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64\n\n  this._alg = alg\n  this._key = key\n  if (key.length > blocksize) {\n    var hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg)\n    key = hash.update(key).digest()\n  } else if (key.length < blocksize) {\n    key = Buffer.concat([key, ZEROS], blocksize)\n  }\n\n  var ipad = this._ipad = Buffer.allocUnsafe(blocksize)\n  var opad = this._opad = Buffer.allocUnsafe(blocksize)\n\n  for (var i = 0; i < blocksize; i++) {\n    ipad[i] = key[i] ^ 0x36\n    opad[i] = key[i] ^ 0x5C\n  }\n  this._hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg)\n  this._hash.update(ipad)\n}\n\ninherits(Hmac, Base)\n\nHmac.prototype._update = function (data) {\n  this._hash.update(data)\n}\n\nHmac.prototype._final = function () {\n  var h = this._hash.digest()\n  var hash = this._alg === 'rmd160' ? new RIPEMD160() : sha(this._alg)\n  return hash.update(this._opad).update(h).digest()\n}\n\nmodule.exports = function createHmac (alg, key) {\n  alg = alg.toLowerCase()\n  if (alg === 'rmd160' || alg === 'ripemd160') {\n    return new Hmac('rmd160', key)\n  }\n  if (alg === 'md5') {\n    return new Legacy(md5, key)\n  }\n  return new Hmac(alg, key)\n}\n","module.exports={sha224WithRSAEncryption:{sign:\"rsa\",hash:\"sha224\",id:\"302d300d06096086480165030402040500041c\"},\"RSA-SHA224\":{sign:\"ecdsa/rsa\",hash:\"sha224\",id:\"302d300d06096086480165030402040500041c\"},sha256WithRSAEncryption:{sign:\"rsa\",hash:\"sha256\",id:\"3031300d060960864801650304020105000420\"},\"RSA-SHA256\":{sign:\"ecdsa/rsa\",hash:\"sha256\",id:\"3031300d060960864801650304020105000420\"},sha384WithRSAEncryption:{sign:\"rsa\",hash:\"sha384\",id:\"3041300d060960864801650304020205000430\"},\"RSA-SHA384\":{sign:\"ecdsa/rsa\",hash:\"sha384\",id:\"3041300d060960864801650304020205000430\"},sha512WithRSAEncryption:{sign:\"rsa\",hash:\"sha512\",id:\"3051300d060960864801650304020305000440\"},\"RSA-SHA512\":{sign:\"ecdsa/rsa\",hash:\"sha512\",id:\"3051300d060960864801650304020305000440\"},\"RSA-SHA1\":{sign:\"rsa\",hash:\"sha1\",id:\"3021300906052b0e03021a05000414\"},\"ecdsa-with-SHA1\":{sign:\"ecdsa\",hash:\"sha1\",id:\"\"},sha256:{sign:\"ecdsa\",hash:\"sha256\",id:\"\"},sha224:{sign:\"ecdsa\",hash:\"sha224\",id:\"\"},sha384:{sign:\"ecdsa\",hash:\"sha384\",id:\"\"},sha512:{sign:\"ecdsa\",hash:\"sha512\",id:\"\"},\"DSA-SHA\":{sign:\"dsa\",hash:\"sha1\",id:\"\"},\"DSA-SHA1\":{sign:\"dsa\",hash:\"sha1\",id:\"\"},DSA:{sign:\"dsa\",hash:\"sha1\",id:\"\"},\"DSA-WITH-SHA224\":{sign:\"dsa\",hash:\"sha224\",id:\"\"},\"DSA-SHA224\":{sign:\"dsa\",hash:\"sha224\",id:\"\"},\"DSA-WITH-SHA256\":{sign:\"dsa\",hash:\"sha256\",id:\"\"},\"DSA-SHA256\":{sign:\"dsa\",hash:\"sha256\",id:\"\"},\"DSA-WITH-SHA384\":{sign:\"dsa\",hash:\"sha384\",id:\"\"},\"DSA-SHA384\":{sign:\"dsa\",hash:\"sha384\",id:\"\"},\"DSA-WITH-SHA512\":{sign:\"dsa\",hash:\"sha512\",id:\"\"},\"DSA-SHA512\":{sign:\"dsa\",hash:\"sha512\",id:\"\"},\"DSA-RIPEMD160\":{sign:\"dsa\",hash:\"rmd160\",id:\"\"},ripemd160WithRSA:{sign:\"rsa\",hash:\"rmd160\",id:\"3021300906052b2403020105000414\"},\"RSA-RIPEMD160\":{sign:\"rsa\",hash:\"rmd160\",id:\"3021300906052b2403020105000414\"},md5WithRSAEncryption:{sign:\"rsa\",hash:\"md5\",id:\"3020300c06082a864886f70d020505000410\"},\"RSA-MD5\":{sign:\"rsa\",hash:\"md5\",id:\"3020300c06082a864886f70d020505000410\"}};","'use strict';\n\nmodule.exports = require('./browser/algorithms.json');\n","var MAX_ALLOC = Math.pow(2, 30) - 1 // default in iojs\n\nmodule.exports = function (iterations, keylen) {\n  if (typeof iterations !== 'number') {\n    throw new TypeError('Iterations not a number')\n  }\n\n  if (iterations < 0) {\n    throw new TypeError('Bad iterations')\n  }\n\n  if (typeof keylen !== 'number') {\n    throw new TypeError('Key length not a number')\n  }\n\n  if (keylen < 0 || keylen > MAX_ALLOC || keylen !== keylen) { /* eslint no-self-compare: 0 */\n    throw new TypeError('Bad key length')\n  }\n}\n","var defaultEncoding\n/* istanbul ignore next */\nif (global.process && global.process.browser) {\n  defaultEncoding = 'utf-8'\n} else if (global.process && global.process.version) {\n  var pVersionMajor = parseInt(process.version.split('.')[0].slice(1), 10)\n\n  defaultEncoding = pVersionMajor >= 6 ? 'utf-8' : 'binary'\n} else {\n  defaultEncoding = 'utf-8'\n}\nmodule.exports = defaultEncoding\n","var Buffer = require('safe-buffer').Buffer\n\nmodule.exports = function (thing, encoding, name) {\n  if (Buffer.isBuffer(thing)) {\n    return thing\n  } else if (typeof thing === 'string') {\n    return Buffer.from(thing, encoding)\n  } else if (ArrayBuffer.isView(thing)) {\n    return Buffer.from(thing.buffer)\n  } else {\n    throw new TypeError(name + ' must be a string, a Buffer, a typed array or a DataView')\n  }\n}\n","var md5 = require('create-hash/md5')\nvar RIPEMD160 = require('ripemd160')\nvar sha = require('sha.js')\nvar Buffer = require('safe-buffer').Buffer\n\nvar checkParameters = require('./precondition')\nvar defaultEncoding = require('./default-encoding')\nvar toBuffer = require('./to-buffer')\n\nvar ZEROS = Buffer.alloc(128)\nvar sizes = {\n  md5: 16,\n  sha1: 20,\n  sha224: 28,\n  sha256: 32,\n  sha384: 48,\n  sha512: 64,\n  rmd160: 20,\n  ripemd160: 20\n}\n\nfunction Hmac (alg, key, saltLen) {\n  var hash = getDigest(alg)\n  var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64\n\n  if (key.length > blocksize) {\n    key = hash(key)\n  } else if (key.length < blocksize) {\n    key = Buffer.concat([key, ZEROS], blocksize)\n  }\n\n  var ipad = Buffer.allocUnsafe(blocksize + sizes[alg])\n  var opad = Buffer.allocUnsafe(blocksize + sizes[alg])\n  for (var i = 0; i < blocksize; i++) {\n    ipad[i] = key[i] ^ 0x36\n    opad[i] = key[i] ^ 0x5C\n  }\n\n  var ipad1 = Buffer.allocUnsafe(blocksize + saltLen + 4)\n  ipad.copy(ipad1, 0, 0, blocksize)\n  this.ipad1 = ipad1\n  this.ipad2 = ipad\n  this.opad = opad\n  this.alg = alg\n  this.blocksize = blocksize\n  this.hash = hash\n  this.size = sizes[alg]\n}\n\nHmac.prototype.run = function (data, ipad) {\n  data.copy(ipad, this.blocksize)\n  var h = this.hash(ipad)\n  h.copy(this.opad, this.blocksize)\n  return this.hash(this.opad)\n}\n\nfunction getDigest (alg) {\n  function shaFunc (data) {\n    return sha(alg).update(data).digest()\n  }\n  function rmd160Func (data) {\n    return new RIPEMD160().update(data).digest()\n  }\n\n  if (alg === 'rmd160' || alg === 'ripemd160') return rmd160Func\n  if (alg === 'md5') return md5\n  return shaFunc\n}\n\nfunction pbkdf2 (password, salt, iterations, keylen, digest) {\n  checkParameters(iterations, keylen)\n  password = toBuffer(password, defaultEncoding, 'Password')\n  salt = toBuffer(salt, defaultEncoding, 'Salt')\n\n  digest = digest || 'sha1'\n\n  var hmac = new Hmac(digest, password, salt.length)\n\n  var DK = Buffer.allocUnsafe(keylen)\n  var block1 = Buffer.allocUnsafe(salt.length + 4)\n  salt.copy(block1, 0, 0, salt.length)\n\n  var destPos = 0\n  var hLen = sizes[digest]\n  var l = Math.ceil(keylen / hLen)\n\n  for (var i = 1; i <= l; i++) {\n    block1.writeUInt32BE(i, salt.length)\n\n    var T = hmac.run(block1, hmac.ipad1)\n    var U = T\n\n    for (var j = 1; j < iterations; j++) {\n      U = hmac.run(U, hmac.ipad2)\n      for (var k = 0; k < hLen; k++) T[k] ^= U[k]\n    }\n\n    T.copy(DK, destPos)\n    destPos += hLen\n  }\n\n  return DK\n}\n\nmodule.exports = pbkdf2\n","var Buffer = require('safe-buffer').Buffer\n\nvar checkParameters = require('./precondition')\nvar defaultEncoding = require('./default-encoding')\nvar sync = require('./sync')\nvar toBuffer = require('./to-buffer')\n\nvar ZERO_BUF\nvar subtle = global.crypto && global.crypto.subtle\nvar toBrowser = {\n  sha: 'SHA-1',\n  'sha-1': 'SHA-1',\n  sha1: 'SHA-1',\n  sha256: 'SHA-256',\n  'sha-256': 'SHA-256',\n  sha384: 'SHA-384',\n  'sha-384': 'SHA-384',\n  'sha-512': 'SHA-512',\n  sha512: 'SHA-512'\n}\nvar checks = []\nfunction checkNative (algo) {\n  if (global.process && !global.process.browser) {\n    return Promise.resolve(false)\n  }\n  if (!subtle || !subtle.importKey || !subtle.deriveBits) {\n    return Promise.resolve(false)\n  }\n  if (checks[algo] !== undefined) {\n    return checks[algo]\n  }\n  ZERO_BUF = ZERO_BUF || Buffer.alloc(8)\n  var prom = browserPbkdf2(ZERO_BUF, ZERO_BUF, 10, 128, algo)\n    .then(function () {\n      return true\n    }).catch(function () {\n      return false\n    })\n  checks[algo] = prom\n  return prom\n}\nvar nextTick\nfunction getNextTick () {\n  if (nextTick) {\n    return nextTick\n  }\n  if (global.process && global.process.nextTick) {\n    nextTick = global.process.nextTick\n  } else if (global.queueMicrotask) {\n    nextTick = global.queueMicrotask\n  } else if (global.setImmediate) {\n    nextTick = global.setImmediate\n  } else {\n    nextTick = global.setTimeout\n  }\n  return nextTick\n}\nfunction browserPbkdf2 (password, salt, iterations, length, algo) {\n  return subtle.importKey(\n    'raw', password, { name: 'PBKDF2' }, false, ['deriveBits']\n  ).then(function (key) {\n    return subtle.deriveBits({\n      name: 'PBKDF2',\n      salt: salt,\n      iterations: iterations,\n      hash: {\n        name: algo\n      }\n    }, key, length << 3)\n  }).then(function (res) {\n    return Buffer.from(res)\n  })\n}\n\nfunction resolvePromise (promise, callback) {\n  promise.then(function (out) {\n    getNextTick()(function () {\n      callback(null, out)\n    })\n  }, function (e) {\n    getNextTick()(function () {\n      callback(e)\n    })\n  })\n}\nmodule.exports = function (password, salt, iterations, keylen, digest, callback) {\n  if (typeof digest === 'function') {\n    callback = digest\n    digest = undefined\n  }\n\n  digest = digest || 'sha1'\n  var algo = toBrowser[digest.toLowerCase()]\n\n  if (!algo || typeof global.Promise !== 'function') {\n    getNextTick()(function () {\n      var out\n      try {\n        out = sync(password, salt, iterations, keylen, digest)\n      } catch (e) {\n        return callback(e)\n      }\n      callback(null, out)\n    })\n    return\n  }\n\n  checkParameters(iterations, keylen)\n  password = toBuffer(password, defaultEncoding, 'Password')\n  salt = toBuffer(salt, defaultEncoding, 'Salt')\n  if (typeof callback !== 'function') throw new Error('No callback provided to pbkdf2')\n\n  resolvePromise(checkNative(algo).then(function (resp) {\n    if (resp) return browserPbkdf2(password, salt, iterations, keylen, algo)\n\n    return sync(password, salt, iterations, keylen, digest)\n  }), callback)\n}\n","exports.pbkdf2 = require('./lib/async')\nexports.pbkdf2Sync = require('./lib/sync')\n","'use strict';\n\nexports.readUInt32BE = function readUInt32BE(bytes, off) {\n  var res =  (bytes[0 + off] << 24) |\n             (bytes[1 + off] << 16) |\n             (bytes[2 + off] << 8) |\n             bytes[3 + off];\n  return res >>> 0;\n};\n\nexports.writeUInt32BE = function writeUInt32BE(bytes, value, off) {\n  bytes[0 + off] = value >>> 24;\n  bytes[1 + off] = (value >>> 16) & 0xff;\n  bytes[2 + off] = (value >>> 8) & 0xff;\n  bytes[3 + off] = value & 0xff;\n};\n\nexports.ip = function ip(inL, inR, out, off) {\n  var outL = 0;\n  var outR = 0;\n\n  for (var i = 6; i >= 0; i -= 2) {\n    for (var j = 0; j <= 24; j += 8) {\n      outL <<= 1;\n      outL |= (inR >>> (j + i)) & 1;\n    }\n    for (var j = 0; j <= 24; j += 8) {\n      outL <<= 1;\n      outL |= (inL >>> (j + i)) & 1;\n    }\n  }\n\n  for (var i = 6; i >= 0; i -= 2) {\n    for (var j = 1; j <= 25; j += 8) {\n      outR <<= 1;\n      outR |= (inR >>> (j + i)) & 1;\n    }\n    for (var j = 1; j <= 25; j += 8) {\n      outR <<= 1;\n      outR |= (inL >>> (j + i)) & 1;\n    }\n  }\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nexports.rip = function rip(inL, inR, out, off) {\n  var outL = 0;\n  var outR = 0;\n\n  for (var i = 0; i < 4; i++) {\n    for (var j = 24; j >= 0; j -= 8) {\n      outL <<= 1;\n      outL |= (inR >>> (j + i)) & 1;\n      outL <<= 1;\n      outL |= (inL >>> (j + i)) & 1;\n    }\n  }\n  for (var i = 4; i < 8; i++) {\n    for (var j = 24; j >= 0; j -= 8) {\n      outR <<= 1;\n      outR |= (inR >>> (j + i)) & 1;\n      outR <<= 1;\n      outR |= (inL >>> (j + i)) & 1;\n    }\n  }\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nexports.pc1 = function pc1(inL, inR, out, off) {\n  var outL = 0;\n  var outR = 0;\n\n  // 7, 15, 23, 31, 39, 47, 55, 63\n  // 6, 14, 22, 30, 39, 47, 55, 63\n  // 5, 13, 21, 29, 39, 47, 55, 63\n  // 4, 12, 20, 28\n  for (var i = 7; i >= 5; i--) {\n    for (var j = 0; j <= 24; j += 8) {\n      outL <<= 1;\n      outL |= (inR >> (j + i)) & 1;\n    }\n    for (var j = 0; j <= 24; j += 8) {\n      outL <<= 1;\n      outL |= (inL >> (j + i)) & 1;\n    }\n  }\n  for (var j = 0; j <= 24; j += 8) {\n    outL <<= 1;\n    outL |= (inR >> (j + i)) & 1;\n  }\n\n  // 1, 9, 17, 25, 33, 41, 49, 57\n  // 2, 10, 18, 26, 34, 42, 50, 58\n  // 3, 11, 19, 27, 35, 43, 51, 59\n  // 36, 44, 52, 60\n  for (var i = 1; i <= 3; i++) {\n    for (var j = 0; j <= 24; j += 8) {\n      outR <<= 1;\n      outR |= (inR >> (j + i)) & 1;\n    }\n    for (var j = 0; j <= 24; j += 8) {\n      outR <<= 1;\n      outR |= (inL >> (j + i)) & 1;\n    }\n  }\n  for (var j = 0; j <= 24; j += 8) {\n    outR <<= 1;\n    outR |= (inL >> (j + i)) & 1;\n  }\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nexports.r28shl = function r28shl(num, shift) {\n  return ((num << shift) & 0xfffffff) | (num >>> (28 - shift));\n};\n\nvar pc2table = [\n  // inL => outL\n  14, 11, 17, 4, 27, 23, 25, 0,\n  13, 22, 7, 18, 5, 9, 16, 24,\n  2, 20, 12, 21, 1, 8, 15, 26,\n\n  // inR => outR\n  15, 4, 25, 19, 9, 1, 26, 16,\n  5, 11, 23, 8, 12, 7, 17, 0,\n  22, 3, 10, 14, 6, 20, 27, 24\n];\n\nexports.pc2 = function pc2(inL, inR, out, off) {\n  var outL = 0;\n  var outR = 0;\n\n  var len = pc2table.length >>> 1;\n  for (var i = 0; i < len; i++) {\n    outL <<= 1;\n    outL |= (inL >>> pc2table[i]) & 0x1;\n  }\n  for (var i = len; i < pc2table.length; i++) {\n    outR <<= 1;\n    outR |= (inR >>> pc2table[i]) & 0x1;\n  }\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nexports.expand = function expand(r, out, off) {\n  var outL = 0;\n  var outR = 0;\n\n  outL = ((r & 1) << 5) | (r >>> 27);\n  for (var i = 23; i >= 15; i -= 4) {\n    outL <<= 6;\n    outL |= (r >>> i) & 0x3f;\n  }\n  for (var i = 11; i >= 3; i -= 4) {\n    outR |= (r >>> i) & 0x3f;\n    outR <<= 6;\n  }\n  outR |= ((r & 0x1f) << 1) | (r >>> 31);\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nvar sTable = [\n  14, 0, 4, 15, 13, 7, 1, 4, 2, 14, 15, 2, 11, 13, 8, 1,\n  3, 10, 10, 6, 6, 12, 12, 11, 5, 9, 9, 5, 0, 3, 7, 8,\n  4, 15, 1, 12, 14, 8, 8, 2, 13, 4, 6, 9, 2, 1, 11, 7,\n  15, 5, 12, 11, 9, 3, 7, 14, 3, 10, 10, 0, 5, 6, 0, 13,\n\n  15, 3, 1, 13, 8, 4, 14, 7, 6, 15, 11, 2, 3, 8, 4, 14,\n  9, 12, 7, 0, 2, 1, 13, 10, 12, 6, 0, 9, 5, 11, 10, 5,\n  0, 13, 14, 8, 7, 10, 11, 1, 10, 3, 4, 15, 13, 4, 1, 2,\n  5, 11, 8, 6, 12, 7, 6, 12, 9, 0, 3, 5, 2, 14, 15, 9,\n\n  10, 13, 0, 7, 9, 0, 14, 9, 6, 3, 3, 4, 15, 6, 5, 10,\n  1, 2, 13, 8, 12, 5, 7, 14, 11, 12, 4, 11, 2, 15, 8, 1,\n  13, 1, 6, 10, 4, 13, 9, 0, 8, 6, 15, 9, 3, 8, 0, 7,\n  11, 4, 1, 15, 2, 14, 12, 3, 5, 11, 10, 5, 14, 2, 7, 12,\n\n  7, 13, 13, 8, 14, 11, 3, 5, 0, 6, 6, 15, 9, 0, 10, 3,\n  1, 4, 2, 7, 8, 2, 5, 12, 11, 1, 12, 10, 4, 14, 15, 9,\n  10, 3, 6, 15, 9, 0, 0, 6, 12, 10, 11, 1, 7, 13, 13, 8,\n  15, 9, 1, 4, 3, 5, 14, 11, 5, 12, 2, 7, 8, 2, 4, 14,\n\n  2, 14, 12, 11, 4, 2, 1, 12, 7, 4, 10, 7, 11, 13, 6, 1,\n  8, 5, 5, 0, 3, 15, 15, 10, 13, 3, 0, 9, 14, 8, 9, 6,\n  4, 11, 2, 8, 1, 12, 11, 7, 10, 1, 13, 14, 7, 2, 8, 13,\n  15, 6, 9, 15, 12, 0, 5, 9, 6, 10, 3, 4, 0, 5, 14, 3,\n\n  12, 10, 1, 15, 10, 4, 15, 2, 9, 7, 2, 12, 6, 9, 8, 5,\n  0, 6, 13, 1, 3, 13, 4, 14, 14, 0, 7, 11, 5, 3, 11, 8,\n  9, 4, 14, 3, 15, 2, 5, 12, 2, 9, 8, 5, 12, 15, 3, 10,\n  7, 11, 0, 14, 4, 1, 10, 7, 1, 6, 13, 0, 11, 8, 6, 13,\n\n  4, 13, 11, 0, 2, 11, 14, 7, 15, 4, 0, 9, 8, 1, 13, 10,\n  3, 14, 12, 3, 9, 5, 7, 12, 5, 2, 10, 15, 6, 8, 1, 6,\n  1, 6, 4, 11, 11, 13, 13, 8, 12, 1, 3, 4, 7, 10, 14, 7,\n  10, 9, 15, 5, 6, 0, 8, 15, 0, 14, 5, 2, 9, 3, 2, 12,\n\n  13, 1, 2, 15, 8, 13, 4, 8, 6, 10, 15, 3, 11, 7, 1, 4,\n  10, 12, 9, 5, 3, 6, 14, 11, 5, 0, 0, 14, 12, 9, 7, 2,\n  7, 2, 11, 1, 4, 14, 1, 7, 9, 4, 12, 10, 14, 8, 2, 13,\n  0, 15, 6, 12, 10, 9, 13, 0, 15, 3, 3, 5, 5, 6, 8, 11\n];\n\nexports.substitute = function substitute(inL, inR) {\n  var out = 0;\n  for (var i = 0; i < 4; i++) {\n    var b = (inL >>> (18 - i * 6)) & 0x3f;\n    var sb = sTable[i * 0x40 + b];\n\n    out <<= 4;\n    out |= sb;\n  }\n  for (var i = 0; i < 4; i++) {\n    var b = (inR >>> (18 - i * 6)) & 0x3f;\n    var sb = sTable[4 * 0x40 + i * 0x40 + b];\n\n    out <<= 4;\n    out |= sb;\n  }\n  return out >>> 0;\n};\n\nvar permuteTable = [\n  16, 25, 12, 11, 3, 20, 4, 15, 31, 17, 9, 6, 27, 14, 1, 22,\n  30, 24, 8, 18, 0, 5, 29, 23, 13, 19, 2, 26, 10, 21, 28, 7\n];\n\nexports.permute = function permute(num) {\n  var out = 0;\n  for (var i = 0; i < permuteTable.length; i++) {\n    out <<= 1;\n    out |= (num >>> permuteTable[i]) & 0x1;\n  }\n  return out >>> 0;\n};\n\nexports.padSplit = function padSplit(num, size, group) {\n  var str = num.toString(2);\n  while (str.length < size)\n    str = '0' + str;\n\n  var out = [];\n  for (var i = 0; i < size; i += group)\n    out.push(str.slice(i, i + group));\n  return out.join(' ');\n};\n","module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n","'use strict';\n\nvar assert = require('minimalistic-assert');\n\nfunction Cipher(options) {\n  this.options = options;\n\n  this.type = this.options.type;\n  this.blockSize = 8;\n  this._init();\n\n  this.buffer = new Array(this.blockSize);\n  this.bufferOff = 0;\n  this.padding = options.padding !== false\n}\nmodule.exports = Cipher;\n\nCipher.prototype._init = function _init() {\n  // Might be overrided\n};\n\nCipher.prototype.update = function update(data) {\n  if (data.length === 0)\n    return [];\n\n  if (this.type === 'decrypt')\n    return this._updateDecrypt(data);\n  else\n    return this._updateEncrypt(data);\n};\n\nCipher.prototype._buffer = function _buffer(data, off) {\n  // Append data to buffer\n  var min = Math.min(this.buffer.length - this.bufferOff, data.length - off);\n  for (var i = 0; i < min; i++)\n    this.buffer[this.bufferOff + i] = data[off + i];\n  this.bufferOff += min;\n\n  // Shift next\n  return min;\n};\n\nCipher.prototype._flushBuffer = function _flushBuffer(out, off) {\n  this._update(this.buffer, 0, out, off);\n  this.bufferOff = 0;\n  return this.blockSize;\n};\n\nCipher.prototype._updateEncrypt = function _updateEncrypt(data) {\n  var inputOff = 0;\n  var outputOff = 0;\n\n  var count = ((this.bufferOff + data.length) / this.blockSize) | 0;\n  var out = new Array(count * this.blockSize);\n\n  if (this.bufferOff !== 0) {\n    inputOff += this._buffer(data, inputOff);\n\n    if (this.bufferOff === this.buffer.length)\n      outputOff += this._flushBuffer(out, outputOff);\n  }\n\n  // Write blocks\n  var max = data.length - ((data.length - inputOff) % this.blockSize);\n  for (; inputOff < max; inputOff += this.blockSize) {\n    this._update(data, inputOff, out, outputOff);\n    outputOff += this.blockSize;\n  }\n\n  // Queue rest\n  for (; inputOff < data.length; inputOff++, this.bufferOff++)\n    this.buffer[this.bufferOff] = data[inputOff];\n\n  return out;\n};\n\nCipher.prototype._updateDecrypt = function _updateDecrypt(data) {\n  var inputOff = 0;\n  var outputOff = 0;\n\n  var count = Math.ceil((this.bufferOff + data.length) / this.blockSize) - 1;\n  var out = new Array(count * this.blockSize);\n\n  // TODO(indutny): optimize it, this is far from optimal\n  for (; count > 0; count--) {\n    inputOff += this._buffer(data, inputOff);\n    outputOff += this._flushBuffer(out, outputOff);\n  }\n\n  // Buffer rest of the input\n  inputOff += this._buffer(data, inputOff);\n\n  return out;\n};\n\nCipher.prototype.final = function final(buffer) {\n  var first;\n  if (buffer)\n    first = this.update(buffer);\n\n  var last;\n  if (this.type === 'encrypt')\n    last = this._finalEncrypt();\n  else\n    last = this._finalDecrypt();\n\n  if (first)\n    return first.concat(last);\n  else\n    return last;\n};\n\nCipher.prototype._pad = function _pad(buffer, off) {\n  if (off === 0)\n    return false;\n\n  while (off < buffer.length)\n    buffer[off++] = 0;\n\n  return true;\n};\n\nCipher.prototype._finalEncrypt = function _finalEncrypt() {\n  if (!this._pad(this.buffer, this.bufferOff))\n    return [];\n\n  var out = new Array(this.blockSize);\n  this._update(this.buffer, 0, out, 0);\n  return out;\n};\n\nCipher.prototype._unpad = function _unpad(buffer) {\n  return buffer;\n};\n\nCipher.prototype._finalDecrypt = function _finalDecrypt() {\n  assert.equal(this.bufferOff, this.blockSize, 'Not enough data to decrypt');\n  var out = new Array(this.blockSize);\n  this._flushBuffer(out, 0);\n\n  return this._unpad(out);\n};\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nvar utils = require('./utils');\nvar Cipher = require('./cipher');\n\nfunction DESState() {\n  this.tmp = new Array(2);\n  this.keys = null;\n}\n\nfunction DES(options) {\n  Cipher.call(this, options);\n\n  var state = new DESState();\n  this._desState = state;\n\n  this.deriveKeys(state, options.key);\n}\ninherits(DES, Cipher);\nmodule.exports = DES;\n\nDES.create = function create(options) {\n  return new DES(options);\n};\n\nvar shiftTable = [\n  1, 1, 2, 2, 2, 2, 2, 2,\n  1, 2, 2, 2, 2, 2, 2, 1\n];\n\nDES.prototype.deriveKeys = function deriveKeys(state, key) {\n  state.keys = new Array(16 * 2);\n\n  assert.equal(key.length, this.blockSize, 'Invalid key length');\n\n  var kL = utils.readUInt32BE(key, 0);\n  var kR = utils.readUInt32BE(key, 4);\n\n  utils.pc1(kL, kR, state.tmp, 0);\n  kL = state.tmp[0];\n  kR = state.tmp[1];\n  for (var i = 0; i < state.keys.length; i += 2) {\n    var shift = shiftTable[i >>> 1];\n    kL = utils.r28shl(kL, shift);\n    kR = utils.r28shl(kR, shift);\n    utils.pc2(kL, kR, state.keys, i);\n  }\n};\n\nDES.prototype._update = function _update(inp, inOff, out, outOff) {\n  var state = this._desState;\n\n  var l = utils.readUInt32BE(inp, inOff);\n  var r = utils.readUInt32BE(inp, inOff + 4);\n\n  // Initial Permutation\n  utils.ip(l, r, state.tmp, 0);\n  l = state.tmp[0];\n  r = state.tmp[1];\n\n  if (this.type === 'encrypt')\n    this._encrypt(state, l, r, state.tmp, 0);\n  else\n    this._decrypt(state, l, r, state.tmp, 0);\n\n  l = state.tmp[0];\n  r = state.tmp[1];\n\n  utils.writeUInt32BE(out, l, outOff);\n  utils.writeUInt32BE(out, r, outOff + 4);\n};\n\nDES.prototype._pad = function _pad(buffer, off) {\n  if (this.padding === false) {\n    return false;\n  }\n\n  var value = buffer.length - off;\n  for (var i = off; i < buffer.length; i++)\n    buffer[i] = value;\n\n  return true;\n};\n\nDES.prototype._unpad = function _unpad(buffer) {\n  if (this.padding === false) {\n    return buffer;\n  }\n\n  var pad = buffer[buffer.length - 1];\n  for (var i = buffer.length - pad; i < buffer.length; i++)\n    assert.equal(buffer[i], pad);\n\n  return buffer.slice(0, buffer.length - pad);\n};\n\nDES.prototype._encrypt = function _encrypt(state, lStart, rStart, out, off) {\n  var l = lStart;\n  var r = rStart;\n\n  // Apply f() x16 times\n  for (var i = 0; i < state.keys.length; i += 2) {\n    var keyL = state.keys[i];\n    var keyR = state.keys[i + 1];\n\n    // f(r, k)\n    utils.expand(r, state.tmp, 0);\n\n    keyL ^= state.tmp[0];\n    keyR ^= state.tmp[1];\n    var s = utils.substitute(keyL, keyR);\n    var f = utils.permute(s);\n\n    var t = r;\n    r = (l ^ f) >>> 0;\n    l = t;\n  }\n\n  // Reverse Initial Permutation\n  utils.rip(r, l, out, off);\n};\n\nDES.prototype._decrypt = function _decrypt(state, lStart, rStart, out, off) {\n  var l = rStart;\n  var r = lStart;\n\n  // Apply f() x16 times\n  for (var i = state.keys.length - 2; i >= 0; i -= 2) {\n    var keyL = state.keys[i];\n    var keyR = state.keys[i + 1];\n\n    // f(r, k)\n    utils.expand(l, state.tmp, 0);\n\n    keyL ^= state.tmp[0];\n    keyR ^= state.tmp[1];\n    var s = utils.substitute(keyL, keyR);\n    var f = utils.permute(s);\n\n    var t = l;\n    l = (r ^ f) >>> 0;\n    r = t;\n  }\n\n  // Reverse Initial Permutation\n  utils.rip(l, r, out, off);\n};\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nvar proto = {};\n\nfunction CBCState(iv) {\n  assert.equal(iv.length, 8, 'Invalid IV length');\n\n  this.iv = new Array(8);\n  for (var i = 0; i < this.iv.length; i++)\n    this.iv[i] = iv[i];\n}\n\nfunction instantiate(Base) {\n  function CBC(options) {\n    Base.call(this, options);\n    this._cbcInit();\n  }\n  inherits(CBC, Base);\n\n  var keys = Object.keys(proto);\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    CBC.prototype[key] = proto[key];\n  }\n\n  CBC.create = function create(options) {\n    return new CBC(options);\n  };\n\n  return CBC;\n}\n\nexports.instantiate = instantiate;\n\nproto._cbcInit = function _cbcInit() {\n  var state = new CBCState(this.options.iv);\n  this._cbcState = state;\n};\n\nproto._update = function _update(inp, inOff, out, outOff) {\n  var state = this._cbcState;\n  var superProto = this.constructor.super_.prototype;\n\n  var iv = state.iv;\n  if (this.type === 'encrypt') {\n    for (var i = 0; i < this.blockSize; i++)\n      iv[i] ^= inp[inOff + i];\n\n    superProto._update.call(this, iv, 0, out, outOff);\n\n    for (var i = 0; i < this.blockSize; i++)\n      iv[i] = out[outOff + i];\n  } else {\n    superProto._update.call(this, inp, inOff, out, outOff);\n\n    for (var i = 0; i < this.blockSize; i++)\n      out[outOff + i] ^= iv[i];\n\n    for (var i = 0; i < this.blockSize; i++)\n      iv[i] = inp[inOff + i];\n  }\n};\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nvar Cipher = require('./cipher');\nvar DES = require('./des');\n\nfunction EDEState(type, key) {\n  assert.equal(key.length, 24, 'Invalid key length');\n\n  var k1 = key.slice(0, 8);\n  var k2 = key.slice(8, 16);\n  var k3 = key.slice(16, 24);\n\n  if (type === 'encrypt') {\n    this.ciphers = [\n      DES.create({ type: 'encrypt', key: k1 }),\n      DES.create({ type: 'decrypt', key: k2 }),\n      DES.create({ type: 'encrypt', key: k3 })\n    ];\n  } else {\n    this.ciphers = [\n      DES.create({ type: 'decrypt', key: k3 }),\n      DES.create({ type: 'encrypt', key: k2 }),\n      DES.create({ type: 'decrypt', key: k1 })\n    ];\n  }\n}\n\nfunction EDE(options) {\n  Cipher.call(this, options);\n\n  var state = new EDEState(this.type, this.options.key);\n  this._edeState = state;\n}\ninherits(EDE, Cipher);\n\nmodule.exports = EDE;\n\nEDE.create = function create(options) {\n  return new EDE(options);\n};\n\nEDE.prototype._update = function _update(inp, inOff, out, outOff) {\n  var state = this._edeState;\n\n  state.ciphers[0]._update(inp, inOff, out, outOff);\n  state.ciphers[1]._update(out, outOff, out, outOff);\n  state.ciphers[2]._update(out, outOff, out, outOff);\n};\n\nEDE.prototype._pad = DES.prototype._pad;\nEDE.prototype._unpad = DES.prototype._unpad;\n","'use strict';\n\nexports.utils = require('./des/utils');\nexports.Cipher = require('./des/cipher');\nexports.DES = require('./des/des');\nexports.CBC = require('./des/cbc');\nexports.EDE = require('./des/ede');\n","var CipherBase = require('cipher-base')\nvar des = require('des.js')\nvar inherits = require('inherits')\nvar Buffer = require('safe-buffer').Buffer\n\nvar modes = {\n  'des-ede3-cbc': des.CBC.instantiate(des.EDE),\n  'des-ede3': des.EDE,\n  'des-ede-cbc': des.CBC.instantiate(des.EDE),\n  'des-ede': des.EDE,\n  'des-cbc': des.CBC.instantiate(des.DES),\n  'des-ecb': des.DES\n}\nmodes.des = modes['des-cbc']\nmodes.des3 = modes['des-ede3-cbc']\nmodule.exports = DES\ninherits(DES, CipherBase)\nfunction DES (opts) {\n  CipherBase.call(this)\n  var modeName = opts.mode.toLowerCase()\n  var mode = modes[modeName]\n  var type\n  if (opts.decrypt) {\n    type = 'decrypt'\n  } else {\n    type = 'encrypt'\n  }\n  var key = opts.key\n  if (!Buffer.isBuffer(key)) {\n    key = Buffer.from(key)\n  }\n  if (modeName === 'des-ede' || modeName === 'des-ede-cbc') {\n    key = Buffer.concat([key, key.slice(0, 8)])\n  }\n  var iv = opts.iv\n  if (!Buffer.isBuffer(iv)) {\n    iv = Buffer.from(iv)\n  }\n  this._des = mode.create({\n    key: key,\n    iv: iv,\n    type: type\n  })\n}\nDES.prototype._update = function (data) {\n  return Buffer.from(this._des.update(data))\n}\nDES.prototype._final = function () {\n  return Buffer.from(this._des.final())\n}\n","exports.encrypt = function (self, block) {\n  return self._cipher.encryptBlock(block)\n}\n\nexports.decrypt = function (self, block) {\n  return self._cipher.decryptBlock(block)\n}\n","module.exports = function xor (a, b) {\n  var length = Math.min(a.length, b.length)\n  var buffer = new Buffer(length)\n\n  for (var i = 0; i < length; ++i) {\n    buffer[i] = a[i] ^ b[i]\n  }\n\n  return buffer\n}\n","var xor = require('buffer-xor')\n\nexports.encrypt = function (self, block) {\n  var data = xor(block, self._prev)\n\n  self._prev = self._cipher.encryptBlock(data)\n  return self._prev\n}\n\nexports.decrypt = function (self, block) {\n  var pad = self._prev\n\n  self._prev = block\n  var out = self._cipher.decryptBlock(block)\n\n  return xor(out, pad)\n}\n","var Buffer = require('safe-buffer').Buffer\nvar xor = require('buffer-xor')\n\nfunction encryptStart (self, data, decrypt) {\n  var len = data.length\n  var out = xor(data, self._cache)\n  self._cache = self._cache.slice(len)\n  self._prev = Buffer.concat([self._prev, decrypt ? data : out])\n  return out\n}\n\nexports.encrypt = function (self, data, decrypt) {\n  var out = Buffer.allocUnsafe(0)\n  var len\n\n  while (data.length) {\n    if (self._cache.length === 0) {\n      self._cache = self._cipher.encryptBlock(self._prev)\n      self._prev = Buffer.allocUnsafe(0)\n    }\n\n    if (self._cache.length <= data.length) {\n      len = self._cache.length\n      out = Buffer.concat([out, encryptStart(self, data.slice(0, len), decrypt)])\n      data = data.slice(len)\n    } else {\n      out = Buffer.concat([out, encryptStart(self, data, decrypt)])\n      break\n    }\n  }\n\n  return out\n}\n","var Buffer = require('safe-buffer').Buffer\n\nfunction encryptByte (self, byteParam, decrypt) {\n  var pad = self._cipher.encryptBlock(self._prev)\n  var out = pad[0] ^ byteParam\n\n  self._prev = Buffer.concat([\n    self._prev.slice(1),\n    Buffer.from([decrypt ? byteParam : out])\n  ])\n\n  return out\n}\n\nexports.encrypt = function (self, chunk, decrypt) {\n  var len = chunk.length\n  var out = Buffer.allocUnsafe(len)\n  var i = -1\n\n  while (++i < len) {\n    out[i] = encryptByte(self, chunk[i], decrypt)\n  }\n\n  return out\n}\n","var Buffer = require('safe-buffer').Buffer\n\nfunction encryptByte (self, byteParam, decrypt) {\n  var pad\n  var i = -1\n  var len = 8\n  var out = 0\n  var bit, value\n  while (++i < len) {\n    pad = self._cipher.encryptBlock(self._prev)\n    bit = (byteParam & (1 << (7 - i))) ? 0x80 : 0\n    value = pad[0] ^ bit\n    out += ((value & 0x80) >> (i % 8))\n    self._prev = shiftIn(self._prev, decrypt ? bit : value)\n  }\n  return out\n}\n\nfunction shiftIn (buffer, value) {\n  var len = buffer.length\n  var i = -1\n  var out = Buffer.allocUnsafe(buffer.length)\n  buffer = Buffer.concat([buffer, Buffer.from([value])])\n\n  while (++i < len) {\n    out[i] = buffer[i] << 1 | buffer[i + 1] >> (7)\n  }\n\n  return out\n}\n\nexports.encrypt = function (self, chunk, decrypt) {\n  var len = chunk.length\n  var out = Buffer.allocUnsafe(len)\n  var i = -1\n\n  while (++i < len) {\n    out[i] = encryptByte(self, chunk[i], decrypt)\n  }\n\n  return out\n}\n","var xor = require('buffer-xor')\n\nfunction getBlock (self) {\n  self._prev = self._cipher.encryptBlock(self._prev)\n  return self._prev\n}\n\nexports.encrypt = function (self, chunk) {\n  while (self._cache.length < chunk.length) {\n    self._cache = Buffer.concat([self._cache, getBlock(self)])\n  }\n\n  var pad = self._cache.slice(0, chunk.length)\n  self._cache = self._cache.slice(chunk.length)\n  return xor(chunk, pad)\n}\n","function incr32 (iv) {\n  var len = iv.length\n  var item\n  while (len--) {\n    item = iv.readUInt8(len)\n    if (item === 255) {\n      iv.writeUInt8(0, len)\n    } else {\n      item++\n      iv.writeUInt8(item, len)\n      break\n    }\n  }\n}\nmodule.exports = incr32\n","var xor = require('buffer-xor')\nvar Buffer = require('safe-buffer').Buffer\nvar incr32 = require('../incr32')\n\nfunction getBlock (self) {\n  var out = self._cipher.encryptBlockRaw(self._prev)\n  incr32(self._prev)\n  return out\n}\n\nvar blockSize = 16\nexports.encrypt = function (self, chunk) {\n  var chunkNum = Math.ceil(chunk.length / blockSize)\n  var start = self._cache.length\n  self._cache = Buffer.concat([\n    self._cache,\n    Buffer.allocUnsafe(chunkNum * blockSize)\n  ])\n  for (var i = 0; i < chunkNum; i++) {\n    var out = getBlock(self)\n    var offset = start + i * blockSize\n    self._cache.writeUInt32BE(out[0], offset + 0)\n    self._cache.writeUInt32BE(out[1], offset + 4)\n    self._cache.writeUInt32BE(out[2], offset + 8)\n    self._cache.writeUInt32BE(out[3], offset + 12)\n  }\n  var pad = self._cache.slice(0, chunk.length)\n  self._cache = self._cache.slice(chunk.length)\n  return xor(chunk, pad)\n}\n","module.exports={\"aes-128-ecb\":{cipher:\"AES\",key:128,iv:0,mode:\"ECB\",type:\"block\"},\"aes-192-ecb\":{cipher:\"AES\",key:192,iv:0,mode:\"ECB\",type:\"block\"},\"aes-256-ecb\":{cipher:\"AES\",key:256,iv:0,mode:\"ECB\",type:\"block\"},\"aes-128-cbc\":{cipher:\"AES\",key:128,iv:16,mode:\"CBC\",type:\"block\"},\"aes-192-cbc\":{cipher:\"AES\",key:192,iv:16,mode:\"CBC\",type:\"block\"},\"aes-256-cbc\":{cipher:\"AES\",key:256,iv:16,mode:\"CBC\",type:\"block\"},aes128:{cipher:\"AES\",key:128,iv:16,mode:\"CBC\",type:\"block\"},aes192:{cipher:\"AES\",key:192,iv:16,mode:\"CBC\",type:\"block\"},aes256:{cipher:\"AES\",key:256,iv:16,mode:\"CBC\",type:\"block\"},\"aes-128-cfb\":{cipher:\"AES\",key:128,iv:16,mode:\"CFB\",type:\"stream\"},\"aes-192-cfb\":{cipher:\"AES\",key:192,iv:16,mode:\"CFB\",type:\"stream\"},\"aes-256-cfb\":{cipher:\"AES\",key:256,iv:16,mode:\"CFB\",type:\"stream\"},\"aes-128-cfb8\":{cipher:\"AES\",key:128,iv:16,mode:\"CFB8\",type:\"stream\"},\"aes-192-cfb8\":{cipher:\"AES\",key:192,iv:16,mode:\"CFB8\",type:\"stream\"},\"aes-256-cfb8\":{cipher:\"AES\",key:256,iv:16,mode:\"CFB8\",type:\"stream\"},\"aes-128-cfb1\":{cipher:\"AES\",key:128,iv:16,mode:\"CFB1\",type:\"stream\"},\"aes-192-cfb1\":{cipher:\"AES\",key:192,iv:16,mode:\"CFB1\",type:\"stream\"},\"aes-256-cfb1\":{cipher:\"AES\",key:256,iv:16,mode:\"CFB1\",type:\"stream\"},\"aes-128-ofb\":{cipher:\"AES\",key:128,iv:16,mode:\"OFB\",type:\"stream\"},\"aes-192-ofb\":{cipher:\"AES\",key:192,iv:16,mode:\"OFB\",type:\"stream\"},\"aes-256-ofb\":{cipher:\"AES\",key:256,iv:16,mode:\"OFB\",type:\"stream\"},\"aes-128-ctr\":{cipher:\"AES\",key:128,iv:16,mode:\"CTR\",type:\"stream\"},\"aes-192-ctr\":{cipher:\"AES\",key:192,iv:16,mode:\"CTR\",type:\"stream\"},\"aes-256-ctr\":{cipher:\"AES\",key:256,iv:16,mode:\"CTR\",type:\"stream\"},\"aes-128-gcm\":{cipher:\"AES\",key:128,iv:12,mode:\"GCM\",type:\"auth\"},\"aes-192-gcm\":{cipher:\"AES\",key:192,iv:12,mode:\"GCM\",type:\"auth\"},\"aes-256-gcm\":{cipher:\"AES\",key:256,iv:12,mode:\"GCM\",type:\"auth\"}};","var modeModules = {\n  ECB: require('./ecb'),\n  CBC: require('./cbc'),\n  CFB: require('./cfb'),\n  CFB8: require('./cfb8'),\n  CFB1: require('./cfb1'),\n  OFB: require('./ofb'),\n  CTR: require('./ctr'),\n  GCM: require('./ctr')\n}\n\nvar modes = require('./list.json')\n\nfor (var key in modes) {\n  modes[key].module = modeModules[modes[key].mode]\n}\n\nmodule.exports = modes\n","// based on the aes implimentation in triple sec\n// https://github.com/keybase/triplesec\n// which is in turn based on the one from crypto-js\n// https://code.google.com/p/crypto-js/\n\nvar Buffer = require('safe-buffer').Buffer\n\nfunction asUInt32Array (buf) {\n  if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n\n  var len = (buf.length / 4) | 0\n  var out = new Array(len)\n\n  for (var i = 0; i < len; i++) {\n    out[i] = buf.readUInt32BE(i * 4)\n  }\n\n  return out\n}\n\nfunction scrubVec (v) {\n  for (var i = 0; i < v.length; v++) {\n    v[i] = 0\n  }\n}\n\nfunction cryptBlock (M, keySchedule, SUB_MIX, SBOX, nRounds) {\n  var SUB_MIX0 = SUB_MIX[0]\n  var SUB_MIX1 = SUB_MIX[1]\n  var SUB_MIX2 = SUB_MIX[2]\n  var SUB_MIX3 = SUB_MIX[3]\n\n  var s0 = M[0] ^ keySchedule[0]\n  var s1 = M[1] ^ keySchedule[1]\n  var s2 = M[2] ^ keySchedule[2]\n  var s3 = M[3] ^ keySchedule[3]\n  var t0, t1, t2, t3\n  var ksRow = 4\n\n  for (var round = 1; round < nRounds; round++) {\n    t0 = SUB_MIX0[s0 >>> 24] ^ SUB_MIX1[(s1 >>> 16) & 0xff] ^ SUB_MIX2[(s2 >>> 8) & 0xff] ^ SUB_MIX3[s3 & 0xff] ^ keySchedule[ksRow++]\n    t1 = SUB_MIX0[s1 >>> 24] ^ SUB_MIX1[(s2 >>> 16) & 0xff] ^ SUB_MIX2[(s3 >>> 8) & 0xff] ^ SUB_MIX3[s0 & 0xff] ^ keySchedule[ksRow++]\n    t2 = SUB_MIX0[s2 >>> 24] ^ SUB_MIX1[(s3 >>> 16) & 0xff] ^ SUB_MIX2[(s0 >>> 8) & 0xff] ^ SUB_MIX3[s1 & 0xff] ^ keySchedule[ksRow++]\n    t3 = SUB_MIX0[s3 >>> 24] ^ SUB_MIX1[(s0 >>> 16) & 0xff] ^ SUB_MIX2[(s1 >>> 8) & 0xff] ^ SUB_MIX3[s2 & 0xff] ^ keySchedule[ksRow++]\n    s0 = t0\n    s1 = t1\n    s2 = t2\n    s3 = t3\n  }\n\n  t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++]\n  t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++]\n  t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++]\n  t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++]\n  t0 = t0 >>> 0\n  t1 = t1 >>> 0\n  t2 = t2 >>> 0\n  t3 = t3 >>> 0\n\n  return [t0, t1, t2, t3]\n}\n\n// AES constants\nvar RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36]\nvar G = (function () {\n  // Compute double table\n  var d = new Array(256)\n  for (var j = 0; j < 256; j++) {\n    if (j < 128) {\n      d[j] = j << 1\n    } else {\n      d[j] = (j << 1) ^ 0x11b\n    }\n  }\n\n  var SBOX = []\n  var INV_SBOX = []\n  var SUB_MIX = [[], [], [], []]\n  var INV_SUB_MIX = [[], [], [], []]\n\n  // Walk GF(2^8)\n  var x = 0\n  var xi = 0\n  for (var i = 0; i < 256; ++i) {\n    // Compute sbox\n    var sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4)\n    sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63\n    SBOX[x] = sx\n    INV_SBOX[sx] = x\n\n    // Compute multiplication\n    var x2 = d[x]\n    var x4 = d[x2]\n    var x8 = d[x4]\n\n    // Compute sub bytes, mix columns tables\n    var t = (d[sx] * 0x101) ^ (sx * 0x1010100)\n    SUB_MIX[0][x] = (t << 24) | (t >>> 8)\n    SUB_MIX[1][x] = (t << 16) | (t >>> 16)\n    SUB_MIX[2][x] = (t << 8) | (t >>> 24)\n    SUB_MIX[3][x] = t\n\n    // Compute inv sub bytes, inv mix columns tables\n    t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100)\n    INV_SUB_MIX[0][sx] = (t << 24) | (t >>> 8)\n    INV_SUB_MIX[1][sx] = (t << 16) | (t >>> 16)\n    INV_SUB_MIX[2][sx] = (t << 8) | (t >>> 24)\n    INV_SUB_MIX[3][sx] = t\n\n    if (x === 0) {\n      x = xi = 1\n    } else {\n      x = x2 ^ d[d[d[x8 ^ x2]]]\n      xi ^= d[d[xi]]\n    }\n  }\n\n  return {\n    SBOX: SBOX,\n    INV_SBOX: INV_SBOX,\n    SUB_MIX: SUB_MIX,\n    INV_SUB_MIX: INV_SUB_MIX\n  }\n})()\n\nfunction AES (key) {\n  this._key = asUInt32Array(key)\n  this._reset()\n}\n\nAES.blockSize = 4 * 4\nAES.keySize = 256 / 8\nAES.prototype.blockSize = AES.blockSize\nAES.prototype.keySize = AES.keySize\nAES.prototype._reset = function () {\n  var keyWords = this._key\n  var keySize = keyWords.length\n  var nRounds = keySize + 6\n  var ksRows = (nRounds + 1) * 4\n\n  var keySchedule = []\n  for (var k = 0; k < keySize; k++) {\n    keySchedule[k] = keyWords[k]\n  }\n\n  for (k = keySize; k < ksRows; k++) {\n    var t = keySchedule[k - 1]\n\n    if (k % keySize === 0) {\n      t = (t << 8) | (t >>> 24)\n      t =\n        (G.SBOX[t >>> 24] << 24) |\n        (G.SBOX[(t >>> 16) & 0xff] << 16) |\n        (G.SBOX[(t >>> 8) & 0xff] << 8) |\n        (G.SBOX[t & 0xff])\n\n      t ^= RCON[(k / keySize) | 0] << 24\n    } else if (keySize > 6 && k % keySize === 4) {\n      t =\n        (G.SBOX[t >>> 24] << 24) |\n        (G.SBOX[(t >>> 16) & 0xff] << 16) |\n        (G.SBOX[(t >>> 8) & 0xff] << 8) |\n        (G.SBOX[t & 0xff])\n    }\n\n    keySchedule[k] = keySchedule[k - keySize] ^ t\n  }\n\n  var invKeySchedule = []\n  for (var ik = 0; ik < ksRows; ik++) {\n    var ksR = ksRows - ik\n    var tt = keySchedule[ksR - (ik % 4 ? 0 : 4)]\n\n    if (ik < 4 || ksR <= 4) {\n      invKeySchedule[ik] = tt\n    } else {\n      invKeySchedule[ik] =\n        G.INV_SUB_MIX[0][G.SBOX[tt >>> 24]] ^\n        G.INV_SUB_MIX[1][G.SBOX[(tt >>> 16) & 0xff]] ^\n        G.INV_SUB_MIX[2][G.SBOX[(tt >>> 8) & 0xff]] ^\n        G.INV_SUB_MIX[3][G.SBOX[tt & 0xff]]\n    }\n  }\n\n  this._nRounds = nRounds\n  this._keySchedule = keySchedule\n  this._invKeySchedule = invKeySchedule\n}\n\nAES.prototype.encryptBlockRaw = function (M) {\n  M = asUInt32Array(M)\n  return cryptBlock(M, this._keySchedule, G.SUB_MIX, G.SBOX, this._nRounds)\n}\n\nAES.prototype.encryptBlock = function (M) {\n  var out = this.encryptBlockRaw(M)\n  var buf = Buffer.allocUnsafe(16)\n  buf.writeUInt32BE(out[0], 0)\n  buf.writeUInt32BE(out[1], 4)\n  buf.writeUInt32BE(out[2], 8)\n  buf.writeUInt32BE(out[3], 12)\n  return buf\n}\n\nAES.prototype.decryptBlock = function (M) {\n  M = asUInt32Array(M)\n\n  // swap\n  var m1 = M[1]\n  M[1] = M[3]\n  M[3] = m1\n\n  var out = cryptBlock(M, this._invKeySchedule, G.INV_SUB_MIX, G.INV_SBOX, this._nRounds)\n  var buf = Buffer.allocUnsafe(16)\n  buf.writeUInt32BE(out[0], 0)\n  buf.writeUInt32BE(out[3], 4)\n  buf.writeUInt32BE(out[2], 8)\n  buf.writeUInt32BE(out[1], 12)\n  return buf\n}\n\nAES.prototype.scrub = function () {\n  scrubVec(this._keySchedule)\n  scrubVec(this._invKeySchedule)\n  scrubVec(this._key)\n}\n\nmodule.exports.AES = AES\n","var Buffer = require('safe-buffer').Buffer\nvar ZEROES = Buffer.alloc(16, 0)\n\nfunction toArray (buf) {\n  return [\n    buf.readUInt32BE(0),\n    buf.readUInt32BE(4),\n    buf.readUInt32BE(8),\n    buf.readUInt32BE(12)\n  ]\n}\n\nfunction fromArray (out) {\n  var buf = Buffer.allocUnsafe(16)\n  buf.writeUInt32BE(out[0] >>> 0, 0)\n  buf.writeUInt32BE(out[1] >>> 0, 4)\n  buf.writeUInt32BE(out[2] >>> 0, 8)\n  buf.writeUInt32BE(out[3] >>> 0, 12)\n  return buf\n}\n\nfunction GHASH (key) {\n  this.h = key\n  this.state = Buffer.alloc(16, 0)\n  this.cache = Buffer.allocUnsafe(0)\n}\n\n// from http://bitwiseshiftleft.github.io/sjcl/doc/symbols/src/core_gcm.js.html\n// by Juho Vähä-Herttua\nGHASH.prototype.ghash = function (block) {\n  var i = -1\n  while (++i < block.length) {\n    this.state[i] ^= block[i]\n  }\n  this._multiply()\n}\n\nGHASH.prototype._multiply = function () {\n  var Vi = toArray(this.h)\n  var Zi = [0, 0, 0, 0]\n  var j, xi, lsbVi\n  var i = -1\n  while (++i < 128) {\n    xi = (this.state[~~(i / 8)] & (1 << (7 - (i % 8)))) !== 0\n    if (xi) {\n      // Z_i+1 = Z_i ^ V_i\n      Zi[0] ^= Vi[0]\n      Zi[1] ^= Vi[1]\n      Zi[2] ^= Vi[2]\n      Zi[3] ^= Vi[3]\n    }\n\n    // Store the value of LSB(V_i)\n    lsbVi = (Vi[3] & 1) !== 0\n\n    // V_i+1 = V_i >> 1\n    for (j = 3; j > 0; j--) {\n      Vi[j] = (Vi[j] >>> 1) | ((Vi[j - 1] & 1) << 31)\n    }\n    Vi[0] = Vi[0] >>> 1\n\n    // If LSB(V_i) is 1, V_i+1 = (V_i >> 1) ^ R\n    if (lsbVi) {\n      Vi[0] = Vi[0] ^ (0xe1 << 24)\n    }\n  }\n  this.state = fromArray(Zi)\n}\n\nGHASH.prototype.update = function (buf) {\n  this.cache = Buffer.concat([this.cache, buf])\n  var chunk\n  while (this.cache.length >= 16) {\n    chunk = this.cache.slice(0, 16)\n    this.cache = this.cache.slice(16)\n    this.ghash(chunk)\n  }\n}\n\nGHASH.prototype.final = function (abl, bl) {\n  if (this.cache.length) {\n    this.ghash(Buffer.concat([this.cache, ZEROES], 16))\n  }\n\n  this.ghash(fromArray([0, abl, 0, bl]))\n  return this.state\n}\n\nmodule.exports = GHASH\n","var aes = require('./aes')\nvar Buffer = require('safe-buffer').Buffer\nvar Transform = require('cipher-base')\nvar inherits = require('inherits')\nvar GHASH = require('./ghash')\nvar xor = require('buffer-xor')\nvar incr32 = require('./incr32')\n\nfunction xorTest (a, b) {\n  var out = 0\n  if (a.length !== b.length) out++\n\n  var len = Math.min(a.length, b.length)\n  for (var i = 0; i < len; ++i) {\n    out += (a[i] ^ b[i])\n  }\n\n  return out\n}\n\nfunction calcIv (self, iv, ck) {\n  if (iv.length === 12) {\n    self._finID = Buffer.concat([iv, Buffer.from([0, 0, 0, 1])])\n    return Buffer.concat([iv, Buffer.from([0, 0, 0, 2])])\n  }\n  var ghash = new GHASH(ck)\n  var len = iv.length\n  var toPad = len % 16\n  ghash.update(iv)\n  if (toPad) {\n    toPad = 16 - toPad\n    ghash.update(Buffer.alloc(toPad, 0))\n  }\n  ghash.update(Buffer.alloc(8, 0))\n  var ivBits = len * 8\n  var tail = Buffer.alloc(8)\n  tail.writeUIntBE(ivBits, 0, 8)\n  ghash.update(tail)\n  self._finID = ghash.state\n  var out = Buffer.from(self._finID)\n  incr32(out)\n  return out\n}\nfunction StreamCipher (mode, key, iv, decrypt) {\n  Transform.call(this)\n\n  var h = Buffer.alloc(4, 0)\n\n  this._cipher = new aes.AES(key)\n  var ck = this._cipher.encryptBlock(h)\n  this._ghash = new GHASH(ck)\n  iv = calcIv(this, iv, ck)\n\n  this._prev = Buffer.from(iv)\n  this._cache = Buffer.allocUnsafe(0)\n  this._secCache = Buffer.allocUnsafe(0)\n  this._decrypt = decrypt\n  this._alen = 0\n  this._len = 0\n  this._mode = mode\n\n  this._authTag = null\n  this._called = false\n}\n\ninherits(StreamCipher, Transform)\n\nStreamCipher.prototype._update = function (chunk) {\n  if (!this._called && this._alen) {\n    var rump = 16 - (this._alen % 16)\n    if (rump < 16) {\n      rump = Buffer.alloc(rump, 0)\n      this._ghash.update(rump)\n    }\n  }\n\n  this._called = true\n  var out = this._mode.encrypt(this, chunk)\n  if (this._decrypt) {\n    this._ghash.update(chunk)\n  } else {\n    this._ghash.update(out)\n  }\n  this._len += chunk.length\n  return out\n}\n\nStreamCipher.prototype._final = function () {\n  if (this._decrypt && !this._authTag) throw new Error('Unsupported state or unable to authenticate data')\n\n  var tag = xor(this._ghash.final(this._alen * 8, this._len * 8), this._cipher.encryptBlock(this._finID))\n  if (this._decrypt && xorTest(tag, this._authTag)) throw new Error('Unsupported state or unable to authenticate data')\n\n  this._authTag = tag\n  this._cipher.scrub()\n}\n\nStreamCipher.prototype.getAuthTag = function getAuthTag () {\n  if (this._decrypt || !Buffer.isBuffer(this._authTag)) throw new Error('Attempting to get auth tag in unsupported state')\n\n  return this._authTag\n}\n\nStreamCipher.prototype.setAuthTag = function setAuthTag (tag) {\n  if (!this._decrypt) throw new Error('Attempting to set auth tag in unsupported state')\n\n  this._authTag = tag\n}\n\nStreamCipher.prototype.setAAD = function setAAD (buf) {\n  if (this._called) throw new Error('Attempting to set AAD in unsupported state')\n\n  this._ghash.update(buf)\n  this._alen += buf.length\n}\n\nmodule.exports = StreamCipher\n","var aes = require('./aes')\nvar Buffer = require('safe-buffer').Buffer\nvar Transform = require('cipher-base')\nvar inherits = require('inherits')\n\nfunction StreamCipher (mode, key, iv, decrypt) {\n  Transform.call(this)\n\n  this._cipher = new aes.AES(key)\n  this._prev = Buffer.from(iv)\n  this._cache = Buffer.allocUnsafe(0)\n  this._secCache = Buffer.allocUnsafe(0)\n  this._decrypt = decrypt\n  this._mode = mode\n}\n\ninherits(StreamCipher, Transform)\n\nStreamCipher.prototype._update = function (chunk) {\n  return this._mode.encrypt(this, chunk, this._decrypt)\n}\n\nStreamCipher.prototype._final = function () {\n  this._cipher.scrub()\n}\n\nmodule.exports = StreamCipher\n","var Buffer = require('safe-buffer').Buffer\nvar MD5 = require('md5.js')\n\n/* eslint-disable camelcase */\nfunction EVP_BytesToKey (password, salt, keyBits, ivLen) {\n  if (!Buffer.isBuffer(password)) password = Buffer.from(password, 'binary')\n  if (salt) {\n    if (!Buffer.isBuffer(salt)) salt = Buffer.from(salt, 'binary')\n    if (salt.length !== 8) throw new RangeError('salt should be Buffer with 8 byte length')\n  }\n\n  var keyLen = keyBits / 8\n  var key = Buffer.alloc(keyLen)\n  var iv = Buffer.alloc(ivLen || 0)\n  var tmp = Buffer.alloc(0)\n\n  while (keyLen > 0 || ivLen > 0) {\n    var hash = new MD5()\n    hash.update(tmp)\n    hash.update(password)\n    if (salt) hash.update(salt)\n    tmp = hash.digest()\n\n    var used = 0\n\n    if (keyLen > 0) {\n      var keyStart = key.length - keyLen\n      used = Math.min(keyLen, tmp.length)\n      tmp.copy(key, keyStart, 0, used)\n      keyLen -= used\n    }\n\n    if (used < tmp.length && ivLen > 0) {\n      var ivStart = iv.length - ivLen\n      var length = Math.min(ivLen, tmp.length - used)\n      tmp.copy(iv, ivStart, used, used + length)\n      ivLen -= length\n    }\n  }\n\n  tmp.fill(0)\n  return { key: key, iv: iv }\n}\n\nmodule.exports = EVP_BytesToKey\n","var MODES = require('./modes')\nvar AuthCipher = require('./authCipher')\nvar Buffer = require('safe-buffer').Buffer\nvar StreamCipher = require('./streamCipher')\nvar Transform = require('cipher-base')\nvar aes = require('./aes')\nvar ebtk = require('evp_bytestokey')\nvar inherits = require('inherits')\n\nfunction Cipher (mode, key, iv) {\n  Transform.call(this)\n\n  this._cache = new Splitter()\n  this._cipher = new aes.AES(key)\n  this._prev = Buffer.from(iv)\n  this._mode = mode\n  this._autopadding = true\n}\n\ninherits(Cipher, Transform)\n\nCipher.prototype._update = function (data) {\n  this._cache.add(data)\n  var chunk\n  var thing\n  var out = []\n\n  while ((chunk = this._cache.get())) {\n    thing = this._mode.encrypt(this, chunk)\n    out.push(thing)\n  }\n\n  return Buffer.concat(out)\n}\n\nvar PADDING = Buffer.alloc(16, 0x10)\n\nCipher.prototype._final = function () {\n  var chunk = this._cache.flush()\n  if (this._autopadding) {\n    chunk = this._mode.encrypt(this, chunk)\n    this._cipher.scrub()\n    return chunk\n  }\n\n  if (!chunk.equals(PADDING)) {\n    this._cipher.scrub()\n    throw new Error('data not multiple of block length')\n  }\n}\n\nCipher.prototype.setAutoPadding = function (setTo) {\n  this._autopadding = !!setTo\n  return this\n}\n\nfunction Splitter () {\n  this.cache = Buffer.allocUnsafe(0)\n}\n\nSplitter.prototype.add = function (data) {\n  this.cache = Buffer.concat([this.cache, data])\n}\n\nSplitter.prototype.get = function () {\n  if (this.cache.length > 15) {\n    var out = this.cache.slice(0, 16)\n    this.cache = this.cache.slice(16)\n    return out\n  }\n  return null\n}\n\nSplitter.prototype.flush = function () {\n  var len = 16 - this.cache.length\n  var padBuff = Buffer.allocUnsafe(len)\n\n  var i = -1\n  while (++i < len) {\n    padBuff.writeUInt8(len, i)\n  }\n\n  return Buffer.concat([this.cache, padBuff])\n}\n\nfunction createCipheriv (suite, password, iv) {\n  var config = MODES[suite.toLowerCase()]\n  if (!config) throw new TypeError('invalid suite type')\n\n  if (typeof password === 'string') password = Buffer.from(password)\n  if (password.length !== config.key / 8) throw new TypeError('invalid key length ' + password.length)\n\n  if (typeof iv === 'string') iv = Buffer.from(iv)\n  if (config.mode !== 'GCM' && iv.length !== config.iv) throw new TypeError('invalid iv length ' + iv.length)\n\n  if (config.type === 'stream') {\n    return new StreamCipher(config.module, password, iv)\n  } else if (config.type === 'auth') {\n    return new AuthCipher(config.module, password, iv)\n  }\n\n  return new Cipher(config.module, password, iv)\n}\n\nfunction createCipher (suite, password) {\n  var config = MODES[suite.toLowerCase()]\n  if (!config) throw new TypeError('invalid suite type')\n\n  var keys = ebtk(password, false, config.key, config.iv)\n  return createCipheriv(suite, keys.key, keys.iv)\n}\n\nexports.createCipheriv = createCipheriv\nexports.createCipher = createCipher\n","var AuthCipher = require('./authCipher')\nvar Buffer = require('safe-buffer').Buffer\nvar MODES = require('./modes')\nvar StreamCipher = require('./streamCipher')\nvar Transform = require('cipher-base')\nvar aes = require('./aes')\nvar ebtk = require('evp_bytestokey')\nvar inherits = require('inherits')\n\nfunction Decipher (mode, key, iv) {\n  Transform.call(this)\n\n  this._cache = new Splitter()\n  this._last = void 0\n  this._cipher = new aes.AES(key)\n  this._prev = Buffer.from(iv)\n  this._mode = mode\n  this._autopadding = true\n}\n\ninherits(Decipher, Transform)\n\nDecipher.prototype._update = function (data) {\n  this._cache.add(data)\n  var chunk\n  var thing\n  var out = []\n  while ((chunk = this._cache.get(this._autopadding))) {\n    thing = this._mode.decrypt(this, chunk)\n    out.push(thing)\n  }\n  return Buffer.concat(out)\n}\n\nDecipher.prototype._final = function () {\n  var chunk = this._cache.flush()\n  if (this._autopadding) {\n    return unpad(this._mode.decrypt(this, chunk))\n  } else if (chunk) {\n    throw new Error('data not multiple of block length')\n  }\n}\n\nDecipher.prototype.setAutoPadding = function (setTo) {\n  this._autopadding = !!setTo\n  return this\n}\n\nfunction Splitter () {\n  this.cache = Buffer.allocUnsafe(0)\n}\n\nSplitter.prototype.add = function (data) {\n  this.cache = Buffer.concat([this.cache, data])\n}\n\nSplitter.prototype.get = function (autoPadding) {\n  var out\n  if (autoPadding) {\n    if (this.cache.length > 16) {\n      out = this.cache.slice(0, 16)\n      this.cache = this.cache.slice(16)\n      return out\n    }\n  } else {\n    if (this.cache.length >= 16) {\n      out = this.cache.slice(0, 16)\n      this.cache = this.cache.slice(16)\n      return out\n    }\n  }\n\n  return null\n}\n\nSplitter.prototype.flush = function () {\n  if (this.cache.length) return this.cache\n}\n\nfunction unpad (last) {\n  var padded = last[15]\n  if (padded < 1 || padded > 16) {\n    throw new Error('unable to decrypt data')\n  }\n  var i = -1\n  while (++i < padded) {\n    if (last[(i + (16 - padded))] !== padded) {\n      throw new Error('unable to decrypt data')\n    }\n  }\n  if (padded === 16) return\n\n  return last.slice(0, 16 - padded)\n}\n\nfunction createDecipheriv (suite, password, iv) {\n  var config = MODES[suite.toLowerCase()]\n  if (!config) throw new TypeError('invalid suite type')\n\n  if (typeof iv === 'string') iv = Buffer.from(iv)\n  if (config.mode !== 'GCM' && iv.length !== config.iv) throw new TypeError('invalid iv length ' + iv.length)\n\n  if (typeof password === 'string') password = Buffer.from(password)\n  if (password.length !== config.key / 8) throw new TypeError('invalid key length ' + password.length)\n\n  if (config.type === 'stream') {\n    return new StreamCipher(config.module, password, iv, true)\n  } else if (config.type === 'auth') {\n    return new AuthCipher(config.module, password, iv, true)\n  }\n\n  return new Decipher(config.module, password, iv)\n}\n\nfunction createDecipher (suite, password) {\n  var config = MODES[suite.toLowerCase()]\n  if (!config) throw new TypeError('invalid suite type')\n\n  var keys = ebtk(password, false, config.key, config.iv)\n  return createDecipheriv(suite, keys.key, keys.iv)\n}\n\nexports.createDecipher = createDecipher\nexports.createDecipheriv = createDecipheriv\n","var ciphers = require('./encrypter')\nvar deciphers = require('./decrypter')\nvar modes = require('./modes/list.json')\n\nfunction getCiphers () {\n  return Object.keys(modes)\n}\n\nexports.createCipher = exports.Cipher = ciphers.createCipher\nexports.createCipheriv = exports.Cipheriv = ciphers.createCipheriv\nexports.createDecipher = exports.Decipher = deciphers.createDecipher\nexports.createDecipheriv = exports.Decipheriv = deciphers.createDecipheriv\nexports.listCiphers = exports.getCiphers = getCiphers\n","exports['des-ecb'] = {\n  key: 8,\n  iv: 0\n}\nexports['des-cbc'] = exports.des = {\n  key: 8,\n  iv: 8\n}\nexports['des-ede3-cbc'] = exports.des3 = {\n  key: 24,\n  iv: 8\n}\nexports['des-ede3'] = {\n  key: 24,\n  iv: 0\n}\nexports['des-ede-cbc'] = {\n  key: 16,\n  iv: 8\n}\nexports['des-ede'] = {\n  key: 16,\n  iv: 0\n}\n","var DES = require('browserify-des')\nvar aes = require('browserify-aes/browser')\nvar aesModes = require('browserify-aes/modes')\nvar desModes = require('browserify-des/modes')\nvar ebtk = require('evp_bytestokey')\n\nfunction createCipher (suite, password) {\n  suite = suite.toLowerCase()\n\n  var keyLen, ivLen\n  if (aesModes[suite]) {\n    keyLen = aesModes[suite].key\n    ivLen = aesModes[suite].iv\n  } else if (desModes[suite]) {\n    keyLen = desModes[suite].key * 8\n    ivLen = desModes[suite].iv\n  } else {\n    throw new TypeError('invalid suite type')\n  }\n\n  var keys = ebtk(password, false, keyLen, ivLen)\n  return createCipheriv(suite, keys.key, keys.iv)\n}\n\nfunction createDecipher (suite, password) {\n  suite = suite.toLowerCase()\n\n  var keyLen, ivLen\n  if (aesModes[suite]) {\n    keyLen = aesModes[suite].key\n    ivLen = aesModes[suite].iv\n  } else if (desModes[suite]) {\n    keyLen = desModes[suite].key * 8\n    ivLen = desModes[suite].iv\n  } else {\n    throw new TypeError('invalid suite type')\n  }\n\n  var keys = ebtk(password, false, keyLen, ivLen)\n  return createDecipheriv(suite, keys.key, keys.iv)\n}\n\nfunction createCipheriv (suite, key, iv) {\n  suite = suite.toLowerCase()\n  if (aesModes[suite]) return aes.createCipheriv(suite, key, iv)\n  if (desModes[suite]) return new DES({ key: key, iv: iv, mode: suite })\n\n  throw new TypeError('invalid suite type')\n}\n\nfunction createDecipheriv (suite, key, iv) {\n  suite = suite.toLowerCase()\n  if (aesModes[suite]) return aes.createDecipheriv(suite, key, iv)\n  if (desModes[suite]) return new DES({ key: key, iv: iv, mode: suite, decrypt: true })\n\n  throw new TypeError('invalid suite type')\n}\n\nfunction getCiphers () {\n  return Object.keys(desModes).concat(aes.getCiphers())\n}\n\nexports.createCipher = exports.Cipher = createCipher\nexports.createCipheriv = exports.Cipheriv = createCipheriv\nexports.createDecipher = exports.Decipher = createDecipher\nexports.createDecipheriv = exports.Decipheriv = createDecipheriv\nexports.listCiphers = exports.getCiphers = getCiphers\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","var r;\n\nmodule.exports = function rand(len) {\n  if (!r)\n    r = new Rand(null);\n\n  return r.generate(len);\n};\n\nfunction Rand(rand) {\n  this.rand = rand;\n}\nmodule.exports.Rand = Rand;\n\nRand.prototype.generate = function generate(len) {\n  return this._rand(len);\n};\n\n// Emulate crypto API using randy\nRand.prototype._rand = function _rand(n) {\n  if (this.rand.getBytes)\n    return this.rand.getBytes(n);\n\n  var res = new Uint8Array(n);\n  for (var i = 0; i < res.length; i++)\n    res[i] = this.rand.getByte();\n  return res;\n};\n\nif (typeof self === 'object') {\n  if (self.crypto && self.crypto.getRandomValues) {\n    // Modern browsers\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.crypto.getRandomValues(arr);\n      return arr;\n    };\n  } else if (self.msCrypto && self.msCrypto.getRandomValues) {\n    // IE\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.msCrypto.getRandomValues(arr);\n      return arr;\n    };\n\n  // Safari's WebWorkers do not have `crypto`\n  } else if (typeof window === 'object') {\n    // Old junk\n    Rand.prototype._rand = function() {\n      throw new Error('Not implemented yet');\n    };\n  }\n} else {\n  // Node.js or Web worker with no crypto support\n  try {\n    var crypto = require('crypto');\n    if (typeof crypto.randomBytes !== 'function')\n      throw new Error('Not supported');\n\n    Rand.prototype._rand = function _rand(n) {\n      return crypto.randomBytes(n);\n    };\n  } catch (e) {\n  }\n}\n","var bn = require('bn.js');\nvar brorand = require('brorand');\n\nfunction MillerRabin(rand) {\n  this.rand = rand || new brorand.Rand();\n}\nmodule.exports = MillerRabin;\n\nMillerRabin.create = function create(rand) {\n  return new MillerRabin(rand);\n};\n\nMillerRabin.prototype._randbelow = function _randbelow(n) {\n  var len = n.bitLength();\n  var min_bytes = Math.ceil(len / 8);\n\n  // Generage random bytes until a number less than n is found.\n  // This ensures that 0..n-1 have an equal probability of being selected.\n  do\n    var a = new bn(this.rand.generate(min_bytes));\n  while (a.cmp(n) >= 0);\n\n  return a;\n};\n\nMillerRabin.prototype._randrange = function _randrange(start, stop) {\n  // Generate a random number greater than or equal to start and less than stop.\n  var size = stop.sub(start);\n  return start.add(this._randbelow(size));\n};\n\nMillerRabin.prototype.test = function test(n, k, cb) {\n  var len = n.bitLength();\n  var red = bn.mont(n);\n  var rone = new bn(1).toRed(red);\n\n  if (!k)\n    k = Math.max(1, (len / 48) | 0);\n\n  // Find d and s, (n - 1) = (2 ^ s) * d;\n  var n1 = n.subn(1);\n  for (var s = 0; !n1.testn(s); s++) {}\n  var d = n.shrn(s);\n\n  var rn1 = n1.toRed(red);\n\n  var prime = true;\n  for (; k > 0; k--) {\n    var a = this._randrange(new bn(2), n1);\n    if (cb)\n      cb(a);\n\n    var x = a.toRed(red).redPow(d);\n    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)\n      continue;\n\n    for (var i = 1; i < s; i++) {\n      x = x.redSqr();\n\n      if (x.cmp(rone) === 0)\n        return false;\n      if (x.cmp(rn1) === 0)\n        break;\n    }\n\n    if (i === s)\n      return false;\n  }\n\n  return prime;\n};\n\nMillerRabin.prototype.getDivisor = function getDivisor(n, k) {\n  var len = n.bitLength();\n  var red = bn.mont(n);\n  var rone = new bn(1).toRed(red);\n\n  if (!k)\n    k = Math.max(1, (len / 48) | 0);\n\n  // Find d and s, (n - 1) = (2 ^ s) * d;\n  var n1 = n.subn(1);\n  for (var s = 0; !n1.testn(s); s++) {}\n  var d = n.shrn(s);\n\n  var rn1 = n1.toRed(red);\n\n  for (; k > 0; k--) {\n    var a = this._randrange(new bn(2), n1);\n\n    var g = n.gcd(a);\n    if (g.cmpn(1) !== 0)\n      return g;\n\n    var x = a.toRed(red).redPow(d);\n    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)\n      continue;\n\n    for (var i = 1; i < s; i++) {\n      x = x.redSqr();\n\n      if (x.cmp(rone) === 0)\n        return x.fromRed().subn(1).gcd(n);\n      if (x.cmp(rn1) === 0)\n        break;\n    }\n\n    if (i === s) {\n      x = x.redSqr();\n      return x.fromRed().subn(1).gcd(n);\n    }\n  }\n\n  return false;\n};\n","var randomBytes = require('randombytes');\nmodule.exports = findPrime;\nfindPrime.simpleSieve = simpleSieve;\nfindPrime.fermatTest = fermatTest;\nvar BN = require('bn.js');\nvar TWENTYFOUR = new BN(24);\nvar MillerRabin = require('miller-rabin');\nvar millerRabin = new MillerRabin();\nvar ONE = new BN(1);\nvar TWO = new BN(2);\nvar FIVE = new BN(5);\nvar SIXTEEN = new BN(16);\nvar EIGHT = new BN(8);\nvar TEN = new BN(10);\nvar THREE = new BN(3);\nvar SEVEN = new BN(7);\nvar ELEVEN = new BN(11);\nvar FOUR = new BN(4);\nvar TWELVE = new BN(12);\nvar primes = null;\n\nfunction _getPrimes() {\n  if (primes !== null)\n    return primes;\n\n  var limit = 0x100000;\n  var res = [];\n  res[0] = 2;\n  for (var i = 1, k = 3; k < limit; k += 2) {\n    var sqrt = Math.ceil(Math.sqrt(k));\n    for (var j = 0; j < i && res[j] <= sqrt; j++)\n      if (k % res[j] === 0)\n        break;\n\n    if (i !== j && res[j] <= sqrt)\n      continue;\n\n    res[i++] = k;\n  }\n  primes = res;\n  return res;\n}\n\nfunction simpleSieve(p) {\n  var primes = _getPrimes();\n\n  for (var i = 0; i < primes.length; i++)\n    if (p.modn(primes[i]) === 0) {\n      if (p.cmpn(primes[i]) === 0) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n  return true;\n}\n\nfunction fermatTest(p) {\n  var red = BN.mont(p);\n  return TWO.toRed(red).redPow(p.subn(1)).fromRed().cmpn(1) === 0;\n}\n\nfunction findPrime(bits, gen) {\n  if (bits < 16) {\n    // this is what openssl does\n    if (gen === 2 || gen === 5) {\n      return new BN([0x8c, 0x7b]);\n    } else {\n      return new BN([0x8c, 0x27]);\n    }\n  }\n  gen = new BN(gen);\n\n  var num, n2;\n\n  while (true) {\n    num = new BN(randomBytes(Math.ceil(bits / 8)));\n    while (num.bitLength() > bits) {\n      num.ishrn(1);\n    }\n    if (num.isEven()) {\n      num.iadd(ONE);\n    }\n    if (!num.testn(1)) {\n      num.iadd(TWO);\n    }\n    if (!gen.cmp(TWO)) {\n      while (num.mod(TWENTYFOUR).cmp(ELEVEN)) {\n        num.iadd(FOUR);\n      }\n    } else if (!gen.cmp(FIVE)) {\n      while (num.mod(TEN).cmp(THREE)) {\n        num.iadd(FOUR);\n      }\n    }\n    n2 = num.shrn(1);\n    if (simpleSieve(n2) && simpleSieve(num) &&\n      fermatTest(n2) && fermatTest(num) &&\n      millerRabin.test(n2) && millerRabin.test(num)) {\n      return num;\n    }\n  }\n\n}\n","module.exports={modp1:{gen:\"02\",prime:\"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a63a3620ffffffffffffffff\"},modp2:{gen:\"02\",prime:\"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece65381ffffffffffffffff\"},modp5:{gen:\"02\",prime:\"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca237327ffffffffffffffff\"},modp14:{gen:\"02\",prime:\"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aacaa68ffffffffffffffff\"},modp15:{gen:\"02\",prime:\"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a93ad2caffffffffffffffff\"},modp16:{gen:\"02\",prime:\"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c934063199ffffffffffffffff\"},modp17:{gen:\"02\",prime:\"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dcc4024ffffffffffffffff\"},modp18:{gen:\"02\",prime:\"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dbe115974a3926f12fee5e438777cb6a932df8cd8bec4d073b931ba3bc832b68d9dd300741fa7bf8afc47ed2576f6936ba424663aab639c5ae4f5683423b4742bf1c978238f16cbe39d652de3fdb8befc848ad922222e04a4037c0713eb57a81a23f0c73473fc646cea306b4bcbc8862f8385ddfa9d4b7fa2c087e879683303ed5bdd3a062b3cf5b3a278a66d2a13f83f44f82ddf310ee074ab6a364597e899a0255dc164f31cc50846851df9ab48195ded7ea1b1d510bd7ee74d73faf36bc31ecfa268359046f4eb879f924009438b481c6cd7889a002ed5ee382bc9190da6fc026e479558e4475677e9aa9e3050e2765694dfc81f56e880b96e7160c980dd98edd3dfffffffffffffffff\"}};","var BN = require('bn.js');\nvar MillerRabin = require('miller-rabin');\nvar millerRabin = new MillerRabin();\nvar TWENTYFOUR = new BN(24);\nvar ELEVEN = new BN(11);\nvar TEN = new BN(10);\nvar THREE = new BN(3);\nvar SEVEN = new BN(7);\nvar primes = require('./generatePrime');\nvar randomBytes = require('randombytes');\nmodule.exports = DH;\n\nfunction setPublicKey(pub, enc) {\n  enc = enc || 'utf8';\n  if (!Buffer.isBuffer(pub)) {\n    pub = new Buffer(pub, enc);\n  }\n  this._pub = new BN(pub);\n  return this;\n}\n\nfunction setPrivateKey(priv, enc) {\n  enc = enc || 'utf8';\n  if (!Buffer.isBuffer(priv)) {\n    priv = new Buffer(priv, enc);\n  }\n  this._priv = new BN(priv);\n  return this;\n}\n\nvar primeCache = {};\nfunction checkPrime(prime, generator) {\n  var gen = generator.toString('hex');\n  var hex = [gen, prime.toString(16)].join('_');\n  if (hex in primeCache) {\n    return primeCache[hex];\n  }\n  var error = 0;\n\n  if (prime.isEven() ||\n    !primes.simpleSieve ||\n    !primes.fermatTest(prime) ||\n    !millerRabin.test(prime)) {\n    //not a prime so +1\n    error += 1;\n\n    if (gen === '02' || gen === '05') {\n      // we'd be able to check the generator\n      // it would fail so +8\n      error += 8;\n    } else {\n      //we wouldn't be able to test the generator\n      // so +4\n      error += 4;\n    }\n    primeCache[hex] = error;\n    return error;\n  }\n  if (!millerRabin.test(prime.shrn(1))) {\n    //not a safe prime\n    error += 2;\n  }\n  var rem;\n  switch (gen) {\n    case '02':\n      if (prime.mod(TWENTYFOUR).cmp(ELEVEN)) {\n        // unsuidable generator\n        error += 8;\n      }\n      break;\n    case '05':\n      rem = prime.mod(TEN);\n      if (rem.cmp(THREE) && rem.cmp(SEVEN)) {\n        // prime mod 10 needs to equal 3 or 7\n        error += 8;\n      }\n      break;\n    default:\n      error += 4;\n  }\n  primeCache[hex] = error;\n  return error;\n}\n\nfunction DH(prime, generator, malleable) {\n  this.setGenerator(generator);\n  this.__prime = new BN(prime);\n  this._prime = BN.mont(this.__prime);\n  this._primeLen = prime.length;\n  this._pub = undefined;\n  this._priv = undefined;\n  this._primeCode = undefined;\n  if (malleable) {\n    this.setPublicKey = setPublicKey;\n    this.setPrivateKey = setPrivateKey;\n  } else {\n    this._primeCode = 8;\n  }\n}\nObject.defineProperty(DH.prototype, 'verifyError', {\n  enumerable: true,\n  get: function () {\n    if (typeof this._primeCode !== 'number') {\n      this._primeCode = checkPrime(this.__prime, this.__gen);\n    }\n    return this._primeCode;\n  }\n});\nDH.prototype.generateKeys = function () {\n  if (!this._priv) {\n    this._priv = new BN(randomBytes(this._primeLen));\n  }\n  this._pub = this._gen.toRed(this._prime).redPow(this._priv).fromRed();\n  return this.getPublicKey();\n};\n\nDH.prototype.computeSecret = function (other) {\n  other = new BN(other);\n  other = other.toRed(this._prime);\n  var secret = other.redPow(this._priv).fromRed();\n  var out = new Buffer(secret.toArray());\n  var prime = this.getPrime();\n  if (out.length < prime.length) {\n    var front = new Buffer(prime.length - out.length);\n    front.fill(0);\n    out = Buffer.concat([front, out]);\n  }\n  return out;\n};\n\nDH.prototype.getPublicKey = function getPublicKey(enc) {\n  return formatReturnValue(this._pub, enc);\n};\n\nDH.prototype.getPrivateKey = function getPrivateKey(enc) {\n  return formatReturnValue(this._priv, enc);\n};\n\nDH.prototype.getPrime = function (enc) {\n  return formatReturnValue(this.__prime, enc);\n};\n\nDH.prototype.getGenerator = function (enc) {\n  return formatReturnValue(this._gen, enc);\n};\n\nDH.prototype.setGenerator = function (gen, enc) {\n  enc = enc || 'utf8';\n  if (!Buffer.isBuffer(gen)) {\n    gen = new Buffer(gen, enc);\n  }\n  this.__gen = gen;\n  this._gen = new BN(gen);\n  return this;\n};\n\nfunction formatReturnValue(bn, enc) {\n  var buf = new Buffer(bn.toArray());\n  if (!enc) {\n    return buf;\n  } else {\n    return buf.toString(enc);\n  }\n}\n","var generatePrime = require('./lib/generatePrime')\nvar primes = require('./lib/primes.json')\n\nvar DH = require('./lib/dh')\n\nfunction getDiffieHellman (mod) {\n  var prime = new Buffer(primes[mod].prime, 'hex')\n  var gen = new Buffer(primes[mod].gen, 'hex')\n\n  return new DH(prime, gen)\n}\n\nvar ENCODINGS = {\n  'binary': true, 'hex': true, 'base64': true\n}\n\nfunction createDiffieHellman (prime, enc, generator, genc) {\n  if (Buffer.isBuffer(enc) || ENCODINGS[enc] === undefined) {\n    return createDiffieHellman(prime, 'binary', enc, generator)\n  }\n\n  enc = enc || 'binary'\n  genc = genc || 'binary'\n  generator = generator || new Buffer([2])\n\n  if (!Buffer.isBuffer(generator)) {\n    generator = new Buffer(generator, genc)\n  }\n\n  if (typeof prime === 'number') {\n    return new DH(generatePrime(prime, generator), generator, true)\n  }\n\n  if (!Buffer.isBuffer(prime)) {\n    prime = new Buffer(prime, enc)\n  }\n\n  return new DH(prime, generator, true)\n}\n\nexports.DiffieHellmanGroup = exports.createDiffieHellmanGroup = exports.getDiffieHellman = getDiffieHellman\nexports.createDiffieHellman = exports.DiffieHellman = createDiffieHellman\n","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","var BN = require('bn.js')\nvar randomBytes = require('randombytes')\n\nfunction blind (priv) {\n  var r = getr(priv)\n  var blinder = r.toRed(BN.mont(priv.modulus)).redPow(new BN(priv.publicExponent)).fromRed()\n  return { blinder: blinder, unblinder: r.invm(priv.modulus) }\n}\n\nfunction getr (priv) {\n  var len = priv.modulus.byteLength()\n  var r\n  do {\n    r = new BN(randomBytes(len))\n  } while (r.cmp(priv.modulus) >= 0 || !r.umod(priv.prime1) || !r.umod(priv.prime2))\n  return r\n}\n\nfunction crt (msg, priv) {\n  var blinds = blind(priv)\n  var len = priv.modulus.byteLength()\n  var blinded = new BN(msg).mul(blinds.blinder).umod(priv.modulus)\n  var c1 = blinded.toRed(BN.mont(priv.prime1))\n  var c2 = blinded.toRed(BN.mont(priv.prime2))\n  var qinv = priv.coefficient\n  var p = priv.prime1\n  var q = priv.prime2\n  var m1 = c1.redPow(priv.exponent1).fromRed()\n  var m2 = c2.redPow(priv.exponent2).fromRed()\n  var h = m1.isub(m2).imul(qinv).umod(p).imul(q)\n  return m2.iadd(h).imul(blinds.unblinder).umod(priv.modulus).toArrayLike(Buffer, 'be', len)\n}\ncrt.getr = getr\n\nmodule.exports = crt\n","module.exports={name:\"elliptic\",version:\"6.5.6\",description:\"EC cryptography\",main:\"lib/elliptic.js\",files:[\"lib\"],scripts:{lint:\"eslint lib test\",\"lint:fix\":\"npm run lint -- --fix\",unit:\"istanbul test _mocha --reporter=spec test/index.js\",test:\"npm run lint && npm run unit\",version:\"grunt dist && git add dist/\"},repository:{type:\"git\",url:\"git@github.com:indutny/elliptic\"},keywords:[\"EC\",\"Elliptic\",\"curve\",\"Cryptography\"],author:\"Fedor Indutny <fedor@indutny.com>\",license:\"MIT\",bugs:{url:\"https://github.com/indutny/elliptic/issues\"},homepage:\"https://github.com/indutny/elliptic\",devDependencies:{brfs:\"^2.0.2\",coveralls:\"^3.1.0\",eslint:\"^7.6.0\",grunt:\"^1.2.1\",\"grunt-browserify\":\"^5.3.0\",\"grunt-cli\":\"^1.3.2\",\"grunt-contrib-connect\":\"^3.0.0\",\"grunt-contrib-copy\":\"^1.0.0\",\"grunt-contrib-uglify\":\"^5.0.0\",\"grunt-mocha-istanbul\":\"^5.0.2\",\"grunt-saucelabs\":\"^9.0.1\",istanbul:\"^0.4.5\",mocha:\"^8.0.1\"},dependencies:{\"bn.js\":\"^4.11.9\",brorand:\"^1.1.0\",\"hash.js\":\"^1.0.0\",\"hmac-drbg\":\"^1.0.1\",inherits:\"^2.0.4\",\"minimalistic-assert\":\"^1.0.1\",\"minimalistic-crypto-utils\":\"^1.0.1\"}};","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","'use strict';\n\nvar utils = exports;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n","'use strict';\n\nvar utils = exports;\nvar BN = require('bn.js');\nvar minAssert = require('minimalistic-assert');\nvar minUtils = require('minimalistic-crypto-utils');\n\nutils.assert = minAssert;\nutils.toArray = minUtils.toArray;\nutils.zero2 = minUtils.zero2;\nutils.toHex = minUtils.toHex;\nutils.encode = minUtils.encode;\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w, bits) {\n  var naf = new Array(Math.max(num.bitLength(), bits) + 1);\n  var i;\n  for (i = 0; i < naf.length; i += 1) {\n    naf[i] = 0;\n  }\n\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n\n  for (i = 0; i < naf.length; i++) {\n    var z;\n    var mod = k.andln(ws - 1);\n    if (k.isOdd()) {\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n\n    naf[i] = z;\n    k.iushrn(1);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    [],\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  var m8;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n      this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n    bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new BN(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar getNAF = utils.getNAF;\nvar getJSF = utils.getJSF;\nvar assert = utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n\n  this._bitLength = this.n ? this.n.bitLength() : 0;\n\n  // Generalized Greg Maxwell's trick\n  var adjustCount = this.n && this.p.div(this.n);\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1, this._bitLength);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  var j;\n  var nafW;\n  for (j = 0; j < naf.length; j += doubles.step) {\n    nafW = 0;\n    for (var l = j + doubles.step - 1; l >= j; l--)\n      nafW = (nafW << 1) + naf[l];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (j = 0; j < repr.length; j++) {\n      nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w, this._bitLength);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var l = 0; i >= 0 && naf[i] === 0; i--)\n      l++;\n    if (i >= 0)\n      l++;\n    acc = acc.dblp(l);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n  points,\n  coeffs,\n  len,\n  jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  var i;\n  var j;\n  var p;\n  for (i = 0; i < len; i++) {\n    p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);\n      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b], /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3,  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (j = 0; j < len; j++) {\n      var z = tmp[j];\n      p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (i = 0; i < len; i++)\n    wnd[i] = null;\n\n  if (jacobianResult)\n    return acc;\n  else\n    return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n\n  // uncompressed, hybrid-odd, hybrid-even\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n      bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06)\n      assert(bytes[bytes.length - 1] % 2 === 0);\n    else if (bytes[0] === 0x07)\n      assert(bytes[bytes.length - 1] % 2 === 1);\n\n    var res =  this.point(bytes.slice(1, 1 + len),\n      bytes.slice(1 + len, 1 + 2 * len));\n\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len));\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null,\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles,\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res,\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16),\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis,\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 },\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n      var npoints = this._endoWnafT1;\n      var ncoeffs = this._endoWnafT2;\n      for (var i = 0; i < points.length; i++) {\n        var split = this._endoSplit(coeffs[i]);\n        var p = points[i];\n        var beta = p._getBeta();\n\n        if (split.k1.negative) {\n          split.k1.ineg();\n          p = p.neg(true);\n        }\n        if (split.k2.negative) {\n          split.k2.ineg();\n          beta = beta.neg(true);\n        }\n\n        npoints[i * 2] = p;\n        npoints[i * 2 + 1] = beta;\n        ncoeffs[i * 2] = split.k1;\n        ncoeffs[i * 2 + 1] = split.k2;\n      }\n      var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n      // Clean-up references to points and coefficients\n      for (var j = 0; j < i * 2; j++) {\n        npoints[j] = null;\n        ncoeffs[j] = null;\n      }\n      return res;\n    };\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul),\n      },\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1),\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1),\n    },\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point)),\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point)),\n    },\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n  if (this.isInfinity())\n    return this;\n  else if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs, true);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate),\n      },\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  var i;\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar utils = require('../utils');\n\nfunction MontCurve(conf) {\n  Base.call(this, 'mont', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.i4 = new BN(4).toRed(this.red).redInvm();\n  this.two = new BN(2).toRed(this.red);\n  this.a24 = this.i4.redMul(this.a.redAdd(this.two));\n}\ninherits(MontCurve, Base);\nmodule.exports = MontCurve;\n\nMontCurve.prototype.validate = function validate(point) {\n  var x = point.normalize().x;\n  var x2 = x.redSqr();\n  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);\n  var y = rhs.redSqrt();\n\n  return y.redSqr().cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, z) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && z === null) {\n    this.x = this.curve.one;\n    this.z = this.curve.zero;\n  } else {\n    this.x = new BN(x, 16);\n    this.z = new BN(z, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n  }\n}\ninherits(Point, Base.BasePoint);\n\nMontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  return this.point(utils.toArray(bytes, enc), 1);\n};\n\nMontCurve.prototype.point = function point(x, z) {\n  return new Point(this, x, z);\n};\n\nMontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nPoint.prototype.precompute = function precompute() {\n  // No-op\n};\n\nPoint.prototype._encode = function _encode() {\n  return this.getX().toArray('be', this.curve.p.byteLength());\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1] || curve.one);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n\nPoint.prototype.dbl = function dbl() {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3\n  // 2M + 2S + 4A\n\n  // A = X1 + Z1\n  var a = this.x.redAdd(this.z);\n  // AA = A^2\n  var aa = a.redSqr();\n  // B = X1 - Z1\n  var b = this.x.redSub(this.z);\n  // BB = B^2\n  var bb = b.redSqr();\n  // C = AA - BB\n  var c = aa.redSub(bb);\n  // X3 = AA * BB\n  var nx = aa.redMul(bb);\n  // Z3 = C * (BB + A24 * C)\n  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.add = function add() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.diffAdd = function diffAdd(p, diff) {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3\n  // 4M + 2S + 6A\n\n  // A = X2 + Z2\n  var a = this.x.redAdd(this.z);\n  // B = X2 - Z2\n  var b = this.x.redSub(this.z);\n  // C = X3 + Z3\n  var c = p.x.redAdd(p.z);\n  // D = X3 - Z3\n  var d = p.x.redSub(p.z);\n  // DA = D * A\n  var da = d.redMul(a);\n  // CB = C * B\n  var cb = c.redMul(b);\n  // X5 = Z1 * (DA + CB)^2\n  var nx = diff.z.redMul(da.redAdd(cb).redSqr());\n  // Z5 = X1 * (DA - CB)^2\n  var nz = diff.x.redMul(da.redISub(cb).redSqr());\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.mul = function mul(k) {\n  var t = k.clone();\n  var a = this; // (N / 2) * Q + Q\n  var b = this.curve.point(null, null); // (N / 2) * Q\n  var c = this; // Q\n\n  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))\n    bits.push(t.andln(1));\n\n  for (var i = bits.length - 1; i >= 0; i--) {\n    if (bits[i] === 0) {\n      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q\n      a = a.diffAdd(b, c);\n      // N * Q = 2 * ((N / 2) * Q + Q))\n      b = b.dbl();\n    } else {\n      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)\n      b = a.diffAdd(b, c);\n      // N * Q + Q = 2 * ((N / 2) * Q + Q)\n      a = a.dbl();\n    }\n  }\n  return b;\n};\n\nPoint.prototype.mulAdd = function mulAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.jumlAdd = function jumlAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this.getX().cmp(other.getX()) === 0;\n};\n\nPoint.prototype.normalize = function normalize() {\n  this.x = this.x.redMul(this.z.redInvm());\n  this.z = this.curve.one;\n  return this;\n};\n\nPoint.prototype.getX = function getX() {\n  // Normalize coordinates\n  this.normalize();\n\n  return this.x.fromRed();\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction EdwardsCurve(conf) {\n  // NOTE: Important as we are creating point in Base.call()\n  this.twisted = (conf.a | 0) !== 1;\n  this.mOneA = this.twisted && (conf.a | 0) === -1;\n  this.extended = this.mOneA;\n\n  Base.call(this, 'edwards', conf);\n\n  this.a = new BN(conf.a, 16).umod(this.red.m);\n  this.a = this.a.toRed(this.red);\n  this.c = new BN(conf.c, 16).toRed(this.red);\n  this.c2 = this.c.redSqr();\n  this.d = new BN(conf.d, 16).toRed(this.red);\n  this.dd = this.d.redAdd(this.d);\n\n  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);\n  this.oneC = (conf.c | 0) === 1;\n}\ninherits(EdwardsCurve, Base);\nmodule.exports = EdwardsCurve;\n\nEdwardsCurve.prototype._mulA = function _mulA(num) {\n  if (this.mOneA)\n    return num.redNeg();\n  else\n    return this.a.redMul(num);\n};\n\nEdwardsCurve.prototype._mulC = function _mulC(num) {\n  if (this.oneC)\n    return num;\n  else\n    return this.c.redMul(num);\n};\n\n// Just for compatibility with Short curve\nEdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {\n  return this.point(x, y, z, t);\n};\n\nEdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var x2 = x.redSqr();\n  var rhs = this.c2.redSub(this.a.redMul(x2));\n  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));\n\n  var y2 = rhs.redMul(lhs.redInvm());\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {\n  y = new BN(y, 16);\n  if (!y.red)\n    y = y.toRed(this.red);\n\n  // x^2 = (y^2 - c^2) / (c^2 d y^2 - a)\n  var y2 = y.redSqr();\n  var lhs = y2.redSub(this.c2);\n  var rhs = y2.redMul(this.d).redMul(this.c2).redSub(this.a);\n  var x2 = lhs.redMul(rhs.redInvm());\n\n  if (x2.cmp(this.zero) === 0) {\n    if (odd)\n      throw new Error('invalid point');\n    else\n      return this.point(this.zero, y);\n  }\n\n  var x = x2.redSqrt();\n  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  if (x.fromRed().isOdd() !== odd)\n    x = x.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.validate = function validate(point) {\n  if (point.isInfinity())\n    return true;\n\n  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)\n  point.normalize();\n\n  var x2 = point.x.redSqr();\n  var y2 = point.y.redSqr();\n  var lhs = x2.redMul(this.a).redAdd(y2);\n  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));\n\n  return lhs.cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, y, z, t) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.zero;\n    this.y = this.curve.one;\n    this.z = this.curve.one;\n    this.t = this.curve.zero;\n    this.zOne = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = z ? new BN(z, 16) : this.curve.one;\n    this.t = t && new BN(t, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n    if (this.t && !this.t.red)\n      this.t = this.t.toRed(this.curve.red);\n    this.zOne = this.z === this.curve.one;\n\n    // Use extended coordinates\n    if (this.curve.extended && !this.t) {\n      this.t = this.x.redMul(this.y);\n      if (!this.zOne)\n        this.t = this.t.redMul(this.z.redInvm());\n    }\n  }\n}\ninherits(Point, Base.BasePoint);\n\nEdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nEdwardsCurve.prototype.point = function point(x, y, z, t) {\n  return new Point(this, x, y, z, t);\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1], obj[2]);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.x.cmpn(0) === 0 &&\n    (this.y.cmp(this.z) === 0 ||\n    (this.zOne && this.y.cmp(this.curve.c) === 0));\n};\n\nPoint.prototype._extDbl = function _extDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #doubling-dbl-2008-hwcd\n  // 4M + 4S\n\n  // A = X1^2\n  var a = this.x.redSqr();\n  // B = Y1^2\n  var b = this.y.redSqr();\n  // C = 2 * Z1^2\n  var c = this.z.redSqr();\n  c = c.redIAdd(c);\n  // D = a * A\n  var d = this.curve._mulA(a);\n  // E = (X1 + Y1)^2 - A - B\n  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);\n  // G = D + B\n  var g = d.redAdd(b);\n  // F = G - C\n  var f = g.redSub(c);\n  // H = D - B\n  var h = d.redSub(b);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projDbl = function _projDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #doubling-dbl-2008-bbjlp\n  //     #doubling-dbl-2007-bl\n  // and others\n  // Generally 3M + 4S or 2M + 4S\n\n  // B = (X1 + Y1)^2\n  var b = this.x.redAdd(this.y).redSqr();\n  // C = X1^2\n  var c = this.x.redSqr();\n  // D = Y1^2\n  var d = this.y.redSqr();\n\n  var nx;\n  var ny;\n  var nz;\n  var e;\n  var h;\n  var j;\n  if (this.curve.twisted) {\n    // E = a * C\n    e = this.curve._mulA(c);\n    // F = E + D\n    var f = e.redAdd(d);\n    if (this.zOne) {\n      // X3 = (B - C - D) * (F - 2)\n      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F^2 - 2 * F\n      nz = f.redSqr().redSub(f).redSub(f);\n    } else {\n      // H = Z1^2\n      h = this.z.redSqr();\n      // J = F - 2 * H\n      j = f.redSub(h).redISub(h);\n      // X3 = (B-C-D)*J\n      nx = b.redSub(c).redISub(d).redMul(j);\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F * J\n      nz = f.redMul(j);\n    }\n  } else {\n    // E = C + D\n    e = c.redAdd(d);\n    // H = (c * Z1)^2\n    h = this.curve._mulC(this.z).redSqr();\n    // J = E - 2 * H\n    j = e.redSub(h).redSub(h);\n    // X3 = c * (B - E) * J\n    nx = this.curve._mulC(b.redISub(e)).redMul(j);\n    // Y3 = c * E * (C - D)\n    ny = this.curve._mulC(e).redMul(c.redISub(d));\n    // Z3 = E * J\n    nz = e.redMul(j);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  // Double in extended coordinates\n  if (this.curve.extended)\n    return this._extDbl();\n  else\n    return this._projDbl();\n};\n\nPoint.prototype._extAdd = function _extAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #addition-add-2008-hwcd-3\n  // 8M\n\n  // A = (Y1 - X1) * (Y2 - X2)\n  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));\n  // B = (Y1 + X1) * (Y2 + X2)\n  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));\n  // C = T1 * k * T2\n  var c = this.t.redMul(this.curve.dd).redMul(p.t);\n  // D = Z1 * 2 * Z2\n  var d = this.z.redMul(p.z.redAdd(p.z));\n  // E = B - A\n  var e = b.redSub(a);\n  // F = D - C\n  var f = d.redSub(c);\n  // G = D + C\n  var g = d.redAdd(c);\n  // H = B + A\n  var h = b.redAdd(a);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projAdd = function _projAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #addition-add-2008-bbjlp\n  //     #addition-add-2007-bl\n  // 10M + 1S\n\n  // A = Z1 * Z2\n  var a = this.z.redMul(p.z);\n  // B = A^2\n  var b = a.redSqr();\n  // C = X1 * X2\n  var c = this.x.redMul(p.x);\n  // D = Y1 * Y2\n  var d = this.y.redMul(p.y);\n  // E = d * C * D\n  var e = this.curve.d.redMul(c).redMul(d);\n  // F = B - E\n  var f = b.redSub(e);\n  // G = B + E\n  var g = b.redAdd(e);\n  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)\n  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);\n  var nx = a.redMul(f).redMul(tmp);\n  var ny;\n  var nz;\n  if (this.curve.twisted) {\n    // Y3 = A * G * (D - a * C)\n    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));\n    // Z3 = F * G\n    nz = f.redMul(g);\n  } else {\n    // Y3 = A * G * (D - C)\n    ny = a.redMul(g).redMul(d.redSub(c));\n    // Z3 = c * F * G\n    nz = this.curve._mulC(f).redMul(g);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.add = function add(p) {\n  if (this.isInfinity())\n    return p;\n  if (p.isInfinity())\n    return this;\n\n  if (this.curve.extended)\n    return this._extAdd(p);\n  else\n    return this._projAdd(p);\n};\n\nPoint.prototype.mul = function mul(k) {\n  if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, false);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, true);\n};\n\nPoint.prototype.normalize = function normalize() {\n  if (this.zOne)\n    return this;\n\n  // Normalize coordinates\n  var zi = this.z.redInvm();\n  this.x = this.x.redMul(zi);\n  this.y = this.y.redMul(zi);\n  if (this.t)\n    this.t = this.t.redMul(zi);\n  this.z = this.curve.one;\n  this.zOne = true;\n  return this;\n};\n\nPoint.prototype.neg = function neg() {\n  return this.curve.point(this.x.redNeg(),\n    this.y,\n    this.z,\n    this.t && this.t.redNeg());\n};\n\nPoint.prototype.getX = function getX() {\n  this.normalize();\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  this.normalize();\n  return this.y.fromRed();\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this === other ||\n         this.getX().cmp(other.getX()) === 0 &&\n         this.getY().cmp(other.getY()) === 0;\n};\n\nPoint.prototype.eqXToP = function eqXToP(x) {\n  var rx = x.toRed(this.curve.red).redMul(this.z);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(this.z);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\n// Compatibility with BaseCurve\nPoint.prototype.toP = Point.prototype.normalize;\nPoint.prototype.mixedAdd = Point.prototype.add;\n","'use strict';\n\nvar curve = exports;\n\ncurve.base = require('./base');\ncurve.short = require('./short');\ncurve.mont = require('./mont');\ncurve.edwards = require('./edwards');\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nexports.inherits = inherits;\n\nfunction isSurrogatePair(msg, i) {\n  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {\n    return false;\n  }\n  if (i < 0 || i + 1 >= msg.length) {\n    return false;\n  }\n  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;\n}\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      // Inspired by stringToUtf8ByteArray() in closure-library by Google\n      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n      // Apache License 2.0\n      // https://github.com/google/closure-library/blob/master/LICENSE\n      var p = 0;\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        if (c < 128) {\n          res[p++] = c;\n        } else if (c < 2048) {\n          res[p++] = (c >> 6) | 192;\n          res[p++] = (c & 63) | 128;\n        } else if (isSurrogatePair(msg, i)) {\n          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);\n          res[p++] = (c >> 18) | 240;\n          res[p++] = ((c >> 12) & 63) | 128;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        } else {\n          res[p++] = (c >> 12) | 224;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        }\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nexports.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nexports.toHex = toHex;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nexports.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nexports.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nexports.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nexports.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nexports.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nexports.split32 = split32;\n\nfunction rotr32(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nexports.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nexports.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return (a + b) >>> 0;\n}\nexports.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nexports.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nexports.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nexports.sum32_5 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n}\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.shr64_lo = shr64_lo;\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar rotr32 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32(x, y, z);\n}\nexports.ft_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\nexports.ch32 = ch32;\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\nexports.maj32 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\nexports.p32 = p32;\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\nexports.s0_256 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\nexports.s1_256 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\nexports.g0_256 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\nexports.g1_256 = g1_256;\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\nvar assert = require('minimalistic-assert');\n\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar ch32 = shaCommon.ch32;\nvar maj32 = shaCommon.maj32;\nvar s0_256 = shaCommon.s0_256;\nvar s1_256 = shaCommon.s1_256;\nvar g0_256 = shaCommon.g0_256;\nvar g1_256 = shaCommon.g1_256;\n\nvar BlockHash = common.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256))\n    return new SHA256();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n  ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils.inherits(SHA256, BlockHash);\nmodule.exports = SHA256;\n\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  assert(this.k.length === W.length);\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar SHA256 = require('./256');\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils.inherits(SHA224, SHA256);\nmodule.exports = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils.split32(this.h.slice(0, 7), 'big');\n};\n\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar assert = require('minimalistic-assert');\n\nvar rotr64_hi = utils.rotr64_hi;\nvar rotr64_lo = utils.rotr64_lo;\nvar shr64_hi = utils.shr64_hi;\nvar shr64_lo = utils.shr64_lo;\nvar sum64 = utils.sum64;\nvar sum64_hi = utils.sum64_hi;\nvar sum64_lo = utils.sum64_lo;\nvar sum64_4_hi = utils.sum64_4_hi;\nvar sum64_4_lo = utils.sum64_4_lo;\nvar sum64_5_hi = utils.sum64_5_hi;\nvar sum64_5_lo = utils.sum64_5_lo;\n\nvar BlockHash = common.BlockHash;\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512))\n    return new SHA512();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xf3bcc908,\n    0xbb67ae85, 0x84caa73b,\n    0x3c6ef372, 0xfe94f82b,\n    0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1,\n    0x9b05688c, 0x2b3e6c1f,\n    0x1f83d9ab, 0xfb41bd6b,\n    0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils.inherits(SHA512, BlockHash);\nmodule.exports = SHA512;\n\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  assert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n","'use strict';\n\nvar utils = require('../utils');\n\nvar SHA512 = require('./512');\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, SHA512);\nmodule.exports = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n","'use strict';\n\nexports.sha1 = require('./sha/1');\nexports.sha224 = require('./sha/224');\nexports.sha256 = require('./sha/256');\nexports.sha384 = require('./sha/384');\nexports.sha512 = require('./sha/512');\n","'use strict';\n\nvar utils = require('./utils');\nvar common = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(\n      rotl32(\n        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(\n      rotl32(\n        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'little');\n  else\n    return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n","var hash = exports;\n\nhash.utils = require('./hash/utils');\nhash.common = require('./hash/common');\nhash.sha = require('./hash/sha');\nhash.ripemd = require('./hash/ripemd');\nhash.hmac = require('./hash/hmac');\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n","module.exports = {\n  doubles: {\n    step: 4,\n    points: [\n      [\n        'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',\n        'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821',\n      ],\n      [\n        '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',\n        '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf',\n      ],\n      [\n        '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',\n        'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695',\n      ],\n      [\n        '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',\n        '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9',\n      ],\n      [\n        '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',\n        '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36',\n      ],\n      [\n        '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',\n        '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f',\n      ],\n      [\n        'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',\n        '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999',\n      ],\n      [\n        '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',\n        'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09',\n      ],\n      [\n        'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',\n        '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d',\n      ],\n      [\n        'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',\n        'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088',\n      ],\n      [\n        'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',\n        '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d',\n      ],\n      [\n        '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',\n        '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8',\n      ],\n      [\n        '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',\n        '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a',\n      ],\n      [\n        '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',\n        '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453',\n      ],\n      [\n        '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',\n        '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160',\n      ],\n      [\n        '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',\n        '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0',\n      ],\n      [\n        '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',\n        '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6',\n      ],\n      [\n        '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',\n        '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589',\n      ],\n      [\n        '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',\n        'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17',\n      ],\n      [\n        'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',\n        '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda',\n      ],\n      [\n        'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',\n        '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd',\n      ],\n      [\n        '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',\n        '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2',\n      ],\n      [\n        '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',\n        '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6',\n      ],\n      [\n        'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',\n        '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f',\n      ],\n      [\n        '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',\n        'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01',\n      ],\n      [\n        'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',\n        '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3',\n      ],\n      [\n        'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',\n        'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f',\n      ],\n      [\n        'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',\n        '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7',\n      ],\n      [\n        'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',\n        'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78',\n      ],\n      [\n        'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',\n        '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1',\n      ],\n      [\n        '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',\n        'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150',\n      ],\n      [\n        '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',\n        '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82',\n      ],\n      [\n        'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',\n        '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc',\n      ],\n      [\n        '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',\n        'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b',\n      ],\n      [\n        'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',\n        '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51',\n      ],\n      [\n        'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',\n        '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45',\n      ],\n      [\n        'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',\n        'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120',\n      ],\n      [\n        '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',\n        '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84',\n      ],\n      [\n        '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',\n        '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d',\n      ],\n      [\n        '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',\n        'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d',\n      ],\n      [\n        '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',\n        '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8',\n      ],\n      [\n        'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',\n        '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8',\n      ],\n      [\n        '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',\n        '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac',\n      ],\n      [\n        '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',\n        'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f',\n      ],\n      [\n        '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',\n        '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962',\n      ],\n      [\n        'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',\n        '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907',\n      ],\n      [\n        '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',\n        'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec',\n      ],\n      [\n        'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',\n        'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d',\n      ],\n      [\n        'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',\n        '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414',\n      ],\n      [\n        '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',\n        'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd',\n      ],\n      [\n        '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',\n        'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0',\n      ],\n      [\n        'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',\n        '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811',\n      ],\n      [\n        'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',\n        '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1',\n      ],\n      [\n        'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',\n        '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c',\n      ],\n      [\n        '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',\n        'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73',\n      ],\n      [\n        '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',\n        '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd',\n      ],\n      [\n        'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',\n        'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405',\n      ],\n      [\n        '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',\n        'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589',\n      ],\n      [\n        '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',\n        '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e',\n      ],\n      [\n        '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',\n        '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27',\n      ],\n      [\n        'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',\n        'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1',\n      ],\n      [\n        '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',\n        '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482',\n      ],\n      [\n        '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',\n        '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945',\n      ],\n      [\n        'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',\n        '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573',\n      ],\n      [\n        'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',\n        'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82',\n      ],\n    ],\n  },\n  naf: {\n    wnd: 7,\n    points: [\n      [\n        'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',\n        '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672',\n      ],\n      [\n        '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',\n        'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6',\n      ],\n      [\n        '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',\n        '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da',\n      ],\n      [\n        'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',\n        'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37',\n      ],\n      [\n        '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',\n        'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b',\n      ],\n      [\n        'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',\n        'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81',\n      ],\n      [\n        'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',\n        '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58',\n      ],\n      [\n        'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',\n        '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77',\n      ],\n      [\n        '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',\n        '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a',\n      ],\n      [\n        '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',\n        '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c',\n      ],\n      [\n        '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',\n        '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67',\n      ],\n      [\n        '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',\n        '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402',\n      ],\n      [\n        'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',\n        'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55',\n      ],\n      [\n        'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',\n        '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482',\n      ],\n      [\n        '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',\n        'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82',\n      ],\n      [\n        '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',\n        'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396',\n      ],\n      [\n        '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',\n        '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49',\n      ],\n      [\n        '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',\n        '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf',\n      ],\n      [\n        '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',\n        '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a',\n      ],\n      [\n        '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',\n        'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7',\n      ],\n      [\n        'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',\n        'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933',\n      ],\n      [\n        '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',\n        '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a',\n      ],\n      [\n        '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',\n        '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6',\n      ],\n      [\n        'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',\n        'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37',\n      ],\n      [\n        '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',\n        '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e',\n      ],\n      [\n        'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',\n        'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6',\n      ],\n      [\n        'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',\n        'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476',\n      ],\n      [\n        '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',\n        '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40',\n      ],\n      [\n        '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',\n        '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61',\n      ],\n      [\n        '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',\n        '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683',\n      ],\n      [\n        'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',\n        '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5',\n      ],\n      [\n        '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',\n        '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b',\n      ],\n      [\n        'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',\n        '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417',\n      ],\n      [\n        '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',\n        'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868',\n      ],\n      [\n        '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',\n        'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a',\n      ],\n      [\n        'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',\n        'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6',\n      ],\n      [\n        '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',\n        '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996',\n      ],\n      [\n        '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',\n        'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e',\n      ],\n      [\n        'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',\n        'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d',\n      ],\n      [\n        '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',\n        '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2',\n      ],\n      [\n        '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',\n        'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e',\n      ],\n      [\n        '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',\n        '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437',\n      ],\n      [\n        '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',\n        'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311',\n      ],\n      [\n        'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',\n        '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4',\n      ],\n      [\n        '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',\n        '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575',\n      ],\n      [\n        '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',\n        'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d',\n      ],\n      [\n        '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',\n        'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d',\n      ],\n      [\n        'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',\n        'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629',\n      ],\n      [\n        'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',\n        'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06',\n      ],\n      [\n        '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',\n        '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374',\n      ],\n      [\n        '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',\n        '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee',\n      ],\n      [\n        'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',\n        '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1',\n      ],\n      [\n        'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',\n        'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b',\n      ],\n      [\n        '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',\n        '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661',\n      ],\n      [\n        '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',\n        '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6',\n      ],\n      [\n        'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',\n        '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e',\n      ],\n      [\n        '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',\n        '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d',\n      ],\n      [\n        'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',\n        'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc',\n      ],\n      [\n        '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',\n        'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4',\n      ],\n      [\n        '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',\n        '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c',\n      ],\n      [\n        'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',\n        '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b',\n      ],\n      [\n        'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',\n        '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913',\n      ],\n      [\n        '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',\n        '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154',\n      ],\n      [\n        '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',\n        '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865',\n      ],\n      [\n        '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',\n        'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc',\n      ],\n      [\n        '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',\n        'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224',\n      ],\n      [\n        '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',\n        '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e',\n      ],\n      [\n        '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',\n        '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6',\n      ],\n      [\n        '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',\n        '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511',\n      ],\n      [\n        '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',\n        'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b',\n      ],\n      [\n        'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',\n        'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2',\n      ],\n      [\n        '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',\n        'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c',\n      ],\n      [\n        'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',\n        '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3',\n      ],\n      [\n        'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',\n        '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d',\n      ],\n      [\n        'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',\n        '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700',\n      ],\n      [\n        'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',\n        '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4',\n      ],\n      [\n        '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',\n        'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196',\n      ],\n      [\n        '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',\n        '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4',\n      ],\n      [\n        '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',\n        'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257',\n      ],\n      [\n        'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',\n        'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13',\n      ],\n      [\n        'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',\n        '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096',\n      ],\n      [\n        'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',\n        'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38',\n      ],\n      [\n        'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',\n        '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f',\n      ],\n      [\n        '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',\n        '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448',\n      ],\n      [\n        'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',\n        '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a',\n      ],\n      [\n        'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',\n        '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4',\n      ],\n      [\n        '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',\n        '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437',\n      ],\n      [\n        '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',\n        'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7',\n      ],\n      [\n        'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',\n        '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d',\n      ],\n      [\n        'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',\n        '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a',\n      ],\n      [\n        'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',\n        '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54',\n      ],\n      [\n        '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',\n        '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77',\n      ],\n      [\n        'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',\n        'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517',\n      ],\n      [\n        '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',\n        'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10',\n      ],\n      [\n        'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',\n        'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125',\n      ],\n      [\n        'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',\n        '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e',\n      ],\n      [\n        '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',\n        'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1',\n      ],\n      [\n        'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',\n        '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2',\n      ],\n      [\n        'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',\n        '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423',\n      ],\n      [\n        'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',\n        '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8',\n      ],\n      [\n        '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',\n        'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758',\n      ],\n      [\n        '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',\n        'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375',\n      ],\n      [\n        'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',\n        '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d',\n      ],\n      [\n        '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',\n        'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec',\n      ],\n      [\n        '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',\n        '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0',\n      ],\n      [\n        '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',\n        'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c',\n      ],\n      [\n        'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',\n        'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4',\n      ],\n      [\n        '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',\n        'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f',\n      ],\n      [\n        '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',\n        '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649',\n      ],\n      [\n        '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',\n        'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826',\n      ],\n      [\n        '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',\n        '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5',\n      ],\n      [\n        'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',\n        'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87',\n      ],\n      [\n        '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',\n        '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b',\n      ],\n      [\n        'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',\n        '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc',\n      ],\n      [\n        '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',\n        '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c',\n      ],\n      [\n        'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',\n        'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f',\n      ],\n      [\n        'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',\n        '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a',\n      ],\n      [\n        'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',\n        'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46',\n      ],\n      [\n        '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',\n        'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f',\n      ],\n      [\n        '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',\n        '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03',\n      ],\n      [\n        '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',\n        'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08',\n      ],\n      [\n        '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',\n        '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8',\n      ],\n      [\n        '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',\n        '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373',\n      ],\n      [\n        '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',\n        'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3',\n      ],\n      [\n        '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',\n        '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8',\n      ],\n      [\n        '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',\n        '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1',\n      ],\n      [\n        '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',\n        '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9',\n      ],\n    ],\n  },\n};\n","'use strict';\n\nvar curves = exports;\n\nvar hash = require('hash.js');\nvar curve = require('./curve');\nvar utils = require('./utils');\n\nvar assert = utils.assert;\n\nfunction PresetCurve(options) {\n  if (options.type === 'short')\n    this.curve = new curve.short(options);\n  else if (options.type === 'edwards')\n    this.curve = new curve.edwards(options);\n  else\n    this.curve = new curve.mont(options);\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n}\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve,\n      });\n      return curve;\n    },\n  });\n}\n\ndefineCurve('p192', {\n  type: 'short',\n  prime: 'p192',\n  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',\n    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811',\n  ],\n});\n\ndefineCurve('p224', {\n  type: 'short',\n  prime: 'p224',\n  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',\n    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34',\n  ],\n});\n\ndefineCurve('p256', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',\n    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5',\n  ],\n});\n\ndefineCurve('p384', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 ffffffff',\n  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 fffffffc',\n  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +\n     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +\n     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n  hash: hash.sha384,\n  gRed: false,\n  g: [\n    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +\n    '5502f25d bf55296c 3a545e38 72760ab7',\n    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +\n    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f',\n  ],\n});\n\ndefineCurve('p521', {\n  type: 'short',\n  prime: null,\n  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff',\n  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff fffffffc',\n  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +\n     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +\n     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +\n     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n  hash: hash.sha512,\n  gRed: false,\n  g: [\n    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +\n    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +\n    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',\n    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +\n    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +\n    '3fad0761 353c7086 a272c240 88be9476 9fd16650',\n  ],\n});\n\ndefineCurve('curve25519', {\n  type: 'mont',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '76d06',\n  b: '1',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '9',\n  ],\n});\n\ndefineCurve('ed25519', {\n  type: 'edwards',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '-1',\n  c: '1',\n  // -121665 * (121666^(-1)) (mod P)\n  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',\n\n    // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658',\n  ],\n});\n\nvar pre;\ntry {\n  pre = require('./precomputed/secp256k1');\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash.sha256,\n\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [\n    {\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3',\n    },\n    {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15',\n    },\n  ],\n\n  gRed: false,\n  g: [\n    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n    pre,\n  ],\n});\n","'use strict';\n\nvar hash = require('hash.js');\nvar utils = require('minimalistic-crypto-utils');\nvar assert = require('minimalistic-assert');\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils.toArray(options.pers, options.persEnc || 'hex');\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nmodule.exports = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils.toArray(entropy, entropyEnc);\n  add = utils.toArray(add, addEnc);\n\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils.toArray(add, addEnc || 'hex');\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this._reseed++;\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nmodule.exports = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc,\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc,\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' ||\n               this.ec.curve.type === 'edwards') {\n      assert(key.x && key.y, 'Need both x and y coordinate');\n    }\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  if(!pub.validate()) {\n    assert(pub.validate(), 'public point not validated');\n  }\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n","'use strict';\n\nvar BN = require('bn.js');\n\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature)\n    return options;\n\n  if (this._importDER(options, enc))\n    return;\n\n  assert(options.r && options.s, 'Signature without r or s');\n  this.r = new BN(options.r, 16);\n  this.s = new BN(options.s, 16);\n  if (options.recoveryParam === undefined)\n    this.recoveryParam = null;\n  else\n    this.recoveryParam = options.recoveryParam;\n}\nmodule.exports = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n  var octetLen = initial & 0xf;\n\n  // Indefinite length or overflow\n  if (octetLen === 0 || octetLen > 4) {\n    return false;\n  }\n\n  var val = 0;\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n    val >>>= 0;\n  }\n\n  // Leading zeroes\n  if (val <= 0x7f) {\n    return false;\n  }\n\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n  if (i === 0) {\n    return buf;\n  }\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils.toArray(data, enc);\n  var p = new Position();\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n  var len = getLength(data, p);\n  if (len === false) {\n    return false;\n  }\n  if ((len + p.place) !== data.length) {\n    return false;\n  }\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var rlen = getLength(data, p);\n  if (rlen === false) {\n    return false;\n  }\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var slen = getLength(data, p);\n  if (slen === false) {\n    return false;\n  }\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n  var s = data.slice(p.place, slen + p.place);\n  if (r[0] === 0) {\n    if (r[1] & 0x80) {\n      r = r.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n  if (s[0] === 0) {\n    if (s[1] & 0x80) {\n      s = s.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n\n  this.r = new BN(r);\n  this.s = new BN(s);\n  this.recoveryParam = null;\n\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n  while (--octets) {\n    arr.push((len >>> (octets << 3)) & 0xff);\n  }\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80)\n    r = [ 0 ].concat(r);\n  // Pad values\n  if (s[0] & 0x80)\n    s = [ 0 ].concat(s);\n\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n  var arr = [ 0x02 ];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [ 0x30 ];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar HmacDRBG = require('hmac-drbg');\nvar utils = require('../utils');\nvar curves = require('../curves');\nvar rand = require('brorand');\nvar assert = utils.assert;\n\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert(Object.prototype.hasOwnProperty.call(curves, options),\n      'Unknown curve ' + options);\n\n    options = curves[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof curves.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray(),\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n  for (;;) {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  }\n};\n\nEC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new BN(msg, 16));\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0; ; iter++) {\n    var k = options.k ?\n      options.k(iter) :\n      new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc) {\n  msg = this._truncateToN(new BN(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex');\n\n  // Perform primitive values validation\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n  var p;\n\n  if (!this.curve._maxwellTrick) {\n    p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity())\n      return false;\n\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function(msg, signature, j, enc) {\n  assert((3 & j) === j, 'The recovery param is more than two bits');\n  signature = new Signature(signature, enc);\n\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature.r;\n  var s = signature.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var rInv = signature.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {\n  signature = new Signature(signature, enc);\n  if (signature.recoveryParam !== null)\n    return signature.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar cachedProperty = utils.cachedProperty;\n\n/**\n* @param {EDDSA} eddsa - instance\n* @param {Object} params - public/private key parameters\n*\n* @param {Array<Byte>} [params.secret] - secret seed bytes\n* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)\n* @param {Array<Byte>} [params.pub] - public key point encoded as bytes\n*\n*/\nfunction KeyPair(eddsa, params) {\n  this.eddsa = eddsa;\n  this._secret = parseBytes(params.secret);\n  if (eddsa.isPoint(params.pub))\n    this._pub = params.pub;\n  else\n    this._pubBytes = parseBytes(params.pub);\n}\n\nKeyPair.fromPublic = function fromPublic(eddsa, pub) {\n  if (pub instanceof KeyPair)\n    return pub;\n  return new KeyPair(eddsa, { pub: pub });\n};\n\nKeyPair.fromSecret = function fromSecret(eddsa, secret) {\n  if (secret instanceof KeyPair)\n    return secret;\n  return new KeyPair(eddsa, { secret: secret });\n};\n\nKeyPair.prototype.secret = function secret() {\n  return this._secret;\n};\n\ncachedProperty(KeyPair, 'pubBytes', function pubBytes() {\n  return this.eddsa.encodePoint(this.pub());\n});\n\ncachedProperty(KeyPair, 'pub', function pub() {\n  if (this._pubBytes)\n    return this.eddsa.decodePoint(this._pubBytes);\n  return this.eddsa.g.mul(this.priv());\n});\n\ncachedProperty(KeyPair, 'privBytes', function privBytes() {\n  var eddsa = this.eddsa;\n  var hash = this.hash();\n  var lastIx = eddsa.encodingLength - 1;\n\n  var a = hash.slice(0, eddsa.encodingLength);\n  a[0] &= 248;\n  a[lastIx] &= 127;\n  a[lastIx] |= 64;\n\n  return a;\n});\n\ncachedProperty(KeyPair, 'priv', function priv() {\n  return this.eddsa.decodeInt(this.privBytes());\n});\n\ncachedProperty(KeyPair, 'hash', function hash() {\n  return this.eddsa.hash().update(this.secret()).digest();\n});\n\ncachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {\n  return this.hash().slice(this.eddsa.encodingLength);\n});\n\nKeyPair.prototype.sign = function sign(message) {\n  assert(this._secret, 'KeyPair can only verify');\n  return this.eddsa.sign(message, this);\n};\n\nKeyPair.prototype.verify = function verify(message, sig) {\n  return this.eddsa.verify(message, sig, this);\n};\n\nKeyPair.prototype.getSecret = function getSecret(enc) {\n  assert(this._secret, 'KeyPair is public only');\n  return utils.encode(this.secret(), enc);\n};\n\nKeyPair.prototype.getPublic = function getPublic(enc) {\n  return utils.encode(this.pubBytes(), enc);\n};\n\nmodule.exports = KeyPair;\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar cachedProperty = utils.cachedProperty;\nvar parseBytes = utils.parseBytes;\n\n/**\n* @param {EDDSA} eddsa - eddsa instance\n* @param {Array<Bytes>|Object} sig -\n* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes\n* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes\n* @param {Array<Bytes>} [sig.Rencoded] - R point encoded\n* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded\n*/\nfunction Signature(eddsa, sig) {\n  this.eddsa = eddsa;\n\n  if (typeof sig !== 'object')\n    sig = parseBytes(sig);\n\n  if (Array.isArray(sig)) {\n    sig = {\n      R: sig.slice(0, eddsa.encodingLength),\n      S: sig.slice(eddsa.encodingLength),\n    };\n  }\n\n  assert(sig.R && sig.S, 'Signature without R or S');\n\n  if (eddsa.isPoint(sig.R))\n    this._R = sig.R;\n  if (sig.S instanceof BN)\n    this._S = sig.S;\n\n  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;\n  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;\n}\n\ncachedProperty(Signature, 'S', function S() {\n  return this.eddsa.decodeInt(this.Sencoded());\n});\n\ncachedProperty(Signature, 'R', function R() {\n  return this.eddsa.decodePoint(this.Rencoded());\n});\n\ncachedProperty(Signature, 'Rencoded', function Rencoded() {\n  return this.eddsa.encodePoint(this.R());\n});\n\ncachedProperty(Signature, 'Sencoded', function Sencoded() {\n  return this.eddsa.encodeInt(this.S());\n});\n\nSignature.prototype.toBytes = function toBytes() {\n  return this.Rencoded().concat(this.Sencoded());\n};\n\nSignature.prototype.toHex = function toHex() {\n  return utils.encode(this.toBytes(), 'hex').toUpperCase();\n};\n\nmodule.exports = Signature;\n","'use strict';\n\nvar hash = require('hash.js');\nvar curves = require('../curves');\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EDDSA(curve) {\n  assert(curve === 'ed25519', 'only tested with ed25519 so far');\n\n  if (!(this instanceof EDDSA))\n    return new EDDSA(curve);\n\n  curve = curves[curve].curve;\n  this.curve = curve;\n  this.g = curve.g;\n  this.g.precompute(curve.n.bitLength() + 1);\n\n  this.pointClass = curve.point().constructor;\n  this.encodingLength = Math.ceil(curve.n.bitLength() / 8);\n  this.hash = hash.sha512;\n}\n\nmodule.exports = EDDSA;\n\n/**\n* @param {Array|String} message - message bytes\n* @param {Array|String|KeyPair} secret - secret bytes or a keypair\n* @returns {Signature} - signature\n*/\nEDDSA.prototype.sign = function sign(message, secret) {\n  message = parseBytes(message);\n  var key = this.keyFromSecret(secret);\n  var r = this.hashInt(key.messagePrefix(), message);\n  var R = this.g.mul(r);\n  var Rencoded = this.encodePoint(R);\n  var s_ = this.hashInt(Rencoded, key.pubBytes(), message)\n    .mul(key.priv());\n  var S = r.add(s_).umod(this.curve.n);\n  return this.makeSignature({ R: R, S: S, Rencoded: Rencoded });\n};\n\n/**\n* @param {Array} message - message bytes\n* @param {Array|String|Signature} sig - sig bytes\n* @param {Array|String|Point|KeyPair} pub - public key\n* @returns {Boolean} - true if public key matches sig of message\n*/\nEDDSA.prototype.verify = function verify(message, sig, pub) {\n  message = parseBytes(message);\n  sig = this.makeSignature(sig);\n  if (sig.S().gte(sig.eddsa.curve.n) || sig.S().isNeg()) {\n    return false;\n  }\n  var key = this.keyFromPublic(pub);\n  var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);\n  var SG = this.g.mul(sig.S());\n  var RplusAh = sig.R().add(key.pub().mul(h));\n  return RplusAh.eq(SG);\n};\n\nEDDSA.prototype.hashInt = function hashInt() {\n  var hash = this.hash();\n  for (var i = 0; i < arguments.length; i++)\n    hash.update(arguments[i]);\n  return utils.intFromLE(hash.digest()).umod(this.curve.n);\n};\n\nEDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {\n  return KeyPair.fromPublic(this, pub);\n};\n\nEDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {\n  return KeyPair.fromSecret(this, secret);\n};\n\nEDDSA.prototype.makeSignature = function makeSignature(sig) {\n  if (sig instanceof Signature)\n    return sig;\n  return new Signature(this, sig);\n};\n\n/**\n* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2\n*\n* EDDSA defines methods for encoding and decoding points and integers. These are\n* helper convenience methods, that pass along to utility functions implied\n* parameters.\n*\n*/\nEDDSA.prototype.encodePoint = function encodePoint(point) {\n  var enc = point.getY().toArray('le', this.encodingLength);\n  enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;\n  return enc;\n};\n\nEDDSA.prototype.decodePoint = function decodePoint(bytes) {\n  bytes = utils.parseBytes(bytes);\n\n  var lastIx = bytes.length - 1;\n  var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);\n  var xIsOdd = (bytes[lastIx] & 0x80) !== 0;\n\n  var y = utils.intFromLE(normed);\n  return this.curve.pointFromY(y, xIsOdd);\n};\n\nEDDSA.prototype.encodeInt = function encodeInt(num) {\n  return num.toArray('le', this.encodingLength);\n};\n\nEDDSA.prototype.decodeInt = function decodeInt(bytes) {\n  return utils.intFromLE(bytes);\n};\n\nEDDSA.prototype.isPoint = function isPoint(val) {\n  return val instanceof this.pointClass;\n};\n","'use strict';\n\nvar elliptic = exports;\n\nelliptic.version = require('../package.json').version;\nelliptic.utils = require('./elliptic/utils');\nelliptic.rand = require('brorand');\nelliptic.curve = require('./elliptic/curve');\nelliptic.curves = require('./elliptic/curves');\n\n// Protocols\nelliptic.ec = require('./elliptic/ec');\nelliptic.eddsa = require('./elliptic/eddsa');\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","var indexOf = function (xs, item) {\n    if (xs.indexOf) return xs.indexOf(item);\n    else for (var i = 0; i < xs.length; i++) {\n        if (xs[i] === item) return i;\n    }\n    return -1;\n};\nvar Object_keys = function (obj) {\n    if (Object.keys) return Object.keys(obj)\n    else {\n        var res = [];\n        for (var key in obj) res.push(key)\n        return res;\n    }\n};\n\nvar forEach = function (xs, fn) {\n    if (xs.forEach) return xs.forEach(fn)\n    else for (var i = 0; i < xs.length; i++) {\n        fn(xs[i], i, xs);\n    }\n};\n\nvar defineProp = (function() {\n    try {\n        Object.defineProperty({}, '_', {});\n        return function(obj, name, value) {\n            Object.defineProperty(obj, name, {\n                writable: true,\n                enumerable: false,\n                configurable: true,\n                value: value\n            })\n        };\n    } catch(e) {\n        return function(obj, name, value) {\n            obj[name] = value;\n        };\n    }\n}());\n\nvar globals = ['Array', 'Boolean', 'Date', 'Error', 'EvalError', 'Function',\n'Infinity', 'JSON', 'Math', 'NaN', 'Number', 'Object', 'RangeError',\n'ReferenceError', 'RegExp', 'String', 'SyntaxError', 'TypeError', 'URIError',\n'decodeURI', 'decodeURIComponent', 'encodeURI', 'encodeURIComponent', 'escape',\n'eval', 'isFinite', 'isNaN', 'parseFloat', 'parseInt', 'undefined', 'unescape'];\n\nfunction Context() {}\nContext.prototype = {};\n\nvar Script = exports.Script = function NodeScript (code) {\n    if (!(this instanceof Script)) return new Script(code);\n    this.code = code;\n};\n\nScript.prototype.runInContext = function (context) {\n    if (!(context instanceof Context)) {\n        throw new TypeError(\"needs a 'context' argument.\");\n    }\n    \n    var iframe = document.createElement('iframe');\n    if (!iframe.style) iframe.style = {};\n    iframe.style.display = 'none';\n    \n    document.body.appendChild(iframe);\n    \n    var win = iframe.contentWindow;\n    var wEval = win.eval, wExecScript = win.execScript;\n\n    if (!wEval && wExecScript) {\n        // win.eval() magically appears when this is called in IE:\n        wExecScript.call(win, 'null');\n        wEval = win.eval;\n    }\n    \n    forEach(Object_keys(context), function (key) {\n        win[key] = context[key];\n    });\n    forEach(globals, function (key) {\n        if (context[key]) {\n            win[key] = context[key];\n        }\n    });\n    \n    var winKeys = Object_keys(win);\n\n    var res = wEval.call(win, this.code);\n    \n    forEach(Object_keys(win), function (key) {\n        // Avoid copying circular objects like `top` and `window` by only\n        // updating existing context properties or new properties in the `win`\n        // that was only introduced after the eval.\n        if (key in context || indexOf(winKeys, key) === -1) {\n            context[key] = win[key];\n        }\n    });\n\n    forEach(globals, function (key) {\n        if (!(key in context)) {\n            defineProp(context, key, win[key]);\n        }\n    });\n    \n    document.body.removeChild(iframe);\n    \n    return res;\n};\n\nScript.prototype.runInThisContext = function () {\n    return eval(this.code); // maybe...\n};\n\nScript.prototype.runInNewContext = function (context) {\n    var ctx = Script.createContext(context);\n    var res = this.runInContext(ctx);\n\n    if (context) {\n        forEach(Object_keys(ctx), function (key) {\n            context[key] = ctx[key];\n        });\n    }\n\n    return res;\n};\n\nforEach(Object_keys(Script.prototype), function (name) {\n    exports[name] = Script[name] = function (code) {\n        var s = Script(code);\n        return s[name].apply(s, [].slice.call(arguments, 1));\n    };\n});\n\nexports.isContext = function (context) {\n    return context instanceof Context;\n};\n\nexports.createScript = function (code) {\n    return exports.Script(code);\n};\n\nexports.createContext = Script.createContext = function (context) {\n    var copy = new Context();\n    if(typeof context === 'object') {\n        forEach(Object_keys(context), function (key) {\n            copy[key] = context[key];\n        });\n    }\n    return copy;\n};\n","var asn1 = require('../asn1');\nvar inherits = require('inherits');\n\nvar api = exports;\n\napi.define = function define(name, body) {\n  return new Entity(name, body);\n};\n\nfunction Entity(name, body) {\n  this.name = name;\n  this.body = body;\n\n  this.decoders = {};\n  this.encoders = {};\n};\n\nEntity.prototype._createNamed = function createNamed(base) {\n  var named;\n  try {\n    named = require('vm').runInThisContext(\n      '(function ' + this.name + '(entity) {\\n' +\n      '  this._initNamed(entity);\\n' +\n      '})'\n    );\n  } catch (e) {\n    named = function (entity) {\n      this._initNamed(entity);\n    };\n  }\n  inherits(named, base);\n  named.prototype._initNamed = function initnamed(entity) {\n    base.call(this, entity);\n  };\n\n  return new named(this);\n};\n\nEntity.prototype._getDecoder = function _getDecoder(enc) {\n  enc = enc || 'der';\n  // Lazily create decoder\n  if (!this.decoders.hasOwnProperty(enc))\n    this.decoders[enc] = this._createNamed(asn1.decoders[enc]);\n  return this.decoders[enc];\n};\n\nEntity.prototype.decode = function decode(data, enc, options) {\n  return this._getDecoder(enc).decode(data, options);\n};\n\nEntity.prototype._getEncoder = function _getEncoder(enc) {\n  enc = enc || 'der';\n  // Lazily create encoder\n  if (!this.encoders.hasOwnProperty(enc))\n    this.encoders[enc] = this._createNamed(asn1.encoders[enc]);\n  return this.encoders[enc];\n};\n\nEntity.prototype.encode = function encode(data, enc, /* internal */ reporter) {\n  return this._getEncoder(enc).encode(data, reporter);\n};\n","var inherits = require('inherits');\n\nfunction Reporter(options) {\n  this._reporterState = {\n    obj: null,\n    path: [],\n    options: options || {},\n    errors: []\n  };\n}\nexports.Reporter = Reporter;\n\nReporter.prototype.isError = function isError(obj) {\n  return obj instanceof ReporterError;\n};\n\nReporter.prototype.save = function save() {\n  var state = this._reporterState;\n\n  return { obj: state.obj, pathLen: state.path.length };\n};\n\nReporter.prototype.restore = function restore(data) {\n  var state = this._reporterState;\n\n  state.obj = data.obj;\n  state.path = state.path.slice(0, data.pathLen);\n};\n\nReporter.prototype.enterKey = function enterKey(key) {\n  return this._reporterState.path.push(key);\n};\n\nReporter.prototype.exitKey = function exitKey(index) {\n  var state = this._reporterState;\n\n  state.path = state.path.slice(0, index - 1);\n};\n\nReporter.prototype.leaveKey = function leaveKey(index, key, value) {\n  var state = this._reporterState;\n\n  this.exitKey(index);\n  if (state.obj !== null)\n    state.obj[key] = value;\n};\n\nReporter.prototype.path = function path() {\n  return this._reporterState.path.join('/');\n};\n\nReporter.prototype.enterObject = function enterObject() {\n  var state = this._reporterState;\n\n  var prev = state.obj;\n  state.obj = {};\n  return prev;\n};\n\nReporter.prototype.leaveObject = function leaveObject(prev) {\n  var state = this._reporterState;\n\n  var now = state.obj;\n  state.obj = prev;\n  return now;\n};\n\nReporter.prototype.error = function error(msg) {\n  var err;\n  var state = this._reporterState;\n\n  var inherited = msg instanceof ReporterError;\n  if (inherited) {\n    err = msg;\n  } else {\n    err = new ReporterError(state.path.map(function(elem) {\n      return '[' + JSON.stringify(elem) + ']';\n    }).join(''), msg.message || msg, msg.stack);\n  }\n\n  if (!state.options.partial)\n    throw err;\n\n  if (!inherited)\n    state.errors.push(err);\n\n  return err;\n};\n\nReporter.prototype.wrapResult = function wrapResult(result) {\n  var state = this._reporterState;\n  if (!state.options.partial)\n    return result;\n\n  return {\n    result: this.isError(result) ? null : result,\n    errors: state.errors\n  };\n};\n\nfunction ReporterError(path, msg) {\n  this.path = path;\n  this.rethrow(msg);\n};\ninherits(ReporterError, Error);\n\nReporterError.prototype.rethrow = function rethrow(msg) {\n  this.message = msg + ' at: ' + (this.path || '(shallow)');\n  if (Error.captureStackTrace)\n    Error.captureStackTrace(this, ReporterError);\n\n  if (!this.stack) {\n    try {\n      // IE only adds stack when thrown\n      throw new Error(this.message);\n    } catch (e) {\n      this.stack = e.stack;\n    }\n  }\n  return this;\n};\n","var inherits = require('inherits');\nvar Reporter = require('../base').Reporter;\nvar Buffer = require('buffer').Buffer;\n\nfunction DecoderBuffer(base, options) {\n  Reporter.call(this, options);\n  if (!Buffer.isBuffer(base)) {\n    this.error('Input not Buffer');\n    return;\n  }\n\n  this.base = base;\n  this.offset = 0;\n  this.length = base.length;\n}\ninherits(DecoderBuffer, Reporter);\nexports.DecoderBuffer = DecoderBuffer;\n\nDecoderBuffer.prototype.save = function save() {\n  return { offset: this.offset, reporter: Reporter.prototype.save.call(this) };\n};\n\nDecoderBuffer.prototype.restore = function restore(save) {\n  // Return skipped data\n  var res = new DecoderBuffer(this.base);\n  res.offset = save.offset;\n  res.length = this.offset;\n\n  this.offset = save.offset;\n  Reporter.prototype.restore.call(this, save.reporter);\n\n  return res;\n};\n\nDecoderBuffer.prototype.isEmpty = function isEmpty() {\n  return this.offset === this.length;\n};\n\nDecoderBuffer.prototype.readUInt8 = function readUInt8(fail) {\n  if (this.offset + 1 <= this.length)\n    return this.base.readUInt8(this.offset++, true);\n  else\n    return this.error(fail || 'DecoderBuffer overrun');\n}\n\nDecoderBuffer.prototype.skip = function skip(bytes, fail) {\n  if (!(this.offset + bytes <= this.length))\n    return this.error(fail || 'DecoderBuffer overrun');\n\n  var res = new DecoderBuffer(this.base);\n\n  // Share reporter state\n  res._reporterState = this._reporterState;\n\n  res.offset = this.offset;\n  res.length = this.offset + bytes;\n  this.offset += bytes;\n  return res;\n}\n\nDecoderBuffer.prototype.raw = function raw(save) {\n  return this.base.slice(save ? save.offset : this.offset, this.length);\n}\n\nfunction EncoderBuffer(value, reporter) {\n  if (Array.isArray(value)) {\n    this.length = 0;\n    this.value = value.map(function(item) {\n      if (!(item instanceof EncoderBuffer))\n        item = new EncoderBuffer(item, reporter);\n      this.length += item.length;\n      return item;\n    }, this);\n  } else if (typeof value === 'number') {\n    if (!(0 <= value && value <= 0xff))\n      return reporter.error('non-byte EncoderBuffer value');\n    this.value = value;\n    this.length = 1;\n  } else if (typeof value === 'string') {\n    this.value = value;\n    this.length = Buffer.byteLength(value);\n  } else if (Buffer.isBuffer(value)) {\n    this.value = value;\n    this.length = value.length;\n  } else {\n    return reporter.error('Unsupported type: ' + typeof value);\n  }\n}\nexports.EncoderBuffer = EncoderBuffer;\n\nEncoderBuffer.prototype.join = function join(out, offset) {\n  if (!out)\n    out = new Buffer(this.length);\n  if (!offset)\n    offset = 0;\n\n  if (this.length === 0)\n    return out;\n\n  if (Array.isArray(this.value)) {\n    this.value.forEach(function(item) {\n      item.join(out, offset);\n      offset += item.length;\n    });\n  } else {\n    if (typeof this.value === 'number')\n      out[offset] = this.value;\n    else if (typeof this.value === 'string')\n      out.write(this.value, offset);\n    else if (Buffer.isBuffer(this.value))\n      this.value.copy(out, offset);\n    offset += this.length;\n  }\n\n  return out;\n};\n","var Reporter = require('../base').Reporter;\nvar EncoderBuffer = require('../base').EncoderBuffer;\nvar DecoderBuffer = require('../base').DecoderBuffer;\nvar assert = require('minimalistic-assert');\n\n// Supported tags\nvar tags = [\n  'seq', 'seqof', 'set', 'setof', 'objid', 'bool',\n  'gentime', 'utctime', 'null_', 'enum', 'int', 'objDesc',\n  'bitstr', 'bmpstr', 'charstr', 'genstr', 'graphstr', 'ia5str', 'iso646str',\n  'numstr', 'octstr', 'printstr', 't61str', 'unistr', 'utf8str', 'videostr'\n];\n\n// Public methods list\nvar methods = [\n  'key', 'obj', 'use', 'optional', 'explicit', 'implicit', 'def', 'choice',\n  'any', 'contains'\n].concat(tags);\n\n// Overrided methods list\nvar overrided = [\n  '_peekTag', '_decodeTag', '_use',\n  '_decodeStr', '_decodeObjid', '_decodeTime',\n  '_decodeNull', '_decodeInt', '_decodeBool', '_decodeList',\n\n  '_encodeComposite', '_encodeStr', '_encodeObjid', '_encodeTime',\n  '_encodeNull', '_encodeInt', '_encodeBool'\n];\n\nfunction Node(enc, parent) {\n  var state = {};\n  this._baseState = state;\n\n  state.enc = enc;\n\n  state.parent = parent || null;\n  state.children = null;\n\n  // State\n  state.tag = null;\n  state.args = null;\n  state.reverseArgs = null;\n  state.choice = null;\n  state.optional = false;\n  state.any = false;\n  state.obj = false;\n  state.use = null;\n  state.useDecoder = null;\n  state.key = null;\n  state['default'] = null;\n  state.explicit = null;\n  state.implicit = null;\n  state.contains = null;\n\n  // Should create new instance on each method\n  if (!state.parent) {\n    state.children = [];\n    this._wrap();\n  }\n}\nmodule.exports = Node;\n\nvar stateProps = [\n  'enc', 'parent', 'children', 'tag', 'args', 'reverseArgs', 'choice',\n  'optional', 'any', 'obj', 'use', 'alteredUse', 'key', 'default', 'explicit',\n  'implicit', 'contains'\n];\n\nNode.prototype.clone = function clone() {\n  var state = this._baseState;\n  var cstate = {};\n  stateProps.forEach(function(prop) {\n    cstate[prop] = state[prop];\n  });\n  var res = new this.constructor(cstate.parent);\n  res._baseState = cstate;\n  return res;\n};\n\nNode.prototype._wrap = function wrap() {\n  var state = this._baseState;\n  methods.forEach(function(method) {\n    this[method] = function _wrappedMethod() {\n      var clone = new this.constructor(this);\n      state.children.push(clone);\n      return clone[method].apply(clone, arguments);\n    };\n  }, this);\n};\n\nNode.prototype._init = function init(body) {\n  var state = this._baseState;\n\n  assert(state.parent === null);\n  body.call(this);\n\n  // Filter children\n  state.children = state.children.filter(function(child) {\n    return child._baseState.parent === this;\n  }, this);\n  assert.equal(state.children.length, 1, 'Root node can have only one child');\n};\n\nNode.prototype._useArgs = function useArgs(args) {\n  var state = this._baseState;\n\n  // Filter children and args\n  var children = args.filter(function(arg) {\n    return arg instanceof this.constructor;\n  }, this);\n  args = args.filter(function(arg) {\n    return !(arg instanceof this.constructor);\n  }, this);\n\n  if (children.length !== 0) {\n    assert(state.children === null);\n    state.children = children;\n\n    // Replace parent to maintain backward link\n    children.forEach(function(child) {\n      child._baseState.parent = this;\n    }, this);\n  }\n  if (args.length !== 0) {\n    assert(state.args === null);\n    state.args = args;\n    state.reverseArgs = args.map(function(arg) {\n      if (typeof arg !== 'object' || arg.constructor !== Object)\n        return arg;\n\n      var res = {};\n      Object.keys(arg).forEach(function(key) {\n        if (key == (key | 0))\n          key |= 0;\n        var value = arg[key];\n        res[value] = key;\n      });\n      return res;\n    });\n  }\n};\n\n//\n// Overrided methods\n//\n\noverrided.forEach(function(method) {\n  Node.prototype[method] = function _overrided() {\n    var state = this._baseState;\n    throw new Error(method + ' not implemented for encoding: ' + state.enc);\n  };\n});\n\n//\n// Public methods\n//\n\ntags.forEach(function(tag) {\n  Node.prototype[tag] = function _tagMethod() {\n    var state = this._baseState;\n    var args = Array.prototype.slice.call(arguments);\n\n    assert(state.tag === null);\n    state.tag = tag;\n\n    this._useArgs(args);\n\n    return this;\n  };\n});\n\nNode.prototype.use = function use(item) {\n  assert(item);\n  var state = this._baseState;\n\n  assert(state.use === null);\n  state.use = item;\n\n  return this;\n};\n\nNode.prototype.optional = function optional() {\n  var state = this._baseState;\n\n  state.optional = true;\n\n  return this;\n};\n\nNode.prototype.def = function def(val) {\n  var state = this._baseState;\n\n  assert(state['default'] === null);\n  state['default'] = val;\n  state.optional = true;\n\n  return this;\n};\n\nNode.prototype.explicit = function explicit(num) {\n  var state = this._baseState;\n\n  assert(state.explicit === null && state.implicit === null);\n  state.explicit = num;\n\n  return this;\n};\n\nNode.prototype.implicit = function implicit(num) {\n  var state = this._baseState;\n\n  assert(state.explicit === null && state.implicit === null);\n  state.implicit = num;\n\n  return this;\n};\n\nNode.prototype.obj = function obj() {\n  var state = this._baseState;\n  var args = Array.prototype.slice.call(arguments);\n\n  state.obj = true;\n\n  if (args.length !== 0)\n    this._useArgs(args);\n\n  return this;\n};\n\nNode.prototype.key = function key(newKey) {\n  var state = this._baseState;\n\n  assert(state.key === null);\n  state.key = newKey;\n\n  return this;\n};\n\nNode.prototype.any = function any() {\n  var state = this._baseState;\n\n  state.any = true;\n\n  return this;\n};\n\nNode.prototype.choice = function choice(obj) {\n  var state = this._baseState;\n\n  assert(state.choice === null);\n  state.choice = obj;\n  this._useArgs(Object.keys(obj).map(function(key) {\n    return obj[key];\n  }));\n\n  return this;\n};\n\nNode.prototype.contains = function contains(item) {\n  var state = this._baseState;\n\n  assert(state.use === null);\n  state.contains = item;\n\n  return this;\n};\n\n//\n// Decoding\n//\n\nNode.prototype._decode = function decode(input, options) {\n  var state = this._baseState;\n\n  // Decode root node\n  if (state.parent === null)\n    return input.wrapResult(state.children[0]._decode(input, options));\n\n  var result = state['default'];\n  var present = true;\n\n  var prevKey = null;\n  if (state.key !== null)\n    prevKey = input.enterKey(state.key);\n\n  // Check if tag is there\n  if (state.optional) {\n    var tag = null;\n    if (state.explicit !== null)\n      tag = state.explicit;\n    else if (state.implicit !== null)\n      tag = state.implicit;\n    else if (state.tag !== null)\n      tag = state.tag;\n\n    if (tag === null && !state.any) {\n      // Trial and Error\n      var save = input.save();\n      try {\n        if (state.choice === null)\n          this._decodeGeneric(state.tag, input, options);\n        else\n          this._decodeChoice(input, options);\n        present = true;\n      } catch (e) {\n        present = false;\n      }\n      input.restore(save);\n    } else {\n      present = this._peekTag(input, tag, state.any);\n\n      if (input.isError(present))\n        return present;\n    }\n  }\n\n  // Push object on stack\n  var prevObj;\n  if (state.obj && present)\n    prevObj = input.enterObject();\n\n  if (present) {\n    // Unwrap explicit values\n    if (state.explicit !== null) {\n      var explicit = this._decodeTag(input, state.explicit);\n      if (input.isError(explicit))\n        return explicit;\n      input = explicit;\n    }\n\n    var start = input.offset;\n\n    // Unwrap implicit and normal values\n    if (state.use === null && state.choice === null) {\n      if (state.any)\n        var save = input.save();\n      var body = this._decodeTag(\n        input,\n        state.implicit !== null ? state.implicit : state.tag,\n        state.any\n      );\n      if (input.isError(body))\n        return body;\n\n      if (state.any)\n        result = input.raw(save);\n      else\n        input = body;\n    }\n\n    if (options && options.track && state.tag !== null)\n      options.track(input.path(), start, input.length, 'tagged');\n\n    if (options && options.track && state.tag !== null)\n      options.track(input.path(), input.offset, input.length, 'content');\n\n    // Select proper method for tag\n    if (state.any)\n      result = result;\n    else if (state.choice === null)\n      result = this._decodeGeneric(state.tag, input, options);\n    else\n      result = this._decodeChoice(input, options);\n\n    if (input.isError(result))\n      return result;\n\n    // Decode children\n    if (!state.any && state.choice === null && state.children !== null) {\n      state.children.forEach(function decodeChildren(child) {\n        // NOTE: We are ignoring errors here, to let parser continue with other\n        // parts of encoded data\n        child._decode(input, options);\n      });\n    }\n\n    // Decode contained/encoded by schema, only in bit or octet strings\n    if (state.contains && (state.tag === 'octstr' || state.tag === 'bitstr')) {\n      var data = new DecoderBuffer(result);\n      result = this._getUse(state.contains, input._reporterState.obj)\n          ._decode(data, options);\n    }\n  }\n\n  // Pop object\n  if (state.obj && present)\n    result = input.leaveObject(prevObj);\n\n  // Set key\n  if (state.key !== null && (result !== null || present === true))\n    input.leaveKey(prevKey, state.key, result);\n  else if (prevKey !== null)\n    input.exitKey(prevKey);\n\n  return result;\n};\n\nNode.prototype._decodeGeneric = function decodeGeneric(tag, input, options) {\n  var state = this._baseState;\n\n  if (tag === 'seq' || tag === 'set')\n    return null;\n  if (tag === 'seqof' || tag === 'setof')\n    return this._decodeList(input, tag, state.args[0], options);\n  else if (/str$/.test(tag))\n    return this._decodeStr(input, tag, options);\n  else if (tag === 'objid' && state.args)\n    return this._decodeObjid(input, state.args[0], state.args[1], options);\n  else if (tag === 'objid')\n    return this._decodeObjid(input, null, null, options);\n  else if (tag === 'gentime' || tag === 'utctime')\n    return this._decodeTime(input, tag, options);\n  else if (tag === 'null_')\n    return this._decodeNull(input, options);\n  else if (tag === 'bool')\n    return this._decodeBool(input, options);\n  else if (tag === 'objDesc')\n    return this._decodeStr(input, tag, options);\n  else if (tag === 'int' || tag === 'enum')\n    return this._decodeInt(input, state.args && state.args[0], options);\n\n  if (state.use !== null) {\n    return this._getUse(state.use, input._reporterState.obj)\n        ._decode(input, options);\n  } else {\n    return input.error('unknown tag: ' + tag);\n  }\n};\n\nNode.prototype._getUse = function _getUse(entity, obj) {\n\n  var state = this._baseState;\n  // Create altered use decoder if implicit is set\n  state.useDecoder = this._use(entity, obj);\n  assert(state.useDecoder._baseState.parent === null);\n  state.useDecoder = state.useDecoder._baseState.children[0];\n  if (state.implicit !== state.useDecoder._baseState.implicit) {\n    state.useDecoder = state.useDecoder.clone();\n    state.useDecoder._baseState.implicit = state.implicit;\n  }\n  return state.useDecoder;\n};\n\nNode.prototype._decodeChoice = function decodeChoice(input, options) {\n  var state = this._baseState;\n  var result = null;\n  var match = false;\n\n  Object.keys(state.choice).some(function(key) {\n    var save = input.save();\n    var node = state.choice[key];\n    try {\n      var value = node._decode(input, options);\n      if (input.isError(value))\n        return false;\n\n      result = { type: key, value: value };\n      match = true;\n    } catch (e) {\n      input.restore(save);\n      return false;\n    }\n    return true;\n  }, this);\n\n  if (!match)\n    return input.error('Choice not matched');\n\n  return result;\n};\n\n//\n// Encoding\n//\n\nNode.prototype._createEncoderBuffer = function createEncoderBuffer(data) {\n  return new EncoderBuffer(data, this.reporter);\n};\n\nNode.prototype._encode = function encode(data, reporter, parent) {\n  var state = this._baseState;\n  if (state['default'] !== null && state['default'] === data)\n    return;\n\n  var result = this._encodeValue(data, reporter, parent);\n  if (result === undefined)\n    return;\n\n  if (this._skipDefault(result, reporter, parent))\n    return;\n\n  return result;\n};\n\nNode.prototype._encodeValue = function encode(data, reporter, parent) {\n  var state = this._baseState;\n\n  // Decode root node\n  if (state.parent === null)\n    return state.children[0]._encode(data, reporter || new Reporter());\n\n  var result = null;\n\n  // Set reporter to share it with a child class\n  this.reporter = reporter;\n\n  // Check if data is there\n  if (state.optional && data === undefined) {\n    if (state['default'] !== null)\n      data = state['default']\n    else\n      return;\n  }\n\n  // Encode children first\n  var content = null;\n  var primitive = false;\n  if (state.any) {\n    // Anything that was given is translated to buffer\n    result = this._createEncoderBuffer(data);\n  } else if (state.choice) {\n    result = this._encodeChoice(data, reporter);\n  } else if (state.contains) {\n    content = this._getUse(state.contains, parent)._encode(data, reporter);\n    primitive = true;\n  } else if (state.children) {\n    content = state.children.map(function(child) {\n      if (child._baseState.tag === 'null_')\n        return child._encode(null, reporter, data);\n\n      if (child._baseState.key === null)\n        return reporter.error('Child should have a key');\n      var prevKey = reporter.enterKey(child._baseState.key);\n\n      if (typeof data !== 'object')\n        return reporter.error('Child expected, but input is not object');\n\n      var res = child._encode(data[child._baseState.key], reporter, data);\n      reporter.leaveKey(prevKey);\n\n      return res;\n    }, this).filter(function(child) {\n      return child;\n    });\n    content = this._createEncoderBuffer(content);\n  } else {\n    if (state.tag === 'seqof' || state.tag === 'setof') {\n      // TODO(indutny): this should be thrown on DSL level\n      if (!(state.args && state.args.length === 1))\n        return reporter.error('Too many args for : ' + state.tag);\n\n      if (!Array.isArray(data))\n        return reporter.error('seqof/setof, but data is not Array');\n\n      var child = this.clone();\n      child._baseState.implicit = null;\n      content = this._createEncoderBuffer(data.map(function(item) {\n        var state = this._baseState;\n\n        return this._getUse(state.args[0], data)._encode(item, reporter);\n      }, child));\n    } else if (state.use !== null) {\n      result = this._getUse(state.use, parent)._encode(data, reporter);\n    } else {\n      content = this._encodePrimitive(state.tag, data);\n      primitive = true;\n    }\n  }\n\n  // Encode data itself\n  var result;\n  if (!state.any && state.choice === null) {\n    var tag = state.implicit !== null ? state.implicit : state.tag;\n    var cls = state.implicit === null ? 'universal' : 'context';\n\n    if (tag === null) {\n      if (state.use === null)\n        reporter.error('Tag could be omitted only for .use()');\n    } else {\n      if (state.use === null)\n        result = this._encodeComposite(tag, primitive, cls, content);\n    }\n  }\n\n  // Wrap in explicit\n  if (state.explicit !== null)\n    result = this._encodeComposite(state.explicit, false, 'context', result);\n\n  return result;\n};\n\nNode.prototype._encodeChoice = function encodeChoice(data, reporter) {\n  var state = this._baseState;\n\n  var node = state.choice[data.type];\n  if (!node) {\n    assert(\n        false,\n        data.type + ' not found in ' +\n            JSON.stringify(Object.keys(state.choice)));\n  }\n  return node._encode(data.value, reporter);\n};\n\nNode.prototype._encodePrimitive = function encodePrimitive(tag, data) {\n  var state = this._baseState;\n\n  if (/str$/.test(tag))\n    return this._encodeStr(data, tag);\n  else if (tag === 'objid' && state.args)\n    return this._encodeObjid(data, state.reverseArgs[0], state.args[1]);\n  else if (tag === 'objid')\n    return this._encodeObjid(data, null, null);\n  else if (tag === 'gentime' || tag === 'utctime')\n    return this._encodeTime(data, tag);\n  else if (tag === 'null_')\n    return this._encodeNull();\n  else if (tag === 'int' || tag === 'enum')\n    return this._encodeInt(data, state.args && state.reverseArgs[0]);\n  else if (tag === 'bool')\n    return this._encodeBool(data);\n  else if (tag === 'objDesc')\n    return this._encodeStr(data, tag);\n  else\n    throw new Error('Unsupported tag: ' + tag);\n};\n\nNode.prototype._isNumstr = function isNumstr(str) {\n  return /^[0-9 ]*$/.test(str);\n};\n\nNode.prototype._isPrintstr = function isPrintstr(str) {\n  return /^[A-Za-z0-9 '\\(\\)\\+,\\-\\.\\/:=\\?]*$/.test(str);\n};\n","var base = exports;\n\nbase.Reporter = require('./reporter').Reporter;\nbase.DecoderBuffer = require('./buffer').DecoderBuffer;\nbase.EncoderBuffer = require('./buffer').EncoderBuffer;\nbase.Node = require('./node');\n","var constants = require('../constants');\n\nexports.tagClass = {\n  0: 'universal',\n  1: 'application',\n  2: 'context',\n  3: 'private'\n};\nexports.tagClassByName = constants._reverse(exports.tagClass);\n\nexports.tag = {\n  0x00: 'end',\n  0x01: 'bool',\n  0x02: 'int',\n  0x03: 'bitstr',\n  0x04: 'octstr',\n  0x05: 'null_',\n  0x06: 'objid',\n  0x07: 'objDesc',\n  0x08: 'external',\n  0x09: 'real',\n  0x0a: 'enum',\n  0x0b: 'embed',\n  0x0c: 'utf8str',\n  0x0d: 'relativeOid',\n  0x10: 'seq',\n  0x11: 'set',\n  0x12: 'numstr',\n  0x13: 'printstr',\n  0x14: 't61str',\n  0x15: 'videostr',\n  0x16: 'ia5str',\n  0x17: 'utctime',\n  0x18: 'gentime',\n  0x19: 'graphstr',\n  0x1a: 'iso646str',\n  0x1b: 'genstr',\n  0x1c: 'unistr',\n  0x1d: 'charstr',\n  0x1e: 'bmpstr'\n};\nexports.tagByName = constants._reverse(exports.tag);\n","var constants = exports;\n\n// Helper\nconstants._reverse = function reverse(map) {\n  var res = {};\n\n  Object.keys(map).forEach(function(key) {\n    // Convert key to integer if it is stringified\n    if ((key | 0) == key)\n      key = key | 0;\n\n    var value = map[key];\n    res[value] = key;\n  });\n\n  return res;\n};\n\nconstants.der = require('./der');\n","var inherits = require('inherits');\n\nvar asn1 = require('../../asn1');\nvar base = asn1.base;\nvar bignum = asn1.bignum;\n\n// Import DER constants\nvar der = asn1.constants.der;\n\nfunction DERDecoder(entity) {\n  this.enc = 'der';\n  this.name = entity.name;\n  this.entity = entity;\n\n  // Construct base tree\n  this.tree = new DERNode();\n  this.tree._init(entity.body);\n};\nmodule.exports = DERDecoder;\n\nDERDecoder.prototype.decode = function decode(data, options) {\n  if (!(data instanceof base.DecoderBuffer))\n    data = new base.DecoderBuffer(data, options);\n\n  return this.tree._decode(data, options);\n};\n\n// Tree methods\n\nfunction DERNode(parent) {\n  base.Node.call(this, 'der', parent);\n}\ninherits(DERNode, base.Node);\n\nDERNode.prototype._peekTag = function peekTag(buffer, tag, any) {\n  if (buffer.isEmpty())\n    return false;\n\n  var state = buffer.save();\n  var decodedTag = derDecodeTag(buffer, 'Failed to peek tag: \"' + tag + '\"');\n  if (buffer.isError(decodedTag))\n    return decodedTag;\n\n  buffer.restore(state);\n\n  return decodedTag.tag === tag || decodedTag.tagStr === tag ||\n    (decodedTag.tagStr + 'of') === tag || any;\n};\n\nDERNode.prototype._decodeTag = function decodeTag(buffer, tag, any) {\n  var decodedTag = derDecodeTag(buffer,\n                                'Failed to decode tag of \"' + tag + '\"');\n  if (buffer.isError(decodedTag))\n    return decodedTag;\n\n  var len = derDecodeLen(buffer,\n                         decodedTag.primitive,\n                         'Failed to get length of \"' + tag + '\"');\n\n  // Failure\n  if (buffer.isError(len))\n    return len;\n\n  if (!any &&\n      decodedTag.tag !== tag &&\n      decodedTag.tagStr !== tag &&\n      decodedTag.tagStr + 'of' !== tag) {\n    return buffer.error('Failed to match tag: \"' + tag + '\"');\n  }\n\n  if (decodedTag.primitive || len !== null)\n    return buffer.skip(len, 'Failed to match body of: \"' + tag + '\"');\n\n  // Indefinite length... find END tag\n  var state = buffer.save();\n  var res = this._skipUntilEnd(\n      buffer,\n      'Failed to skip indefinite length body: \"' + this.tag + '\"');\n  if (buffer.isError(res))\n    return res;\n\n  len = buffer.offset - state.offset;\n  buffer.restore(state);\n  return buffer.skip(len, 'Failed to match body of: \"' + tag + '\"');\n};\n\nDERNode.prototype._skipUntilEnd = function skipUntilEnd(buffer, fail) {\n  while (true) {\n    var tag = derDecodeTag(buffer, fail);\n    if (buffer.isError(tag))\n      return tag;\n    var len = derDecodeLen(buffer, tag.primitive, fail);\n    if (buffer.isError(len))\n      return len;\n\n    var res;\n    if (tag.primitive || len !== null)\n      res = buffer.skip(len)\n    else\n      res = this._skipUntilEnd(buffer, fail);\n\n    // Failure\n    if (buffer.isError(res))\n      return res;\n\n    if (tag.tagStr === 'end')\n      break;\n  }\n};\n\nDERNode.prototype._decodeList = function decodeList(buffer, tag, decoder,\n                                                    options) {\n  var result = [];\n  while (!buffer.isEmpty()) {\n    var possibleEnd = this._peekTag(buffer, 'end');\n    if (buffer.isError(possibleEnd))\n      return possibleEnd;\n\n    var res = decoder.decode(buffer, 'der', options);\n    if (buffer.isError(res) && possibleEnd)\n      break;\n    result.push(res);\n  }\n  return result;\n};\n\nDERNode.prototype._decodeStr = function decodeStr(buffer, tag) {\n  if (tag === 'bitstr') {\n    var unused = buffer.readUInt8();\n    if (buffer.isError(unused))\n      return unused;\n    return { unused: unused, data: buffer.raw() };\n  } else if (tag === 'bmpstr') {\n    var raw = buffer.raw();\n    if (raw.length % 2 === 1)\n      return buffer.error('Decoding of string type: bmpstr length mismatch');\n\n    var str = '';\n    for (var i = 0; i < raw.length / 2; i++) {\n      str += String.fromCharCode(raw.readUInt16BE(i * 2));\n    }\n    return str;\n  } else if (tag === 'numstr') {\n    var numstr = buffer.raw().toString('ascii');\n    if (!this._isNumstr(numstr)) {\n      return buffer.error('Decoding of string type: ' +\n                          'numstr unsupported characters');\n    }\n    return numstr;\n  } else if (tag === 'octstr') {\n    return buffer.raw();\n  } else if (tag === 'objDesc') {\n    return buffer.raw();\n  } else if (tag === 'printstr') {\n    var printstr = buffer.raw().toString('ascii');\n    if (!this._isPrintstr(printstr)) {\n      return buffer.error('Decoding of string type: ' +\n                          'printstr unsupported characters');\n    }\n    return printstr;\n  } else if (/str$/.test(tag)) {\n    return buffer.raw().toString();\n  } else {\n    return buffer.error('Decoding of string type: ' + tag + ' unsupported');\n  }\n};\n\nDERNode.prototype._decodeObjid = function decodeObjid(buffer, values, relative) {\n  var result;\n  var identifiers = [];\n  var ident = 0;\n  while (!buffer.isEmpty()) {\n    var subident = buffer.readUInt8();\n    ident <<= 7;\n    ident |= subident & 0x7f;\n    if ((subident & 0x80) === 0) {\n      identifiers.push(ident);\n      ident = 0;\n    }\n  }\n  if (subident & 0x80)\n    identifiers.push(ident);\n\n  var first = (identifiers[0] / 40) | 0;\n  var second = identifiers[0] % 40;\n\n  if (relative)\n    result = identifiers;\n  else\n    result = [first, second].concat(identifiers.slice(1));\n\n  if (values) {\n    var tmp = values[result.join(' ')];\n    if (tmp === undefined)\n      tmp = values[result.join('.')];\n    if (tmp !== undefined)\n      result = tmp;\n  }\n\n  return result;\n};\n\nDERNode.prototype._decodeTime = function decodeTime(buffer, tag) {\n  var str = buffer.raw().toString();\n  if (tag === 'gentime') {\n    var year = str.slice(0, 4) | 0;\n    var mon = str.slice(4, 6) | 0;\n    var day = str.slice(6, 8) | 0;\n    var hour = str.slice(8, 10) | 0;\n    var min = str.slice(10, 12) | 0;\n    var sec = str.slice(12, 14) | 0;\n  } else if (tag === 'utctime') {\n    var year = str.slice(0, 2) | 0;\n    var mon = str.slice(2, 4) | 0;\n    var day = str.slice(4, 6) | 0;\n    var hour = str.slice(6, 8) | 0;\n    var min = str.slice(8, 10) | 0;\n    var sec = str.slice(10, 12) | 0;\n    if (year < 70)\n      year = 2000 + year;\n    else\n      year = 1900 + year;\n  } else {\n    return buffer.error('Decoding ' + tag + ' time is not supported yet');\n  }\n\n  return Date.UTC(year, mon - 1, day, hour, min, sec, 0);\n};\n\nDERNode.prototype._decodeNull = function decodeNull(buffer) {\n  return null;\n};\n\nDERNode.prototype._decodeBool = function decodeBool(buffer) {\n  var res = buffer.readUInt8();\n  if (buffer.isError(res))\n    return res;\n  else\n    return res !== 0;\n};\n\nDERNode.prototype._decodeInt = function decodeInt(buffer, values) {\n  // Bigint, return as it is (assume big endian)\n  var raw = buffer.raw();\n  var res = new bignum(raw);\n\n  if (values)\n    res = values[res.toString(10)] || res;\n\n  return res;\n};\n\nDERNode.prototype._use = function use(entity, obj) {\n  if (typeof entity === 'function')\n    entity = entity(obj);\n  return entity._getDecoder('der').tree;\n};\n\n// Utility methods\n\nfunction derDecodeTag(buf, fail) {\n  var tag = buf.readUInt8(fail);\n  if (buf.isError(tag))\n    return tag;\n\n  var cls = der.tagClass[tag >> 6];\n  var primitive = (tag & 0x20) === 0;\n\n  // Multi-octet tag - load\n  if ((tag & 0x1f) === 0x1f) {\n    var oct = tag;\n    tag = 0;\n    while ((oct & 0x80) === 0x80) {\n      oct = buf.readUInt8(fail);\n      if (buf.isError(oct))\n        return oct;\n\n      tag <<= 7;\n      tag |= oct & 0x7f;\n    }\n  } else {\n    tag &= 0x1f;\n  }\n  var tagStr = der.tag[tag];\n\n  return {\n    cls: cls,\n    primitive: primitive,\n    tag: tag,\n    tagStr: tagStr\n  };\n}\n\nfunction derDecodeLen(buf, primitive, fail) {\n  var len = buf.readUInt8(fail);\n  if (buf.isError(len))\n    return len;\n\n  // Indefinite form\n  if (!primitive && len === 0x80)\n    return null;\n\n  // Definite form\n  if ((len & 0x80) === 0) {\n    // Short form\n    return len;\n  }\n\n  // Long form\n  var num = len & 0x7f;\n  if (num > 4)\n    return buf.error('length octect is too long');\n\n  len = 0;\n  for (var i = 0; i < num; i++) {\n    len <<= 8;\n    var j = buf.readUInt8(fail);\n    if (buf.isError(j))\n      return j;\n    len |= j;\n  }\n\n  return len;\n}\n","var inherits = require('inherits');\nvar Buffer = require('buffer').Buffer;\n\nvar DERDecoder = require('./der');\n\nfunction PEMDecoder(entity) {\n  DERDecoder.call(this, entity);\n  this.enc = 'pem';\n};\ninherits(PEMDecoder, DERDecoder);\nmodule.exports = PEMDecoder;\n\nPEMDecoder.prototype.decode = function decode(data, options) {\n  var lines = data.toString().split(/[\\r\\n]+/g);\n\n  var label = options.label.toUpperCase();\n\n  var re = /^-----(BEGIN|END) ([^-]+)-----$/;\n  var start = -1;\n  var end = -1;\n  for (var i = 0; i < lines.length; i++) {\n    var match = lines[i].match(re);\n    if (match === null)\n      continue;\n\n    if (match[2] !== label)\n      continue;\n\n    if (start === -1) {\n      if (match[1] !== 'BEGIN')\n        break;\n      start = i;\n    } else {\n      if (match[1] !== 'END')\n        break;\n      end = i;\n      break;\n    }\n  }\n  if (start === -1 || end === -1)\n    throw new Error('PEM section not found for: ' + label);\n\n  var base64 = lines.slice(start + 1, end).join('');\n  // Remove excessive symbols\n  base64.replace(/[^a-z0-9\\+\\/=]+/gi, '');\n\n  var input = new Buffer(base64, 'base64');\n  return DERDecoder.prototype.decode.call(this, input, options);\n};\n","var decoders = exports;\n\ndecoders.der = require('./der');\ndecoders.pem = require('./pem');\n","var inherits = require('inherits');\nvar Buffer = require('buffer').Buffer;\n\nvar asn1 = require('../../asn1');\nvar base = asn1.base;\n\n// Import DER constants\nvar der = asn1.constants.der;\n\nfunction DEREncoder(entity) {\n  this.enc = 'der';\n  this.name = entity.name;\n  this.entity = entity;\n\n  // Construct base tree\n  this.tree = new DERNode();\n  this.tree._init(entity.body);\n};\nmodule.exports = DEREncoder;\n\nDEREncoder.prototype.encode = function encode(data, reporter) {\n  return this.tree._encode(data, reporter).join();\n};\n\n// Tree methods\n\nfunction DERNode(parent) {\n  base.Node.call(this, 'der', parent);\n}\ninherits(DERNode, base.Node);\n\nDERNode.prototype._encodeComposite = function encodeComposite(tag,\n                                                              primitive,\n                                                              cls,\n                                                              content) {\n  var encodedTag = encodeTag(tag, primitive, cls, this.reporter);\n\n  // Short form\n  if (content.length < 0x80) {\n    var header = new Buffer(2);\n    header[0] = encodedTag;\n    header[1] = content.length;\n    return this._createEncoderBuffer([ header, content ]);\n  }\n\n  // Long form\n  // Count octets required to store length\n  var lenOctets = 1;\n  for (var i = content.length; i >= 0x100; i >>= 8)\n    lenOctets++;\n\n  var header = new Buffer(1 + 1 + lenOctets);\n  header[0] = encodedTag;\n  header[1] = 0x80 | lenOctets;\n\n  for (var i = 1 + lenOctets, j = content.length; j > 0; i--, j >>= 8)\n    header[i] = j & 0xff;\n\n  return this._createEncoderBuffer([ header, content ]);\n};\n\nDERNode.prototype._encodeStr = function encodeStr(str, tag) {\n  if (tag === 'bitstr') {\n    return this._createEncoderBuffer([ str.unused | 0, str.data ]);\n  } else if (tag === 'bmpstr') {\n    var buf = new Buffer(str.length * 2);\n    for (var i = 0; i < str.length; i++) {\n      buf.writeUInt16BE(str.charCodeAt(i), i * 2);\n    }\n    return this._createEncoderBuffer(buf);\n  } else if (tag === 'numstr') {\n    if (!this._isNumstr(str)) {\n      return this.reporter.error('Encoding of string type: numstr supports ' +\n                                 'only digits and space');\n    }\n    return this._createEncoderBuffer(str);\n  } else if (tag === 'printstr') {\n    if (!this._isPrintstr(str)) {\n      return this.reporter.error('Encoding of string type: printstr supports ' +\n                                 'only latin upper and lower case letters, ' +\n                                 'digits, space, apostrophe, left and rigth ' +\n                                 'parenthesis, plus sign, comma, hyphen, ' +\n                                 'dot, slash, colon, equal sign, ' +\n                                 'question mark');\n    }\n    return this._createEncoderBuffer(str);\n  } else if (/str$/.test(tag)) {\n    return this._createEncoderBuffer(str);\n  } else if (tag === 'objDesc') {\n    return this._createEncoderBuffer(str);\n  } else {\n    return this.reporter.error('Encoding of string type: ' + tag +\n                               ' unsupported');\n  }\n};\n\nDERNode.prototype._encodeObjid = function encodeObjid(id, values, relative) {\n  if (typeof id === 'string') {\n    if (!values)\n      return this.reporter.error('string objid given, but no values map found');\n    if (!values.hasOwnProperty(id))\n      return this.reporter.error('objid not found in values map');\n    id = values[id].split(/[\\s\\.]+/g);\n    for (var i = 0; i < id.length; i++)\n      id[i] |= 0;\n  } else if (Array.isArray(id)) {\n    id = id.slice();\n    for (var i = 0; i < id.length; i++)\n      id[i] |= 0;\n  }\n\n  if (!Array.isArray(id)) {\n    return this.reporter.error('objid() should be either array or string, ' +\n                               'got: ' + JSON.stringify(id));\n  }\n\n  if (!relative) {\n    if (id[1] >= 40)\n      return this.reporter.error('Second objid identifier OOB');\n    id.splice(0, 2, id[0] * 40 + id[1]);\n  }\n\n  // Count number of octets\n  var size = 0;\n  for (var i = 0; i < id.length; i++) {\n    var ident = id[i];\n    for (size++; ident >= 0x80; ident >>= 7)\n      size++;\n  }\n\n  var objid = new Buffer(size);\n  var offset = objid.length - 1;\n  for (var i = id.length - 1; i >= 0; i--) {\n    var ident = id[i];\n    objid[offset--] = ident & 0x7f;\n    while ((ident >>= 7) > 0)\n      objid[offset--] = 0x80 | (ident & 0x7f);\n  }\n\n  return this._createEncoderBuffer(objid);\n};\n\nfunction two(num) {\n  if (num < 10)\n    return '0' + num;\n  else\n    return num;\n}\n\nDERNode.prototype._encodeTime = function encodeTime(time, tag) {\n  var str;\n  var date = new Date(time);\n\n  if (tag === 'gentime') {\n    str = [\n      two(date.getFullYear()),\n      two(date.getUTCMonth() + 1),\n      two(date.getUTCDate()),\n      two(date.getUTCHours()),\n      two(date.getUTCMinutes()),\n      two(date.getUTCSeconds()),\n      'Z'\n    ].join('');\n  } else if (tag === 'utctime') {\n    str = [\n      two(date.getFullYear() % 100),\n      two(date.getUTCMonth() + 1),\n      two(date.getUTCDate()),\n      two(date.getUTCHours()),\n      two(date.getUTCMinutes()),\n      two(date.getUTCSeconds()),\n      'Z'\n    ].join('');\n  } else {\n    this.reporter.error('Encoding ' + tag + ' time is not supported yet');\n  }\n\n  return this._encodeStr(str, 'octstr');\n};\n\nDERNode.prototype._encodeNull = function encodeNull() {\n  return this._createEncoderBuffer('');\n};\n\nDERNode.prototype._encodeInt = function encodeInt(num, values) {\n  if (typeof num === 'string') {\n    if (!values)\n      return this.reporter.error('String int or enum given, but no values map');\n    if (!values.hasOwnProperty(num)) {\n      return this.reporter.error('Values map doesn\\'t contain: ' +\n                                 JSON.stringify(num));\n    }\n    num = values[num];\n  }\n\n  // Bignum, assume big endian\n  if (typeof num !== 'number' && !Buffer.isBuffer(num)) {\n    var numArray = num.toArray();\n    if (!num.sign && numArray[0] & 0x80) {\n      numArray.unshift(0);\n    }\n    num = new Buffer(numArray);\n  }\n\n  if (Buffer.isBuffer(num)) {\n    var size = num.length;\n    if (num.length === 0)\n      size++;\n\n    var out = new Buffer(size);\n    num.copy(out);\n    if (num.length === 0)\n      out[0] = 0\n    return this._createEncoderBuffer(out);\n  }\n\n  if (num < 0x80)\n    return this._createEncoderBuffer(num);\n\n  if (num < 0x100)\n    return this._createEncoderBuffer([0, num]);\n\n  var size = 1;\n  for (var i = num; i >= 0x100; i >>= 8)\n    size++;\n\n  var out = new Array(size);\n  for (var i = out.length - 1; i >= 0; i--) {\n    out[i] = num & 0xff;\n    num >>= 8;\n  }\n  if(out[0] & 0x80) {\n    out.unshift(0);\n  }\n\n  return this._createEncoderBuffer(new Buffer(out));\n};\n\nDERNode.prototype._encodeBool = function encodeBool(value) {\n  return this._createEncoderBuffer(value ? 0xff : 0);\n};\n\nDERNode.prototype._use = function use(entity, obj) {\n  if (typeof entity === 'function')\n    entity = entity(obj);\n  return entity._getEncoder('der').tree;\n};\n\nDERNode.prototype._skipDefault = function skipDefault(dataBuffer, reporter, parent) {\n  var state = this._baseState;\n  var i;\n  if (state['default'] === null)\n    return false;\n\n  var data = dataBuffer.join();\n  if (state.defaultBuffer === undefined)\n    state.defaultBuffer = this._encodeValue(state['default'], reporter, parent).join();\n\n  if (data.length !== state.defaultBuffer.length)\n    return false;\n\n  for (i=0; i < data.length; i++)\n    if (data[i] !== state.defaultBuffer[i])\n      return false;\n\n  return true;\n};\n\n// Utility methods\n\nfunction encodeTag(tag, primitive, cls, reporter) {\n  var res;\n\n  if (tag === 'seqof')\n    tag = 'seq';\n  else if (tag === 'setof')\n    tag = 'set';\n\n  if (der.tagByName.hasOwnProperty(tag))\n    res = der.tagByName[tag];\n  else if (typeof tag === 'number' && (tag | 0) === tag)\n    res = tag;\n  else\n    return reporter.error('Unknown tag: ' + tag);\n\n  if (res >= 0x1f)\n    return reporter.error('Multi-octet tag encoding unsupported');\n\n  if (!primitive)\n    res |= 0x20;\n\n  res |= (der.tagClassByName[cls || 'universal'] << 6);\n\n  return res;\n}\n","var inherits = require('inherits');\n\nvar DEREncoder = require('./der');\n\nfunction PEMEncoder(entity) {\n  DEREncoder.call(this, entity);\n  this.enc = 'pem';\n};\ninherits(PEMEncoder, DEREncoder);\nmodule.exports = PEMEncoder;\n\nPEMEncoder.prototype.encode = function encode(data, options) {\n  var buf = DEREncoder.prototype.encode.call(this, data);\n\n  var p = buf.toString('base64');\n  var out = [ '-----BEGIN ' + options.label + '-----' ];\n  for (var i = 0; i < p.length; i += 64)\n    out.push(p.slice(i, i + 64));\n  out.push('-----END ' + options.label + '-----');\n  return out.join('\\n');\n};\n","var encoders = exports;\n\nencoders.der = require('./der');\nencoders.pem = require('./pem');\n","var asn1 = exports;\n\nasn1.bignum = require('bn.js');\n\nasn1.define = require('./asn1/api').define;\nasn1.base = require('./asn1/base');\nasn1.constants = require('./asn1/constants');\nasn1.decoders = require('./asn1/decoders');\nasn1.encoders = require('./asn1/encoders');\n","// from https://github.com/Rantanen/node-dtls/blob/25a7dc861bda38cfeac93a723500eea4f0ac2e86/Certificate.js\n// thanks to @Rantanen\n\n'use strict';\n\nvar asn = require('asn1.js');\n\nvar Time = asn.define('Time', function () {\n\tthis.choice({\n\t\tutcTime: this.utctime(),\n\t\tgeneralTime: this.gentime()\n\t});\n});\n\nvar AttributeTypeValue = asn.define('AttributeTypeValue', function () {\n\tthis.seq().obj(\n\t\tthis.key('type').objid(),\n\t\tthis.key('value').any()\n\t);\n});\n\nvar AlgorithmIdentifier = asn.define('AlgorithmIdentifier', function () {\n\tthis.seq().obj(\n\t\tthis.key('algorithm').objid(),\n\t\tthis.key('parameters').optional(),\n\t\tthis.key('curve').objid().optional()\n\t);\n});\n\nvar SubjectPublicKeyInfo = asn.define('SubjectPublicKeyInfo', function () {\n\tthis.seq().obj(\n\t\tthis.key('algorithm').use(AlgorithmIdentifier),\n\t\tthis.key('subjectPublicKey').bitstr()\n\t);\n});\n\nvar RelativeDistinguishedName = asn.define('RelativeDistinguishedName', function () {\n\tthis.setof(AttributeTypeValue);\n});\n\nvar RDNSequence = asn.define('RDNSequence', function () {\n\tthis.seqof(RelativeDistinguishedName);\n});\n\nvar Name = asn.define('Name', function () {\n\tthis.choice({\n\t\trdnSequence: this.use(RDNSequence)\n\t});\n});\n\nvar Validity = asn.define('Validity', function () {\n\tthis.seq().obj(\n\t\tthis.key('notBefore').use(Time),\n\t\tthis.key('notAfter').use(Time)\n\t);\n});\n\nvar Extension = asn.define('Extension', function () {\n\tthis.seq().obj(\n\t\tthis.key('extnID').objid(),\n\t\tthis.key('critical').bool().def(false),\n\t\tthis.key('extnValue').octstr()\n\t);\n});\n\nvar TBSCertificate = asn.define('TBSCertificate', function () {\n\tthis.seq().obj(\n\t\tthis.key('version').explicit(0)['int']().optional(),\n\t\tthis.key('serialNumber')['int'](),\n\t\tthis.key('signature').use(AlgorithmIdentifier),\n\t\tthis.key('issuer').use(Name),\n\t\tthis.key('validity').use(Validity),\n\t\tthis.key('subject').use(Name),\n\t\tthis.key('subjectPublicKeyInfo').use(SubjectPublicKeyInfo),\n\t\tthis.key('issuerUniqueID').implicit(1).bitstr().optional(),\n\t\tthis.key('subjectUniqueID').implicit(2).bitstr().optional(),\n\t\tthis.key('extensions').explicit(3).seqof(Extension).optional()\n\t);\n});\n\nvar X509Certificate = asn.define('X509Certificate', function () {\n\tthis.seq().obj(\n\t\tthis.key('tbsCertificate').use(TBSCertificate),\n\t\tthis.key('signatureAlgorithm').use(AlgorithmIdentifier),\n\t\tthis.key('signatureValue').bitstr()\n\t);\n});\n\nmodule.exports = X509Certificate;\n","// from https://github.com/indutny/self-signed/blob/gh-pages/lib/asn1.js\n// Fedor, you are amazing.\n\n'use strict';\n\nvar asn1 = require('asn1.js');\n\nexports.certificate = require('./certificate');\n\nvar RSAPrivateKey = asn1.define('RSAPrivateKey', function () {\n\tthis.seq().obj(\n\t\tthis.key('version')['int'](),\n\t\tthis.key('modulus')['int'](),\n\t\tthis.key('publicExponent')['int'](),\n\t\tthis.key('privateExponent')['int'](),\n\t\tthis.key('prime1')['int'](),\n\t\tthis.key('prime2')['int'](),\n\t\tthis.key('exponent1')['int'](),\n\t\tthis.key('exponent2')['int'](),\n\t\tthis.key('coefficient')['int']()\n\t);\n});\nexports.RSAPrivateKey = RSAPrivateKey;\n\nvar RSAPublicKey = asn1.define('RSAPublicKey', function () {\n\tthis.seq().obj(\n\t\tthis.key('modulus')['int'](),\n\t\tthis.key('publicExponent')['int']()\n\t);\n});\nexports.RSAPublicKey = RSAPublicKey;\n\nvar AlgorithmIdentifier = asn1.define('AlgorithmIdentifier', function () {\n\tthis.seq().obj(\n\t\tthis.key('algorithm').objid(),\n\t\tthis.key('none').null_().optional(),\n\t\tthis.key('curve').objid().optional(),\n\t\tthis.key('params').seq().obj(\n\t\t\tthis.key('p')['int'](),\n\t\t\tthis.key('q')['int'](),\n\t\t\tthis.key('g')['int']()\n\t\t).optional()\n\t);\n});\n\nvar PublicKey = asn1.define('SubjectPublicKeyInfo', function () {\n\tthis.seq().obj(\n\t\tthis.key('algorithm').use(AlgorithmIdentifier),\n\t\tthis.key('subjectPublicKey').bitstr()\n\t);\n});\nexports.PublicKey = PublicKey;\n\nvar PrivateKeyInfo = asn1.define('PrivateKeyInfo', function () {\n\tthis.seq().obj(\n\t\tthis.key('version')['int'](),\n\t\tthis.key('algorithm').use(AlgorithmIdentifier),\n\t\tthis.key('subjectPrivateKey').octstr()\n\t);\n});\nexports.PrivateKey = PrivateKeyInfo;\nvar EncryptedPrivateKeyInfo = asn1.define('EncryptedPrivateKeyInfo', function () {\n\tthis.seq().obj(\n\t\tthis.key('algorithm').seq().obj(\n\t\t\tthis.key('id').objid(),\n\t\t\tthis.key('decrypt').seq().obj(\n\t\t\t\tthis.key('kde').seq().obj(\n\t\t\t\t\tthis.key('id').objid(),\n\t\t\t\t\tthis.key('kdeparams').seq().obj(\n\t\t\t\t\t\tthis.key('salt').octstr(),\n\t\t\t\t\t\tthis.key('iters')['int']()\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\tthis.key('cipher').seq().obj(\n\t\t\t\t\tthis.key('algo').objid(),\n\t\t\t\t\tthis.key('iv').octstr()\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t\tthis.key('subjectPrivateKey').octstr()\n\t);\n});\n\nexports.EncryptedPrivateKey = EncryptedPrivateKeyInfo;\n\nvar DSAPrivateKey = asn1.define('DSAPrivateKey', function () {\n\tthis.seq().obj(\n\t\tthis.key('version')['int'](),\n\t\tthis.key('p')['int'](),\n\t\tthis.key('q')['int'](),\n\t\tthis.key('g')['int'](),\n\t\tthis.key('pub_key')['int'](),\n\t\tthis.key('priv_key')['int']()\n\t);\n});\nexports.DSAPrivateKey = DSAPrivateKey;\n\nexports.DSAparam = asn1.define('DSAparam', function () {\n\tthis['int']();\n});\n\nvar ECParameters = asn1.define('ECParameters', function () {\n\tthis.choice({\n\t\tnamedCurve: this.objid()\n\t});\n});\n\nvar ECPrivateKey = asn1.define('ECPrivateKey', function () {\n\tthis.seq().obj(\n\t\tthis.key('version')['int'](),\n\t\tthis.key('privateKey').octstr(),\n\t\tthis.key('parameters').optional().explicit(0).use(ECParameters),\n\t\tthis.key('publicKey').optional().explicit(1).bitstr()\n\t);\n});\nexports.ECPrivateKey = ECPrivateKey;\n\nexports.signature = asn1.define('signature', function () {\n\tthis.seq().obj(\n\t\tthis.key('r')['int'](),\n\t\tthis.key('s')['int']()\n\t);\n});\n","module.exports={\"2.16.840.1.101.3.4.1.1\":\"aes-128-ecb\",\"2.16.840.1.101.3.4.1.2\":\"aes-128-cbc\",\"2.16.840.1.101.3.4.1.3\":\"aes-128-ofb\",\"2.16.840.1.101.3.4.1.4\":\"aes-128-cfb\",\"2.16.840.1.101.3.4.1.21\":\"aes-192-ecb\",\"2.16.840.1.101.3.4.1.22\":\"aes-192-cbc\",\"2.16.840.1.101.3.4.1.23\":\"aes-192-ofb\",\"2.16.840.1.101.3.4.1.24\":\"aes-192-cfb\",\"2.16.840.1.101.3.4.1.41\":\"aes-256-ecb\",\"2.16.840.1.101.3.4.1.42\":\"aes-256-cbc\",\"2.16.840.1.101.3.4.1.43\":\"aes-256-ofb\",\"2.16.840.1.101.3.4.1.44\":\"aes-256-cfb\"};","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","'use strict';\n\n// adapted from https://github.com/apatil/pemstrip\nvar findProc = /Proc-Type: 4,ENCRYPTED[\\n\\r]+DEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)[\\n\\r]+([0-9A-z\\n\\r+/=]+)[\\n\\r]+/m;\nvar startRegex = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----/m;\nvar fullRegex = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----([0-9A-z\\n\\r+/=]+)-----END \\1-----$/m;\nvar evp = require('evp_bytestokey');\nvar ciphers = require('browserify-aes');\nvar Buffer = require('safe-buffer').Buffer;\nmodule.exports = function (okey, password) {\n\tvar key = okey.toString();\n\tvar match = key.match(findProc);\n\tvar decrypted;\n\tif (!match) {\n\t\tvar match2 = key.match(fullRegex);\n\t\tdecrypted = Buffer.from(match2[2].replace(/[\\r\\n]/g, ''), 'base64');\n\t} else {\n\t\tvar suite = 'aes' + match[1];\n\t\tvar iv = Buffer.from(match[2], 'hex');\n\t\tvar cipherText = Buffer.from(match[3].replace(/[\\r\\n]/g, ''), 'base64');\n\t\tvar cipherKey = evp(password, iv.slice(0, 8), parseInt(match[1], 10)).key;\n\t\tvar out = [];\n\t\tvar cipher = ciphers.createDecipheriv(suite, cipherKey, iv);\n\t\tout.push(cipher.update(cipherText));\n\t\tout.push(cipher['final']());\n\t\tdecrypted = Buffer.concat(out);\n\t}\n\tvar tag = key.match(startRegex)[1];\n\treturn {\n\t\ttag: tag,\n\t\tdata: decrypted\n\t};\n};\n","'use strict';\n\nvar asn1 = require('./asn1');\nvar aesid = require('./aesid.json');\nvar fixProc = require('./fixProc');\nvar ciphers = require('browserify-aes');\nvar compat = require('pbkdf2');\nvar Buffer = require('safe-buffer').Buffer;\n\nfunction decrypt(data, password) {\n\tvar salt = data.algorithm.decrypt.kde.kdeparams.salt;\n\tvar iters = parseInt(data.algorithm.decrypt.kde.kdeparams.iters.toString(), 10);\n\tvar algo = aesid[data.algorithm.decrypt.cipher.algo.join('.')];\n\tvar iv = data.algorithm.decrypt.cipher.iv;\n\tvar cipherText = data.subjectPrivateKey;\n\tvar keylen = parseInt(algo.split('-')[1], 10) / 8;\n\tvar key = compat.pbkdf2Sync(password, salt, iters, keylen, 'sha1');\n\tvar cipher = ciphers.createDecipheriv(algo, key, iv);\n\tvar out = [];\n\tout.push(cipher.update(cipherText));\n\tout.push(cipher['final']());\n\treturn Buffer.concat(out);\n}\n\nfunction parseKeys(buffer) {\n\tvar password;\n\tif (typeof buffer === 'object' && !Buffer.isBuffer(buffer)) {\n\t\tpassword = buffer.passphrase;\n\t\tbuffer = buffer.key;\n\t}\n\tif (typeof buffer === 'string') {\n\t\tbuffer = Buffer.from(buffer);\n\t}\n\n\tvar stripped = fixProc(buffer, password);\n\n\tvar type = stripped.tag;\n\tvar data = stripped.data;\n\tvar subtype, ndata;\n\tswitch (type) {\n\t\tcase 'CERTIFICATE':\n\t\t\tndata = asn1.certificate.decode(data, 'der').tbsCertificate.subjectPublicKeyInfo;\n\t\t\t// falls through\n\t\tcase 'PUBLIC KEY':\n\t\t\tif (!ndata) {\n\t\t\t\tndata = asn1.PublicKey.decode(data, 'der');\n\t\t\t}\n\t\t\tsubtype = ndata.algorithm.algorithm.join('.');\n\t\t\tswitch (subtype) {\n\t\t\t\tcase '1.2.840.113549.1.1.1':\n\t\t\t\t\treturn asn1.RSAPublicKey.decode(ndata.subjectPublicKey.data, 'der');\n\t\t\t\tcase '1.2.840.10045.2.1':\n\t\t\t\t\tndata.subjectPrivateKey = ndata.subjectPublicKey;\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: 'ec',\n\t\t\t\t\t\tdata: ndata\n\t\t\t\t\t};\n\t\t\t\tcase '1.2.840.10040.4.1':\n\t\t\t\t\tndata.algorithm.params.pub_key = asn1.DSAparam.decode(ndata.subjectPublicKey.data, 'der');\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: 'dsa',\n\t\t\t\t\t\tdata: ndata.algorithm.params\n\t\t\t\t\t};\n\t\t\t\tdefault: throw new Error('unknown key id ' + subtype);\n\t\t\t}\n\t\t\t// throw new Error('unknown key type ' + type)\n\t\tcase 'ENCRYPTED PRIVATE KEY':\n\t\t\tdata = asn1.EncryptedPrivateKey.decode(data, 'der');\n\t\t\tdata = decrypt(data, password);\n\t\t\t// falls through\n\t\tcase 'PRIVATE KEY':\n\t\t\tndata = asn1.PrivateKey.decode(data, 'der');\n\t\t\tsubtype = ndata.algorithm.algorithm.join('.');\n\t\t\tswitch (subtype) {\n\t\t\t\tcase '1.2.840.113549.1.1.1':\n\t\t\t\t\treturn asn1.RSAPrivateKey.decode(ndata.subjectPrivateKey, 'der');\n\t\t\t\tcase '1.2.840.10045.2.1':\n\t\t\t\t\treturn {\n\t\t\t\t\t\tcurve: ndata.algorithm.curve,\n\t\t\t\t\t\tprivateKey: asn1.ECPrivateKey.decode(ndata.subjectPrivateKey, 'der').privateKey\n\t\t\t\t\t};\n\t\t\t\tcase '1.2.840.10040.4.1':\n\t\t\t\t\tndata.algorithm.params.priv_key = asn1.DSAparam.decode(ndata.subjectPrivateKey, 'der');\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: 'dsa',\n\t\t\t\t\t\tparams: ndata.algorithm.params\n\t\t\t\t\t};\n\t\t\t\tdefault: throw new Error('unknown key id ' + subtype);\n\t\t\t}\n\t\t\t// throw new Error('unknown key type ' + type)\n\t\tcase 'RSA PUBLIC KEY':\n\t\t\treturn asn1.RSAPublicKey.decode(data, 'der');\n\t\tcase 'RSA PRIVATE KEY':\n\t\t\treturn asn1.RSAPrivateKey.decode(data, 'der');\n\t\tcase 'DSA PRIVATE KEY':\n\t\t\treturn {\n\t\t\t\ttype: 'dsa',\n\t\t\t\tparams: asn1.DSAPrivateKey.decode(data, 'der')\n\t\t\t};\n\t\tcase 'EC PRIVATE KEY':\n\t\t\tdata = asn1.ECPrivateKey.decode(data, 'der');\n\t\t\treturn {\n\t\t\t\tcurve: data.parameters.value,\n\t\t\t\tprivateKey: data.privateKey\n\t\t\t};\n\t\tdefault: throw new Error('unknown key type ' + type);\n\t}\n}\nparseKeys.signature = asn1.signature;\n\nmodule.exports = parseKeys;\n","module.exports={\"1.3.132.0.10\":\"secp256k1\",\"1.3.132.0.33\":\"p224\",\"1.2.840.10045.3.1.1\":\"p192\",\"1.2.840.10045.3.1.7\":\"p256\",\"1.3.132.0.34\":\"p384\",\"1.3.132.0.35\":\"p521\"};","'use strict';\n\n// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js\nvar Buffer = require('safe-buffer').Buffer;\nvar createHmac = require('create-hmac');\nvar crt = require('browserify-rsa');\nvar EC = require('elliptic').ec;\nvar BN = require('bn.js');\nvar parseKeys = require('parse-asn1');\nvar curves = require('./curves.json');\n\nvar RSA_PKCS1_PADDING = 1;\n\nfunction sign(hash, key, hashType, signType, tag) {\n  var priv = parseKeys(key);\n  if (priv.curve) {\n    // rsa keys can be interpreted as ecdsa ones in openssl\n    if (signType !== 'ecdsa' && signType !== 'ecdsa/rsa') { throw new Error('wrong private key type'); }\n    return ecSign(hash, priv);\n  } else if (priv.type === 'dsa') {\n    if (signType !== 'dsa') { throw new Error('wrong private key type'); }\n    return dsaSign(hash, priv, hashType);\n  }\n  if (signType !== 'rsa' && signType !== 'ecdsa/rsa') { throw new Error('wrong private key type'); }\n  if (key.padding !== undefined && key.padding !== RSA_PKCS1_PADDING) { throw new Error('illegal or unsupported padding mode'); }\n\n  hash = Buffer.concat([tag, hash]);\n  var len = priv.modulus.byteLength();\n  var pad = [0, 1];\n  while (hash.length + pad.length + 1 < len) { pad.push(0xff); }\n  pad.push(0x00);\n  var i = -1;\n  while (++i < hash.length) { pad.push(hash[i]); }\n\n  var out = crt(pad, priv);\n  return out;\n}\n\nfunction ecSign(hash, priv) {\n  var curveId = curves[priv.curve.join('.')];\n  if (!curveId) { throw new Error('unknown curve ' + priv.curve.join('.')); }\n\n  var curve = new EC(curveId);\n  var key = curve.keyFromPrivate(priv.privateKey);\n  var out = key.sign(hash);\n\n  return Buffer.from(out.toDER());\n}\n\nfunction dsaSign(hash, priv, algo) {\n  var x = priv.params.priv_key;\n  var p = priv.params.p;\n  var q = priv.params.q;\n  var g = priv.params.g;\n  var r = new BN(0);\n  var k;\n  var H = bits2int(hash, q).mod(q);\n  var s = false;\n  var kv = getKey(x, q, hash, algo);\n  while (s === false) {\n    k = makeKey(q, kv, algo);\n    r = makeR(g, k, p, q);\n    s = k.invm(q).imul(H.add(x.mul(r))).mod(q);\n    if (s.cmpn(0) === 0) {\n      s = false;\n      r = new BN(0);\n    }\n  }\n  return toDER(r, s);\n}\n\nfunction toDER(r, s) {\n  r = r.toArray();\n  s = s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80) { r = [0].concat(r); }\n  if (s[0] & 0x80) { s = [0].concat(s); }\n\n  var total = r.length + s.length + 4;\n  var res = [\n    0x30, total, 0x02, r.length\n  ];\n  res = res.concat(r, [0x02, s.length], s);\n  return Buffer.from(res);\n}\n\nfunction getKey(x, q, hash, algo) {\n  x = Buffer.from(x.toArray());\n  if (x.length < q.byteLength()) {\n    var zeros = Buffer.alloc(q.byteLength() - x.length);\n    x = Buffer.concat([zeros, x]);\n  }\n  var hlen = hash.length;\n  var hbits = bits2octets(hash, q);\n  var v = Buffer.alloc(hlen);\n  v.fill(1);\n  var k = Buffer.alloc(hlen);\n  k = createHmac(algo, k).update(v).update(Buffer.from([0])).update(x).update(hbits).digest();\n  v = createHmac(algo, k).update(v).digest();\n  k = createHmac(algo, k).update(v).update(Buffer.from([1])).update(x).update(hbits).digest();\n  v = createHmac(algo, k).update(v).digest();\n  return { k: k, v: v };\n}\n\nfunction bits2int(obits, q) {\n  var bits = new BN(obits);\n  var shift = (obits.length << 3) - q.bitLength();\n  if (shift > 0) { bits.ishrn(shift); }\n  return bits;\n}\n\nfunction bits2octets(bits, q) {\n  bits = bits2int(bits, q);\n  bits = bits.mod(q);\n  var out = Buffer.from(bits.toArray());\n  if (out.length < q.byteLength()) {\n    var zeros = Buffer.alloc(q.byteLength() - out.length);\n    out = Buffer.concat([zeros, out]);\n  }\n  return out;\n}\n\nfunction makeKey(q, kv, algo) {\n  var t;\n  var k;\n\n  do {\n    t = Buffer.alloc(0);\n\n    while (t.length * 8 < q.bitLength()) {\n      kv.v = createHmac(algo, kv.k).update(kv.v).digest();\n      t = Buffer.concat([t, kv.v]);\n    }\n\n    k = bits2int(t, q);\n    kv.k = createHmac(algo, kv.k).update(kv.v).update(Buffer.from([0])).digest();\n    kv.v = createHmac(algo, kv.k).update(kv.v).digest();\n  } while (k.cmp(q) !== -1);\n\n  return k;\n}\n\nfunction makeR(g, k, p, q) {\n  return g.toRed(BN.mont(p)).redPow(k).fromRed().mod(q);\n}\n\nmodule.exports = sign;\nmodule.exports.getKey = getKey;\nmodule.exports.makeKey = makeKey;\n","'use strict';\n\n// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js\nvar Buffer = require('safe-buffer').Buffer;\nvar BN = require('bn.js');\nvar EC = require('elliptic').ec;\nvar parseKeys = require('parse-asn1');\nvar curves = require('./curves.json');\n\nfunction verify(sig, hash, key, signType, tag) {\n  var pub = parseKeys(key);\n  if (pub.type === 'ec') {\n    // rsa keys can be interpreted as ecdsa ones in openssl\n    if (signType !== 'ecdsa' && signType !== 'ecdsa/rsa') { throw new Error('wrong public key type'); }\n    return ecVerify(sig, hash, pub);\n  } else if (pub.type === 'dsa') {\n    if (signType !== 'dsa') { throw new Error('wrong public key type'); }\n    return dsaVerify(sig, hash, pub);\n  }\n  if (signType !== 'rsa' && signType !== 'ecdsa/rsa') { throw new Error('wrong public key type'); }\n\n  hash = Buffer.concat([tag, hash]);\n  var len = pub.modulus.byteLength();\n  var pad = [1];\n  var padNum = 0;\n  while (hash.length + pad.length + 2 < len) {\n    pad.push(0xff);\n    padNum += 1;\n  }\n  pad.push(0x00);\n  var i = -1;\n  while (++i < hash.length) {\n    pad.push(hash[i]);\n  }\n  pad = Buffer.from(pad);\n  var red = BN.mont(pub.modulus);\n  sig = new BN(sig).toRed(red);\n\n  sig = sig.redPow(new BN(pub.publicExponent));\n  sig = Buffer.from(sig.fromRed().toArray());\n  var out = padNum < 8 ? 1 : 0;\n  len = Math.min(sig.length, pad.length);\n  if (sig.length !== pad.length) { out = 1; }\n\n  i = -1;\n  while (++i < len) { out |= sig[i] ^ pad[i]; }\n  return out === 0;\n}\n\nfunction ecVerify(sig, hash, pub) {\n  var curveId = curves[pub.data.algorithm.curve.join('.')];\n  if (!curveId) { throw new Error('unknown curve ' + pub.data.algorithm.curve.join('.')); }\n\n  var curve = new EC(curveId);\n  var pubkey = pub.data.subjectPrivateKey.data;\n\n  return curve.verify(hash, sig, pubkey);\n}\n\nfunction dsaVerify(sig, hash, pub) {\n  var p = pub.data.p;\n  var q = pub.data.q;\n  var g = pub.data.g;\n  var y = pub.data.pub_key;\n  var unpacked = parseKeys.signature.decode(sig, 'der');\n  var s = unpacked.s;\n  var r = unpacked.r;\n  checkValue(s, q);\n  checkValue(r, q);\n  var montp = BN.mont(p);\n  var w = s.invm(q);\n  var v = g.toRed(montp)\n    .redPow(new BN(hash).mul(w).mod(q))\n    .fromRed()\n    .mul(y.toRed(montp).redPow(r.mul(w).mod(q)).fromRed())\n    .mod(p)\n    .mod(q);\n  return v.cmp(r) === 0;\n}\n\nfunction checkValue(b, q) {\n  if (b.cmpn(0) <= 0) { throw new Error('invalid sig'); }\n  if (b.cmp(q) >= 0) { throw new Error('invalid sig'); }\n}\n\nmodule.exports = verify;\n","'use strict';\n\nvar Buffer = require('safe-buffer').Buffer;\nvar createHash = require('create-hash');\nvar stream = require('readable-stream');\nvar inherits = require('inherits');\nvar sign = require('./sign');\nvar verify = require('./verify');\n\nvar algorithms = require('./algorithms.json');\nObject.keys(algorithms).forEach(function (key) {\n  algorithms[key].id = Buffer.from(algorithms[key].id, 'hex');\n  algorithms[key.toLowerCase()] = algorithms[key];\n});\n\nfunction Sign(algorithm) {\n  stream.Writable.call(this);\n\n  var data = algorithms[algorithm];\n  if (!data) { throw new Error('Unknown message digest'); }\n\n  this._hashType = data.hash;\n  this._hash = createHash(data.hash);\n  this._tag = data.id;\n  this._signType = data.sign;\n}\ninherits(Sign, stream.Writable);\n\nSign.prototype._write = function _write(data, _, done) {\n  this._hash.update(data);\n  done();\n};\n\nSign.prototype.update = function update(data, enc) {\n  this._hash.update(typeof data === 'string' ? Buffer.from(data, enc) : data);\n\n  return this;\n};\n\nSign.prototype.sign = function signMethod(key, enc) {\n  this.end();\n  var hash = this._hash.digest();\n  var sig = sign(hash, key, this._hashType, this._signType, this._tag);\n\n  return enc ? sig.toString(enc) : sig;\n};\n\nfunction Verify(algorithm) {\n  stream.Writable.call(this);\n\n  var data = algorithms[algorithm];\n  if (!data) { throw new Error('Unknown message digest'); }\n\n  this._hash = createHash(data.hash);\n  this._tag = data.id;\n  this._signType = data.sign;\n}\ninherits(Verify, stream.Writable);\n\nVerify.prototype._write = function _write(data, _, done) {\n  this._hash.update(data);\n  done();\n};\n\nVerify.prototype.update = function update(data, enc) {\n  this._hash.update(typeof data === 'string' ? Buffer.from(data, enc) : data);\n\n  return this;\n};\n\nVerify.prototype.verify = function verifyMethod(key, sig, enc) {\n  var sigBuffer = typeof sig === 'string' ? Buffer.from(sig, enc) : sig;\n\n  this.end();\n  var hash = this._hash.digest();\n  return verify(sigBuffer, hash, key, this._signType, this._tag);\n};\n\nfunction createSign(algorithm) {\n  return new Sign(algorithm);\n}\n\nfunction createVerify(algorithm) {\n  return new Verify(algorithm);\n}\n\nmodule.exports = {\n  Sign: createSign,\n  Verify: createVerify,\n  createSign: createSign,\n  createVerify: createVerify\n};\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","var elliptic = require('elliptic')\nvar BN = require('bn.js')\n\nmodule.exports = function createECDH (curve) {\n  return new ECDH(curve)\n}\n\nvar aliases = {\n  secp256k1: {\n    name: 'secp256k1',\n    byteLength: 32\n  },\n  secp224r1: {\n    name: 'p224',\n    byteLength: 28\n  },\n  prime256v1: {\n    name: 'p256',\n    byteLength: 32\n  },\n  prime192v1: {\n    name: 'p192',\n    byteLength: 24\n  },\n  ed25519: {\n    name: 'ed25519',\n    byteLength: 32\n  },\n  secp384r1: {\n    name: 'p384',\n    byteLength: 48\n  },\n  secp521r1: {\n    name: 'p521',\n    byteLength: 66\n  }\n}\n\naliases.p224 = aliases.secp224r1\naliases.p256 = aliases.secp256r1 = aliases.prime256v1\naliases.p192 = aliases.secp192r1 = aliases.prime192v1\naliases.p384 = aliases.secp384r1\naliases.p521 = aliases.secp521r1\n\nfunction ECDH (curve) {\n  this.curveType = aliases[curve]\n  if (!this.curveType) {\n    this.curveType = {\n      name: curve\n    }\n  }\n  this.curve = new elliptic.ec(this.curveType.name) // eslint-disable-line new-cap\n  this.keys = void 0\n}\n\nECDH.prototype.generateKeys = function (enc, format) {\n  this.keys = this.curve.genKeyPair()\n  return this.getPublicKey(enc, format)\n}\n\nECDH.prototype.computeSecret = function (other, inenc, enc) {\n  inenc = inenc || 'utf8'\n  if (!Buffer.isBuffer(other)) {\n    other = new Buffer(other, inenc)\n  }\n  var otherPub = this.curve.keyFromPublic(other).getPublic()\n  var out = otherPub.mul(this.keys.getPrivate()).getX()\n  return formatReturnValue(out, enc, this.curveType.byteLength)\n}\n\nECDH.prototype.getPublicKey = function (enc, format) {\n  var key = this.keys.getPublic(format === 'compressed', true)\n  if (format === 'hybrid') {\n    if (key[key.length - 1] % 2) {\n      key[0] = 7\n    } else {\n      key[0] = 6\n    }\n  }\n  return formatReturnValue(key, enc)\n}\n\nECDH.prototype.getPrivateKey = function (enc) {\n  return formatReturnValue(this.keys.getPrivate(), enc)\n}\n\nECDH.prototype.setPublicKey = function (pub, enc) {\n  enc = enc || 'utf8'\n  if (!Buffer.isBuffer(pub)) {\n    pub = new Buffer(pub, enc)\n  }\n  this.keys._importPublic(pub)\n  return this\n}\n\nECDH.prototype.setPrivateKey = function (priv, enc) {\n  enc = enc || 'utf8'\n  if (!Buffer.isBuffer(priv)) {\n    priv = new Buffer(priv, enc)\n  }\n\n  var _priv = new BN(priv)\n  _priv = _priv.toString(16)\n  this.keys = this.curve.genKeyPair()\n  this.keys._importPrivate(_priv)\n  return this\n}\n\nfunction formatReturnValue (bn, enc, len) {\n  if (!Array.isArray(bn)) {\n    bn = bn.toArray()\n  }\n  var buf = new Buffer(bn)\n  if (len && buf.length < len) {\n    var zeros = new Buffer(len - buf.length)\n    zeros.fill(0)\n    buf = Buffer.concat([zeros, buf])\n  }\n  if (!enc) {\n    return buf\n  } else {\n    return buf.toString(enc)\n  }\n}\n","var createHash = require('create-hash')\nvar Buffer = require('safe-buffer').Buffer\n\nmodule.exports = function (seed, len) {\n  var t = Buffer.alloc(0)\n  var i = 0\n  var c\n  while (t.length < len) {\n    c = i2ops(i++)\n    t = Buffer.concat([t, createHash('sha1').update(seed).update(c).digest()])\n  }\n  return t.slice(0, len)\n}\n\nfunction i2ops (c) {\n  var out = Buffer.allocUnsafe(4)\n  out.writeUInt32BE(c, 0)\n  return out\n}\n","module.exports = function xor (a, b) {\n  var len = a.length\n  var i = -1\n  while (++i < len) {\n    a[i] ^= b[i]\n  }\n  return a\n}\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","var BN = require('bn.js')\nvar Buffer = require('safe-buffer').Buffer\n\nfunction withPublic (paddedMsg, key) {\n  return Buffer.from(paddedMsg\n    .toRed(BN.mont(key.modulus))\n    .redPow(new BN(key.publicExponent))\n    .fromRed()\n    .toArray())\n}\n\nmodule.exports = withPublic\n","var parseKeys = require('parse-asn1')\nvar randomBytes = require('randombytes')\nvar createHash = require('create-hash')\nvar mgf = require('./mgf')\nvar xor = require('./xor')\nvar BN = require('bn.js')\nvar withPublic = require('./withPublic')\nvar crt = require('browserify-rsa')\nvar Buffer = require('safe-buffer').Buffer\n\nmodule.exports = function publicEncrypt (publicKey, msg, reverse) {\n  var padding\n  if (publicKey.padding) {\n    padding = publicKey.padding\n  } else if (reverse) {\n    padding = 1\n  } else {\n    padding = 4\n  }\n  var key = parseKeys(publicKey)\n  var paddedMsg\n  if (padding === 4) {\n    paddedMsg = oaep(key, msg)\n  } else if (padding === 1) {\n    paddedMsg = pkcs1(key, msg, reverse)\n  } else if (padding === 3) {\n    paddedMsg = new BN(msg)\n    if (paddedMsg.cmp(key.modulus) >= 0) {\n      throw new Error('data too long for modulus')\n    }\n  } else {\n    throw new Error('unknown padding')\n  }\n  if (reverse) {\n    return crt(paddedMsg, key)\n  } else {\n    return withPublic(paddedMsg, key)\n  }\n}\n\nfunction oaep (key, msg) {\n  var k = key.modulus.byteLength()\n  var mLen = msg.length\n  var iHash = createHash('sha1').update(Buffer.alloc(0)).digest()\n  var hLen = iHash.length\n  var hLen2 = 2 * hLen\n  if (mLen > k - hLen2 - 2) {\n    throw new Error('message too long')\n  }\n  var ps = Buffer.alloc(k - mLen - hLen2 - 2)\n  var dblen = k - hLen - 1\n  var seed = randomBytes(hLen)\n  var maskedDb = xor(Buffer.concat([iHash, ps, Buffer.alloc(1, 1), msg], dblen), mgf(seed, dblen))\n  var maskedSeed = xor(seed, mgf(maskedDb, hLen))\n  return new BN(Buffer.concat([Buffer.alloc(1), maskedSeed, maskedDb], k))\n}\nfunction pkcs1 (key, msg, reverse) {\n  var mLen = msg.length\n  var k = key.modulus.byteLength()\n  if (mLen > k - 11) {\n    throw new Error('message too long')\n  }\n  var ps\n  if (reverse) {\n    ps = Buffer.alloc(k - mLen - 3, 0xff)\n  } else {\n    ps = nonZero(k - mLen - 3)\n  }\n  return new BN(Buffer.concat([Buffer.from([0, reverse ? 1 : 2]), ps, Buffer.alloc(1), msg], k))\n}\nfunction nonZero (len) {\n  var out = Buffer.allocUnsafe(len)\n  var i = 0\n  var cache = randomBytes(len * 2)\n  var cur = 0\n  var num\n  while (i < len) {\n    if (cur === cache.length) {\n      cache = randomBytes(len * 2)\n      cur = 0\n    }\n    num = cache[cur++]\n    if (num) {\n      out[i++] = num\n    }\n  }\n  return out\n}\n","var parseKeys = require('parse-asn1')\nvar mgf = require('./mgf')\nvar xor = require('./xor')\nvar BN = require('bn.js')\nvar crt = require('browserify-rsa')\nvar createHash = require('create-hash')\nvar withPublic = require('./withPublic')\nvar Buffer = require('safe-buffer').Buffer\n\nmodule.exports = function privateDecrypt (privateKey, enc, reverse) {\n  var padding\n  if (privateKey.padding) {\n    padding = privateKey.padding\n  } else if (reverse) {\n    padding = 1\n  } else {\n    padding = 4\n  }\n\n  var key = parseKeys(privateKey)\n  var k = key.modulus.byteLength()\n  if (enc.length > k || new BN(enc).cmp(key.modulus) >= 0) {\n    throw new Error('decryption error')\n  }\n  var msg\n  if (reverse) {\n    msg = withPublic(new BN(enc), key)\n  } else {\n    msg = crt(enc, key)\n  }\n  var zBuffer = Buffer.alloc(k - msg.length)\n  msg = Buffer.concat([zBuffer, msg], k)\n  if (padding === 4) {\n    return oaep(key, msg)\n  } else if (padding === 1) {\n    return pkcs1(key, msg, reverse)\n  } else if (padding === 3) {\n    return msg\n  } else {\n    throw new Error('unknown padding')\n  }\n}\n\nfunction oaep (key, msg) {\n  var k = key.modulus.byteLength()\n  var iHash = createHash('sha1').update(Buffer.alloc(0)).digest()\n  var hLen = iHash.length\n  if (msg[0] !== 0) {\n    throw new Error('decryption error')\n  }\n  var maskedSeed = msg.slice(1, hLen + 1)\n  var maskedDb = msg.slice(hLen + 1)\n  var seed = xor(maskedSeed, mgf(maskedDb, hLen))\n  var db = xor(maskedDb, mgf(seed, k - hLen - 1))\n  if (compare(iHash, db.slice(0, hLen))) {\n    throw new Error('decryption error')\n  }\n  var i = hLen\n  while (db[i] === 0) {\n    i++\n  }\n  if (db[i++] !== 1) {\n    throw new Error('decryption error')\n  }\n  return db.slice(i)\n}\n\nfunction pkcs1 (key, msg, reverse) {\n  var p1 = msg.slice(0, 2)\n  var i = 2\n  var status = 0\n  while (msg[i++] !== 0) {\n    if (i >= msg.length) {\n      status++\n      break\n    }\n  }\n  var ps = msg.slice(2, i - 1)\n\n  if ((p1.toString('hex') !== '0002' && !reverse) || (p1.toString('hex') !== '0001' && reverse)) {\n    status++\n  }\n  if (ps.length < 8) {\n    status++\n  }\n  if (status) {\n    throw new Error('decryption error')\n  }\n  return msg.slice(i)\n}\nfunction compare (a, b) {\n  a = Buffer.from(a)\n  b = Buffer.from(b)\n  var dif = 0\n  var len = a.length\n  if (a.length !== b.length) {\n    dif++\n    len = Math.min(a.length, b.length)\n  }\n  var i = -1\n  while (++i < len) {\n    dif += (a[i] ^ b[i])\n  }\n  return dif\n}\n","exports.publicEncrypt = require('./publicEncrypt')\nexports.privateDecrypt = require('./privateDecrypt')\n\nexports.privateEncrypt = function privateEncrypt (key, buf) {\n  return exports.publicEncrypt(key, buf, true)\n}\n\nexports.publicDecrypt = function publicDecrypt (key, buf) {\n  return exports.privateDecrypt(key, buf, true)\n}\n","'use strict'\n\nfunction oldBrowser () {\n  throw new Error('secure random number generation not supported by this browser\\nuse chrome, FireFox or Internet Explorer 11')\n}\nvar safeBuffer = require('safe-buffer')\nvar randombytes = require('randombytes')\nvar Buffer = safeBuffer.Buffer\nvar kBufferMaxLength = safeBuffer.kMaxLength\nvar crypto = global.crypto || global.msCrypto\nvar kMaxUint32 = Math.pow(2, 32) - 1\nfunction assertOffset (offset, length) {\n  if (typeof offset !== 'number' || offset !== offset) { // eslint-disable-line no-self-compare\n    throw new TypeError('offset must be a number')\n  }\n\n  if (offset > kMaxUint32 || offset < 0) {\n    throw new TypeError('offset must be a uint32')\n  }\n\n  if (offset > kBufferMaxLength || offset > length) {\n    throw new RangeError('offset out of range')\n  }\n}\n\nfunction assertSize (size, offset, length) {\n  if (typeof size !== 'number' || size !== size) { // eslint-disable-line no-self-compare\n    throw new TypeError('size must be a number')\n  }\n\n  if (size > kMaxUint32 || size < 0) {\n    throw new TypeError('size must be a uint32')\n  }\n\n  if (size + offset > length || size > kBufferMaxLength) {\n    throw new RangeError('buffer too small')\n  }\n}\nif ((crypto && crypto.getRandomValues) || !process.browser) {\n  exports.randomFill = randomFill\n  exports.randomFillSync = randomFillSync\n} else {\n  exports.randomFill = oldBrowser\n  exports.randomFillSync = oldBrowser\n}\nfunction randomFill (buf, offset, size, cb) {\n  if (!Buffer.isBuffer(buf) && !(buf instanceof global.Uint8Array)) {\n    throw new TypeError('\"buf\" argument must be a Buffer or Uint8Array')\n  }\n\n  if (typeof offset === 'function') {\n    cb = offset\n    offset = 0\n    size = buf.length\n  } else if (typeof size === 'function') {\n    cb = size\n    size = buf.length - offset\n  } else if (typeof cb !== 'function') {\n    throw new TypeError('\"cb\" argument must be a function')\n  }\n  assertOffset(offset, buf.length)\n  assertSize(size, offset, buf.length)\n  return actualFill(buf, offset, size, cb)\n}\n\nfunction actualFill (buf, offset, size, cb) {\n  if (process.browser) {\n    var ourBuf = buf.buffer\n    var uint = new Uint8Array(ourBuf, offset, size)\n    crypto.getRandomValues(uint)\n    if (cb) {\n      process.nextTick(function () {\n        cb(null, buf)\n      })\n      return\n    }\n    return buf\n  }\n  if (cb) {\n    randombytes(size, function (err, bytes) {\n      if (err) {\n        return cb(err)\n      }\n      bytes.copy(buf, offset)\n      cb(null, buf)\n    })\n    return\n  }\n  var bytes = randombytes(size)\n  bytes.copy(buf, offset)\n  return buf\n}\nfunction randomFillSync (buf, offset, size) {\n  if (typeof offset === 'undefined') {\n    offset = 0\n  }\n  if (!Buffer.isBuffer(buf) && !(buf instanceof global.Uint8Array)) {\n    throw new TypeError('\"buf\" argument must be a Buffer or Uint8Array')\n  }\n\n  assertOffset(offset, buf.length)\n\n  if (size === undefined) size = buf.length - offset\n\n  assertSize(size, offset, buf.length)\n\n  return actualFill(buf, offset, size)\n}\n","'use strict'\n\nexports.randomBytes = exports.rng = exports.pseudoRandomBytes = exports.prng = require('randombytes')\nexports.createHash = exports.Hash = require('create-hash')\nexports.createHmac = exports.Hmac = require('create-hmac')\n\nvar algos = require('browserify-sign/algos')\nvar algoKeys = Object.keys(algos)\nvar hashes = ['sha1', 'sha224', 'sha256', 'sha384', 'sha512', 'md5', 'rmd160'].concat(algoKeys)\nexports.getHashes = function () {\n  return hashes\n}\n\nvar p = require('pbkdf2')\nexports.pbkdf2 = p.pbkdf2\nexports.pbkdf2Sync = p.pbkdf2Sync\n\nvar aes = require('browserify-cipher')\n\nexports.Cipher = aes.Cipher\nexports.createCipher = aes.createCipher\nexports.Cipheriv = aes.Cipheriv\nexports.createCipheriv = aes.createCipheriv\nexports.Decipher = aes.Decipher\nexports.createDecipher = aes.createDecipher\nexports.Decipheriv = aes.Decipheriv\nexports.createDecipheriv = aes.createDecipheriv\nexports.getCiphers = aes.getCiphers\nexports.listCiphers = aes.listCiphers\n\nvar dh = require('diffie-hellman')\n\nexports.DiffieHellmanGroup = dh.DiffieHellmanGroup\nexports.createDiffieHellmanGroup = dh.createDiffieHellmanGroup\nexports.getDiffieHellman = dh.getDiffieHellman\nexports.createDiffieHellman = dh.createDiffieHellman\nexports.DiffieHellman = dh.DiffieHellman\n\nvar sign = require('browserify-sign')\n\nexports.createSign = sign.createSign\nexports.Sign = sign.Sign\nexports.createVerify = sign.createVerify\nexports.Verify = sign.Verify\n\nexports.createECDH = require('create-ecdh')\n\nvar publicEncrypt = require('public-encrypt')\n\nexports.publicEncrypt = publicEncrypt.publicEncrypt\nexports.privateEncrypt = publicEncrypt.privateEncrypt\nexports.publicDecrypt = publicEncrypt.publicDecrypt\nexports.privateDecrypt = publicEncrypt.privateDecrypt\n\n// the least I can do is make error messages for the rest of the node.js/crypto api.\n// ;[\n//   'createCredentials'\n// ].forEach(function (name) {\n//   exports[name] = function () {\n//     throw new Error([\n//       'sorry, ' + name + ' is not implemented yet',\n//       'we accept pull requests',\n//       'https://github.com/crypto-browserify/crypto-browserify'\n//     ].join('\\n'))\n//   }\n// })\n\nvar rf = require('randomfill')\n\nexports.randomFill = rf.randomFill\nexports.randomFillSync = rf.randomFillSync\n\nexports.createCredentials = function () {\n  throw new Error([\n    'sorry, createCredentials is not implemented yet',\n    'we accept pull requests',\n    'https://github.com/crypto-browserify/crypto-browserify'\n  ].join('\\n'))\n}\n\nexports.constants = {\n  'DH_CHECK_P_NOT_SAFE_PRIME': 2,\n  'DH_CHECK_P_NOT_PRIME': 1,\n  'DH_UNABLE_TO_CHECK_GENERATOR': 4,\n  'DH_NOT_SUITABLE_GENERATOR': 8,\n  'NPN_ENABLED': 1,\n  'ALPN_ENABLED': 1,\n  'RSA_PKCS1_PADDING': 1,\n  'RSA_SSLV23_PADDING': 2,\n  'RSA_NO_PADDING': 3,\n  'RSA_PKCS1_OAEP_PADDING': 4,\n  'RSA_X931_PADDING': 5,\n  'RSA_PKCS1_PSS_PADDING': 6,\n  'POINT_CONVERSION_COMPRESSED': 2,\n  'POINT_CONVERSION_UNCOMPRESSED': 4,\n  'POINT_CONVERSION_HYBRID': 6\n}\n","export default function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n}\n","export default function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n}\n","// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nexport default function(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n}\n","import cross from \"./cross.js\";\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  const n = points.length,\n      indexes = [0, 1];\n  let size = 2, i;\n\n  for (i = 2; i < n; ++i) {\n    while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nexport default function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n}\n","export default function(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n}\n","export default function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.hypot(xa, ya);\n  }\n\n  return perimeter;\n}\n","export {default as polygonArea} from \"./area.js\";\nexport {default as polygonCentroid} from \"./centroid.js\";\nexport {default as polygonHull} from \"./hull.js\";\nexport {default as polygonContains} from \"./contains.js\";\nexport {default as polygonLength} from \"./length.js\";\n","import { env, Runner } from '@paddlejs/paddlejs-core';\nimport '@paddlejs/paddlejs-backend-webgl';\nimport clipper from 'js-clipper';\nimport { plus, divide, enableBoundaryChecking } from 'number-precision';\nimport path from 'path';\nimport fs from 'fs';\nimport crypto$1 from 'crypto';\nimport * as d3Polygon from 'd3-polygon';\n\nfunction _regeneratorRuntime() {\n  _regeneratorRuntime = function () {\n    return exports;\n  };\n  var exports = {},\n    Op = Object.prototype,\n    hasOwn = Op.hasOwnProperty,\n    $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n    iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n    asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n    toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function (obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n      generator = Object.create(protoGenerator.prototype),\n      context = new Context(tryLocsList || []);\n    return generator._invoke = function (innerFn, self, context) {\n      var state = \"suspendedStart\";\n      return function (method, arg) {\n        if (\"executing\" === state) throw new Error(\"Generator is already running\");\n        if (\"completed\" === state) {\n          if (\"throw\" === method) throw arg;\n          return doneResult();\n        }\n        for (context.method = method, context.arg = arg;;) {\n          var delegate = context.delegate;\n          if (delegate) {\n            var delegateResult = maybeInvokeDelegate(delegate, context);\n            if (delegateResult) {\n              if (delegateResult === ContinueSentinel) continue;\n              return delegateResult;\n            }\n          }\n          if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n            if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n            context.dispatchException(context.arg);\n          } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n          state = \"executing\";\n          var record = tryCatch(innerFn, self, context);\n          if (\"normal\" === record.type) {\n            if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n            return {\n              value: record.arg,\n              done: context.done\n            };\n          }\n          \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n        }\n      };\n    }(innerFn, self, context), generator;\n  }\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n    NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n          value = result.value;\n        return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n      reject(record.arg);\n    }\n    var previousPromise;\n    this._invoke = function (method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n      return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    };\n  }\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (undefined === method) {\n      if (context.delegate = null, \"throw\" === context.method) {\n        if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel;\n        context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n      return ContinueSentinel;\n    }\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n          next = function next() {\n            for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n            return next.value = undefined, next.done = !0, next;\n          };\n        return next.next = next;\n      }\n    }\n    return {\n      next: doneResult\n    };\n  }\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (object) {\n    var keys = [];\n    for (var key in object) keys.push(key);\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function (skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n    },\n    stop: function () {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function (exception) {\n      if (this.done) throw exception;\n      var context = this;\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n          record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n            hasFinally = hasOwn.call(entry, \"finallyLoc\");\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function (type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function (record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function (finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    catch: function (tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function (iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar opencv_ocr=createCommonjsModule(function(module,exports){(function(root,factory){if(module.exports){// Node. Does not work with strict CommonJS, but\n// only CommonJS-like environments that support module.exports,\n// like Node.\nmodule.exports=factory();}else if(typeof window==='object'){// Browser globals\nroot.cv=factory();}else if(typeof importScripts==='function'){// Web worker\nroot.cv=factory();}else {// Other shells, e.g. d8\nroot.cv=factory();}})(commonjsGlobal,function(){var cv=function(){var _scriptDir=typeof document!=='undefined'&&document.currentScript?document.currentScript.src:undefined;if(typeof __filename!=='undefined')_scriptDir=_scriptDir||__filename;return function(cv){cv=cv||{};var Module=typeof cv!==\"undefined\"?cv:{};var readyPromiseResolve,readyPromiseReject;Module[\"ready\"]=new Promise(function(resolve,reject){readyPromiseResolve=resolve;readyPromiseReject=reject;});var moduleOverrides={};var key;for(key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key];}}var thisProgram=\"./this.program\";var ENVIRONMENT_IS_WEB=false;var ENVIRONMENT_IS_WORKER=false;var ENVIRONMENT_IS_NODE=false;var ENVIRONMENT_IS_SHELL=false;ENVIRONMENT_IS_WEB=typeof window===\"object\";ENVIRONMENT_IS_WORKER=typeof importScripts===\"function\";ENVIRONMENT_IS_NODE=typeof process===\"object\"&&typeof process.versions===\"object\"&&typeof process.versions.node===\"string\";ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER;var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory);}return scriptDirectory+path;}var read_,readAsync,readBinary;var nodeFS;var nodePath;if(ENVIRONMENT_IS_NODE){if(ENVIRONMENT_IS_WORKER){scriptDirectory=path.dirname(scriptDirectory)+\"/\";}else {scriptDirectory=__dirname+\"/\";}read_=function shell_read(filename,binary){var ret=tryParseAsDataURI(filename);if(ret){return binary?ret:ret.toString();}if(!nodeFS)nodeFS=fs;if(!nodePath)nodePath=path;filename=nodePath[\"normalize\"](filename);return nodeFS[\"readFileSync\"](filename,binary?null:\"utf8\");};readBinary=function readBinary(filename){var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret);}assert(ret.buffer);return ret;};if(process[\"argv\"].length>1){thisProgram=process[\"argv\"][1].replace(/\\\\/g,\"/\");}process[\"argv\"].slice(2);process[\"on\"](\"uncaughtException\",function(ex){if(!(ex instanceof ExitStatus)){throw ex;}});process[\"on\"](\"unhandledRejection\",abort);Module[\"inspect\"]=function(){return \"[Emscripten Module object]\";};}else if(ENVIRONMENT_IS_SHELL){if(typeof read!=\"undefined\"){read_=function shell_read(f){var data=tryParseAsDataURI(f);if(data){return intArrayToString(data);}return read(f);};}readBinary=function readBinary(f){var data;data=tryParseAsDataURI(f);if(data){return data;}if(typeof readbuffer===\"function\"){return new Uint8Array(readbuffer(f));}data=read(f,\"binary\");assert(typeof data===\"object\");return data;};if(typeof scriptArgs!=\"undefined\"){scriptArgs;}if(typeof print!==\"undefined\"){if(typeof console===\"undefined\")console={};console.log=print;console.warn=console.error=typeof printErr!==\"undefined\"?printErr:print;}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href;}else if(document.currentScript){scriptDirectory=document.currentScript.src;}if(_scriptDir){scriptDirectory=_scriptDir;}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.lastIndexOf(\"/\")+1);}else {scriptDirectory=\"\";}{read_=function shell_read(url){try{var xhr=new XMLHttpRequest();xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText;}catch(err){var data=tryParseAsDataURI(url);if(data){return intArrayToString(data);}throw err;}};if(ENVIRONMENT_IS_WORKER){readBinary=function readBinary(url){try{var xhr=new XMLHttpRequest();xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response);}catch(err){var data=tryParseAsDataURI(url);if(data){return data;}throw err;}};}readAsync=function readAsync(url,onload,onerror){var xhr=new XMLHttpRequest();xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=function xhr_onload(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return;}var data=tryParseAsDataURI(url);if(data){onload(data.buffer);return;}onerror();};xhr.onerror=onerror;xhr.send(null);};}}else;var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.warn.bind(console);for(key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key];}}moduleOverrides=null;if(Module[\"arguments\"])Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])Module[\"quit\"];var STACK_ALIGN=16;function dynamicAlloc(size){var ret=HEAP32[DYNAMICTOP_PTR>>2];var end=ret+size+15&-16;HEAP32[DYNAMICTOP_PTR>>2]=end;return ret;}function alignMemory(size,factor){if(!factor)factor=STACK_ALIGN;return Math.ceil(size/factor)*factor;}function warnOnce(text){if(!warnOnce.shown)warnOnce.shown={};if(!warnOnce.shown[text]){warnOnce.shown[text]=1;err(text);}}var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];if(Module[\"noExitRuntime\"])Module[\"noExitRuntime\"];if(typeof WebAssembly!==\"object\"){abort(\"no native wasm support detected\");}var wasmMemory;var wasmTable=new WebAssembly.Table({\"initial\":1631,\"maximum\":1631+0,\"element\":\"anyfunc\"});var ABORT=false;function assert(condition,text){if(!condition){abort(\"Assertion failed: \"+text);}}function getMemory(size){if(!runtimeInitialized)return dynamicAlloc(size);return _malloc(size);}var UTF8Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(heap,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heap[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heap.subarray&&UTF8Decoder){return UTF8Decoder.decode(heap.subarray(idx,endPtr));}else {var str=\"\";while(idx<endPtr){var u0=heap[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue;}var u1=heap[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue;}var u2=heap[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2;}else {u0=(u0&7)<<18|u1<<12|u2<<6|heap[idx++]&63;}if(u0<65536){str+=String.fromCharCode(u0);}else {var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023);}}}return str;}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\";}function stringToUTF8Array(str,heap,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023;}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u;}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63;}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63;}else {if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63;}}heap[outIdx]=0;return outIdx-startIdx;}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite);}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127)++len;else if(u<=2047)len+=2;else if(u<=65535)len+=3;else len+=4;}return len;}var UTF16Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf-16le\"):undefined;function UTF16ToString(ptr,maxBytesToRead){var endPtr=ptr;var idx=endPtr>>1;var maxIdx=idx+maxBytesToRead/2;while(!(idx>=maxIdx)&&HEAPU16[idx])++idx;endPtr=idx<<1;if(endPtr-ptr>32&&UTF16Decoder){return UTF16Decoder.decode(HEAPU8.subarray(ptr,endPtr));}else {var i=0;var str=\"\";while(1){var codeUnit=HEAP16[ptr+i*2>>1];if(codeUnit==0||i==maxBytesToRead/2)return str;++i;str+=String.fromCharCode(codeUnit);}}}function stringToUTF16(str,outPtr,maxBytesToWrite){if(maxBytesToWrite===undefined){maxBytesToWrite=2147483647;}if(maxBytesToWrite<2)return 0;maxBytesToWrite-=2;var startPtr=outPtr;var numCharsToWrite=maxBytesToWrite<str.length*2?maxBytesToWrite/2:str.length;for(var i=0;i<numCharsToWrite;++i){var codeUnit=str.charCodeAt(i);HEAP16[outPtr>>1]=codeUnit;outPtr+=2;}HEAP16[outPtr>>1]=0;return outPtr-startPtr;}function lengthBytesUTF16(str){return str.length*2;}function UTF32ToString(ptr,maxBytesToRead){var i=0;var str=\"\";while(!(i>=maxBytesToRead/4)){var utf32=HEAP32[ptr+i*4>>2];if(utf32==0)break;++i;if(utf32>=65536){var ch=utf32-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023);}else {str+=String.fromCharCode(utf32);}}return str;}function stringToUTF32(str,outPtr,maxBytesToWrite){if(maxBytesToWrite===undefined){maxBytesToWrite=2147483647;}if(maxBytesToWrite<4)return 0;var startPtr=outPtr;var endPtr=startPtr+maxBytesToWrite-4;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343){var trailSurrogate=str.charCodeAt(++i);codeUnit=65536+((codeUnit&1023)<<10)|trailSurrogate&1023;}HEAP32[outPtr>>2]=codeUnit;outPtr+=4;if(outPtr+4>endPtr)break;}HEAP32[outPtr>>2]=0;return outPtr-startPtr;}function lengthBytesUTF32(str){var len=0;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343)++i;len+=4;}return len;}function writeArrayToMemory(array,buffer){HEAP8.set(array,buffer);}function writeAsciiToMemory(str,buffer,dontAddNull){for(var i=0;i<str.length;++i){HEAP8[buffer++>>0]=str.charCodeAt(i);}if(!dontAddNull)HEAP8[buffer>>0]=0;}var WASM_PAGE_SIZE=65536;function alignUp(x,multiple){if(x%multiple>0){x+=multiple-x%multiple;}return x;}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferAndViews(buf){buffer=buf;Module[\"HEAP8\"]=HEAP8=new Int8Array(buf);Module[\"HEAP16\"]=HEAP16=new Int16Array(buf);Module[\"HEAP32\"]=HEAP32=new Int32Array(buf);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buf);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buf);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buf);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buf);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buf);}var DYNAMIC_BASE=5870016,DYNAMICTOP_PTR=626976;var INITIAL_INITIAL_MEMORY=Module[\"INITIAL_MEMORY\"]||134217728;if(Module[\"wasmMemory\"]){wasmMemory=Module[\"wasmMemory\"];}else {wasmMemory=new WebAssembly.Memory({\"initial\":INITIAL_INITIAL_MEMORY/WASM_PAGE_SIZE,\"maximum\":1073741824/WASM_PAGE_SIZE});}if(wasmMemory){buffer=wasmMemory.buffer;}INITIAL_INITIAL_MEMORY=buffer.byteLength;updateGlobalBufferAndViews(buffer);HEAP32[DYNAMICTOP_PTR>>2]=DYNAMIC_BASE;function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback==\"function\"){callback(Module);continue;}var func=callback.func;if(typeof func===\"number\"){if(callback.arg===undefined){Module[\"dynCall_v\"](func);}else {Module[\"dynCall_vi\"](func,callback.arg);}}else {func(callback.arg===undefined?null:callback.arg);}}}var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift());}}callRuntimeCallbacks(__ATPRERUN__);}function initRuntime(){runtimeInitialized=true;if(!Module[\"noFSInit\"]&&!FS.init.initialized)FS.init();callRuntimeCallbacks(__ATINIT__);}function preMain(){FS.ignorePermissions=false;callRuntimeCallbacks(__ATMAIN__);}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift());}}callRuntimeCallbacks(__ATPOSTRUN__);}function addOnPreRun(cb){__ATPRERUN__.unshift(cb);}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb);}var Math_abs=Math.abs;var Math_ceil=Math.ceil;var Math_floor=Math.floor;var Math_min=Math.min;var runDependencies=0;var dependenciesFulfilled=null;function getUniqueRunDependency(id){return id;}function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies);}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies);}if(runDependencies==0){if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback();}}}Module[\"preloadedImages\"]={};Module[\"preloadedAudios\"]={};function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what);}what+=\"\";err(what);ABORT=true;what=\"abort(\"+what+\"). Build with -s ASSERTIONS=1 for more info.\";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e;}function hasPrefix(str,prefix){return String.prototype.startsWith?str.startsWith(prefix):str.indexOf(prefix)===0;}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return hasPrefix(filename,dataURIPrefix);}var fileURIPrefix=\"file://\";function isFileURI(filename){return hasPrefix(filename,fileURIPrefix);}var wasmBinaryFile=\"data:application/octet-stream;base64,\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile);}function getBinary(){try{if(wasmBinary){return new Uint8Array(wasmBinary);}var binary=tryParseAsDataURI(wasmBinaryFile);if(binary){return binary;}if(readBinary){return readBinary(wasmBinaryFile);}else {throw \"both async and sync fetching of the wasm failed\";}}catch(err){abort(err);}}function getBinaryPromise(){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)&&typeof fetch===\"function\"&&!isFileURI(wasmBinaryFile)){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){if(!response[\"ok\"]){throw \"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\";}return response[\"arrayBuffer\"]();}).catch(function(){return getBinary();});}return new Promise(function(resolve,reject){resolve(getBinary());});}function createWasm(){var info={\"env\":asmLibraryArg,\"wasi_snapshot_preview1\":asmLibraryArg};function receiveInstance(instance,module){var exports=instance.exports;Module[\"asm\"]=exports;removeRunDependency();}addRunDependency();function receiveInstantiatedSource(output){receiveInstance(output[\"instance\"]);}function instantiateArrayBuffer(receiver){return getBinaryPromise().then(function(binary){return WebAssembly.instantiate(binary,info);}).then(receiver,function(reason){err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason);});}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming===\"function\"&&!isDataURI(wasmBinaryFile)&&!isFileURI(wasmBinaryFile)&&typeof fetch===\"function\"){fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiatedSource,function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");return instantiateArrayBuffer(receiveInstantiatedSource);});});}else {return instantiateArrayBuffer(receiveInstantiatedSource);}}if(Module[\"instantiateWasm\"]){try{var exports=Module[\"instantiateWasm\"](info,receiveInstance);return exports;}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);return false;}}instantiateAsync();return {};}var tempDouble;var tempI64;__ATINIT__.push({func:function(){___wasm_call_ctors();}});function _emscripten_set_main_loop_timing(mode,value){Browser.mainLoop.timingMode=mode;Browser.mainLoop.timingValue=value;if(!Browser.mainLoop.func){return 1;}if(mode==0){Browser.mainLoop.scheduler=function Browser_mainLoop_scheduler_setTimeout(){var timeUntilNextTick=Math.max(0,Browser.mainLoop.tickStartTime+value-_emscripten_get_now())|0;setTimeout(Browser.mainLoop.runner,timeUntilNextTick);};Browser.mainLoop.method=\"timeout\";}else if(mode==1){Browser.mainLoop.scheduler=function Browser_mainLoop_scheduler_rAF(){Browser.requestAnimationFrame(Browser.mainLoop.runner);};Browser.mainLoop.method=\"rAF\";}else if(mode==2){if(typeof setImmediate===\"undefined\"){var setImmediates=[];var emscriptenMainLoopMessageId=\"setimmediate\";var Browser_setImmediate_messageHandler=function(event){if(event.data===emscriptenMainLoopMessageId||event.data.target===emscriptenMainLoopMessageId){event.stopPropagation();setImmediates.shift()();}};addEventListener(\"message\",Browser_setImmediate_messageHandler,true);setImmediate=function Browser_emulated_setImmediate(func){setImmediates.push(func);if(ENVIRONMENT_IS_WORKER){if(Module[\"setImmediates\"]===undefined)Module[\"setImmediates\"]=[];Module[\"setImmediates\"].push(func);postMessage({target:emscriptenMainLoopMessageId});}else postMessage(emscriptenMainLoopMessageId,\"*\");};}Browser.mainLoop.scheduler=function Browser_mainLoop_scheduler_setImmediate(){setImmediate(Browser.mainLoop.runner);};Browser.mainLoop.method=\"immediate\";}return 0;}var _emscripten_get_now;if(ENVIRONMENT_IS_NODE){_emscripten_get_now=function(){var t=process[\"hrtime\"]();return t[0]*1e3+t[1]/1e6;};}else if(typeof dateNow!==\"undefined\"){_emscripten_get_now=dateNow;}else _emscripten_get_now=function(){return performance.now();};function _emscripten_set_main_loop(func,fps,simulateInfiniteLoop,arg,noSetTiming){assert(!Browser.mainLoop.func,\"emscripten_set_main_loop: there can only be one main loop function at once: call emscripten_cancel_main_loop to cancel the previous one before setting a new one with different parameters.\");Browser.mainLoop.func=func;Browser.mainLoop.arg=arg;var browserIterationFunc;if(typeof arg!==\"undefined\"){browserIterationFunc=function(){Module[\"dynCall_vi\"](func,arg);};}else {browserIterationFunc=function(){Module[\"dynCall_v\"](func);};}var thisMainLoopId=Browser.mainLoop.currentlyRunningMainloop;Browser.mainLoop.runner=function Browser_mainLoop_runner(){if(ABORT)return;if(Browser.mainLoop.queue.length>0){var start=Date.now();var blocker=Browser.mainLoop.queue.shift();blocker.func(blocker.arg);if(Browser.mainLoop.remainingBlockers){var remaining=Browser.mainLoop.remainingBlockers;var next=remaining%1==0?remaining-1:Math.floor(remaining);if(blocker.counted){Browser.mainLoop.remainingBlockers=next;}else {next=next+.5;Browser.mainLoop.remainingBlockers=(8*remaining+next)/9;}}console.log('main loop blocker \"'+blocker.name+'\" took '+(Date.now()-start)+\" ms\");Browser.mainLoop.updateStatus();if(thisMainLoopId<Browser.mainLoop.currentlyRunningMainloop)return;setTimeout(Browser.mainLoop.runner,0);return;}if(thisMainLoopId<Browser.mainLoop.currentlyRunningMainloop)return;Browser.mainLoop.currentFrameNumber=Browser.mainLoop.currentFrameNumber+1|0;if(Browser.mainLoop.timingMode==1&&Browser.mainLoop.timingValue>1&&Browser.mainLoop.currentFrameNumber%Browser.mainLoop.timingValue!=0){Browser.mainLoop.scheduler();return;}else if(Browser.mainLoop.timingMode==0){Browser.mainLoop.tickStartTime=_emscripten_get_now();}Browser.mainLoop.runIter(browserIterationFunc);if(thisMainLoopId<Browser.mainLoop.currentlyRunningMainloop)return;if(typeof SDL===\"object\"&&SDL.audio&&SDL.audio.queueNewAudioData)SDL.audio.queueNewAudioData();Browser.mainLoop.scheduler();};if(!noSetTiming){if(fps&&fps>0)_emscripten_set_main_loop_timing(0,1e3/fps);else _emscripten_set_main_loop_timing(1,1);Browser.mainLoop.scheduler();}if(simulateInfiniteLoop){throw \"unwind\";}}var Browser={mainLoop:{scheduler:null,method:\"\",currentlyRunningMainloop:0,func:null,arg:0,timingMode:0,timingValue:0,currentFrameNumber:0,queue:[],pause:function(){Browser.mainLoop.scheduler=null;Browser.mainLoop.currentlyRunningMainloop++;},resume:function(){Browser.mainLoop.currentlyRunningMainloop++;var timingMode=Browser.mainLoop.timingMode;var timingValue=Browser.mainLoop.timingValue;var func=Browser.mainLoop.func;Browser.mainLoop.func=null;_emscripten_set_main_loop(func,0,false,Browser.mainLoop.arg,true);_emscripten_set_main_loop_timing(timingMode,timingValue);Browser.mainLoop.scheduler();},updateStatus:function(){if(Module[\"setStatus\"]){var message=Module[\"statusMessage\"]||\"Please wait...\";var remaining=Browser.mainLoop.remainingBlockers;var expected=Browser.mainLoop.expectedBlockers;if(remaining){if(remaining<expected){Module[\"setStatus\"](message+\" (\"+(expected-remaining)+\"/\"+expected+\")\");}else {Module[\"setStatus\"](message);}}else {Module[\"setStatus\"](\"\");}}},runIter:function(func){if(ABORT)return;if(Module[\"preMainLoop\"]){var preRet=Module[\"preMainLoop\"]();if(preRet===false){return;}}try{func();}catch(e){if(e instanceof ExitStatus){return;}else {if(e&&typeof e===\"object\"&&e.stack)err(\"exception thrown: \"+[e,e.stack]);throw e;}}if(Module[\"postMainLoop\"])Module[\"postMainLoop\"]();}},isFullscreen:false,pointerLock:false,moduleContextCreatedCallbacks:[],workers:[],init:function(){if(!Module[\"preloadPlugins\"])Module[\"preloadPlugins\"]=[];if(Browser.initted)return;Browser.initted=true;try{new Blob();Browser.hasBlobConstructor=true;}catch(e){Browser.hasBlobConstructor=false;console.log(\"warning: no blob constructor, cannot create blobs with mimetypes\");}Browser.BlobBuilder=typeof MozBlobBuilder!=\"undefined\"?MozBlobBuilder:typeof WebKitBlobBuilder!=\"undefined\"?WebKitBlobBuilder:!Browser.hasBlobConstructor?console.log(\"warning: no BlobBuilder\"):null;Browser.URLObject=typeof window!=\"undefined\"?window.URL?window.URL:window.webkitURL:undefined;if(!Module.noImageDecoding&&typeof Browser.URLObject===\"undefined\"){console.log(\"warning: Browser does not support creating object URLs. Built-in browser image decoding will not be available.\");Module.noImageDecoding=true;}var imagePlugin={};imagePlugin[\"canHandle\"]=function imagePlugin_canHandle(name){return !Module.noImageDecoding&&/\\.(jpg|jpeg|png|bmp)$/i.test(name);};imagePlugin[\"handle\"]=function imagePlugin_handle(byteArray,name,onload,onerror){var b=null;if(Browser.hasBlobConstructor){try{b=new Blob([byteArray],{type:Browser.getMimetype(name)});if(b.size!==byteArray.length){b=new Blob([new Uint8Array(byteArray).buffer],{type:Browser.getMimetype(name)});}}catch(e){warnOnce(\"Blob constructor present but fails: \"+e+\"; falling back to blob builder\");}}if(!b){var bb=new Browser.BlobBuilder();bb.append(new Uint8Array(byteArray).buffer);b=bb.getBlob();}var url=Browser.URLObject.createObjectURL(b);var img=new Image();img.onload=function img_onload(){assert(img.complete,\"Image \"+name+\" could not be decoded\");var canvas=document.createElement(\"canvas\");canvas.width=img.width;canvas.height=img.height;var ctx=canvas.getContext(\"2d\");ctx.drawImage(img,0,0);Module[\"preloadedImages\"][name]=canvas;Browser.URLObject.revokeObjectURL(url);if(onload)onload(byteArray);};img.onerror=function img_onerror(event){console.log(\"Image \"+url+\" could not be decoded\");if(onerror)onerror();};img.src=url;};Module[\"preloadPlugins\"].push(imagePlugin);var audioPlugin={};audioPlugin[\"canHandle\"]=function audioPlugin_canHandle(name){return !Module.noAudioDecoding&&name.substr(-4)in{\".ogg\":1,\".wav\":1,\".mp3\":1};};audioPlugin[\"handle\"]=function audioPlugin_handle(byteArray,name,onload,onerror){var done=false;function finish(audio){if(done)return;done=true;Module[\"preloadedAudios\"][name]=audio;if(onload)onload(byteArray);}function fail(){if(done)return;done=true;Module[\"preloadedAudios\"][name]=new Audio();if(onerror)onerror();}if(Browser.hasBlobConstructor){try{var b=new Blob([byteArray],{type:Browser.getMimetype(name)});}catch(e){return fail();}var url=Browser.URLObject.createObjectURL(b);var audio=new Audio();audio.addEventListener(\"canplaythrough\",function(){finish(audio);},false);audio.onerror=function audio_onerror(event){if(done)return;console.log(\"warning: browser could not fully decode audio \"+name+\", trying slower base64 approach\");function encode64(data){var BASE=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";var PAD=\"=\";var ret=\"\";var leftchar=0;var leftbits=0;for(var i=0;i<data.length;i++){leftchar=leftchar<<8|data[i];leftbits+=8;while(leftbits>=6){var curr=leftchar>>leftbits-6&63;leftbits-=6;ret+=BASE[curr];}}if(leftbits==2){ret+=BASE[(leftchar&3)<<4];ret+=PAD+PAD;}else if(leftbits==4){ret+=BASE[(leftchar&15)<<2];ret+=PAD;}return ret;}audio.src=\"data:audio/x-\"+name.substr(-3)+\";base64,\"+encode64(byteArray);finish(audio);};audio.src=url;Browser.safeSetTimeout(function(){finish(audio);},1e4);}else {return fail();}};Module[\"preloadPlugins\"].push(audioPlugin);function pointerLockChange(){Browser.pointerLock=document[\"pointerLockElement\"]===Module[\"canvas\"]||document[\"mozPointerLockElement\"]===Module[\"canvas\"]||document[\"webkitPointerLockElement\"]===Module[\"canvas\"]||document[\"msPointerLockElement\"]===Module[\"canvas\"];}var canvas=Module[\"canvas\"];if(canvas){canvas.requestPointerLock=canvas[\"requestPointerLock\"]||canvas[\"mozRequestPointerLock\"]||canvas[\"webkitRequestPointerLock\"]||canvas[\"msRequestPointerLock\"]||function(){};canvas.exitPointerLock=document[\"exitPointerLock\"]||document[\"mozExitPointerLock\"]||document[\"webkitExitPointerLock\"]||document[\"msExitPointerLock\"]||function(){};canvas.exitPointerLock=canvas.exitPointerLock.bind(document);document.addEventListener(\"pointerlockchange\",pointerLockChange,false);document.addEventListener(\"mozpointerlockchange\",pointerLockChange,false);document.addEventListener(\"webkitpointerlockchange\",pointerLockChange,false);document.addEventListener(\"mspointerlockchange\",pointerLockChange,false);if(Module[\"elementPointerLock\"]){canvas.addEventListener(\"click\",function(ev){if(!Browser.pointerLock&&Module[\"canvas\"].requestPointerLock){Module[\"canvas\"].requestPointerLock();ev.preventDefault();}},false);}}},createContext:function(canvas,useWebGL,setInModule,webGLContextAttributes){if(useWebGL&&Module.ctx&&canvas==Module.canvas)return Module.ctx;var ctx;var contextHandle;if(useWebGL){var contextAttributes={antialias:false,alpha:false,majorVersion:1};if(webGLContextAttributes){for(var attribute in webGLContextAttributes){contextAttributes[attribute]=webGLContextAttributes[attribute];}}if(typeof GL!==\"undefined\"){contextHandle=GL.createContext(canvas,contextAttributes);if(contextHandle){ctx=GL.getContext(contextHandle).GLctx;}}}else {ctx=canvas.getContext(\"2d\");}if(!ctx)return null;if(setInModule){if(!useWebGL)assert(typeof GLctx===\"undefined\",\"cannot set in module if GLctx is used, but we are a non-GL context that would replace it\");Module.ctx=ctx;if(useWebGL)GL.makeContextCurrent(contextHandle);Module.useWebGL=useWebGL;Browser.moduleContextCreatedCallbacks.forEach(function(callback){callback();});Browser.init();}return ctx;},destroyContext:function(canvas,useWebGL,setInModule){},fullscreenHandlersInstalled:false,lockPointer:undefined,resizeCanvas:undefined,requestFullscreen:function(lockPointer,resizeCanvas){Browser.lockPointer=lockPointer;Browser.resizeCanvas=resizeCanvas;if(typeof Browser.lockPointer===\"undefined\")Browser.lockPointer=true;if(typeof Browser.resizeCanvas===\"undefined\")Browser.resizeCanvas=false;var canvas=Module[\"canvas\"];function fullscreenChange(){Browser.isFullscreen=false;var canvasContainer=canvas.parentNode;if((document[\"fullscreenElement\"]||document[\"mozFullScreenElement\"]||document[\"msFullscreenElement\"]||document[\"webkitFullscreenElement\"]||document[\"webkitCurrentFullScreenElement\"])===canvasContainer){canvas.exitFullscreen=Browser.exitFullscreen;if(Browser.lockPointer)canvas.requestPointerLock();Browser.isFullscreen=true;if(Browser.resizeCanvas){Browser.setFullscreenCanvasSize();}else {Browser.updateCanvasDimensions(canvas);}}else {canvasContainer.parentNode.insertBefore(canvas,canvasContainer);canvasContainer.parentNode.removeChild(canvasContainer);if(Browser.resizeCanvas){Browser.setWindowedCanvasSize();}else {Browser.updateCanvasDimensions(canvas);}}if(Module[\"onFullScreen\"])Module[\"onFullScreen\"](Browser.isFullscreen);if(Module[\"onFullscreen\"])Module[\"onFullscreen\"](Browser.isFullscreen);}if(!Browser.fullscreenHandlersInstalled){Browser.fullscreenHandlersInstalled=true;document.addEventListener(\"fullscreenchange\",fullscreenChange,false);document.addEventListener(\"mozfullscreenchange\",fullscreenChange,false);document.addEventListener(\"webkitfullscreenchange\",fullscreenChange,false);document.addEventListener(\"MSFullscreenChange\",fullscreenChange,false);}var canvasContainer=document.createElement(\"div\");canvas.parentNode.insertBefore(canvasContainer,canvas);canvasContainer.appendChild(canvas);canvasContainer.requestFullscreen=canvasContainer[\"requestFullscreen\"]||canvasContainer[\"mozRequestFullScreen\"]||canvasContainer[\"msRequestFullscreen\"]||(canvasContainer[\"webkitRequestFullscreen\"]?function(){canvasContainer[\"webkitRequestFullscreen\"](Element[\"ALLOW_KEYBOARD_INPUT\"]);}:null)||(canvasContainer[\"webkitRequestFullScreen\"]?function(){canvasContainer[\"webkitRequestFullScreen\"](Element[\"ALLOW_KEYBOARD_INPUT\"]);}:null);canvasContainer.requestFullscreen();},exitFullscreen:function(){if(!Browser.isFullscreen){return false;}var CFS=document[\"exitFullscreen\"]||document[\"cancelFullScreen\"]||document[\"mozCancelFullScreen\"]||document[\"msExitFullscreen\"]||document[\"webkitCancelFullScreen\"]||function(){};CFS.apply(document,[]);return true;},nextRAF:0,fakeRequestAnimationFrame:function(func){var now=Date.now();if(Browser.nextRAF===0){Browser.nextRAF=now+1e3/60;}else {while(now+2>=Browser.nextRAF){Browser.nextRAF+=1e3/60;}}var delay=Math.max(Browser.nextRAF-now,0);setTimeout(func,delay);},requestAnimationFrame:function(func){if(typeof requestAnimationFrame===\"function\"){requestAnimationFrame(func);return;}var RAF=Browser.fakeRequestAnimationFrame;RAF(func);},safeCallback:function(func){return function(){if(!ABORT)return func.apply(null,arguments);};},allowAsyncCallbacks:true,queuedAsyncCallbacks:[],pauseAsyncCallbacks:function(){Browser.allowAsyncCallbacks=false;},resumeAsyncCallbacks:function(){Browser.allowAsyncCallbacks=true;if(Browser.queuedAsyncCallbacks.length>0){var callbacks=Browser.queuedAsyncCallbacks;Browser.queuedAsyncCallbacks=[];callbacks.forEach(function(func){func();});}},safeRequestAnimationFrame:function(func){return Browser.requestAnimationFrame(function(){if(ABORT)return;if(Browser.allowAsyncCallbacks){func();}else {Browser.queuedAsyncCallbacks.push(func);}});},safeSetTimeout:function(func,timeout){return setTimeout(function(){if(ABORT)return;if(Browser.allowAsyncCallbacks){func();}else {Browser.queuedAsyncCallbacks.push(func);}},timeout);},safeSetInterval:function(func,timeout){return setInterval(function(){if(ABORT)return;if(Browser.allowAsyncCallbacks){func();}},timeout);},getMimetype:function(name){return {\"jpg\":\"image/jpeg\",\"jpeg\":\"image/jpeg\",\"png\":\"image/png\",\"bmp\":\"image/bmp\",\"ogg\":\"audio/ogg\",\"wav\":\"audio/wav\",\"mp3\":\"audio/mpeg\"}[name.substr(name.lastIndexOf(\".\")+1)];},getUserMedia:function(func){if(!window.getUserMedia){window.getUserMedia=navigator[\"getUserMedia\"]||navigator[\"mozGetUserMedia\"];}window.getUserMedia(func);},getMovementX:function(event){return event[\"movementX\"]||event[\"mozMovementX\"]||event[\"webkitMovementX\"]||0;},getMovementY:function(event){return event[\"movementY\"]||event[\"mozMovementY\"]||event[\"webkitMovementY\"]||0;},getMouseWheelDelta:function(event){var delta=0;switch(event.type){case\"DOMMouseScroll\":delta=event.detail/3;break;case\"mousewheel\":delta=event.wheelDelta/120;break;case\"wheel\":delta=event.deltaY;switch(event.deltaMode){case 0:delta/=100;break;case 1:delta/=3;break;case 2:delta*=80;break;default:throw \"unrecognized mouse wheel delta mode: \"+event.deltaMode;}break;default:throw \"unrecognized mouse wheel event: \"+event.type;}return delta;},mouseX:0,mouseY:0,mouseMovementX:0,mouseMovementY:0,touches:{},lastTouches:{},calculateMouseEvent:function(event){if(Browser.pointerLock){if(event.type!=\"mousemove\"&&\"mozMovementX\"in event){Browser.mouseMovementX=Browser.mouseMovementY=0;}else {Browser.mouseMovementX=Browser.getMovementX(event);Browser.mouseMovementY=Browser.getMovementY(event);}if(typeof SDL!=\"undefined\"){Browser.mouseX=SDL.mouseX+Browser.mouseMovementX;Browser.mouseY=SDL.mouseY+Browser.mouseMovementY;}else {Browser.mouseX+=Browser.mouseMovementX;Browser.mouseY+=Browser.mouseMovementY;}}else {var rect=Module[\"canvas\"].getBoundingClientRect();var cw=Module[\"canvas\"].width;var ch=Module[\"canvas\"].height;var scrollX=typeof window.scrollX!==\"undefined\"?window.scrollX:window.pageXOffset;var scrollY=typeof window.scrollY!==\"undefined\"?window.scrollY:window.pageYOffset;if(event.type===\"touchstart\"||event.type===\"touchend\"||event.type===\"touchmove\"){var touch=event.touch;if(touch===undefined){return;}var adjustedX=touch.pageX-(scrollX+rect.left);var adjustedY=touch.pageY-(scrollY+rect.top);adjustedX=adjustedX*(cw/rect.width);adjustedY=adjustedY*(ch/rect.height);var coords={x:adjustedX,y:adjustedY};if(event.type===\"touchstart\"){Browser.lastTouches[touch.identifier]=coords;Browser.touches[touch.identifier]=coords;}else if(event.type===\"touchend\"||event.type===\"touchmove\"){var last=Browser.touches[touch.identifier];if(!last)last=coords;Browser.lastTouches[touch.identifier]=last;Browser.touches[touch.identifier]=coords;}return;}var x=event.pageX-(scrollX+rect.left);var y=event.pageY-(scrollY+rect.top);x=x*(cw/rect.width);y=y*(ch/rect.height);Browser.mouseMovementX=x-Browser.mouseX;Browser.mouseMovementY=y-Browser.mouseY;Browser.mouseX=x;Browser.mouseY=y;}},asyncLoad:function(url,onload,onerror,noRunDep){var dep=!noRunDep?getUniqueRunDependency(\"al \"+url):\"\";readAsync(url,function(arrayBuffer){assert(arrayBuffer,'Loading data file \"'+url+'\" failed (no arrayBuffer).');onload(new Uint8Array(arrayBuffer));if(dep)removeRunDependency();},function(event){if(onerror){onerror();}else {throw 'Loading data file \"'+url+'\" failed.';}});if(dep)addRunDependency();},resizeListeners:[],updateResizeListeners:function(){var canvas=Module[\"canvas\"];Browser.resizeListeners.forEach(function(listener){listener(canvas.width,canvas.height);});},setCanvasSize:function(width,height,noUpdates){var canvas=Module[\"canvas\"];Browser.updateCanvasDimensions(canvas,width,height);if(!noUpdates)Browser.updateResizeListeners();},windowedWidth:0,windowedHeight:0,setFullscreenCanvasSize:function(){if(typeof SDL!=\"undefined\"){var flags=HEAPU32[SDL.screen>>2];flags=flags|8388608;HEAP32[SDL.screen>>2]=flags;}Browser.updateCanvasDimensions(Module[\"canvas\"]);Browser.updateResizeListeners();},setWindowedCanvasSize:function(){if(typeof SDL!=\"undefined\"){var flags=HEAPU32[SDL.screen>>2];flags=flags&~8388608;HEAP32[SDL.screen>>2]=flags;}Browser.updateCanvasDimensions(Module[\"canvas\"]);Browser.updateResizeListeners();},updateCanvasDimensions:function(canvas,wNative,hNative){if(wNative&&hNative){canvas.widthNative=wNative;canvas.heightNative=hNative;}else {wNative=canvas.widthNative;hNative=canvas.heightNative;}var w=wNative;var h=hNative;if(Module[\"forcedAspectRatio\"]&&Module[\"forcedAspectRatio\"]>0){if(w/h<Module[\"forcedAspectRatio\"]){w=Math.round(h*Module[\"forcedAspectRatio\"]);}else {h=Math.round(w/Module[\"forcedAspectRatio\"]);}}if((document[\"fullscreenElement\"]||document[\"mozFullScreenElement\"]||document[\"msFullscreenElement\"]||document[\"webkitFullscreenElement\"]||document[\"webkitCurrentFullScreenElement\"])===canvas.parentNode&&typeof screen!=\"undefined\"){var factor=Math.min(screen.width/w,screen.height/h);w=Math.round(w*factor);h=Math.round(h*factor);}if(Browser.resizeCanvas){if(canvas.width!=w)canvas.width=w;if(canvas.height!=h)canvas.height=h;if(typeof canvas.style!=\"undefined\"){canvas.style.removeProperty(\"width\");canvas.style.removeProperty(\"height\");}}else {if(canvas.width!=wNative)canvas.width=wNative;if(canvas.height!=hNative)canvas.height=hNative;if(typeof canvas.style!=\"undefined\"){if(w!=wNative||h!=hNative){canvas.style.setProperty(\"width\",w+\"px\",\"important\");canvas.style.setProperty(\"height\",h+\"px\",\"important\");}else {canvas.style.removeProperty(\"width\");canvas.style.removeProperty(\"height\");}}}},wgetRequests:{},nextWgetRequestHandle:0,getNextWgetRequestHandle:function(){var handle=Browser.nextWgetRequestHandle;Browser.nextWgetRequestHandle++;return handle;}};function demangle(func){demangle.recursionGuard=(demangle.recursionGuard|0)+1;if(demangle.recursionGuard>1)return func;var __cxa_demangle_func=Module[\"___cxa_demangle\"]||Module[\"__cxa_demangle\"];assert(__cxa_demangle_func);var stackTop=stackSave();try{var s=func;if(s.startsWith(\"__Z\"))s=s.substr(1);var len=lengthBytesUTF8(s)+1;var buf=stackAlloc(len);stringToUTF8(s,buf,len);var status=stackAlloc(4);var ret=__cxa_demangle_func(buf,0,0,status);if(HEAP32[status>>2]===0&&ret){return UTF8ToString(ret);}}catch(e){}finally{_free(ret);stackRestore(stackTop);if(demangle.recursionGuard<2)--demangle.recursionGuard;}return func;}function demangleAll(text){var regex=/\\b_Z[\\w\\d_]+/g;return text.replace(regex,function(x){var y=demangle(x);return x===y?x:y+\" [\"+x+\"]\";});}function jsStackTrace(){var err=new Error();if(!err.stack){try{throw new Error();}catch(e){err=e;}if(!err.stack){return \"(no stack trace available)\";}}return err.stack.toString();}function stackTrace(){var js=jsStackTrace();if(Module[\"extraStackTrace\"])js+=\"\\n\"+Module[\"extraStackTrace\"]();return demangleAll(js);}function ___cxa_allocate_exception(size){return _malloc(size);}function _atexit(func,arg){}function ___cxa_atexit(a0,a1){return _atexit();}function __ZSt18uncaught_exceptionv(){return __ZSt18uncaught_exceptionv.uncaught_exceptions>0;}function ___cxa_throw(ptr,type,destructor){if(!(\"uncaught_exception\"in __ZSt18uncaught_exceptionv)){__ZSt18uncaught_exceptionv.uncaught_exceptions=1;}else {__ZSt18uncaught_exceptionv.uncaught_exceptions++;}throw ptr;}function setErrNo(value){HEAP32[___errno_location()>>2]=value;return value;}function ___map_file(pathname,size){setErrNo(63);return -1;}var PATH={splitPath:function(filename){var splitPathRe=/^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;return splitPathRe.exec(filename).slice(1);},normalizeArray:function(parts,allowAboveRoot){var up=0;for(var i=parts.length-1;i>=0;i--){var last=parts[i];if(last===\".\"){parts.splice(i,1);}else if(last===\"..\"){parts.splice(i,1);up++;}else if(up){parts.splice(i,1);up--;}}if(allowAboveRoot){for(;up;up--){parts.unshift(\"..\");}}return parts;},normalize:function(path){var isAbsolute=path.charAt(0)===\"/\",trailingSlash=path.substr(-1)===\"/\";path=PATH.normalizeArray(path.split(\"/\").filter(function(p){return !!p;}),!isAbsolute).join(\"/\");if(!path&&!isAbsolute){path=\".\";}if(path&&trailingSlash){path+=\"/\";}return (isAbsolute?\"/\":\"\")+path;},dirname:function(path){var result=PATH.splitPath(path),root=result[0],dir=result[1];if(!root&&!dir){return \".\";}if(dir){dir=dir.substr(0,dir.length-1);}return root+dir;},basename:function(path){if(path===\"/\")return \"/\";var lastSlash=path.lastIndexOf(\"/\");if(lastSlash===-1)return path;return path.substr(lastSlash+1);},extname:function(path){return PATH.splitPath(path)[3];},join:function(){var paths=Array.prototype.slice.call(arguments,0);return PATH.normalize(paths.join(\"/\"));},join2:function(l,r){return PATH.normalize(l+\"/\"+r);}};var PATH_FS={resolve:function(){var resolvedPath=\"\",resolvedAbsolute=false;for(var i=arguments.length-1;i>=-1&&!resolvedAbsolute;i--){var path=i>=0?arguments[i]:FS.cwd();if(typeof path!==\"string\"){throw new TypeError(\"Arguments to path.resolve must be strings\");}else if(!path){return \"\";}resolvedPath=path+\"/\"+resolvedPath;resolvedAbsolute=path.charAt(0)===\"/\";}resolvedPath=PATH.normalizeArray(resolvedPath.split(\"/\").filter(function(p){return !!p;}),!resolvedAbsolute).join(\"/\");return (resolvedAbsolute?\"/\":\"\")+resolvedPath||\".\";},relative:function(from,to){from=PATH_FS.resolve(from).substr(1);to=PATH_FS.resolve(to).substr(1);function trim(arr){var start=0;for(;start<arr.length;start++){if(arr[start]!==\"\")break;}var end=arr.length-1;for(;end>=0;end--){if(arr[end]!==\"\")break;}if(start>end)return [];return arr.slice(start,end-start+1);}var fromParts=trim(from.split(\"/\"));var toParts=trim(to.split(\"/\"));var length=Math.min(fromParts.length,toParts.length);var samePartsLength=length;for(var i=0;i<length;i++){if(fromParts[i]!==toParts[i]){samePartsLength=i;break;}}var outputParts=[];for(var i=samePartsLength;i<fromParts.length;i++){outputParts.push(\"..\");}outputParts=outputParts.concat(toParts.slice(samePartsLength));return outputParts.join(\"/\");}};var TTY={ttys:[],init:function(){},shutdown:function(){},register:function(dev,ops){TTY.ttys[dev]={input:[],output:[],ops:ops};FS.registerDevice(dev,TTY.stream_ops);},stream_ops:{open:function(stream){var tty=TTY.ttys[stream.node.rdev];if(!tty){throw new FS.ErrnoError(43);}stream.tty=tty;stream.seekable=false;},close:function(stream){stream.tty.ops.flush(stream.tty);},flush:function(stream){stream.tty.ops.flush(stream.tty);},read:function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.get_char){throw new FS.ErrnoError(60);}var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=stream.tty.ops.get_char(stream.tty);}catch(e){throw new FS.ErrnoError(29);}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(6);}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result;}if(bytesRead){stream.node.timestamp=Date.now();}return bytesRead;},write:function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.put_char){throw new FS.ErrnoError(60);}try{for(var i=0;i<length;i++){stream.tty.ops.put_char(stream.tty,buffer[offset+i]);}}catch(e){throw new FS.ErrnoError(29);}if(length){stream.node.timestamp=Date.now();}return i;}},default_tty_ops:{get_char:function(tty){if(!tty.input.length){var result=null;if(ENVIRONMENT_IS_NODE){var BUFSIZE=256;var buf=Buffer.alloc?Buffer.alloc(BUFSIZE):new Buffer(BUFSIZE);var bytesRead=0;try{bytesRead=nodeFS.readSync(process.stdin.fd,buf,0,BUFSIZE,null);}catch(e){if(e.toString().indexOf(\"EOF\")!=-1)bytesRead=0;else throw e;}if(bytesRead>0){result=buf.slice(0,bytesRead).toString(\"utf-8\");}else {result=null;}}else if(typeof window!=\"undefined\"&&typeof window.prompt==\"function\"){result=window.prompt(\"Input: \");if(result!==null){result+=\"\\n\";}}else if(typeof readline==\"function\"){result=readline();if(result!==null){result+=\"\\n\";}}if(!result){return null;}tty.input=intArrayFromString(result,true);}return tty.input.shift();},put_char:function(tty,val){if(val===null||val===10){out(UTF8ArrayToString(tty.output,0));tty.output=[];}else {if(val!=0)tty.output.push(val);}},flush:function(tty){if(tty.output&&tty.output.length>0){out(UTF8ArrayToString(tty.output,0));tty.output=[];}}},default_tty1_ops:{put_char:function(tty,val){if(val===null||val===10){err(UTF8ArrayToString(tty.output,0));tty.output=[];}else {if(val!=0)tty.output.push(val);}},flush:function(tty){if(tty.output&&tty.output.length>0){err(UTF8ArrayToString(tty.output,0));tty.output=[];}}}};var MEMFS={ops_table:null,mount:function(mount){return MEMFS.createNode(null,\"/\",16384|511,0);},createNode:function(parent,name,mode,dev){if(FS.isBlkdev(mode)||FS.isFIFO(mode)){throw new FS.ErrnoError(63);}if(!MEMFS.ops_table){MEMFS.ops_table={dir:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,lookup:MEMFS.node_ops.lookup,mknod:MEMFS.node_ops.mknod,rename:MEMFS.node_ops.rename,unlink:MEMFS.node_ops.unlink,rmdir:MEMFS.node_ops.rmdir,readdir:MEMFS.node_ops.readdir,symlink:MEMFS.node_ops.symlink},stream:{llseek:MEMFS.stream_ops.llseek}},file:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:{llseek:MEMFS.stream_ops.llseek,read:MEMFS.stream_ops.read,write:MEMFS.stream_ops.write,allocate:MEMFS.stream_ops.allocate,mmap:MEMFS.stream_ops.mmap,msync:MEMFS.stream_ops.msync}},link:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,readlink:MEMFS.node_ops.readlink},stream:{}},chrdev:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:FS.chrdev_stream_ops}};}var node=FS.createNode(parent,name,mode,dev);if(FS.isDir(node.mode)){node.node_ops=MEMFS.ops_table.dir.node;node.stream_ops=MEMFS.ops_table.dir.stream;node.contents={};}else if(FS.isFile(node.mode)){node.node_ops=MEMFS.ops_table.file.node;node.stream_ops=MEMFS.ops_table.file.stream;node.usedBytes=0;node.contents=null;}else if(FS.isLink(node.mode)){node.node_ops=MEMFS.ops_table.link.node;node.stream_ops=MEMFS.ops_table.link.stream;}else if(FS.isChrdev(node.mode)){node.node_ops=MEMFS.ops_table.chrdev.node;node.stream_ops=MEMFS.ops_table.chrdev.stream;}node.timestamp=Date.now();if(parent){parent.contents[name]=node;}return node;},getFileDataAsRegularArray:function(node){if(node.contents&&node.contents.subarray){var arr=[];for(var i=0;i<node.usedBytes;++i)arr.push(node.contents[i]);return arr;}return node.contents;},getFileDataAsTypedArray:function(node){if(!node.contents)return new Uint8Array(0);if(node.contents.subarray)return node.contents.subarray(0,node.usedBytes);return new Uint8Array(node.contents);},expandFileStorage:function(node,newCapacity){var prevCapacity=node.contents?node.contents.length:0;if(prevCapacity>=newCapacity)return;var CAPACITY_DOUBLING_MAX=1024*1024;newCapacity=Math.max(newCapacity,prevCapacity*(prevCapacity<CAPACITY_DOUBLING_MAX?2:1.125)>>>0);if(prevCapacity!=0)newCapacity=Math.max(newCapacity,256);var oldContents=node.contents;node.contents=new Uint8Array(newCapacity);if(node.usedBytes>0)node.contents.set(oldContents.subarray(0,node.usedBytes),0);return;},resizeFileStorage:function(node,newSize){if(node.usedBytes==newSize)return;if(newSize==0){node.contents=null;node.usedBytes=0;return;}if(!node.contents||node.contents.subarray){var oldContents=node.contents;node.contents=new Uint8Array(newSize);if(oldContents){node.contents.set(oldContents.subarray(0,Math.min(newSize,node.usedBytes)));}node.usedBytes=newSize;return;}if(!node.contents)node.contents=[];if(node.contents.length>newSize)node.contents.length=newSize;else while(node.contents.length<newSize)node.contents.push(0);node.usedBytes=newSize;},node_ops:{getattr:function(node){var attr={};attr.dev=FS.isChrdev(node.mode)?node.id:1;attr.ino=node.id;attr.mode=node.mode;attr.nlink=1;attr.uid=0;attr.gid=0;attr.rdev=node.rdev;if(FS.isDir(node.mode)){attr.size=4096;}else if(FS.isFile(node.mode)){attr.size=node.usedBytes;}else if(FS.isLink(node.mode)){attr.size=node.link.length;}else {attr.size=0;}attr.atime=new Date(node.timestamp);attr.mtime=new Date(node.timestamp);attr.ctime=new Date(node.timestamp);attr.blksize=4096;attr.blocks=Math.ceil(attr.size/attr.blksize);return attr;},setattr:function(node,attr){if(attr.mode!==undefined){node.mode=attr.mode;}if(attr.timestamp!==undefined){node.timestamp=attr.timestamp;}if(attr.size!==undefined){MEMFS.resizeFileStorage(node,attr.size);}},lookup:function(parent,name){throw FS.genericErrors[44];},mknod:function(parent,name,mode,dev){return MEMFS.createNode(parent,name,mode,dev);},rename:function(old_node,new_dir,new_name){if(FS.isDir(old_node.mode)){var new_node;try{new_node=FS.lookupNode(new_dir,new_name);}catch(e){}if(new_node){for(var i in new_node.contents){throw new FS.ErrnoError(55);}}}delete old_node.parent.contents[old_node.name];old_node.name=new_name;new_dir.contents[new_name]=old_node;old_node.parent=new_dir;},unlink:function(parent,name){delete parent.contents[name];},rmdir:function(parent,name){var node=FS.lookupNode(parent,name);for(var i in node.contents){throw new FS.ErrnoError(55);}delete parent.contents[name];},readdir:function(node){var entries=[\".\",\"..\"];for(var key in node.contents){if(!node.contents.hasOwnProperty(key)){continue;}entries.push(key);}return entries;},symlink:function(parent,newname,oldpath){var node=MEMFS.createNode(parent,newname,511|40960,0);node.link=oldpath;return node;},readlink:function(node){if(!FS.isLink(node.mode)){throw new FS.ErrnoError(28);}return node.link;}},stream_ops:{read:function(stream,buffer,offset,length,position){var contents=stream.node.contents;if(position>=stream.node.usedBytes)return 0;var size=Math.min(stream.node.usedBytes-position,length);if(size>8&&contents.subarray){buffer.set(contents.subarray(position,position+size),offset);}else {for(var i=0;i<size;i++)buffer[offset+i]=contents[position+i];}return size;},write:function(stream,buffer,offset,length,position,canOwn){if(buffer.buffer===HEAP8.buffer){canOwn=false;}if(!length)return 0;var node=stream.node;node.timestamp=Date.now();if(buffer.subarray&&(!node.contents||node.contents.subarray)){if(canOwn){node.contents=buffer.subarray(offset,offset+length);node.usedBytes=length;return length;}else if(node.usedBytes===0&&position===0){node.contents=buffer.slice(offset,offset+length);node.usedBytes=length;return length;}else if(position+length<=node.usedBytes){node.contents.set(buffer.subarray(offset,offset+length),position);return length;}}MEMFS.expandFileStorage(node,position+length);if(node.contents.subarray&&buffer.subarray){node.contents.set(buffer.subarray(offset,offset+length),position);}else {for(var i=0;i<length;i++){node.contents[position+i]=buffer[offset+i];}}node.usedBytes=Math.max(node.usedBytes,position+length);return length;},llseek:function(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position;}else if(whence===2){if(FS.isFile(stream.node.mode)){position+=stream.node.usedBytes;}}if(position<0){throw new FS.ErrnoError(28);}return position;},allocate:function(stream,offset,length){MEMFS.expandFileStorage(stream.node,offset+length);stream.node.usedBytes=Math.max(stream.node.usedBytes,offset+length);},mmap:function(stream,address,length,position,prot,flags){assert(address===0);if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(43);}var ptr;var allocated;var contents=stream.node.contents;if(!(flags&2)&&contents.buffer===buffer){allocated=false;ptr=contents.byteOffset;}else {if(position>0||position+length<contents.length){if(contents.subarray){contents=contents.subarray(position,position+length);}else {contents=Array.prototype.slice.call(contents,position,position+length);}}allocated=true;ptr=FS.mmapAlloc(length);if(!ptr){throw new FS.ErrnoError(48);}HEAP8.set(contents,ptr);}return {ptr:ptr,allocated:allocated};},msync:function(stream,buffer,offset,length,mmapFlags){if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(43);}if(mmapFlags&2){return 0;}MEMFS.stream_ops.write(stream,buffer,0,length,offset,false);return 0;}}};var FS={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:\"/\",initialized:false,ignorePermissions:true,trackingDelegate:{},tracking:{openFlags:{READ:1,WRITE:2}},ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,handleFSError:function(e){if(!(e instanceof FS.ErrnoError))throw e+\" : \"+stackTrace();return setErrNo(e.errno);},lookupPath:function(path,opts){path=PATH_FS.resolve(FS.cwd(),path);opts=opts||{};if(!path)return {path:\"\",node:null};var defaults={follow_mount:true,recurse_count:0};for(var key in defaults){if(opts[key]===undefined){opts[key]=defaults[key];}}if(opts.recurse_count>8){throw new FS.ErrnoError(32);}var parts=PATH.normalizeArray(path.split(\"/\").filter(function(p){return !!p;}),false);var current=FS.root;var current_path=\"/\";for(var i=0;i<parts.length;i++){var islast=i===parts.length-1;if(islast&&opts.parent){break;}current=FS.lookupNode(current,parts[i]);current_path=PATH.join2(current_path,parts[i]);if(FS.isMountpoint(current)){if(!islast||islast&&opts.follow_mount){current=current.mounted.root;}}if(!islast||opts.follow){var count=0;while(FS.isLink(current.mode)){var link=FS.readlink(current_path);current_path=PATH_FS.resolve(PATH.dirname(current_path),link);var lookup=FS.lookupPath(current_path,{recurse_count:opts.recurse_count});current=lookup.node;if(count++>40){throw new FS.ErrnoError(32);}}}}return {path:current_path,node:current};},getPath:function(node){var path;while(true){if(FS.isRoot(node)){var mount=node.mount.mountpoint;if(!path)return mount;return mount[mount.length-1]!==\"/\"?mount+\"/\"+path:mount+path;}path=path?node.name+\"/\"+path:node.name;node=node.parent;}},hashName:function(parentid,name){var hash=0;for(var i=0;i<name.length;i++){hash=(hash<<5)-hash+name.charCodeAt(i)|0;}return (parentid+hash>>>0)%FS.nameTable.length;},hashAddNode:function(node){var hash=FS.hashName(node.parent.id,node.name);node.name_next=FS.nameTable[hash];FS.nameTable[hash]=node;},hashRemoveNode:function(node){var hash=FS.hashName(node.parent.id,node.name);if(FS.nameTable[hash]===node){FS.nameTable[hash]=node.name_next;}else {var current=FS.nameTable[hash];while(current){if(current.name_next===node){current.name_next=node.name_next;break;}current=current.name_next;}}},lookupNode:function(parent,name){var errCode=FS.mayLookup(parent);if(errCode){throw new FS.ErrnoError(errCode,parent);}var hash=FS.hashName(parent.id,name);for(var node=FS.nameTable[hash];node;node=node.name_next){var nodeName=node.name;if(node.parent.id===parent.id&&nodeName===name){return node;}}return FS.lookup(parent,name);},createNode:function(parent,name,mode,rdev){var node=new FS.FSNode(parent,name,mode,rdev);FS.hashAddNode(node);return node;},destroyNode:function(node){FS.hashRemoveNode(node);},isRoot:function(node){return node===node.parent;},isMountpoint:function(node){return !!node.mounted;},isFile:function(mode){return (mode&61440)===32768;},isDir:function(mode){return (mode&61440)===16384;},isLink:function(mode){return (mode&61440)===40960;},isChrdev:function(mode){return (mode&61440)===8192;},isBlkdev:function(mode){return (mode&61440)===24576;},isFIFO:function(mode){return (mode&61440)===4096;},isSocket:function(mode){return (mode&49152)===49152;},flagModes:{\"r\":0,\"rs\":1052672,\"r+\":2,\"w\":577,\"wx\":705,\"xw\":705,\"w+\":578,\"wx+\":706,\"xw+\":706,\"a\":1089,\"ax\":1217,\"xa\":1217,\"a+\":1090,\"ax+\":1218,\"xa+\":1218},modeStringToFlags:function(str){var flags=FS.flagModes[str];if(typeof flags===\"undefined\"){throw new Error(\"Unknown file open mode: \"+str);}return flags;},flagsToPermissionString:function(flag){var perms=[\"r\",\"w\",\"rw\"][flag&3];if(flag&512){perms+=\"w\";}return perms;},nodePermissions:function(node,perms){if(FS.ignorePermissions){return 0;}if(perms.indexOf(\"r\")!==-1&&!(node.mode&292)){return 2;}else if(perms.indexOf(\"w\")!==-1&&!(node.mode&146)){return 2;}else if(perms.indexOf(\"x\")!==-1&&!(node.mode&73)){return 2;}return 0;},mayLookup:function(dir){var errCode=FS.nodePermissions(dir,\"x\");if(errCode)return errCode;if(!dir.node_ops.lookup)return 2;return 0;},mayCreate:function(dir,name){try{var node=FS.lookupNode(dir,name);return 20;}catch(e){}return FS.nodePermissions(dir,\"wx\");},mayDelete:function(dir,name,isdir){var node;try{node=FS.lookupNode(dir,name);}catch(e){return e.errno;}var errCode=FS.nodePermissions(dir,\"wx\");if(errCode){return errCode;}if(isdir){if(!FS.isDir(node.mode)){return 54;}if(FS.isRoot(node)||FS.getPath(node)===FS.cwd()){return 10;}}else {if(FS.isDir(node.mode)){return 31;}}return 0;},mayOpen:function(node,flags){if(!node){return 44;}if(FS.isLink(node.mode)){return 32;}else if(FS.isDir(node.mode)){if(FS.flagsToPermissionString(flags)!==\"r\"||flags&512){return 31;}}return FS.nodePermissions(node,FS.flagsToPermissionString(flags));},MAX_OPEN_FDS:4096,nextfd:function(fd_start,fd_end){fd_start=fd_start||0;fd_end=fd_end||FS.MAX_OPEN_FDS;for(var fd=fd_start;fd<=fd_end;fd++){if(!FS.streams[fd]){return fd;}}throw new FS.ErrnoError(33);},getStream:function(fd){return FS.streams[fd];},createStream:function(stream,fd_start,fd_end){if(!FS.FSStream){FS.FSStream=function(){};FS.FSStream.prototype={object:{get:function(){return this.node;},set:function(val){this.node=val;}},isRead:{get:function(){return (this.flags&2097155)!==1;}},isWrite:{get:function(){return (this.flags&2097155)!==0;}},isAppend:{get:function(){return this.flags&1024;}}};}var newStream=new FS.FSStream();for(var p in stream){newStream[p]=stream[p];}stream=newStream;var fd=FS.nextfd(fd_start,fd_end);stream.fd=fd;FS.streams[fd]=stream;return stream;},closeStream:function(fd){FS.streams[fd]=null;},chrdev_stream_ops:{open:function(stream){var device=FS.getDevice(stream.node.rdev);stream.stream_ops=device.stream_ops;if(stream.stream_ops.open){stream.stream_ops.open(stream);}},llseek:function(){throw new FS.ErrnoError(70);}},major:function(dev){return dev>>8;},minor:function(dev){return dev&255;},makedev:function(ma,mi){return ma<<8|mi;},registerDevice:function(dev,ops){FS.devices[dev]={stream_ops:ops};},getDevice:function(dev){return FS.devices[dev];},getMounts:function(mount){var mounts=[];var check=[mount];while(check.length){var m=check.pop();mounts.push(m);check.push.apply(check,m.mounts);}return mounts;},syncfs:function(populate,callback){if(typeof populate===\"function\"){callback=populate;populate=false;}FS.syncFSRequests++;if(FS.syncFSRequests>1){err(\"warning: \"+FS.syncFSRequests+\" FS.syncfs operations in flight at once, probably just doing extra work\");}var mounts=FS.getMounts(FS.root.mount);var completed=0;function doCallback(errCode){FS.syncFSRequests--;return callback(errCode);}function done(errCode){if(errCode){if(!done.errored){done.errored=true;return doCallback(errCode);}return;}if(++completed>=mounts.length){doCallback(null);}}mounts.forEach(function(mount){if(!mount.type.syncfs){return done(null);}mount.type.syncfs(mount,populate,done);});},mount:function(type,opts,mountpoint){var root=mountpoint===\"/\";var pseudo=!mountpoint;var node;if(root&&FS.root){throw new FS.ErrnoError(10);}else if(!root&&!pseudo){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});mountpoint=lookup.path;node=lookup.node;if(FS.isMountpoint(node)){throw new FS.ErrnoError(10);}if(!FS.isDir(node.mode)){throw new FS.ErrnoError(54);}}var mount={type:type,opts:opts,mountpoint:mountpoint,mounts:[]};var mountRoot=type.mount(mount);mountRoot.mount=mount;mount.root=mountRoot;if(root){FS.root=mountRoot;}else if(node){node.mounted=mount;if(node.mount){node.mount.mounts.push(mount);}}return mountRoot;},unmount:function(mountpoint){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});if(!FS.isMountpoint(lookup.node)){throw new FS.ErrnoError(28);}var node=lookup.node;var mount=node.mounted;var mounts=FS.getMounts(mount);Object.keys(FS.nameTable).forEach(function(hash){var current=FS.nameTable[hash];while(current){var next=current.name_next;if(mounts.indexOf(current.mount)!==-1){FS.destroyNode(current);}current=next;}});node.mounted=null;var idx=node.mount.mounts.indexOf(mount);node.mount.mounts.splice(idx,1);},lookup:function(parent,name){return parent.node_ops.lookup(parent,name);},mknod:function(path,mode,dev){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);if(!name||name===\".\"||name===\"..\"){throw new FS.ErrnoError(28);}var errCode=FS.mayCreate(parent,name);if(errCode){throw new FS.ErrnoError(errCode);}if(!parent.node_ops.mknod){throw new FS.ErrnoError(63);}return parent.node_ops.mknod(parent,name,mode,dev);},create:function(path,mode){mode=mode!==undefined?mode:438;mode&=4095;mode|=32768;return FS.mknod(path,mode,0);},mkdir:function(path,mode){mode=mode!==undefined?mode:511;mode&=511|512;mode|=16384;return FS.mknod(path,mode,0);},mkdirTree:function(path,mode){var dirs=path.split(\"/\");var d=\"\";for(var i=0;i<dirs.length;++i){if(!dirs[i])continue;d+=\"/\"+dirs[i];try{FS.mkdir(d,mode);}catch(e){if(e.errno!=20)throw e;}}},mkdev:function(path,mode,dev){if(typeof dev===\"undefined\"){dev=mode;mode=438;}mode|=8192;return FS.mknod(path,mode,dev);},symlink:function(oldpath,newpath){if(!PATH_FS.resolve(oldpath)){throw new FS.ErrnoError(44);}var lookup=FS.lookupPath(newpath,{parent:true});var parent=lookup.node;if(!parent){throw new FS.ErrnoError(44);}var newname=PATH.basename(newpath);var errCode=FS.mayCreate(parent,newname);if(errCode){throw new FS.ErrnoError(errCode);}if(!parent.node_ops.symlink){throw new FS.ErrnoError(63);}return parent.node_ops.symlink(parent,newname,oldpath);},rename:function(old_path,new_path){var old_dirname=PATH.dirname(old_path);var new_dirname=PATH.dirname(new_path);var old_name=PATH.basename(old_path);var new_name=PATH.basename(new_path);var lookup,old_dir,new_dir;try{lookup=FS.lookupPath(old_path,{parent:true});old_dir=lookup.node;lookup=FS.lookupPath(new_path,{parent:true});new_dir=lookup.node;}catch(e){throw new FS.ErrnoError(10);}if(!old_dir||!new_dir)throw new FS.ErrnoError(44);if(old_dir.mount!==new_dir.mount){throw new FS.ErrnoError(75);}var old_node=FS.lookupNode(old_dir,old_name);var relative=PATH_FS.relative(old_path,new_dirname);if(relative.charAt(0)!==\".\"){throw new FS.ErrnoError(28);}relative=PATH_FS.relative(new_path,old_dirname);if(relative.charAt(0)!==\".\"){throw new FS.ErrnoError(55);}var new_node;try{new_node=FS.lookupNode(new_dir,new_name);}catch(e){}if(old_node===new_node){return;}var isdir=FS.isDir(old_node.mode);var errCode=FS.mayDelete(old_dir,old_name,isdir);if(errCode){throw new FS.ErrnoError(errCode);}errCode=new_node?FS.mayDelete(new_dir,new_name,isdir):FS.mayCreate(new_dir,new_name);if(errCode){throw new FS.ErrnoError(errCode);}if(!old_dir.node_ops.rename){throw new FS.ErrnoError(63);}if(FS.isMountpoint(old_node)||new_node&&FS.isMountpoint(new_node)){throw new FS.ErrnoError(10);}if(new_dir!==old_dir){errCode=FS.nodePermissions(old_dir,\"w\");if(errCode){throw new FS.ErrnoError(errCode);}}try{if(FS.trackingDelegate[\"willMovePath\"]){FS.trackingDelegate[\"willMovePath\"](old_path,new_path);}}catch(e){err(\"FS.trackingDelegate['willMovePath']('\"+old_path+\"', '\"+new_path+\"') threw an exception: \"+e.message);}FS.hashRemoveNode(old_node);try{old_dir.node_ops.rename(old_node,new_dir,new_name);}catch(e){throw e;}finally{FS.hashAddNode(old_node);}try{if(FS.trackingDelegate[\"onMovePath\"])FS.trackingDelegate[\"onMovePath\"](old_path,new_path);}catch(e){err(\"FS.trackingDelegate['onMovePath']('\"+old_path+\"', '\"+new_path+\"') threw an exception: \"+e.message);}},rmdir:function(path){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var errCode=FS.mayDelete(parent,name,true);if(errCode){throw new FS.ErrnoError(errCode);}if(!parent.node_ops.rmdir){throw new FS.ErrnoError(63);}if(FS.isMountpoint(node)){throw new FS.ErrnoError(10);}try{if(FS.trackingDelegate[\"willDeletePath\"]){FS.trackingDelegate[\"willDeletePath\"](path);}}catch(e){err(\"FS.trackingDelegate['willDeletePath']('\"+path+\"') threw an exception: \"+e.message);}parent.node_ops.rmdir(parent,name);FS.destroyNode(node);try{if(FS.trackingDelegate[\"onDeletePath\"])FS.trackingDelegate[\"onDeletePath\"](path);}catch(e){err(\"FS.trackingDelegate['onDeletePath']('\"+path+\"') threw an exception: \"+e.message);}},readdir:function(path){var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;if(!node.node_ops.readdir){throw new FS.ErrnoError(54);}return node.node_ops.readdir(node);},unlink:function(path){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var errCode=FS.mayDelete(parent,name,false);if(errCode){throw new FS.ErrnoError(errCode);}if(!parent.node_ops.unlink){throw new FS.ErrnoError(63);}if(FS.isMountpoint(node)){throw new FS.ErrnoError(10);}try{if(FS.trackingDelegate[\"willDeletePath\"]){FS.trackingDelegate[\"willDeletePath\"](path);}}catch(e){err(\"FS.trackingDelegate['willDeletePath']('\"+path+\"') threw an exception: \"+e.message);}parent.node_ops.unlink(parent,name);FS.destroyNode(node);try{if(FS.trackingDelegate[\"onDeletePath\"])FS.trackingDelegate[\"onDeletePath\"](path);}catch(e){err(\"FS.trackingDelegate['onDeletePath']('\"+path+\"') threw an exception: \"+e.message);}},readlink:function(path){var lookup=FS.lookupPath(path);var link=lookup.node;if(!link){throw new FS.ErrnoError(44);}if(!link.node_ops.readlink){throw new FS.ErrnoError(28);}return PATH_FS.resolve(FS.getPath(link.parent),link.node_ops.readlink(link));},stat:function(path,dontFollow){var lookup=FS.lookupPath(path,{follow:!dontFollow});var node=lookup.node;if(!node){throw new FS.ErrnoError(44);}if(!node.node_ops.getattr){throw new FS.ErrnoError(63);}return node.node_ops.getattr(node);},lstat:function(path){return FS.stat(path,true);},chmod:function(path,mode,dontFollow){var node;if(typeof path===\"string\"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node;}else {node=path;}if(!node.node_ops.setattr){throw new FS.ErrnoError(63);}node.node_ops.setattr(node,{mode:mode&4095|node.mode&~4095,timestamp:Date.now()});},lchmod:function(path,mode){FS.chmod(path,mode,true);},fchmod:function(fd,mode){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(8);}FS.chmod(stream.node,mode);},chown:function(path,uid,gid,dontFollow){var node;if(typeof path===\"string\"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node;}else {node=path;}if(!node.node_ops.setattr){throw new FS.ErrnoError(63);}node.node_ops.setattr(node,{timestamp:Date.now()});},lchown:function(path,uid,gid){FS.chown(path,uid,gid,true);},fchown:function(fd,uid,gid){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(8);}FS.chown(stream.node,uid,gid);},truncate:function(path,len){if(len<0){throw new FS.ErrnoError(28);}var node;if(typeof path===\"string\"){var lookup=FS.lookupPath(path,{follow:true});node=lookup.node;}else {node=path;}if(!node.node_ops.setattr){throw new FS.ErrnoError(63);}if(FS.isDir(node.mode)){throw new FS.ErrnoError(31);}if(!FS.isFile(node.mode)){throw new FS.ErrnoError(28);}var errCode=FS.nodePermissions(node,\"w\");if(errCode){throw new FS.ErrnoError(errCode);}node.node_ops.setattr(node,{size:len,timestamp:Date.now()});},ftruncate:function(fd,len){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(8);}if((stream.flags&2097155)===0){throw new FS.ErrnoError(28);}FS.truncate(stream.node,len);},utime:function(path,atime,mtime){var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;node.node_ops.setattr(node,{timestamp:Math.max(atime,mtime)});},open:function(path,flags,mode,fd_start,fd_end){if(path===\"\"){throw new FS.ErrnoError(44);}flags=typeof flags===\"string\"?FS.modeStringToFlags(flags):flags;mode=typeof mode===\"undefined\"?438:mode;if(flags&64){mode=mode&4095|32768;}else {mode=0;}var node;if(typeof path===\"object\"){node=path;}else {path=PATH.normalize(path);try{var lookup=FS.lookupPath(path,{follow:!(flags&131072)});node=lookup.node;}catch(e){}}var created=false;if(flags&64){if(node){if(flags&128){throw new FS.ErrnoError(20);}}else {node=FS.mknod(path,mode,0);created=true;}}if(!node){throw new FS.ErrnoError(44);}if(FS.isChrdev(node.mode)){flags&=~512;}if(flags&65536&&!FS.isDir(node.mode)){throw new FS.ErrnoError(54);}if(!created){var errCode=FS.mayOpen(node,flags);if(errCode){throw new FS.ErrnoError(errCode);}}if(flags&512){FS.truncate(node,0);}flags&=~(128|512|131072);var stream=FS.createStream({node:node,path:FS.getPath(node),flags:flags,seekable:true,position:0,stream_ops:node.stream_ops,ungotten:[],error:false},fd_start,fd_end);if(stream.stream_ops.open){stream.stream_ops.open(stream);}if(Module[\"logReadFiles\"]&&!(flags&1)){if(!FS.readFiles)FS.readFiles={};if(!(path in FS.readFiles)){FS.readFiles[path]=1;err(\"FS.trackingDelegate error on read file: \"+path);}}try{if(FS.trackingDelegate[\"onOpenFile\"]){var trackingFlags=0;if((flags&2097155)!==1){trackingFlags|=FS.tracking.openFlags.READ;}if((flags&2097155)!==0){trackingFlags|=FS.tracking.openFlags.WRITE;}FS.trackingDelegate[\"onOpenFile\"](path,trackingFlags);}}catch(e){err(\"FS.trackingDelegate['onOpenFile']('\"+path+\"', flags) threw an exception: \"+e.message);}return stream;},close:function(stream){if(FS.isClosed(stream)){throw new FS.ErrnoError(8);}if(stream.getdents)stream.getdents=null;try{if(stream.stream_ops.close){stream.stream_ops.close(stream);}}catch(e){throw e;}finally{FS.closeStream(stream.fd);}stream.fd=null;},isClosed:function(stream){return stream.fd===null;},llseek:function(stream,offset,whence){if(FS.isClosed(stream)){throw new FS.ErrnoError(8);}if(!stream.seekable||!stream.stream_ops.llseek){throw new FS.ErrnoError(70);}if(whence!=0&&whence!=1&&whence!=2){throw new FS.ErrnoError(28);}stream.position=stream.stream_ops.llseek(stream,offset,whence);stream.ungotten=[];return stream.position;},read:function(stream,buffer,offset,length,position){if(length<0||position<0){throw new FS.ErrnoError(28);}if(FS.isClosed(stream)){throw new FS.ErrnoError(8);}if((stream.flags&2097155)===1){throw new FS.ErrnoError(8);}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(31);}if(!stream.stream_ops.read){throw new FS.ErrnoError(28);}var seeking=typeof position!==\"undefined\";if(!seeking){position=stream.position;}else if(!stream.seekable){throw new FS.ErrnoError(70);}var bytesRead=stream.stream_ops.read(stream,buffer,offset,length,position);if(!seeking)stream.position+=bytesRead;return bytesRead;},write:function(stream,buffer,offset,length,position,canOwn){if(length<0||position<0){throw new FS.ErrnoError(28);}if(FS.isClosed(stream)){throw new FS.ErrnoError(8);}if((stream.flags&2097155)===0){throw new FS.ErrnoError(8);}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(31);}if(!stream.stream_ops.write){throw new FS.ErrnoError(28);}if(stream.seekable&&stream.flags&1024){FS.llseek(stream,0,2);}var seeking=typeof position!==\"undefined\";if(!seeking){position=stream.position;}else if(!stream.seekable){throw new FS.ErrnoError(70);}var bytesWritten=stream.stream_ops.write(stream,buffer,offset,length,position,canOwn);if(!seeking)stream.position+=bytesWritten;try{if(stream.path&&FS.trackingDelegate[\"onWriteToFile\"])FS.trackingDelegate[\"onWriteToFile\"](stream.path);}catch(e){err(\"FS.trackingDelegate['onWriteToFile']('\"+stream.path+\"') threw an exception: \"+e.message);}return bytesWritten;},allocate:function(stream,offset,length){if(FS.isClosed(stream)){throw new FS.ErrnoError(8);}if(offset<0||length<=0){throw new FS.ErrnoError(28);}if((stream.flags&2097155)===0){throw new FS.ErrnoError(8);}if(!FS.isFile(stream.node.mode)&&!FS.isDir(stream.node.mode)){throw new FS.ErrnoError(43);}if(!stream.stream_ops.allocate){throw new FS.ErrnoError(138);}stream.stream_ops.allocate(stream,offset,length);},mmap:function(stream,address,length,position,prot,flags){if((prot&2)!==0&&(flags&2)===0&&(stream.flags&2097155)!==2){throw new FS.ErrnoError(2);}if((stream.flags&2097155)===1){throw new FS.ErrnoError(2);}if(!stream.stream_ops.mmap){throw new FS.ErrnoError(43);}return stream.stream_ops.mmap(stream,address,length,position,prot,flags);},msync:function(stream,buffer,offset,length,mmapFlags){if(!stream||!stream.stream_ops.msync){return 0;}return stream.stream_ops.msync(stream,buffer,offset,length,mmapFlags);},munmap:function(stream){return 0;},ioctl:function(stream,cmd,arg){if(!stream.stream_ops.ioctl){throw new FS.ErrnoError(59);}return stream.stream_ops.ioctl(stream,cmd,arg);},readFile:function(path,opts){opts=opts||{};opts.flags=opts.flags||\"r\";opts.encoding=opts.encoding||\"binary\";if(opts.encoding!==\"utf8\"&&opts.encoding!==\"binary\"){throw new Error('Invalid encoding type \"'+opts.encoding+'\"');}var ret;var stream=FS.open(path,opts.flags);var stat=FS.stat(path);var length=stat.size;var buf=new Uint8Array(length);FS.read(stream,buf,0,length,0);if(opts.encoding===\"utf8\"){ret=UTF8ArrayToString(buf,0);}else if(opts.encoding===\"binary\"){ret=buf;}FS.close(stream);return ret;},writeFile:function(path,data,opts){opts=opts||{};opts.flags=opts.flags||\"w\";var stream=FS.open(path,opts.flags,opts.mode);if(typeof data===\"string\"){var buf=new Uint8Array(lengthBytesUTF8(data)+1);var actualNumBytes=stringToUTF8Array(data,buf,0,buf.length);FS.write(stream,buf,0,actualNumBytes,undefined,opts.canOwn);}else if(ArrayBuffer.isView(data)){FS.write(stream,data,0,data.byteLength,undefined,opts.canOwn);}else {throw new Error(\"Unsupported data type\");}FS.close(stream);},cwd:function(){return FS.currentPath;},chdir:function(path){var lookup=FS.lookupPath(path,{follow:true});if(lookup.node===null){throw new FS.ErrnoError(44);}if(!FS.isDir(lookup.node.mode)){throw new FS.ErrnoError(54);}var errCode=FS.nodePermissions(lookup.node,\"x\");if(errCode){throw new FS.ErrnoError(errCode);}FS.currentPath=lookup.path;},createDefaultDirectories:function(){FS.mkdir(\"/tmp\");FS.mkdir(\"/home\");FS.mkdir(\"/home/web_user\");},createDefaultDevices:function(){FS.mkdir(\"/dev\");FS.registerDevice(FS.makedev(1,3),{read:function(){return 0;},write:function(stream,buffer,offset,length,pos){return length;}});FS.mkdev(\"/dev/null\",FS.makedev(1,3));TTY.register(FS.makedev(5,0),TTY.default_tty_ops);TTY.register(FS.makedev(6,0),TTY.default_tty1_ops);FS.mkdev(\"/dev/tty\",FS.makedev(5,0));FS.mkdev(\"/dev/tty1\",FS.makedev(6,0));var random_device;if(typeof crypto===\"object\"&&typeof crypto[\"getRandomValues\"]===\"function\"){var randomBuffer=new Uint8Array(1);random_device=function(){crypto.getRandomValues(randomBuffer);return randomBuffer[0];};}else if(ENVIRONMENT_IS_NODE){try{var crypto_module=crypto$1;random_device=function(){return crypto_module[\"randomBytes\"](1)[0];};}catch(e){}}else;if(!random_device){random_device=function(){abort(\"random_device\");};}FS.createDevice(\"/dev\",\"random\",random_device);FS.createDevice(\"/dev\",\"urandom\",random_device);FS.mkdir(\"/dev/shm\");FS.mkdir(\"/dev/shm/tmp\");},createSpecialDirectories:function(){FS.mkdir(\"/proc\");FS.mkdir(\"/proc/self\");FS.mkdir(\"/proc/self/fd\");FS.mount({mount:function(){var node=FS.createNode(\"/proc/self\",\"fd\",16384|511,73);node.node_ops={lookup:function(parent,name){var fd=+name;var stream=FS.getStream(fd);if(!stream)throw new FS.ErrnoError(8);var ret={parent:null,mount:{mountpoint:\"fake\"},node_ops:{readlink:function(){return stream.path;}}};ret.parent=ret;return ret;}};return node;}},{},\"/proc/self/fd\");},createStandardStreams:function(){if(Module[\"stdin\"]){FS.createDevice(\"/dev\",\"stdin\",Module[\"stdin\"]);}else {FS.symlink(\"/dev/tty\",\"/dev/stdin\");}if(Module[\"stdout\"]){FS.createDevice(\"/dev\",\"stdout\",null,Module[\"stdout\"]);}else {FS.symlink(\"/dev/tty\",\"/dev/stdout\");}if(Module[\"stderr\"]){FS.createDevice(\"/dev\",\"stderr\",null,Module[\"stderr\"]);}else {FS.symlink(\"/dev/tty1\",\"/dev/stderr\");}FS.open(\"/dev/stdin\",\"r\");FS.open(\"/dev/stdout\",\"w\");FS.open(\"/dev/stderr\",\"w\");},ensureErrnoError:function(){if(FS.ErrnoError)return;FS.ErrnoError=function ErrnoError(errno,node){this.node=node;this.setErrno=function(errno){this.errno=errno;};this.setErrno(errno);this.message=\"FS error\";};FS.ErrnoError.prototype=new Error();FS.ErrnoError.prototype.constructor=FS.ErrnoError;[44].forEach(function(code){FS.genericErrors[code]=new FS.ErrnoError(code);FS.genericErrors[code].stack=\"<generic error, no stack>\";});},staticInit:function(){FS.ensureErrnoError();FS.nameTable=new Array(4096);FS.mount(MEMFS,{},\"/\");FS.createDefaultDirectories();FS.createDefaultDevices();FS.createSpecialDirectories();FS.filesystems={\"MEMFS\":MEMFS};},init:function(input,output,error){FS.init.initialized=true;FS.ensureErrnoError();Module[\"stdin\"]=input||Module[\"stdin\"];Module[\"stdout\"]=output||Module[\"stdout\"];Module[\"stderr\"]=error||Module[\"stderr\"];FS.createStandardStreams();},quit:function(){FS.init.initialized=false;var fflush=Module[\"_fflush\"];if(fflush)fflush(0);for(var i=0;i<FS.streams.length;i++){var stream=FS.streams[i];if(!stream){continue;}FS.close(stream);}},getMode:function(canRead,canWrite){var mode=0;if(canRead)mode|=292|73;if(canWrite)mode|=146;return mode;},joinPath:function(parts,forceRelative){var path=PATH.join.apply(null,parts);if(forceRelative&&path[0]==\"/\")path=path.substr(1);return path;},absolutePath:function(relative,base){return PATH_FS.resolve(base,relative);},standardizePath:function(path){return PATH.normalize(path);},findObject:function(path,dontResolveLastLink){var ret=FS.analyzePath(path,dontResolveLastLink);if(ret.exists){return ret.object;}else {setErrNo(ret.error);return null;}},analyzePath:function(path,dontResolveLastLink){try{var lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});path=lookup.path;}catch(e){}var ret={isRoot:false,exists:false,error:0,name:null,path:null,object:null,parentExists:false,parentPath:null,parentObject:null};try{var lookup=FS.lookupPath(path,{parent:true});ret.parentExists=true;ret.parentPath=lookup.path;ret.parentObject=lookup.node;ret.name=PATH.basename(path);lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});ret.exists=true;ret.path=lookup.path;ret.object=lookup.node;ret.name=lookup.node.name;ret.isRoot=lookup.path===\"/\";}catch(e){ret.error=e.errno;}return ret;},createFolder:function(parent,name,canRead,canWrite){var path=PATH.join2(typeof parent===\"string\"?parent:FS.getPath(parent),name);var mode=FS.getMode(canRead,canWrite);return FS.mkdir(path,mode);},createPath:function(parent,path,canRead,canWrite){parent=typeof parent===\"string\"?parent:FS.getPath(parent);var parts=path.split(\"/\").reverse();while(parts.length){var part=parts.pop();if(!part)continue;var current=PATH.join2(parent,part);try{FS.mkdir(current);}catch(e){}parent=current;}return current;},createFile:function(parent,name,properties,canRead,canWrite){var path=PATH.join2(typeof parent===\"string\"?parent:FS.getPath(parent),name);var mode=FS.getMode(canRead,canWrite);return FS.create(path,mode);},createDataFile:function(parent,name,data,canRead,canWrite,canOwn){var path=name?PATH.join2(typeof parent===\"string\"?parent:FS.getPath(parent),name):parent;var mode=FS.getMode(canRead,canWrite);var node=FS.create(path,mode);if(data){if(typeof data===\"string\"){var arr=new Array(data.length);for(var i=0,len=data.length;i<len;++i)arr[i]=data.charCodeAt(i);data=arr;}FS.chmod(node,mode|146);var stream=FS.open(node,\"w\");FS.write(stream,data,0,data.length,0,canOwn);FS.close(stream);FS.chmod(node,mode);}return node;},createDevice:function(parent,name,input,output){var path=PATH.join2(typeof parent===\"string\"?parent:FS.getPath(parent),name);var mode=FS.getMode(!!input,!!output);if(!FS.createDevice.major)FS.createDevice.major=64;var dev=FS.makedev(FS.createDevice.major++,0);FS.registerDevice(dev,{open:function(stream){stream.seekable=false;},close:function(stream){if(output&&output.buffer&&output.buffer.length){output(10);}},read:function(stream,buffer,offset,length,pos){var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=input();}catch(e){throw new FS.ErrnoError(29);}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(6);}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result;}if(bytesRead){stream.node.timestamp=Date.now();}return bytesRead;},write:function(stream,buffer,offset,length,pos){for(var i=0;i<length;i++){try{output(buffer[offset+i]);}catch(e){throw new FS.ErrnoError(29);}}if(length){stream.node.timestamp=Date.now();}return i;}});return FS.mkdev(path,mode,dev);},createLink:function(parent,name,target,canRead,canWrite){var path=PATH.join2(typeof parent===\"string\"?parent:FS.getPath(parent),name);return FS.symlink(target,path);},forceLoadFile:function(obj){if(obj.isDevice||obj.isFolder||obj.link||obj.contents)return true;var success=true;if(typeof XMLHttpRequest!==\"undefined\"){throw new Error(\"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\");}else if(read_){try{obj.contents=intArrayFromString(read_(obj.url),true);obj.usedBytes=obj.contents.length;}catch(e){success=false;}}else {throw new Error(\"Cannot load without read() or XMLHttpRequest.\");}if(!success)setErrNo(29);return success;},createLazyFile:function(parent,name,url,canRead,canWrite){function LazyUint8Array(){this.lengthKnown=false;this.chunks=[];}LazyUint8Array.prototype.get=function LazyUint8Array_get(idx){if(idx>this.length-1||idx<0){return undefined;}var chunkOffset=idx%this.chunkSize;var chunkNum=idx/this.chunkSize|0;return this.getter(chunkNum)[chunkOffset];};LazyUint8Array.prototype.setDataGetter=function LazyUint8Array_setDataGetter(getter){this.getter=getter;};LazyUint8Array.prototype.cacheLength=function LazyUint8Array_cacheLength(){var xhr=new XMLHttpRequest();xhr.open(\"HEAD\",url,false);xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error(\"Couldn't load \"+url+\". Status: \"+xhr.status);var datalength=Number(xhr.getResponseHeader(\"Content-length\"));var header;var hasByteServing=(header=xhr.getResponseHeader(\"Accept-Ranges\"))&&header===\"bytes\";var usesGzip=(header=xhr.getResponseHeader(\"Content-Encoding\"))&&header===\"gzip\";var chunkSize=1024*1024;if(!hasByteServing)chunkSize=datalength;var doXHR=function(from,to){if(from>to)throw new Error(\"invalid range (\"+from+\", \"+to+\") or no bytes requested!\");if(to>datalength-1)throw new Error(\"only \"+datalength+\" bytes available! programmer error!\");var xhr=new XMLHttpRequest();xhr.open(\"GET\",url,false);if(datalength!==chunkSize)xhr.setRequestHeader(\"Range\",\"bytes=\"+from+\"-\"+to);if(typeof Uint8Array!=\"undefined\")xhr.responseType=\"arraybuffer\";if(xhr.overrideMimeType){xhr.overrideMimeType(\"text/plain; charset=x-user-defined\");}xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error(\"Couldn't load \"+url+\". Status: \"+xhr.status);if(xhr.response!==undefined){return new Uint8Array(xhr.response||[]);}else {return intArrayFromString(xhr.responseText||\"\",true);}};var lazyArray=this;lazyArray.setDataGetter(function(chunkNum){var start=chunkNum*chunkSize;var end=(chunkNum+1)*chunkSize-1;end=Math.min(end,datalength-1);if(typeof lazyArray.chunks[chunkNum]===\"undefined\"){lazyArray.chunks[chunkNum]=doXHR(start,end);}if(typeof lazyArray.chunks[chunkNum]===\"undefined\")throw new Error(\"doXHR failed!\");return lazyArray.chunks[chunkNum];});if(usesGzip||!datalength){chunkSize=datalength=1;datalength=this.getter(0).length;chunkSize=datalength;out(\"LazyFiles on gzip forces download of the whole file when length is accessed\");}this._length=datalength;this._chunkSize=chunkSize;this.lengthKnown=true;};if(typeof XMLHttpRequest!==\"undefined\"){if(!ENVIRONMENT_IS_WORKER)throw \"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc\";var lazyArray=new LazyUint8Array();Object.defineProperties(lazyArray,{length:{get:function(){if(!this.lengthKnown){this.cacheLength();}return this._length;}},chunkSize:{get:function(){if(!this.lengthKnown){this.cacheLength();}return this._chunkSize;}}});var properties={isDevice:false,contents:lazyArray};}else {var properties={isDevice:false,url:url};}var node=FS.createFile(parent,name,properties,canRead,canWrite);if(properties.contents){node.contents=properties.contents;}else if(properties.url){node.contents=null;node.url=properties.url;}Object.defineProperties(node,{usedBytes:{get:function(){return this.contents.length;}}});var stream_ops={};var keys=Object.keys(node.stream_ops);keys.forEach(function(key){var fn=node.stream_ops[key];stream_ops[key]=function forceLoadLazyFile(){if(!FS.forceLoadFile(node)){throw new FS.ErrnoError(29);}return fn.apply(null,arguments);};});stream_ops.read=function stream_ops_read(stream,buffer,offset,length,position){if(!FS.forceLoadFile(node)){throw new FS.ErrnoError(29);}var contents=stream.node.contents;if(position>=contents.length)return 0;var size=Math.min(contents.length-position,length);if(contents.slice){for(var i=0;i<size;i++){buffer[offset+i]=contents[position+i];}}else {for(var i=0;i<size;i++){buffer[offset+i]=contents.get(position+i);}}return size;};node.stream_ops=stream_ops;return node;},createPreloadedFile:function(parent,name,url,canRead,canWrite,onload,onerror,dontCreateFile,canOwn,preFinish){Browser.init();var fullname=name?PATH_FS.resolve(PATH.join2(parent,name)):parent;function processData(byteArray){function finish(byteArray){if(preFinish)preFinish();if(!dontCreateFile){FS.createDataFile(parent,name,byteArray,canRead,canWrite,canOwn);}if(onload)onload();removeRunDependency();}var handled=false;Module[\"preloadPlugins\"].forEach(function(plugin){if(handled)return;if(plugin[\"canHandle\"](fullname)){plugin[\"handle\"](byteArray,fullname,finish,function(){if(onerror)onerror();removeRunDependency();});handled=true;}});if(!handled)finish(byteArray);}addRunDependency();if(typeof url==\"string\"){Browser.asyncLoad(url,function(byteArray){processData(byteArray);},onerror);}else {processData(url);}},indexedDB:function(){return window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB;},DB_NAME:function(){return \"EM_FS_\"+window.location.pathname;},DB_VERSION:20,DB_STORE_NAME:\"FILE_DATA\",saveFilesToDB:function(paths,onload,onerror){onload=onload||function(){};onerror=onerror||function(){};var indexedDB=FS.indexedDB();try{var openRequest=indexedDB.open(FS.DB_NAME(),FS.DB_VERSION);}catch(e){return onerror(e);}openRequest.onupgradeneeded=function openRequest_onupgradeneeded(){out(\"creating db\");var db=openRequest.result;db.createObjectStore(FS.DB_STORE_NAME);};openRequest.onsuccess=function openRequest_onsuccess(){var db=openRequest.result;var transaction=db.transaction([FS.DB_STORE_NAME],\"readwrite\");var files=transaction.objectStore(FS.DB_STORE_NAME);var ok=0,fail=0,total=paths.length;function finish(){if(fail==0)onload();else onerror();}paths.forEach(function(path){var putRequest=files.put(FS.analyzePath(path).object.contents,path);putRequest.onsuccess=function putRequest_onsuccess(){ok++;if(ok+fail==total)finish();};putRequest.onerror=function putRequest_onerror(){fail++;if(ok+fail==total)finish();};});transaction.onerror=onerror;};openRequest.onerror=onerror;},loadFilesFromDB:function(paths,onload,onerror){onload=onload||function(){};onerror=onerror||function(){};var indexedDB=FS.indexedDB();try{var openRequest=indexedDB.open(FS.DB_NAME(),FS.DB_VERSION);}catch(e){return onerror(e);}openRequest.onupgradeneeded=onerror;openRequest.onsuccess=function openRequest_onsuccess(){var db=openRequest.result;try{var transaction=db.transaction([FS.DB_STORE_NAME],\"readonly\");}catch(e){onerror(e);return;}var files=transaction.objectStore(FS.DB_STORE_NAME);var ok=0,fail=0,total=paths.length;function finish(){if(fail==0)onload();else onerror();}paths.forEach(function(path){var getRequest=files.get(path);getRequest.onsuccess=function getRequest_onsuccess(){if(FS.analyzePath(path).exists){FS.unlink(path);}FS.createDataFile(PATH.dirname(path),PATH.basename(path),getRequest.result,true,true,true);ok++;if(ok+fail==total)finish();};getRequest.onerror=function getRequest_onerror(){fail++;if(ok+fail==total)finish();};});transaction.onerror=onerror;};openRequest.onerror=onerror;},mmapAlloc:function(size){var alignedSize=alignMemory(size,16384);var ptr=_malloc(alignedSize);while(size<alignedSize)HEAP8[ptr+size++]=0;return ptr;}};var SYSCALLS={mappings:{},DEFAULT_POLLMASK:5,umask:511,calculateAt:function(dirfd,path){if(path[0]!==\"/\"){var dir;if(dirfd===-100){dir=FS.cwd();}else {var dirstream=FS.getStream(dirfd);if(!dirstream)throw new FS.ErrnoError(8);dir=dirstream.path;}path=PATH.join2(dir,path);}return path;},doStat:function(func,path,buf){try{var stat=func(path);}catch(e){if(e&&e.node&&PATH.normalize(path)!==PATH.normalize(FS.getPath(e.node))){return -54;}throw e;}HEAP32[buf>>2]=stat.dev;HEAP32[buf+4>>2]=0;HEAP32[buf+8>>2]=stat.ino;HEAP32[buf+12>>2]=stat.mode;HEAP32[buf+16>>2]=stat.nlink;HEAP32[buf+20>>2]=stat.uid;HEAP32[buf+24>>2]=stat.gid;HEAP32[buf+28>>2]=stat.rdev;HEAP32[buf+32>>2]=0;tempI64=[stat.size>>>0,(tempDouble=stat.size,+Math_abs(tempDouble)>=1?tempDouble>0?(Math_min(+Math_floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math_ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+40>>2]=tempI64[0],HEAP32[buf+44>>2]=tempI64[1];HEAP32[buf+48>>2]=4096;HEAP32[buf+52>>2]=stat.blocks;HEAP32[buf+56>>2]=stat.atime.getTime()/1e3|0;HEAP32[buf+60>>2]=0;HEAP32[buf+64>>2]=stat.mtime.getTime()/1e3|0;HEAP32[buf+68>>2]=0;HEAP32[buf+72>>2]=stat.ctime.getTime()/1e3|0;HEAP32[buf+76>>2]=0;tempI64=[stat.ino>>>0,(tempDouble=stat.ino,+Math_abs(tempDouble)>=1?tempDouble>0?(Math_min(+Math_floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math_ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+80>>2]=tempI64[0],HEAP32[buf+84>>2]=tempI64[1];return 0;},doMsync:function(addr,stream,len,flags,offset){var buffer=HEAPU8.slice(addr,addr+len);FS.msync(stream,buffer,offset,len,flags);},doMkdir:function(path,mode){path=PATH.normalize(path);if(path[path.length-1]===\"/\")path=path.substr(0,path.length-1);FS.mkdir(path,mode,0);return 0;},doMknod:function(path,mode,dev){switch(mode&61440){case 32768:case 8192:case 24576:case 4096:case 49152:break;default:return -28;}FS.mknod(path,mode,dev);return 0;},doReadlink:function(path,buf,bufsize){if(bufsize<=0)return -28;var ret=FS.readlink(path);var len=Math.min(bufsize,lengthBytesUTF8(ret));var endChar=HEAP8[buf+len];stringToUTF8(ret,buf,bufsize+1);HEAP8[buf+len]=endChar;return len;},doAccess:function(path,amode){if(amode&~7){return -28;}var node;var lookup=FS.lookupPath(path,{follow:true});node=lookup.node;if(!node){return -44;}var perms=\"\";if(amode&4)perms+=\"r\";if(amode&2)perms+=\"w\";if(amode&1)perms+=\"x\";if(perms&&FS.nodePermissions(node,perms)){return -2;}return 0;},doDup:function(path,flags,suggestFD){var suggest=FS.getStream(suggestFD);if(suggest)FS.close(suggest);return FS.open(path,flags,0,suggestFD,suggestFD).fd;},doReadv:function(stream,iov,iovcnt,offset){var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov+i*8>>2];var len=HEAP32[iov+(i*8+4)>>2];var curr=FS.read(stream,HEAP8,ptr,len,offset);if(curr<0)return -1;ret+=curr;if(curr<len)break;}return ret;},doWritev:function(stream,iov,iovcnt,offset){var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov+i*8>>2];var len=HEAP32[iov+(i*8+4)>>2];var curr=FS.write(stream,HEAP8,ptr,len,offset);if(curr<0)return -1;ret+=curr;}return ret;},varargs:undefined,get:function(){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>2];return ret;},getStr:function(ptr){var ret=UTF8ToString(ptr);return ret;},getStreamFromFD:function(fd){var stream=FS.getStream(fd);if(!stream)throw new FS.ErrnoError(8);return stream;},get64:function(low,high){return low;}};function syscallMunmap(addr,len){if((addr|0)===-1||len===0){return -28;}var info=SYSCALLS.mappings[addr];if(!info)return 0;if(len===info.len){var stream=FS.getStream(info.fd);if(info.prot&2){SYSCALLS.doMsync(addr,stream,len,info.flags,info.offset);}FS.munmap(stream);SYSCALLS.mappings[addr]=null;if(info.allocated){_free(info.malloc);}}return 0;}function ___sys_munmap(addr,len){try{return syscallMunmap(addr,len);}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return -e.errno;}}var tupleRegistrations={};function runDestructors(destructors){while(destructors.length){var ptr=destructors.pop();var del=destructors.pop();del(ptr);}}function simpleReadValueFromPointer(pointer){return this[\"fromWireType\"](HEAPU32[pointer>>2]);}var awaitingDependencies={};var registeredTypes={};var typeDependencies={};var char_0=48;var char_9=57;function makeLegalFunctionName(name){if(undefined===name){return \"_unknown\";}name=name.replace(/[^a-zA-Z0-9_]/g,\"$\");var f=name.charCodeAt(0);if(f>=char_0&&f<=char_9){return \"_\"+name;}else {return name;}}function createNamedFunction(name,body){name=makeLegalFunctionName(name);return new Function(\"body\",\"return function \"+name+\"() {\\n\"+'    \"use strict\";'+\"    return body.apply(this, arguments);\\n\"+\"};\\n\")(body);}function extendError(baseErrorType,errorName){var errorClass=createNamedFunction(errorName,function(message){this.name=errorName;this.message=message;var stack=new Error(message).stack;if(stack!==undefined){this.stack=this.toString()+\"\\n\"+stack.replace(/^Error(:[^\\n]*)?\\n/,\"\");}});errorClass.prototype=Object.create(baseErrorType.prototype);errorClass.prototype.constructor=errorClass;errorClass.prototype.toString=function(){if(this.message===undefined){return this.name;}else {return this.name+\": \"+this.message;}};return errorClass;}var InternalError=undefined;function throwInternalError(message){throw new InternalError(message);}function whenDependentTypesAreResolved(myTypes,dependentTypes,getTypeConverters){myTypes.forEach(function(type){typeDependencies[type]=dependentTypes;});function onComplete(typeConverters){var myTypeConverters=getTypeConverters(typeConverters);if(myTypeConverters.length!==myTypes.length){throwInternalError(\"Mismatched type converter count\");}for(var i=0;i<myTypes.length;++i){registerType(myTypes[i],myTypeConverters[i]);}}var typeConverters=new Array(dependentTypes.length);var unregisteredTypes=[];var registered=0;dependentTypes.forEach(function(dt,i){if(registeredTypes.hasOwnProperty(dt)){typeConverters[i]=registeredTypes[dt];}else {unregisteredTypes.push(dt);if(!awaitingDependencies.hasOwnProperty(dt)){awaitingDependencies[dt]=[];}awaitingDependencies[dt].push(function(){typeConverters[i]=registeredTypes[dt];++registered;if(registered===unregisteredTypes.length){onComplete(typeConverters);}});}});if(0===unregisteredTypes.length){onComplete(typeConverters);}}function __embind_finalize_value_array(rawTupleType){var reg=tupleRegistrations[rawTupleType];delete tupleRegistrations[rawTupleType];var elements=reg.elements;var elementsLength=elements.length;var elementTypes=elements.map(function(elt){return elt.getterReturnType;}).concat(elements.map(function(elt){return elt.setterArgumentType;}));var rawConstructor=reg.rawConstructor;var rawDestructor=reg.rawDestructor;whenDependentTypesAreResolved([rawTupleType],elementTypes,function(elementTypes){elements.forEach(function(elt,i){var getterReturnType=elementTypes[i];var getter=elt.getter;var getterContext=elt.getterContext;var setterArgumentType=elementTypes[i+elementsLength];var setter=elt.setter;var setterContext=elt.setterContext;elt.read=function(ptr){return getterReturnType[\"fromWireType\"](getter(getterContext,ptr));};elt.write=function(ptr,o){var destructors=[];setter(setterContext,ptr,setterArgumentType[\"toWireType\"](destructors,o));runDestructors(destructors);};});return [{name:reg.name,\"fromWireType\":function(ptr){var rv=new Array(elementsLength);for(var i=0;i<elementsLength;++i){rv[i]=elements[i].read(ptr);}rawDestructor(ptr);return rv;},\"toWireType\":function(destructors,o){if(elementsLength!==o.length){throw new TypeError(\"Incorrect number of tuple elements for \"+reg.name+\": expected=\"+elementsLength+\", actual=\"+o.length);}var ptr=rawConstructor();for(var i=0;i<elementsLength;++i){elements[i].write(ptr,o[i]);}if(destructors!==null){destructors.push(rawDestructor,ptr);}return ptr;},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:rawDestructor}];});}var structRegistrations={};function __embind_finalize_value_object(structType){var reg=structRegistrations[structType];delete structRegistrations[structType];var rawConstructor=reg.rawConstructor;var rawDestructor=reg.rawDestructor;var fieldRecords=reg.fields;var fieldTypes=fieldRecords.map(function(field){return field.getterReturnType;}).concat(fieldRecords.map(function(field){return field.setterArgumentType;}));whenDependentTypesAreResolved([structType],fieldTypes,function(fieldTypes){var fields={};fieldRecords.forEach(function(field,i){var fieldName=field.fieldName;var getterReturnType=fieldTypes[i];var getter=field.getter;var getterContext=field.getterContext;var setterArgumentType=fieldTypes[i+fieldRecords.length];var setter=field.setter;var setterContext=field.setterContext;fields[fieldName]={read:function(ptr){return getterReturnType[\"fromWireType\"](getter(getterContext,ptr));},write:function(ptr,o){var destructors=[];setter(setterContext,ptr,setterArgumentType[\"toWireType\"](destructors,o));runDestructors(destructors);}};});return [{name:reg.name,\"fromWireType\":function(ptr){var rv={};for(var i in fields){rv[i]=fields[i].read(ptr);}rawDestructor(ptr);return rv;},\"toWireType\":function(destructors,o){for(var fieldName in fields){if(!(fieldName in o)){throw new TypeError('Missing field:  \"'+fieldName+'\"');}}var ptr=rawConstructor();for(fieldName in fields){fields[fieldName].write(ptr,o[fieldName]);}if(destructors!==null){destructors.push(rawDestructor,ptr);}return ptr;},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:rawDestructor}];});}function getShiftFromSize(size){switch(size){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\"Unknown type size: \"+size);}}function embind_init_charCodes(){var codes=new Array(256);for(var i=0;i<256;++i){codes[i]=String.fromCharCode(i);}embind_charCodes=codes;}var embind_charCodes=undefined;function readLatin1String(ptr){var ret=\"\";var c=ptr;while(HEAPU8[c]){ret+=embind_charCodes[HEAPU8[c++]];}return ret;}var BindingError=undefined;function throwBindingError(message){throw new BindingError(message);}function registerType(rawType,registeredInstance,options){options=options||{};if(!(\"argPackAdvance\"in registeredInstance)){throw new TypeError(\"registerType registeredInstance requires argPackAdvance\");}var name=registeredInstance.name;if(!rawType){throwBindingError('type \"'+name+'\" must have a positive integer typeid pointer');}if(registeredTypes.hasOwnProperty(rawType)){if(options.ignoreDuplicateRegistrations){return;}else {throwBindingError(\"Cannot register type '\"+name+\"' twice\");}}registeredTypes[rawType]=registeredInstance;delete typeDependencies[rawType];if(awaitingDependencies.hasOwnProperty(rawType)){var callbacks=awaitingDependencies[rawType];delete awaitingDependencies[rawType];callbacks.forEach(function(cb){cb();});}}function __embind_register_bool(rawType,name,size,trueValue,falseValue){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(wt){return !!wt;},\"toWireType\":function(destructors,o){return o?trueValue:falseValue;},\"argPackAdvance\":8,\"readValueFromPointer\":function(pointer){var heap;if(size===1){heap=HEAP8;}else if(size===2){heap=HEAP16;}else if(size===4){heap=HEAP32;}else {throw new TypeError(\"Unknown boolean type size: \"+name);}return this[\"fromWireType\"](heap[pointer>>shift]);},destructorFunction:null});}function ClassHandle_isAliasOf(other){if(!(this instanceof ClassHandle)){return false;}if(!(other instanceof ClassHandle)){return false;}var leftClass=this.$$.ptrType.registeredClass;var left=this.$$.ptr;var rightClass=other.$$.ptrType.registeredClass;var right=other.$$.ptr;while(leftClass.baseClass){left=leftClass.upcast(left);leftClass=leftClass.baseClass;}while(rightClass.baseClass){right=rightClass.upcast(right);rightClass=rightClass.baseClass;}return leftClass===rightClass&&left===right;}function shallowCopyInternalPointer(o){return {count:o.count,deleteScheduled:o.deleteScheduled,preservePointerOnDelete:o.preservePointerOnDelete,ptr:o.ptr,ptrType:o.ptrType,smartPtr:o.smartPtr,smartPtrType:o.smartPtrType};}function throwInstanceAlreadyDeleted(obj){function getInstanceTypeName(handle){return handle.$$.ptrType.registeredClass.name;}throwBindingError(getInstanceTypeName(obj)+\" instance already deleted\");}var finalizationGroup=false;function detachFinalizer(handle){}function runDestructor($$){if($$.smartPtr){$$.smartPtrType.rawDestructor($$.smartPtr);}else {$$.ptrType.registeredClass.rawDestructor($$.ptr);}}function releaseClassHandle($$){$$.count.value-=1;var toDelete=0===$$.count.value;if(toDelete){runDestructor($$);}}function attachFinalizer(handle){if(\"undefined\"===typeof FinalizationGroup){attachFinalizer=function(handle){return handle;};return handle;}finalizationGroup=new FinalizationGroup(function(iter){for(var result=iter.next();!result.done;result=iter.next()){var $$=result.value;if(!$$.ptr){console.warn(\"object already deleted: \"+$$.ptr);}else {releaseClassHandle($$);}}});attachFinalizer=function(handle){finalizationGroup.register(handle,handle.$$,handle.$$);return handle;};detachFinalizer=function(handle){finalizationGroup.unregister(handle.$$);};return attachFinalizer(handle);}function ClassHandle_clone(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this);}if(this.$$.preservePointerOnDelete){this.$$.count.value+=1;return this;}else {var clone=attachFinalizer(Object.create(Object.getPrototypeOf(this),{$$:{value:shallowCopyInternalPointer(this.$$)}}));clone.$$.count.value+=1;clone.$$.deleteScheduled=false;return clone;}}function ClassHandle_delete(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this);}if(this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete){throwBindingError(\"Object already scheduled for deletion\");}detachFinalizer(this);releaseClassHandle(this.$$);if(!this.$$.preservePointerOnDelete){this.$$.smartPtr=undefined;this.$$.ptr=undefined;}}function ClassHandle_isDeleted(){return !this.$$.ptr;}var delayFunction=undefined;var deletionQueue=[];function flushPendingDeletes(){while(deletionQueue.length){var obj=deletionQueue.pop();obj.$$.deleteScheduled=false;obj[\"delete\"]();}}function ClassHandle_deleteLater(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this);}if(this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete){throwBindingError(\"Object already scheduled for deletion\");}deletionQueue.push(this);if(deletionQueue.length===1&&delayFunction){delayFunction(flushPendingDeletes);}this.$$.deleteScheduled=true;return this;}function init_ClassHandle(){ClassHandle.prototype[\"isAliasOf\"]=ClassHandle_isAliasOf;ClassHandle.prototype[\"clone\"]=ClassHandle_clone;ClassHandle.prototype[\"delete\"]=ClassHandle_delete;ClassHandle.prototype[\"isDeleted\"]=ClassHandle_isDeleted;ClassHandle.prototype[\"deleteLater\"]=ClassHandle_deleteLater;}function ClassHandle(){}var registeredPointers={};function ensureOverloadTable(proto,methodName,humanName){if(undefined===proto[methodName].overloadTable){var prevFunc=proto[methodName];proto[methodName]=function(){if(!proto[methodName].overloadTable.hasOwnProperty(arguments.length)){throwBindingError(\"Function '\"+humanName+\"' called with an invalid number of arguments (\"+arguments.length+\") - expects one of (\"+proto[methodName].overloadTable+\")!\");}return proto[methodName].overloadTable[arguments.length].apply(this,arguments);};proto[methodName].overloadTable=[];proto[methodName].overloadTable[prevFunc.argCount]=prevFunc;}}function exposePublicSymbol(name,value,numArguments){if(Module.hasOwnProperty(name)){if(undefined===numArguments||undefined!==Module[name].overloadTable&&undefined!==Module[name].overloadTable[numArguments]){throwBindingError(\"Cannot register public name '\"+name+\"' twice\");}ensureOverloadTable(Module,name,name);if(Module.hasOwnProperty(numArguments)){throwBindingError(\"Cannot register multiple overloads of a function with the same number of arguments (\"+numArguments+\")!\");}Module[name].overloadTable[numArguments]=value;}else {Module[name]=value;if(undefined!==numArguments){Module[name].numArguments=numArguments;}}}function RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast){this.name=name;this.constructor=constructor;this.instancePrototype=instancePrototype;this.rawDestructor=rawDestructor;this.baseClass=baseClass;this.getActualType=getActualType;this.upcast=upcast;this.downcast=downcast;this.pureVirtualFunctions=[];}function upcastPointer(ptr,ptrClass,desiredClass){while(ptrClass!==desiredClass){if(!ptrClass.upcast){throwBindingError(\"Expected null or instance of \"+desiredClass.name+\", got an instance of \"+ptrClass.name);}ptr=ptrClass.upcast(ptr);ptrClass=ptrClass.baseClass;}return ptr;}function constNoSmartPtrRawPointerToWireType(destructors,handle){if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name);}return 0;}if(!handle.$$){throwBindingError('Cannot pass \"'+_embind_repr(handle)+'\" as a '+this.name);}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name);}var handleClass=handle.$$.ptrType.registeredClass;var ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);return ptr;}function genericPointerToWireType(destructors,handle){var ptr;if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name);}if(this.isSmartPointer){ptr=this.rawConstructor();if(destructors!==null){destructors.push(this.rawDestructor,ptr);}return ptr;}else {return 0;}}if(!handle.$$){throwBindingError('Cannot pass \"'+_embind_repr(handle)+'\" as a '+this.name);}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name);}if(!this.isConst&&handle.$$.ptrType.isConst){throwBindingError(\"Cannot convert argument of type \"+(handle.$$.smartPtrType?handle.$$.smartPtrType.name:handle.$$.ptrType.name)+\" to parameter type \"+this.name);}var handleClass=handle.$$.ptrType.registeredClass;ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);if(this.isSmartPointer){if(undefined===handle.$$.smartPtr){throwBindingError(\"Passing raw pointer to smart pointer is illegal\");}switch(this.sharingPolicy){case 0:if(handle.$$.smartPtrType===this){ptr=handle.$$.smartPtr;}else {throwBindingError(\"Cannot convert argument of type \"+(handle.$$.smartPtrType?handle.$$.smartPtrType.name:handle.$$.ptrType.name)+\" to parameter type \"+this.name);}break;case 1:ptr=handle.$$.smartPtr;break;case 2:if(handle.$$.smartPtrType===this){ptr=handle.$$.smartPtr;}else {var clonedHandle=handle[\"clone\"]();ptr=this.rawShare(ptr,__emval_register(function(){clonedHandle[\"delete\"]();}));if(destructors!==null){destructors.push(this.rawDestructor,ptr);}}break;default:throwBindingError(\"Unsupporting sharing policy\");}}return ptr;}function nonConstNoSmartPtrRawPointerToWireType(destructors,handle){if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name);}return 0;}if(!handle.$$){throwBindingError('Cannot pass \"'+_embind_repr(handle)+'\" as a '+this.name);}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name);}if(handle.$$.ptrType.isConst){throwBindingError(\"Cannot convert argument of type \"+handle.$$.ptrType.name+\" to parameter type \"+this.name);}var handleClass=handle.$$.ptrType.registeredClass;var ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);return ptr;}function RegisteredPointer_getPointee(ptr){if(this.rawGetPointee){ptr=this.rawGetPointee(ptr);}return ptr;}function RegisteredPointer_destructor(ptr){if(this.rawDestructor){this.rawDestructor(ptr);}}function RegisteredPointer_deleteObject(handle){if(handle!==null){handle[\"delete\"]();}}function downcastPointer(ptr,ptrClass,desiredClass){if(ptrClass===desiredClass){return ptr;}if(undefined===desiredClass.baseClass){return null;}var rv=downcastPointer(ptr,ptrClass,desiredClass.baseClass);if(rv===null){return null;}return desiredClass.downcast(rv);}function getInheritedInstanceCount(){return Object.keys(registeredInstances).length;}function getLiveInheritedInstances(){var rv=[];for(var k in registeredInstances){if(registeredInstances.hasOwnProperty(k)){rv.push(registeredInstances[k]);}}return rv;}function setDelayFunction(fn){delayFunction=fn;if(deletionQueue.length&&delayFunction){delayFunction(flushPendingDeletes);}}function init_embind(){Module[\"getInheritedInstanceCount\"]=getInheritedInstanceCount;Module[\"getLiveInheritedInstances\"]=getLiveInheritedInstances;Module[\"flushPendingDeletes\"]=flushPendingDeletes;Module[\"setDelayFunction\"]=setDelayFunction;}var registeredInstances={};function getBasestPointer(class_,ptr){if(ptr===undefined){throwBindingError(\"ptr should not be undefined\");}while(class_.baseClass){ptr=class_.upcast(ptr);class_=class_.baseClass;}return ptr;}function getInheritedInstance(class_,ptr){ptr=getBasestPointer(class_,ptr);return registeredInstances[ptr];}function makeClassHandle(prototype,record){if(!record.ptrType||!record.ptr){throwInternalError(\"makeClassHandle requires ptr and ptrType\");}var hasSmartPtrType=!!record.smartPtrType;var hasSmartPtr=!!record.smartPtr;if(hasSmartPtrType!==hasSmartPtr){throwInternalError(\"Both smartPtrType and smartPtr must be specified\");}record.count={value:1};return attachFinalizer(Object.create(prototype,{$$:{value:record}}));}function RegisteredPointer_fromWireType(ptr){var rawPointer=this.getPointee(ptr);if(!rawPointer){this.destructor(ptr);return null;}var registeredInstance=getInheritedInstance(this.registeredClass,rawPointer);if(undefined!==registeredInstance){if(0===registeredInstance.$$.count.value){registeredInstance.$$.ptr=rawPointer;registeredInstance.$$.smartPtr=ptr;return registeredInstance[\"clone\"]();}else {var rv=registeredInstance[\"clone\"]();this.destructor(ptr);return rv;}}function makeDefaultHandle(){if(this.isSmartPointer){return makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this.pointeeType,ptr:rawPointer,smartPtrType:this,smartPtr:ptr});}else {return makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this,ptr:ptr});}}var actualType=this.registeredClass.getActualType(rawPointer);var registeredPointerRecord=registeredPointers[actualType];if(!registeredPointerRecord){return makeDefaultHandle.call(this);}var toType;if(this.isConst){toType=registeredPointerRecord.constPointerType;}else {toType=registeredPointerRecord.pointerType;}var dp=downcastPointer(rawPointer,this.registeredClass,toType.registeredClass);if(dp===null){return makeDefaultHandle.call(this);}if(this.isSmartPointer){return makeClassHandle(toType.registeredClass.instancePrototype,{ptrType:toType,ptr:dp,smartPtrType:this,smartPtr:ptr});}else {return makeClassHandle(toType.registeredClass.instancePrototype,{ptrType:toType,ptr:dp});}}function init_RegisteredPointer(){RegisteredPointer.prototype.getPointee=RegisteredPointer_getPointee;RegisteredPointer.prototype.destructor=RegisteredPointer_destructor;RegisteredPointer.prototype[\"argPackAdvance\"]=8;RegisteredPointer.prototype[\"readValueFromPointer\"]=simpleReadValueFromPointer;RegisteredPointer.prototype[\"deleteObject\"]=RegisteredPointer_deleteObject;RegisteredPointer.prototype[\"fromWireType\"]=RegisteredPointer_fromWireType;}function RegisteredPointer(name,registeredClass,isReference,isConst,isSmartPointer,pointeeType,sharingPolicy,rawGetPointee,rawConstructor,rawShare,rawDestructor){this.name=name;this.registeredClass=registeredClass;this.isReference=isReference;this.isConst=isConst;this.isSmartPointer=isSmartPointer;this.pointeeType=pointeeType;this.sharingPolicy=sharingPolicy;this.rawGetPointee=rawGetPointee;this.rawConstructor=rawConstructor;this.rawShare=rawShare;this.rawDestructor=rawDestructor;if(!isSmartPointer&&registeredClass.baseClass===undefined){if(isConst){this[\"toWireType\"]=constNoSmartPtrRawPointerToWireType;this.destructorFunction=null;}else {this[\"toWireType\"]=nonConstNoSmartPtrRawPointerToWireType;this.destructorFunction=null;}}else {this[\"toWireType\"]=genericPointerToWireType;}}function replacePublicSymbol(name,value,numArguments){if(!Module.hasOwnProperty(name)){throwInternalError(\"Replacing nonexistant public symbol\");}if(undefined!==Module[name].overloadTable&&undefined!==numArguments){Module[name].overloadTable[numArguments]=value;}else {Module[name]=value;Module[name].argCount=numArguments;}}function embind__requireFunction(signature,rawFunction){signature=readLatin1String(signature);function makeDynCaller(dynCall){var args=[];for(var i=1;i<signature.length;++i){args.push(\"a\"+i);}var name=\"dynCall_\"+signature+\"_\"+rawFunction;var body=\"return function \"+name+\"(\"+args.join(\", \")+\") {\\n\";body+=\"    return dynCall(rawFunction\"+(args.length?\", \":\"\")+args.join(\", \")+\");\\n\";body+=\"};\\n\";return new Function(\"dynCall\",\"rawFunction\",body)(dynCall,rawFunction);}var dc=Module[\"dynCall_\"+signature];var fp=makeDynCaller(dc);if(typeof fp!==\"function\"){throwBindingError(\"unknown function pointer with signature \"+signature+\": \"+rawFunction);}return fp;}var UnboundTypeError=undefined;function getTypeName(type){var ptr=___getTypeName(type);var rv=readLatin1String(ptr);_free(ptr);return rv;}function throwUnboundTypeError(message,types){var unboundTypes=[];var seen={};function visit(type){if(seen[type]){return;}if(registeredTypes[type]){return;}if(typeDependencies[type]){typeDependencies[type].forEach(visit);return;}unboundTypes.push(type);seen[type]=true;}types.forEach(visit);throw new UnboundTypeError(message+\": \"+unboundTypes.map(getTypeName).join([\", \"]));}function __embind_register_class(rawType,rawPointerType,rawConstPointerType,baseClassRawType,getActualTypeSignature,getActualType,upcastSignature,upcast,downcastSignature,downcast,name,destructorSignature,rawDestructor){name=readLatin1String(name);getActualType=embind__requireFunction(getActualTypeSignature,getActualType);if(upcast){upcast=embind__requireFunction(upcastSignature,upcast);}if(downcast){downcast=embind__requireFunction(downcastSignature,downcast);}rawDestructor=embind__requireFunction(destructorSignature,rawDestructor);var legalFunctionName=makeLegalFunctionName(name);exposePublicSymbol(legalFunctionName,function(){throwUnboundTypeError(\"Cannot construct \"+name+\" due to unbound types\",[baseClassRawType]);});whenDependentTypesAreResolved([rawType,rawPointerType,rawConstPointerType],baseClassRawType?[baseClassRawType]:[],function(base){base=base[0];var baseClass;var basePrototype;if(baseClassRawType){baseClass=base.registeredClass;basePrototype=baseClass.instancePrototype;}else {basePrototype=ClassHandle.prototype;}var constructor=createNamedFunction(legalFunctionName,function(){if(Object.getPrototypeOf(this)!==instancePrototype){throw new BindingError(\"Use 'new' to construct \"+name);}if(undefined===registeredClass.constructor_body){throw new BindingError(name+\" has no accessible constructor\");}var body=registeredClass.constructor_body[arguments.length];if(undefined===body){throw new BindingError(\"Tried to invoke ctor of \"+name+\" with invalid number of parameters (\"+arguments.length+\") - expected (\"+Object.keys(registeredClass.constructor_body).toString()+\") parameters instead!\");}return body.apply(this,arguments);});var instancePrototype=Object.create(basePrototype,{constructor:{value:constructor}});constructor.prototype=instancePrototype;var registeredClass=new RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast);var referenceConverter=new RegisteredPointer(name,registeredClass,true,false,false);var pointerConverter=new RegisteredPointer(name+\"*\",registeredClass,false,false,false);var constPointerConverter=new RegisteredPointer(name+\" const*\",registeredClass,false,true,false);registeredPointers[rawType]={pointerType:pointerConverter,constPointerType:constPointerConverter};replacePublicSymbol(legalFunctionName,constructor);return [referenceConverter,pointerConverter,constPointerConverter];});}function new_(constructor,argumentList){if(!(constructor instanceof Function)){throw new TypeError(\"new_ called with constructor type \"+typeof constructor+\" which is not a function\");}var dummy=createNamedFunction(constructor.name||\"unknownFunctionName\",function(){});dummy.prototype=constructor.prototype;var obj=new dummy();var r=constructor.apply(obj,argumentList);return r instanceof Object?r:obj;}function craftInvokerFunction(humanName,argTypes,classType,cppInvokerFunc,cppTargetFunc){var argCount=argTypes.length;if(argCount<2){throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\");}var isClassMethodFunc=argTypes[1]!==null&&classType!==null;var needsDestructorStack=false;for(var i=1;i<argTypes.length;++i){if(argTypes[i]!==null&&argTypes[i].destructorFunction===undefined){needsDestructorStack=true;break;}}var returns=argTypes[0].name!==\"void\";var argsList=\"\";var argsListWired=\"\";for(var i=0;i<argCount-2;++i){argsList+=(i!==0?\", \":\"\")+\"arg\"+i;argsListWired+=(i!==0?\", \":\"\")+\"arg\"+i+\"Wired\";}var invokerFnBody=\"return function \"+makeLegalFunctionName(humanName)+\"(\"+argsList+\") {\\n\"+\"if (arguments.length !== \"+(argCount-2)+\") {\\n\"+\"throwBindingError('function \"+humanName+\" called with ' + arguments.length + ' arguments, expected \"+(argCount-2)+\" args!');\\n\"+\"}\\n\";if(needsDestructorStack){invokerFnBody+=\"var destructors = [];\\n\";}var dtorStack=needsDestructorStack?\"destructors\":\"null\";var args1=[\"throwBindingError\",\"invoker\",\"fn\",\"runDestructors\",\"retType\",\"classParam\"];var args2=[throwBindingError,cppInvokerFunc,cppTargetFunc,runDestructors,argTypes[0],argTypes[1]];if(isClassMethodFunc){invokerFnBody+=\"var thisWired = classParam.toWireType(\"+dtorStack+\", this);\\n\";}for(var i=0;i<argCount-2;++i){invokerFnBody+=\"var arg\"+i+\"Wired = argType\"+i+\".toWireType(\"+dtorStack+\", arg\"+i+\"); // \"+argTypes[i+2].name+\"\\n\";args1.push(\"argType\"+i);args2.push(argTypes[i+2]);}if(isClassMethodFunc){argsListWired=\"thisWired\"+(argsListWired.length>0?\", \":\"\")+argsListWired;}invokerFnBody+=(returns?\"var rv = \":\"\")+\"invoker(fn\"+(argsListWired.length>0?\", \":\"\")+argsListWired+\");\\n\";if(needsDestructorStack){invokerFnBody+=\"runDestructors(destructors);\\n\";}else {for(var i=isClassMethodFunc?1:2;i<argTypes.length;++i){var paramName=i===1?\"thisWired\":\"arg\"+(i-2)+\"Wired\";if(argTypes[i].destructorFunction!==null){invokerFnBody+=paramName+\"_dtor(\"+paramName+\"); // \"+argTypes[i].name+\"\\n\";args1.push(paramName+\"_dtor\");args2.push(argTypes[i].destructorFunction);}}}if(returns){invokerFnBody+=\"var ret = retType.fromWireType(rv);\\n\"+\"return ret;\\n\";}invokerFnBody+=\"}\\n\";args1.push(invokerFnBody);var invokerFunction=new_(Function,args1).apply(null,args2);return invokerFunction;}function heap32VectorToArray(count,firstElement){var array=[];for(var i=0;i<count;i++){array.push(HEAP32[(firstElement>>2)+i]);}return array;}function __embind_register_class_class_function(rawClassType,methodName,argCount,rawArgTypesAddr,invokerSignature,rawInvoker,fn){var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);methodName=readLatin1String(methodName);rawInvoker=embind__requireFunction(invokerSignature,rawInvoker);whenDependentTypesAreResolved([],[rawClassType],function(classType){classType=classType[0];var humanName=classType.name+\".\"+methodName;function unboundTypesHandler(){throwUnboundTypeError(\"Cannot call \"+humanName+\" due to unbound types\",rawArgTypes);}var proto=classType.registeredClass.constructor;if(undefined===proto[methodName]){unboundTypesHandler.argCount=argCount-1;proto[methodName]=unboundTypesHandler;}else {ensureOverloadTable(proto,methodName,humanName);proto[methodName].overloadTable[argCount-1]=unboundTypesHandler;}whenDependentTypesAreResolved([],rawArgTypes,function(argTypes){var invokerArgsArray=[argTypes[0],null].concat(argTypes.slice(1));var func=craftInvokerFunction(humanName,invokerArgsArray,null,rawInvoker,fn);if(undefined===proto[methodName].overloadTable){func.argCount=argCount-1;proto[methodName]=func;}else {proto[methodName].overloadTable[argCount-1]=func;}return [];});return [];});}function __embind_register_class_constructor(rawClassType,argCount,rawArgTypesAddr,invokerSignature,invoker,rawConstructor){assert(argCount>0);var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);invoker=embind__requireFunction(invokerSignature,invoker);var args=[rawConstructor];var destructors=[];whenDependentTypesAreResolved([],[rawClassType],function(classType){classType=classType[0];var humanName=\"constructor \"+classType.name;if(undefined===classType.registeredClass.constructor_body){classType.registeredClass.constructor_body=[];}if(undefined!==classType.registeredClass.constructor_body[argCount-1]){throw new BindingError(\"Cannot register multiple constructors with identical number of parameters (\"+(argCount-1)+\") for class '\"+classType.name+\"'! Overload resolution is currently only performed using the parameter count, not actual type info!\");}classType.registeredClass.constructor_body[argCount-1]=function unboundTypeHandler(){throwUnboundTypeError(\"Cannot construct \"+classType.name+\" due to unbound types\",rawArgTypes);};whenDependentTypesAreResolved([],rawArgTypes,function(argTypes){classType.registeredClass.constructor_body[argCount-1]=function constructor_body(){if(arguments.length!==argCount-1){throwBindingError(humanName+\" called with \"+arguments.length+\" arguments, expected \"+(argCount-1));}destructors.length=0;args.length=argCount;for(var i=1;i<argCount;++i){args[i]=argTypes[i][\"toWireType\"](destructors,arguments[i-1]);}var ptr=invoker.apply(null,args);runDestructors(destructors);return argTypes[0][\"fromWireType\"](ptr);};return [];});return [];});}function __embind_register_class_function(rawClassType,methodName,argCount,rawArgTypesAddr,invokerSignature,rawInvoker,context,isPureVirtual){var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);methodName=readLatin1String(methodName);rawInvoker=embind__requireFunction(invokerSignature,rawInvoker);whenDependentTypesAreResolved([],[rawClassType],function(classType){classType=classType[0];var humanName=classType.name+\".\"+methodName;if(isPureVirtual){classType.registeredClass.pureVirtualFunctions.push(methodName);}function unboundTypesHandler(){throwUnboundTypeError(\"Cannot call \"+humanName+\" due to unbound types\",rawArgTypes);}var proto=classType.registeredClass.instancePrototype;var method=proto[methodName];if(undefined===method||undefined===method.overloadTable&&method.className!==classType.name&&method.argCount===argCount-2){unboundTypesHandler.argCount=argCount-2;unboundTypesHandler.className=classType.name;proto[methodName]=unboundTypesHandler;}else {ensureOverloadTable(proto,methodName,humanName);proto[methodName].overloadTable[argCount-2]=unboundTypesHandler;}whenDependentTypesAreResolved([],rawArgTypes,function(argTypes){var memberFunction=craftInvokerFunction(humanName,argTypes,classType,rawInvoker,context);if(undefined===proto[methodName].overloadTable){memberFunction.argCount=argCount-2;proto[methodName]=memberFunction;}else {proto[methodName].overloadTable[argCount-2]=memberFunction;}return [];});return [];});}function validateThis(this_,classType,humanName){if(!(this_ instanceof Object)){throwBindingError(humanName+' with invalid \"this\": '+this_);}if(!(this_ instanceof classType.registeredClass.constructor)){throwBindingError(humanName+' incompatible with \"this\" of type '+this_.constructor.name);}if(!this_.$$.ptr){throwBindingError(\"cannot call emscripten binding method \"+humanName+\" on deleted object\");}return upcastPointer(this_.$$.ptr,this_.$$.ptrType.registeredClass,classType.registeredClass);}function __embind_register_class_property(classType,fieldName,getterReturnType,getterSignature,getter,getterContext,setterArgumentType,setterSignature,setter,setterContext){fieldName=readLatin1String(fieldName);getter=embind__requireFunction(getterSignature,getter);whenDependentTypesAreResolved([],[classType],function(classType){classType=classType[0];var humanName=classType.name+\".\"+fieldName;var desc={get:function(){throwUnboundTypeError(\"Cannot access \"+humanName+\" due to unbound types\",[getterReturnType,setterArgumentType]);},enumerable:true,configurable:true};if(setter){desc.set=function(){throwUnboundTypeError(\"Cannot access \"+humanName+\" due to unbound types\",[getterReturnType,setterArgumentType]);};}else {desc.set=function(v){throwBindingError(humanName+\" is a read-only property\");};}Object.defineProperty(classType.registeredClass.instancePrototype,fieldName,desc);whenDependentTypesAreResolved([],setter?[getterReturnType,setterArgumentType]:[getterReturnType],function(types){var getterReturnType=types[0];var desc={get:function(){var ptr=validateThis(this,classType,humanName+\" getter\");return getterReturnType[\"fromWireType\"](getter(getterContext,ptr));},enumerable:true};if(setter){setter=embind__requireFunction(setterSignature,setter);var setterArgumentType=types[1];desc.set=function(v){var ptr=validateThis(this,classType,humanName+\" setter\");var destructors=[];setter(setterContext,ptr,setterArgumentType[\"toWireType\"](destructors,v));runDestructors(destructors);};}Object.defineProperty(classType.registeredClass.instancePrototype,fieldName,desc);return [];});return [];});}function __embind_register_constant(name,type,value){name=readLatin1String(name);whenDependentTypesAreResolved([],[type],function(type){type=type[0];Module[name]=type[\"fromWireType\"](value);return [];});}var emval_free_list=[];var emval_handle_array=[{},{value:undefined},{value:null},{value:true},{value:false}];function __emval_decref(handle){if(handle>4&&0===--emval_handle_array[handle].refcount){emval_handle_array[handle]=undefined;emval_free_list.push(handle);}}function count_emval_handles(){var count=0;for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){++count;}}return count;}function get_first_emval(){for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){return emval_handle_array[i];}}return null;}function init_emval(){Module[\"count_emval_handles\"]=count_emval_handles;Module[\"get_first_emval\"]=get_first_emval;}function __emval_register(value){switch(value){case undefined:{return 1;}case null:{return 2;}case true:{return 3;}case false:{return 4;}default:{var handle=emval_free_list.length?emval_free_list.pop():emval_handle_array.length;emval_handle_array[handle]={refcount:1,value:value};return handle;}}}function __embind_register_emval(rawType,name){name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(handle){var rv=emval_handle_array[handle].value;__emval_decref(handle);return rv;},\"toWireType\":function(destructors,value){return __emval_register(value);},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:null});}function _embind_repr(v){if(v===null){return \"null\";}var t=typeof v;if(t===\"object\"||t===\"array\"||t===\"function\"){return v.toString();}else {return \"\"+v;}}function floatReadValueFromPointer(name,shift){switch(shift){case 2:return function(pointer){return this[\"fromWireType\"](HEAPF32[pointer>>2]);};case 3:return function(pointer){return this[\"fromWireType\"](HEAPF64[pointer>>3]);};default:throw new TypeError(\"Unknown float type: \"+name);}}function __embind_register_float(rawType,name,size){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(value){return value;},\"toWireType\":function(destructors,value){if(typeof value!==\"number\"&&typeof value!==\"boolean\"){throw new TypeError('Cannot convert \"'+_embind_repr(value)+'\" to '+this.name);}return value;},\"argPackAdvance\":8,\"readValueFromPointer\":floatReadValueFromPointer(name,shift),destructorFunction:null});}function __embind_register_function(name,argCount,rawArgTypesAddr,signature,rawInvoker,fn){var argTypes=heap32VectorToArray(argCount,rawArgTypesAddr);name=readLatin1String(name);rawInvoker=embind__requireFunction(signature,rawInvoker);exposePublicSymbol(name,function(){throwUnboundTypeError(\"Cannot call \"+name+\" due to unbound types\",argTypes);},argCount-1);whenDependentTypesAreResolved([],argTypes,function(argTypes){var invokerArgsArray=[argTypes[0],null].concat(argTypes.slice(1));replacePublicSymbol(name,craftInvokerFunction(name,invokerArgsArray,null,rawInvoker,fn),argCount-1);return [];});}function integerReadValueFromPointer(name,shift,signed){switch(shift){case 0:return signed?function readS8FromPointer(pointer){return HEAP8[pointer];}:function readU8FromPointer(pointer){return HEAPU8[pointer];};case 1:return signed?function readS16FromPointer(pointer){return HEAP16[pointer>>1];}:function readU16FromPointer(pointer){return HEAPU16[pointer>>1];};case 2:return signed?function readS32FromPointer(pointer){return HEAP32[pointer>>2];}:function readU32FromPointer(pointer){return HEAPU32[pointer>>2];};default:throw new TypeError(\"Unknown integer type: \"+name);}}function __embind_register_integer(primitiveType,name,size,minRange,maxRange){name=readLatin1String(name);if(maxRange===-1){maxRange=4294967295;}var shift=getShiftFromSize(size);var fromWireType=function(value){return value;};if(minRange===0){var bitshift=32-8*size;fromWireType=function(value){return value<<bitshift>>>bitshift;};}var isUnsignedType=name.indexOf(\"unsigned\")!=-1;registerType(primitiveType,{name:name,\"fromWireType\":fromWireType,\"toWireType\":function(destructors,value){if(typeof value!==\"number\"&&typeof value!==\"boolean\"){throw new TypeError('Cannot convert \"'+_embind_repr(value)+'\" to '+this.name);}if(value<minRange||value>maxRange){throw new TypeError('Passing a number \"'+_embind_repr(value)+'\" from JS side to C/C++ side to an argument of type \"'+name+'\", which is outside the valid range ['+minRange+\", \"+maxRange+\"]!\");}return isUnsignedType?value>>>0:value|0;},\"argPackAdvance\":8,\"readValueFromPointer\":integerReadValueFromPointer(name,shift,minRange!==0),destructorFunction:null});}function __embind_register_memory_view(rawType,dataTypeIndex,name){var typeMapping=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];var TA=typeMapping[dataTypeIndex];function decodeMemoryView(handle){handle=handle>>2;var heap=HEAPU32;var size=heap[handle];var data=heap[handle+1];return new TA(buffer,data,size);}name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":decodeMemoryView,\"argPackAdvance\":8,\"readValueFromPointer\":decodeMemoryView},{ignoreDuplicateRegistrations:true});}function __embind_register_std_string(rawType,name){name=readLatin1String(name);var stdStringIsUTF8=name===\"std::string\";registerType(rawType,{name:name,\"fromWireType\":function(value){var length=HEAPU32[value>>2];var str;if(stdStringIsUTF8){var decodeStartPtr=value+4;for(var i=0;i<=length;++i){var currentBytePtr=value+4+i;if(i==length||HEAPU8[currentBytePtr]==0){var maxRead=currentBytePtr-decodeStartPtr;var stringSegment=UTF8ToString(decodeStartPtr,maxRead);if(str===undefined){str=stringSegment;}else {str+=String.fromCharCode(0);str+=stringSegment;}decodeStartPtr=currentBytePtr+1;}}}else {var a=new Array(length);for(var i=0;i<length;++i){a[i]=String.fromCharCode(HEAPU8[value+4+i]);}str=a.join(\"\");}_free(value);return str;},\"toWireType\":function(destructors,value){if(value instanceof ArrayBuffer){value=new Uint8Array(value);}var getLength;var valueIsOfTypeString=typeof value===\"string\";if(!(valueIsOfTypeString||value instanceof Uint8Array||value instanceof Uint8ClampedArray||value instanceof Int8Array)){throwBindingError(\"Cannot pass non-string to std::string\");}if(stdStringIsUTF8&&valueIsOfTypeString){getLength=function(){return lengthBytesUTF8(value);};}else {getLength=function(){return value.length;};}var length=getLength();var ptr=_malloc(4+length+1);HEAPU32[ptr>>2]=length;if(stdStringIsUTF8&&valueIsOfTypeString){stringToUTF8(value,ptr+4,length+1);}else {if(valueIsOfTypeString){for(var i=0;i<length;++i){var charCode=value.charCodeAt(i);if(charCode>255){_free(ptr);throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\");}HEAPU8[ptr+4+i]=charCode;}}else {for(var i=0;i<length;++i){HEAPU8[ptr+4+i]=value[i];}}}if(destructors!==null){destructors.push(_free,ptr);}return ptr;},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:function(ptr){_free(ptr);}});}function __embind_register_std_wstring(rawType,charSize,name){name=readLatin1String(name);var decodeString,encodeString,getHeap,lengthBytesUTF,shift;if(charSize===2){decodeString=UTF16ToString;encodeString=stringToUTF16;lengthBytesUTF=lengthBytesUTF16;getHeap=function(){return HEAPU16;};shift=1;}else if(charSize===4){decodeString=UTF32ToString;encodeString=stringToUTF32;lengthBytesUTF=lengthBytesUTF32;getHeap=function(){return HEAPU32;};shift=2;}registerType(rawType,{name:name,\"fromWireType\":function(value){var length=HEAPU32[value>>2];var HEAP=getHeap();var str;var decodeStartPtr=value+4;for(var i=0;i<=length;++i){var currentBytePtr=value+4+i*charSize;if(i==length||HEAP[currentBytePtr>>shift]==0){var maxReadBytes=currentBytePtr-decodeStartPtr;var stringSegment=decodeString(decodeStartPtr,maxReadBytes);if(str===undefined){str=stringSegment;}else {str+=String.fromCharCode(0);str+=stringSegment;}decodeStartPtr=currentBytePtr+charSize;}}_free(value);return str;},\"toWireType\":function(destructors,value){if(!(typeof value===\"string\")){throwBindingError(\"Cannot pass non-string to C++ string type \"+name);}var length=lengthBytesUTF(value);var ptr=_malloc(4+length+charSize);HEAPU32[ptr>>2]=length>>shift;encodeString(value,ptr+4,length+charSize);if(destructors!==null){destructors.push(_free,ptr);}return ptr;},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:function(ptr){_free(ptr);}});}function __embind_register_value_array(rawType,name,constructorSignature,rawConstructor,destructorSignature,rawDestructor){tupleRegistrations[rawType]={name:readLatin1String(name),rawConstructor:embind__requireFunction(constructorSignature,rawConstructor),rawDestructor:embind__requireFunction(destructorSignature,rawDestructor),elements:[]};}function __embind_register_value_array_element(rawTupleType,getterReturnType,getterSignature,getter,getterContext,setterArgumentType,setterSignature,setter,setterContext){tupleRegistrations[rawTupleType].elements.push({getterReturnType:getterReturnType,getter:embind__requireFunction(getterSignature,getter),getterContext:getterContext,setterArgumentType:setterArgumentType,setter:embind__requireFunction(setterSignature,setter),setterContext:setterContext});}function __embind_register_value_object(rawType,name,constructorSignature,rawConstructor,destructorSignature,rawDestructor){structRegistrations[rawType]={name:readLatin1String(name),rawConstructor:embind__requireFunction(constructorSignature,rawConstructor),rawDestructor:embind__requireFunction(destructorSignature,rawDestructor),fields:[]};}function __embind_register_value_object_field(structType,fieldName,getterReturnType,getterSignature,getter,getterContext,setterArgumentType,setterSignature,setter,setterContext){structRegistrations[structType].fields.push({fieldName:readLatin1String(fieldName),getterReturnType:getterReturnType,getter:embind__requireFunction(getterSignature,getter),getterContext:getterContext,setterArgumentType:setterArgumentType,setter:embind__requireFunction(setterSignature,setter),setterContext:setterContext});}function __embind_register_void(rawType,name){name=readLatin1String(name);registerType(rawType,{isVoid:true,name:name,\"argPackAdvance\":0,\"fromWireType\":function(){return undefined;},\"toWireType\":function(destructors,o){return undefined;}});}var emval_symbols={};function getStringOrSymbol(address){var symbol=emval_symbols[address];if(symbol===undefined){return readLatin1String(address);}else {return symbol;}}var emval_methodCallers=[];function requireHandle(handle){if(!handle){throwBindingError(\"Cannot use deleted val. handle = \"+handle);}return emval_handle_array[handle].value;}function __emval_call_void_method(caller,handle,methodName,args){caller=emval_methodCallers[caller];handle=requireHandle(handle);methodName=getStringOrSymbol(methodName);caller(handle,methodName,null,args);}function __emval_addMethodCaller(caller){var id=emval_methodCallers.length;emval_methodCallers.push(caller);return id;}function requireRegisteredType(rawType,humanName){var impl=registeredTypes[rawType];if(undefined===impl){throwBindingError(humanName+\" has unknown type \"+getTypeName(rawType));}return impl;}function __emval_lookupTypes(argCount,argTypes){var a=new Array(argCount);for(var i=0;i<argCount;++i){a[i]=requireRegisteredType(HEAP32[(argTypes>>2)+i],\"parameter \"+i);}return a;}function __emval_get_method_caller(argCount,argTypes){var types=__emval_lookupTypes(argCount,argTypes);var retType=types[0];var signatureName=retType.name+\"_$\"+types.slice(1).map(function(t){return t.name;}).join(\"_\")+\"$\";var params=[\"retType\"];var args=[retType];var argsList=\"\";for(var i=0;i<argCount-1;++i){argsList+=(i!==0?\", \":\"\")+\"arg\"+i;params.push(\"argType\"+i);args.push(types[1+i]);}var functionName=makeLegalFunctionName(\"methodCaller_\"+signatureName);var functionBody=\"return function \"+functionName+\"(handle, name, destructors, args) {\\n\";var offset=0;for(var i=0;i<argCount-1;++i){functionBody+=\"    var arg\"+i+\" = argType\"+i+\".readValueFromPointer(args\"+(offset?\"+\"+offset:\"\")+\");\\n\";offset+=types[i+1][\"argPackAdvance\"];}functionBody+=\"    var rv = handle[name](\"+argsList+\");\\n\";for(var i=0;i<argCount-1;++i){if(types[i+1][\"deleteObject\"]){functionBody+=\"    argType\"+i+\".deleteObject(arg\"+i+\");\\n\";}}if(!retType.isVoid){functionBody+=\"    return retType.toWireType(destructors, rv);\\n\";}functionBody+=\"};\\n\";params.push(functionBody);var invokerFunction=new_(Function,params).apply(null,args);return __emval_addMethodCaller(invokerFunction);}function __emval_incref(handle){if(handle>4){emval_handle_array[handle].refcount+=1;}}function __emval_new_array(){return __emval_register([]);}function __emval_new_cstring(v){return __emval_register(getStringOrSymbol(v));}function __emval_set_property(handle,key,value){handle=requireHandle(handle);key=requireHandle(key);value=requireHandle(value);handle[key]=value;}function __emval_take_value(type,argv){type=requireRegisteredType(type,\"_emval_take_value\");var v=type[\"readValueFromPointer\"](argv);return __emval_register(v);}function _abort(){abort();}var _emscripten_get_now_is_monotonic=true;function _clock_gettime(clk_id,tp){var now;if(clk_id===0){now=Date.now();}else if((clk_id===1||clk_id===4)&&_emscripten_get_now_is_monotonic){now=_emscripten_get_now();}else {setErrNo(28);return -1;}HEAP32[tp>>2]=now/1e3|0;HEAP32[tp+4>>2]=now%1e3*1e3*1e3|0;return 0;}function _emscripten_get_sbrk_ptr(){return 626976;}function _emscripten_memcpy_big(dest,src,num){HEAPU8.copyWithin(dest,src,src+num);}function _emscripten_get_heap_size(){return HEAPU8.length;}function emscripten_realloc_buffer(size){try{wasmMemory.grow(size-buffer.byteLength+65535>>>16);updateGlobalBufferAndViews(wasmMemory.buffer);return 1;}catch(e){}}function _emscripten_resize_heap(requestedSize){requestedSize=requestedSize>>>0;var oldSize=_emscripten_get_heap_size();var PAGE_MULTIPLE=65536;var maxHeapSize=1073741824;if(requestedSize>maxHeapSize){return false;}var minHeapSize=16777216;for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(minHeapSize,requestedSize,overGrownHeapSize),PAGE_MULTIPLE));var replacement=emscripten_realloc_buffer(newSize);if(replacement){return true;}}return false;}var ENV={};function __getExecutableName(){return thisProgram||\"./this.program\";}function getEnvStrings(){if(!getEnvStrings.strings){var lang=(typeof navigator===\"object\"&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\";var env={\"USER\":\"web_user\",\"LOGNAME\":\"web_user\",\"PATH\":\"/\",\"PWD\":\"/\",\"HOME\":\"/home/web_user\",\"LANG\":lang,\"_\":__getExecutableName()};for(var x in ENV){env[x]=ENV[x];}var strings=[];for(var x in env){strings.push(x+\"=\"+env[x]);}getEnvStrings.strings=strings;}return getEnvStrings.strings;}function _environ_get(__environ,environ_buf){var bufSize=0;getEnvStrings().forEach(function(string,i){var ptr=environ_buf+bufSize;HEAP32[__environ+i*4>>2]=ptr;writeAsciiToMemory(string,ptr);bufSize+=string.length+1;});return 0;}function _environ_sizes_get(penviron_count,penviron_buf_size){var strings=getEnvStrings();HEAP32[penviron_count>>2]=strings.length;var bufSize=0;strings.forEach(function(string){bufSize+=string.length+1;});HEAP32[penviron_buf_size>>2]=bufSize;return 0;}function _fd_close(fd){try{var stream=SYSCALLS.getStreamFromFD(fd);FS.close(stream);return 0;}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return e.errno;}}function _fd_read(fd,iov,iovcnt,pnum){try{var stream=SYSCALLS.getStreamFromFD(fd);var num=SYSCALLS.doReadv(stream,iov,iovcnt);HEAP32[pnum>>2]=num;return 0;}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return e.errno;}}function _fd_seek(fd,offset_low,offset_high,whence,newOffset){try{var stream=SYSCALLS.getStreamFromFD(fd);var HIGH_OFFSET=4294967296;var offset=offset_high*HIGH_OFFSET+(offset_low>>>0);var DOUBLE_LIMIT=9007199254740992;if(offset<=-DOUBLE_LIMIT||offset>=DOUBLE_LIMIT){return -61;}FS.llseek(stream,offset,whence);tempI64=[stream.position>>>0,(tempDouble=stream.position,+Math_abs(tempDouble)>=1?tempDouble>0?(Math_min(+Math_floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math_ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[newOffset>>2]=tempI64[0],HEAP32[newOffset+4>>2]=tempI64[1];if(stream.getdents&&offset===0&&whence===0)stream.getdents=null;return 0;}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return e.errno;}}function _fd_write(fd,iov,iovcnt,pnum){try{var stream=SYSCALLS.getStreamFromFD(fd);var num=SYSCALLS.doWritev(stream,iov,iovcnt);HEAP32[pnum>>2]=num;return 0;}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return e.errno;}}function _pthread_mutexattr_destroy(){}function _pthread_mutexattr_init(){}function _pthread_mutexattr_settype(){}function _setTempRet0($i){}function __isLeapYear(year){return year%4===0&&(year%100!==0||year%400===0);}function __arraySum(array,index){var sum=0;for(var i=0;i<=index;sum+=array[i++]){}return sum;}var __MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];var __MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];function __addDays(date,days){var newDate=new Date(date.getTime());while(days>0){var leap=__isLeapYear(newDate.getFullYear());var currentMonth=newDate.getMonth();var daysInCurrentMonth=(leap?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR)[currentMonth];if(days>daysInCurrentMonth-newDate.getDate()){days-=daysInCurrentMonth-newDate.getDate()+1;newDate.setDate(1);if(currentMonth<11){newDate.setMonth(currentMonth+1);}else {newDate.setMonth(0);newDate.setFullYear(newDate.getFullYear()+1);}}else {newDate.setDate(newDate.getDate()+days);return newDate;}}return newDate;}function _strftime(s,maxsize,format,tm){var tm_zone=HEAP32[tm+40>>2];var date={tm_sec:HEAP32[tm>>2],tm_min:HEAP32[tm+4>>2],tm_hour:HEAP32[tm+8>>2],tm_mday:HEAP32[tm+12>>2],tm_mon:HEAP32[tm+16>>2],tm_year:HEAP32[tm+20>>2],tm_wday:HEAP32[tm+24>>2],tm_yday:HEAP32[tm+28>>2],tm_isdst:HEAP32[tm+32>>2],tm_gmtoff:HEAP32[tm+36>>2],tm_zone:tm_zone?UTF8ToString(tm_zone):\"\"};var pattern=UTF8ToString(format);var EXPANSION_RULES_1={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var rule in EXPANSION_RULES_1){pattern=pattern.replace(new RegExp(rule,\"g\"),EXPANSION_RULES_1[rule]);}var WEEKDAYS=[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];var MONTHS=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];function leadingSomething(value,digits,character){var str=typeof value===\"number\"?value.toString():value||\"\";while(str.length<digits){str=character[0]+str;}return str;}function leadingNulls(value,digits){return leadingSomething(value,digits,\"0\");}function compareByDay(date1,date2){function sgn(value){return value<0?-1:value>0?1:0;}var compare;if((compare=sgn(date1.getFullYear()-date2.getFullYear()))===0){if((compare=sgn(date1.getMonth()-date2.getMonth()))===0){compare=sgn(date1.getDate()-date2.getDate());}}return compare;}function getFirstWeekStartDate(janFourth){switch(janFourth.getDay()){case 0:return new Date(janFourth.getFullYear()-1,11,29);case 1:return janFourth;case 2:return new Date(janFourth.getFullYear(),0,3);case 3:return new Date(janFourth.getFullYear(),0,2);case 4:return new Date(janFourth.getFullYear(),0,1);case 5:return new Date(janFourth.getFullYear()-1,11,31);case 6:return new Date(janFourth.getFullYear()-1,11,30);}}function getWeekBasedYear(date){var thisDate=__addDays(new Date(date.tm_year+1900,0,1),date.tm_yday);var janFourthThisYear=new Date(thisDate.getFullYear(),0,4);var janFourthNextYear=new Date(thisDate.getFullYear()+1,0,4);var firstWeekStartThisYear=getFirstWeekStartDate(janFourthThisYear);var firstWeekStartNextYear=getFirstWeekStartDate(janFourthNextYear);if(compareByDay(firstWeekStartThisYear,thisDate)<=0){if(compareByDay(firstWeekStartNextYear,thisDate)<=0){return thisDate.getFullYear()+1;}else {return thisDate.getFullYear();}}else {return thisDate.getFullYear()-1;}}var EXPANSION_RULES_2={\"%a\":function(date){return WEEKDAYS[date.tm_wday].substring(0,3);},\"%A\":function(date){return WEEKDAYS[date.tm_wday];},\"%b\":function(date){return MONTHS[date.tm_mon].substring(0,3);},\"%B\":function(date){return MONTHS[date.tm_mon];},\"%C\":function(date){var year=date.tm_year+1900;return leadingNulls(year/100|0,2);},\"%d\":function(date){return leadingNulls(date.tm_mday,2);},\"%e\":function(date){return leadingSomething(date.tm_mday,2,\" \");},\"%g\":function(date){return getWeekBasedYear(date).toString().substring(2);},\"%G\":function(date){return getWeekBasedYear(date);},\"%H\":function(date){return leadingNulls(date.tm_hour,2);},\"%I\":function(date){var twelveHour=date.tm_hour;if(twelveHour==0)twelveHour=12;else if(twelveHour>12)twelveHour-=12;return leadingNulls(twelveHour,2);},\"%j\":function(date){return leadingNulls(date.tm_mday+__arraySum(__isLeapYear(date.tm_year+1900)?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,date.tm_mon-1),3);},\"%m\":function(date){return leadingNulls(date.tm_mon+1,2);},\"%M\":function(date){return leadingNulls(date.tm_min,2);},\"%n\":function(){return \"\\n\";},\"%p\":function(date){if(date.tm_hour>=0&&date.tm_hour<12){return \"AM\";}else {return \"PM\";}},\"%S\":function(date){return leadingNulls(date.tm_sec,2);},\"%t\":function(){return \"\\t\";},\"%u\":function(date){return date.tm_wday||7;},\"%U\":function(date){var janFirst=new Date(date.tm_year+1900,0,1);var firstSunday=janFirst.getDay()===0?janFirst:__addDays(janFirst,7-janFirst.getDay());var endDate=new Date(date.tm_year+1900,date.tm_mon,date.tm_mday);if(compareByDay(firstSunday,endDate)<0){var februaryFirstUntilEndMonth=__arraySum(__isLeapYear(endDate.getFullYear())?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,endDate.getMonth()-1)-31;var firstSundayUntilEndJanuary=31-firstSunday.getDate();var days=firstSundayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();return leadingNulls(Math.ceil(days/7),2);}return compareByDay(firstSunday,janFirst)===0?\"01\":\"00\";},\"%V\":function(date){var janFourthThisYear=new Date(date.tm_year+1900,0,4);var janFourthNextYear=new Date(date.tm_year+1901,0,4);var firstWeekStartThisYear=getFirstWeekStartDate(janFourthThisYear);var firstWeekStartNextYear=getFirstWeekStartDate(janFourthNextYear);var endDate=__addDays(new Date(date.tm_year+1900,0,1),date.tm_yday);if(compareByDay(endDate,firstWeekStartThisYear)<0){return \"53\";}if(compareByDay(firstWeekStartNextYear,endDate)<=0){return \"01\";}var daysDifference;if(firstWeekStartThisYear.getFullYear()<date.tm_year+1900){daysDifference=date.tm_yday+32-firstWeekStartThisYear.getDate();}else {daysDifference=date.tm_yday+1-firstWeekStartThisYear.getDate();}return leadingNulls(Math.ceil(daysDifference/7),2);},\"%w\":function(date){return date.tm_wday;},\"%W\":function(date){var janFirst=new Date(date.tm_year,0,1);var firstMonday=janFirst.getDay()===1?janFirst:__addDays(janFirst,janFirst.getDay()===0?1:7-janFirst.getDay()+1);var endDate=new Date(date.tm_year+1900,date.tm_mon,date.tm_mday);if(compareByDay(firstMonday,endDate)<0){var februaryFirstUntilEndMonth=__arraySum(__isLeapYear(endDate.getFullYear())?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,endDate.getMonth()-1)-31;var firstMondayUntilEndJanuary=31-firstMonday.getDate();var days=firstMondayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();return leadingNulls(Math.ceil(days/7),2);}return compareByDay(firstMonday,janFirst)===0?\"01\":\"00\";},\"%y\":function(date){return (date.tm_year+1900).toString().substring(2);},\"%Y\":function(date){return date.tm_year+1900;},\"%z\":function(date){var off=date.tm_gmtoff;var ahead=off>=0;off=Math.abs(off)/60;off=off/60*100+off%60;return (ahead?\"+\":\"-\")+String(\"0000\"+off).slice(-4);},\"%Z\":function(date){return date.tm_zone;},\"%%\":function(){return \"%\";}};for(var rule in EXPANSION_RULES_2){if(pattern.indexOf(rule)>=0){pattern=pattern.replace(new RegExp(rule,\"g\"),EXPANSION_RULES_2[rule](date));}}var bytes=intArrayFromString(pattern,false);if(bytes.length>maxsize){return 0;}writeArrayToMemory(bytes,s);return bytes.length-1;}function _strftime_l(s,maxsize,format,tm){return _strftime(s,maxsize,format,tm);}Module[\"requestFullscreen\"]=function Module_requestFullscreen(lockPointer,resizeCanvas){Browser.requestFullscreen(lockPointer,resizeCanvas);};Module[\"requestAnimationFrame\"]=function Module_requestAnimationFrame(func){Browser.requestAnimationFrame(func);};Module[\"setCanvasSize\"]=function Module_setCanvasSize(width,height,noUpdates){Browser.setCanvasSize(width,height,noUpdates);};Module[\"pauseMainLoop\"]=function Module_pauseMainLoop(){Browser.mainLoop.pause();};Module[\"resumeMainLoop\"]=function Module_resumeMainLoop(){Browser.mainLoop.resume();};Module[\"getUserMedia\"]=function Module_getUserMedia(){Browser.getUserMedia();};Module[\"createContext\"]=function Module_createContext(canvas,useWebGL,setInModule,webGLContextAttributes){return Browser.createContext(canvas,useWebGL,setInModule,webGLContextAttributes);};var FSNode=function(parent,name,mode,rdev){if(!parent){parent=this;}this.parent=parent;this.mount=parent.mount;this.mounted=null;this.id=FS.nextInode++;this.name=name;this.mode=mode;this.node_ops={};this.stream_ops={};this.rdev=rdev;};var readMode=292|73;var writeMode=146;Object.defineProperties(FSNode.prototype,{read:{get:function(){return (this.mode&readMode)===readMode;},set:function(val){val?this.mode|=readMode:this.mode&=~readMode;}},write:{get:function(){return (this.mode&writeMode)===writeMode;},set:function(val){val?this.mode|=writeMode:this.mode&=~writeMode;}},isFolder:{get:function(){return FS.isDir(this.mode);}},isDevice:{get:function(){return FS.isChrdev(this.mode);}}});FS.FSNode=FSNode;FS.staticInit();Module[\"FS_createFolder\"]=FS.createFolder;Module[\"FS_createPath\"]=FS.createPath;Module[\"FS_createDataFile\"]=FS.createDataFile;Module[\"FS_createPreloadedFile\"]=FS.createPreloadedFile;Module[\"FS_createLazyFile\"]=FS.createLazyFile;Module[\"FS_createLink\"]=FS.createLink;Module[\"FS_createDevice\"]=FS.createDevice;Module[\"FS_unlink\"]=FS.unlink;InternalError=Module[\"InternalError\"]=extendError(Error,\"InternalError\");embind_init_charCodes();BindingError=Module[\"BindingError\"]=extendError(Error,\"BindingError\");init_ClassHandle();init_RegisteredPointer();init_embind();UnboundTypeError=Module[\"UnboundTypeError\"]=extendError(Error,\"UnboundTypeError\");init_emval();function intArrayFromString(stringy,dontAddNull,length){var len=length>0?length:lengthBytesUTF8(stringy)+1;var u8array=new Array(len);var numBytesWritten=stringToUTF8Array(stringy,u8array,0,u8array.length);if(dontAddNull)u8array.length=numBytesWritten;return u8array;}function intArrayToString(array){var ret=[];for(var i=0;i<array.length;i++){var chr=array[i];if(chr>255){chr&=255;}ret.push(String.fromCharCode(chr));}return ret.join(\"\");}var decodeBase64=typeof atob===\"function\"?atob:function(input){var keyStr=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";var output=\"\";var chr1,chr2,chr3;var enc1,enc2,enc3,enc4;var i=0;input=input.replace(/[^A-Za-z0-9\\+\\/\\=]/g,\"\");do{enc1=keyStr.indexOf(input.charAt(i++));enc2=keyStr.indexOf(input.charAt(i++));enc3=keyStr.indexOf(input.charAt(i++));enc4=keyStr.indexOf(input.charAt(i++));chr1=enc1<<2|enc2>>4;chr2=(enc2&15)<<4|enc3>>2;chr3=(enc3&3)<<6|enc4;output=output+String.fromCharCode(chr1);if(enc3!==64){output=output+String.fromCharCode(chr2);}if(enc4!==64){output=output+String.fromCharCode(chr3);}}while(i<input.length);return output;};function intArrayFromBase64(s){if(typeof ENVIRONMENT_IS_NODE===\"boolean\"&&ENVIRONMENT_IS_NODE){var buf;try{buf=Buffer.from(s,\"base64\");}catch(_){buf=new Buffer(s,\"base64\");}return new Uint8Array(buf[\"buffer\"],buf[\"byteOffset\"],buf[\"byteLength\"]);}try{var decoded=decodeBase64(s);var bytes=new Uint8Array(decoded.length);for(var i=0;i<decoded.length;++i){bytes[i]=decoded.charCodeAt(i);}return bytes;}catch(_){throw new Error(\"Converting base64 string to bytes failed.\");}}function tryParseAsDataURI(filename){if(!isDataURI(filename)){return;}return intArrayFromBase64(filename.slice(dataURIPrefix.length));}var asmLibraryArg={\"__cxa_allocate_exception\":___cxa_allocate_exception,\"__cxa_atexit\":___cxa_atexit,\"__cxa_throw\":___cxa_throw,\"__map_file\":___map_file,\"__sys_munmap\":___sys_munmap,\"_embind_finalize_value_array\":__embind_finalize_value_array,\"_embind_finalize_value_object\":__embind_finalize_value_object,\"_embind_register_bool\":__embind_register_bool,\"_embind_register_class\":__embind_register_class,\"_embind_register_class_class_function\":__embind_register_class_class_function,\"_embind_register_class_constructor\":__embind_register_class_constructor,\"_embind_register_class_function\":__embind_register_class_function,\"_embind_register_class_property\":__embind_register_class_property,\"_embind_register_constant\":__embind_register_constant,\"_embind_register_emval\":__embind_register_emval,\"_embind_register_float\":__embind_register_float,\"_embind_register_function\":__embind_register_function,\"_embind_register_integer\":__embind_register_integer,\"_embind_register_memory_view\":__embind_register_memory_view,\"_embind_register_std_string\":__embind_register_std_string,\"_embind_register_std_wstring\":__embind_register_std_wstring,\"_embind_register_value_array\":__embind_register_value_array,\"_embind_register_value_array_element\":__embind_register_value_array_element,\"_embind_register_value_object\":__embind_register_value_object,\"_embind_register_value_object_field\":__embind_register_value_object_field,\"_embind_register_void\":__embind_register_void,\"_emval_call_void_method\":__emval_call_void_method,\"_emval_decref\":__emval_decref,\"_emval_get_method_caller\":__emval_get_method_caller,\"_emval_incref\":__emval_incref,\"_emval_new_array\":__emval_new_array,\"_emval_new_cstring\":__emval_new_cstring,\"_emval_set_property\":__emval_set_property,\"_emval_take_value\":__emval_take_value,\"abort\":_abort,\"clock_gettime\":_clock_gettime,\"emscripten_get_sbrk_ptr\":_emscripten_get_sbrk_ptr,\"emscripten_memcpy_big\":_emscripten_memcpy_big,\"emscripten_resize_heap\":_emscripten_resize_heap,\"environ_get\":_environ_get,\"environ_sizes_get\":_environ_sizes_get,\"fd_close\":_fd_close,\"fd_read\":_fd_read,\"fd_seek\":_fd_seek,\"fd_write\":_fd_write,\"memory\":wasmMemory,\"pthread_mutexattr_destroy\":_pthread_mutexattr_destroy,\"pthread_mutexattr_init\":_pthread_mutexattr_init,\"pthread_mutexattr_settype\":_pthread_mutexattr_settype,\"setTempRet0\":_setTempRet0,\"strftime_l\":_strftime_l,\"table\":wasmTable};createWasm();var ___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=function(){return (___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=Module[\"asm\"][\"__wasm_call_ctors\"]).apply(null,arguments);};var _malloc=Module[\"_malloc\"]=function(){return (_malloc=Module[\"_malloc\"]=Module[\"asm\"][\"malloc\"]).apply(null,arguments);};var _free=Module[\"_free\"]=function(){return (_free=Module[\"_free\"]=Module[\"asm\"][\"free\"]).apply(null,arguments);};var ___errno_location=Module[\"___errno_location\"]=function(){return (___errno_location=Module[\"___errno_location\"]=Module[\"asm\"][\"__errno_location\"]).apply(null,arguments);};var ___getTypeName=Module[\"___getTypeName\"]=function(){return (___getTypeName=Module[\"___getTypeName\"]=Module[\"asm\"][\"__getTypeName\"]).apply(null,arguments);};Module[\"___embind_register_native_and_builtin_types\"]=function(){return (Module[\"___embind_register_native_and_builtin_types\"]=Module[\"asm\"][\"__embind_register_native_and_builtin_types\"]).apply(null,arguments);};Module[\"_setThrew\"]=function(){return (Module[\"_setThrew\"]=Module[\"asm\"][\"setThrew\"]).apply(null,arguments);};var stackSave=Module[\"stackSave\"]=function(){return (stackSave=Module[\"stackSave\"]=Module[\"asm\"][\"stackSave\"]).apply(null,arguments);};var stackRestore=Module[\"stackRestore\"]=function(){return (stackRestore=Module[\"stackRestore\"]=Module[\"asm\"][\"stackRestore\"]).apply(null,arguments);};var stackAlloc=Module[\"stackAlloc\"]=function(){return (stackAlloc=Module[\"stackAlloc\"]=Module[\"asm\"][\"stackAlloc\"]).apply(null,arguments);};Module[\"___cxa_demangle\"]=function(){return (Module[\"___cxa_demangle\"]=Module[\"asm\"][\"__cxa_demangle\"]).apply(null,arguments);};Module[\"_emscripten_main_thread_process_queued_calls\"]=function(){return (Module[\"_emscripten_main_thread_process_queued_calls\"]=Module[\"asm\"][\"emscripten_main_thread_process_queued_calls\"]).apply(null,arguments);};Module[\"__growWasmMemory\"]=function(){return (Module[\"__growWasmMemory\"]=Module[\"asm\"][\"__growWasmMemory\"]).apply(null,arguments);};Module[\"dynCall_ii\"]=function(){return (Module[\"dynCall_ii\"]=Module[\"asm\"][\"dynCall_ii\"]).apply(null,arguments);};Module[\"dynCall_vi\"]=function(){return (Module[\"dynCall_vi\"]=Module[\"asm\"][\"dynCall_vi\"]).apply(null,arguments);};Module[\"dynCall_i\"]=function(){return (Module[\"dynCall_i\"]=Module[\"asm\"][\"dynCall_i\"]).apply(null,arguments);};Module[\"dynCall_iii\"]=function(){return (Module[\"dynCall_iii\"]=Module[\"asm\"][\"dynCall_iii\"]).apply(null,arguments);};Module[\"dynCall_iiii\"]=function(){return (Module[\"dynCall_iiii\"]=Module[\"asm\"][\"dynCall_iiii\"]).apply(null,arguments);};Module[\"dynCall_iiiii\"]=function(){return (Module[\"dynCall_iiiii\"]=Module[\"asm\"][\"dynCall_iiiii\"]).apply(null,arguments);};Module[\"dynCall_iiiiii\"]=function(){return (Module[\"dynCall_iiiiii\"]=Module[\"asm\"][\"dynCall_iiiiii\"]).apply(null,arguments);};Module[\"dynCall_iiiiiii\"]=function(){return (Module[\"dynCall_iiiiiii\"]=Module[\"asm\"][\"dynCall_iiiiiii\"]).apply(null,arguments);};Module[\"dynCall_viii\"]=function(){return (Module[\"dynCall_viii\"]=Module[\"asm\"][\"dynCall_viii\"]).apply(null,arguments);};Module[\"dynCall_viiii\"]=function(){return (Module[\"dynCall_viiii\"]=Module[\"asm\"][\"dynCall_viiii\"]).apply(null,arguments);};Module[\"dynCall_vii\"]=function(){return (Module[\"dynCall_vii\"]=Module[\"asm\"][\"dynCall_vii\"]).apply(null,arguments);};Module[\"dynCall_viiidd\"]=function(){return (Module[\"dynCall_viiidd\"]=Module[\"asm\"][\"dynCall_viiidd\"]).apply(null,arguments);};Module[\"dynCall_viiiidd\"]=function(){return (Module[\"dynCall_viiiidd\"]=Module[\"asm\"][\"dynCall_viiiidd\"]).apply(null,arguments);};Module[\"dynCall_viiid\"]=function(){return (Module[\"dynCall_viiid\"]=Module[\"asm\"][\"dynCall_viiid\"]).apply(null,arguments);};Module[\"dynCall_viiiid\"]=function(){return (Module[\"dynCall_viiiid\"]=Module[\"asm\"][\"dynCall_viiiid\"]).apply(null,arguments);};Module[\"dynCall_viiiii\"]=function(){return (Module[\"dynCall_viiiii\"]=Module[\"asm\"][\"dynCall_viiiii\"]).apply(null,arguments);};Module[\"dynCall_dii\"]=function(){return (Module[\"dynCall_dii\"]=Module[\"asm\"][\"dynCall_dii\"]).apply(null,arguments);};Module[\"dynCall_diii\"]=function(){return (Module[\"dynCall_diii\"]=Module[\"asm\"][\"dynCall_diii\"]).apply(null,arguments);};Module[\"dynCall_iiiid\"]=function(){return (Module[\"dynCall_iiiid\"]=Module[\"asm\"][\"dynCall_iiiid\"]).apply(null,arguments);};Module[\"dynCall_fiii\"]=function(){return (Module[\"dynCall_fiii\"]=Module[\"asm\"][\"dynCall_fiii\"]).apply(null,arguments);};Module[\"dynCall_fiiii\"]=function(){return (Module[\"dynCall_fiiii\"]=Module[\"asm\"][\"dynCall_fiiii\"]).apply(null,arguments);};Module[\"dynCall_fiiiii\"]=function(){return (Module[\"dynCall_fiiiii\"]=Module[\"asm\"][\"dynCall_fiiiii\"]).apply(null,arguments);};Module[\"dynCall_diiiii\"]=function(){return (Module[\"dynCall_diiiii\"]=Module[\"asm\"][\"dynCall_diiiii\"]).apply(null,arguments);};Module[\"dynCall_diiii\"]=function(){return (Module[\"dynCall_diiii\"]=Module[\"asm\"][\"dynCall_diiii\"]).apply(null,arguments);};Module[\"dynCall_viid\"]=function(){return (Module[\"dynCall_viid\"]=Module[\"asm\"][\"dynCall_viid\"]).apply(null,arguments);};Module[\"dynCall_fii\"]=function(){return (Module[\"dynCall_fii\"]=Module[\"asm\"][\"dynCall_fii\"]).apply(null,arguments);};Module[\"dynCall_viif\"]=function(){return (Module[\"dynCall_viif\"]=Module[\"asm\"][\"dynCall_viif\"]).apply(null,arguments);};Module[\"dynCall_iiiiiiiiii\"]=function(){return (Module[\"dynCall_iiiiiiiiii\"]=Module[\"asm\"][\"dynCall_iiiiiiiiii\"]).apply(null,arguments);};Module[\"dynCall_iiiiiiiii\"]=function(){return (Module[\"dynCall_iiiiiiiii\"]=Module[\"asm\"][\"dynCall_iiiiiiiii\"]).apply(null,arguments);};Module[\"dynCall_iiiiiiii\"]=function(){return (Module[\"dynCall_iiiiiiii\"]=Module[\"asm\"][\"dynCall_iiiiiiii\"]).apply(null,arguments);};Module[\"dynCall_viiif\"]=function(){return (Module[\"dynCall_viiif\"]=Module[\"asm\"][\"dynCall_viiif\"]).apply(null,arguments);};Module[\"dynCall_iiiif\"]=function(){return (Module[\"dynCall_iiiif\"]=Module[\"asm\"][\"dynCall_iiiif\"]).apply(null,arguments);};Module[\"dynCall_viiiiiii\"]=function(){return (Module[\"dynCall_viiiiiii\"]=Module[\"asm\"][\"dynCall_viiiiiii\"]).apply(null,arguments);};Module[\"dynCall_viiiiii\"]=function(){return (Module[\"dynCall_viiiiii\"]=Module[\"asm\"][\"dynCall_viiiiii\"]).apply(null,arguments);};Module[\"dynCall_iiidd\"]=function(){return (Module[\"dynCall_iiidd\"]=Module[\"asm\"][\"dynCall_iiidd\"]).apply(null,arguments);};Module[\"dynCall_viidd\"]=function(){return (Module[\"dynCall_viidd\"]=Module[\"asm\"][\"dynCall_viidd\"]).apply(null,arguments);};Module[\"dynCall_viiiiddi\"]=function(){return (Module[\"dynCall_viiiiddi\"]=Module[\"asm\"][\"dynCall_viiiiddi\"]).apply(null,arguments);};Module[\"dynCall_viiiddi\"]=function(){return (Module[\"dynCall_viiiddi\"]=Module[\"asm\"][\"dynCall_viiiddi\"]).apply(null,arguments);};Module[\"dynCall_viiiiiiii\"]=function(){return (Module[\"dynCall_viiiiiiii\"]=Module[\"asm\"][\"dynCall_viiiiiiii\"]).apply(null,arguments);};Module[\"dynCall_viijii\"]=function(){return (Module[\"dynCall_viijii\"]=Module[\"asm\"][\"dynCall_viijii\"]).apply(null,arguments);};Module[\"dynCall_ji\"]=function(){return (Module[\"dynCall_ji\"]=Module[\"asm\"][\"dynCall_ji\"]).apply(null,arguments);};Module[\"dynCall_viiiiiiiii\"]=function(){return (Module[\"dynCall_viiiiiiiii\"]=Module[\"asm\"][\"dynCall_viiiiiiiii\"]).apply(null,arguments);};Module[\"dynCall_viiiiiiiddi\"]=function(){return (Module[\"dynCall_viiiiiiiddi\"]=Module[\"asm\"][\"dynCall_viiiiiiiddi\"]).apply(null,arguments);};Module[\"dynCall_viiiiiiiiiiddi\"]=function(){return (Module[\"dynCall_viiiiiiiiiiddi\"]=Module[\"asm\"][\"dynCall_viiiiiiiiiiddi\"]).apply(null,arguments);};Module[\"dynCall_viiiiiiiiii\"]=function(){return (Module[\"dynCall_viiiiiiiiii\"]=Module[\"asm\"][\"dynCall_viiiiiiiiii\"]).apply(null,arguments);};Module[\"dynCall_viidi\"]=function(){return (Module[\"dynCall_viidi\"]=Module[\"asm\"][\"dynCall_viidi\"]).apply(null,arguments);};Module[\"dynCall_vidii\"]=function(){return (Module[\"dynCall_vidii\"]=Module[\"asm\"][\"dynCall_vidii\"]).apply(null,arguments);};Module[\"dynCall_v\"]=function(){return (Module[\"dynCall_v\"]=Module[\"asm\"][\"dynCall_v\"]).apply(null,arguments);};Module[\"dynCall_viiiiiiiiidd\"]=function(){return (Module[\"dynCall_viiiiiiiiidd\"]=Module[\"asm\"][\"dynCall_viiiiiiiiidd\"]).apply(null,arguments);};Module[\"dynCall_jiji\"]=function(){return (Module[\"dynCall_jiji\"]=Module[\"asm\"][\"dynCall_jiji\"]).apply(null,arguments);};Module[\"dynCall_iidiiii\"]=function(){return (Module[\"dynCall_iidiiii\"]=Module[\"asm\"][\"dynCall_iidiiii\"]).apply(null,arguments);};Module[\"dynCall_iiiiij\"]=function(){return (Module[\"dynCall_iiiiij\"]=Module[\"asm\"][\"dynCall_iiiiij\"]).apply(null,arguments);};Module[\"dynCall_iiiiid\"]=function(){return (Module[\"dynCall_iiiiid\"]=Module[\"asm\"][\"dynCall_iiiiid\"]).apply(null,arguments);};Module[\"dynCall_iiiiijj\"]=function(){return (Module[\"dynCall_iiiiijj\"]=Module[\"asm\"][\"dynCall_iiiiijj\"]).apply(null,arguments);};Module[\"dynCall_iiiiiijj\"]=function(){return (Module[\"dynCall_iiiiiijj\"]=Module[\"asm\"][\"dynCall_iiiiiijj\"]).apply(null,arguments);};Module[\"getMemory\"]=getMemory;Module[\"addRunDependency\"]=addRunDependency;Module[\"removeRunDependency\"]=removeRunDependency;Module[\"FS_createFolder\"]=FS.createFolder;Module[\"FS_createPath\"]=FS.createPath;Module[\"FS_createDataFile\"]=FS.createDataFile;Module[\"FS_createPreloadedFile\"]=FS.createPreloadedFile;Module[\"FS_createLazyFile\"]=FS.createLazyFile;Module[\"FS_createLink\"]=FS.createLink;Module[\"FS_createDevice\"]=FS.createDevice;Module[\"FS_unlink\"]=FS.unlink;var calledRun;function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status;}dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller;};function run(args){if(runDependencies>0){return;}preRun();if(runDependencies>0)return;function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();preMain();readyPromiseResolve(Module);if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun();}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\");},1);doRun();},1);}else {doRun();}}Module[\"run\"]=run;if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()();}}run();if(typeof Module.FS===\"undefined\"&&typeof FS!==\"undefined\"){Module.FS=FS;}Module[\"imread\"]=function(imageSource){var img=null;if(typeof imageSource===\"string\"){img=document.getElementById(imageSource);}else {img=imageSource;}var canvas=null;var ctx=null;if(img instanceof HTMLImageElement){canvas=document.createElement(\"canvas\");canvas.width=img.width;canvas.height=img.height;ctx=canvas.getContext(\"2d\");ctx.drawImage(img,0,0,img.width,img.height);}else if(img instanceof HTMLCanvasElement){canvas=img;ctx=canvas.getContext(\"2d\");}else {throw new Error(\"Please input the valid canvas or img id.\");}var imgData=ctx.getImageData(0,0,canvas.width,canvas.height);return cv.matFromImageData(imgData);};Module[\"imshow\"]=function(canvasSource,mat){var canvas=null;if(typeof canvasSource===\"string\"){canvas=document.getElementById(canvasSource);}else {canvas=canvasSource;}if(!(canvas instanceof HTMLCanvasElement)){throw new Error(\"Please input the valid canvas element or id.\");}if(!(mat instanceof cv.Mat)){throw new Error(\"Please input the valid cv.Mat instance.\");}var img=new cv.Mat();var depth=mat.type()%8;var scale=depth<=cv.CV_8S?1:depth<=cv.CV_32S?1/256:255;var shift=depth===cv.CV_8S||depth===cv.CV_16S?128:0;mat.convertTo(img,cv.CV_8U,scale,shift);switch(img.type()){case cv.CV_8UC1:cv.cvtColor(img,img,cv.COLOR_GRAY2RGBA);break;case cv.CV_8UC3:cv.cvtColor(img,img,cv.COLOR_RGB2RGBA);break;case cv.CV_8UC4:break;default:throw new Error(\"Bad number of channels (Source image must have 1, 3 or 4 channels)\");}var imgData=new ImageData(new Uint8ClampedArray(img.data),img.cols,img.rows);var ctx=canvas.getContext(\"2d\");ctx.clearRect(0,0,canvas.width,canvas.height);canvas.width=imgData.width;canvas.height=imgData.height;ctx.putImageData(imgData,0,0);img.delete();};Module[\"VideoCapture\"]=function(videoSource){var video=null;if(typeof videoSource===\"string\"){video=document.getElementById(videoSource);}else {video=videoSource;}if(!(video instanceof HTMLVideoElement)){throw new Error(\"Please input the valid video element or id.\");}var canvas=document.createElement(\"canvas\");canvas.width=video.width;canvas.height=video.height;var ctx=canvas.getContext(\"2d\");this.video=video;this.read=function(frame){if(!(frame instanceof cv.Mat)){throw new Error(\"Please input the valid cv.Mat instance.\");}if(frame.type()!==cv.CV_8UC4){throw new Error(\"Bad type of input mat: the type should be cv.CV_8UC4.\");}if(frame.cols!==video.width||frame.rows!==video.height){throw new Error(\"Bad size of input mat: the size should be same as the video.\");}ctx.drawImage(video,0,0,video.width,video.height);frame.data.set(ctx.getImageData(0,0,video.width,video.height).data);};};function Range(start,end){this.start=typeof start===\"undefined\"?0:start;this.end=typeof end===\"undefined\"?0:end;}Module[\"Range\"]=Range;function Point(x,y){this.x=typeof x===\"undefined\"?0:x;this.y=typeof y===\"undefined\"?0:y;}Module[\"Point\"]=Point;function Size(width,height){this.width=typeof width===\"undefined\"?0:width;this.height=typeof height===\"undefined\"?0:height;}Module[\"Size\"]=Size;function Rect(){switch(arguments.length){case 0:{this.x=0;this.y=0;this.width=0;this.height=0;break;}case 1:{var rect=arguments[0];this.x=rect.x;this.y=rect.y;this.width=rect.width;this.height=rect.height;break;}case 2:{var point=arguments[0];var size=arguments[1];this.x=point.x;this.y=point.y;this.width=size.width;this.height=size.height;break;}case 4:{this.x=arguments[0];this.y=arguments[1];this.width=arguments[2];this.height=arguments[3];break;}default:{throw new Error(\"Invalid arguments\");}}}Module[\"Rect\"]=Rect;function RotatedRect(){switch(arguments.length){case 0:{this.center={x:0,y:0};this.size={width:0,height:0};this.angle=0;break;}case 3:{this.center=arguments[0];this.size=arguments[1];this.angle=arguments[2];break;}default:{throw new Error(\"Invalid arguments\");}}}RotatedRect.points=function(obj){return Module.rotatedRectPoints(obj);};RotatedRect.boundingRect=function(obj){return Module.rotatedRectBoundingRect(obj);};RotatedRect.boundingRect2f=function(obj){return Module.rotatedRectBoundingRect2f(obj);};Module[\"RotatedRect\"]=RotatedRect;function Scalar(v0,v1,v2,v3){this.push(typeof v0===\"undefined\"?0:v0);this.push(typeof v1===\"undefined\"?0:v1);this.push(typeof v2===\"undefined\"?0:v2);this.push(typeof v3===\"undefined\"?0:v3);}Scalar.prototype=new Array();Scalar.all=function(v){return new Scalar(v,v,v,v);};Module[\"Scalar\"]=Scalar;function MinMaxLoc(){switch(arguments.length){case 0:{this.minVal=0;this.maxVal=0;this.minLoc=new Point();this.maxLoc=new Point();break;}case 4:{this.minVal=arguments[0];this.maxVal=arguments[1];this.minLoc=arguments[2];this.maxLoc=arguments[3];break;}default:{throw new Error(\"Invalid arguments\");}}}Module[\"MinMaxLoc\"]=MinMaxLoc;function Circle(){switch(arguments.length){case 0:{this.center=new Point();this.radius=0;break;}case 2:{this.center=arguments[0];this.radius=arguments[1];break;}default:{throw new Error(\"Invalid arguments\");}}}Module[\"Circle\"]=Circle;function TermCriteria(){switch(arguments.length){case 0:{this.type=0;this.maxCount=0;this.epsilon=0;break;}case 3:{this.type=arguments[0];this.maxCount=arguments[1];this.epsilon=arguments[2];break;}default:{throw new Error(\"Invalid arguments\");}}}Module[\"TermCriteria\"]=TermCriteria;Module[\"matFromArray\"]=function(rows,cols,type,array){var mat=new cv.Mat(rows,cols,type);switch(type){case cv.CV_8U:case cv.CV_8UC1:case cv.CV_8UC2:case cv.CV_8UC3:case cv.CV_8UC4:{mat.data.set(array);break;}case cv.CV_8S:case cv.CV_8SC1:case cv.CV_8SC2:case cv.CV_8SC3:case cv.CV_8SC4:{mat.data8S.set(array);break;}case cv.CV_16U:case cv.CV_16UC1:case cv.CV_16UC2:case cv.CV_16UC3:case cv.CV_16UC4:{mat.data16U.set(array);break;}case cv.CV_16S:case cv.CV_16SC1:case cv.CV_16SC2:case cv.CV_16SC3:case cv.CV_16SC4:{mat.data16S.set(array);break;}case cv.CV_32S:case cv.CV_32SC1:case cv.CV_32SC2:case cv.CV_32SC3:case cv.CV_32SC4:{mat.data32S.set(array);break;}case cv.CV_32F:case cv.CV_32FC1:case cv.CV_32FC2:case cv.CV_32FC3:case cv.CV_32FC4:{mat.data32F.set(array);break;}case cv.CV_64F:case cv.CV_64FC1:case cv.CV_64FC2:case cv.CV_64FC3:case cv.CV_64FC4:{mat.data64F.set(array);break;}default:{throw new Error(\"Type is unsupported\");}}return mat;};Module[\"matFromImageData\"]=function(imageData){var mat=new cv.Mat(imageData.height,imageData.width,cv.CV_8UC4);mat.data.set(imageData.data);return mat;};return cv;};}();module.exports=cv;if(typeof Module==='undefined')Module={};return cv(Module);});});\n\nfunction flatten(arr) {\n  return arr.toString().split(',').map(function (item) {\n    return +item;\n  });\n}\nfunction _int(num) {\n  return num > 0 ? Math.floor(num) : Math.ceil(num);\n}\nfunction clip(data, min, max) {\n  return data < min ? min : data > max ? max : data;\n}\n\nvar DBPostprocess = /*#__PURE__*/function () {\n  function DBPostprocess(result, shape) {\n    var _this = this;\n    var thresh = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0.3;\n    var box_thresh = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0.6;\n    var unclip_ratio = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1.5;\n    _classCallCheck(this, DBPostprocess);\n    _defineProperty(this, \"thresh\", void 0);\n    _defineProperty(this, \"box_thresh\", void 0);\n    _defineProperty(this, \"max_candidates\", void 0);\n    _defineProperty(this, \"unclip_ratio\", void 0);\n    _defineProperty(this, \"min_size\", void 0);\n    _defineProperty(this, \"pred\", void 0);\n    _defineProperty(this, \"segmentation\", void 0);\n    _defineProperty(this, \"width\", void 0);\n    _defineProperty(this, \"height\", void 0);\n    enableBoundaryChecking(false);\n    this.thresh = thresh ? thresh : 0.3;\n    this.box_thresh = box_thresh ? box_thresh : 0.6;\n    this.max_candidates = 1000;\n    this.unclip_ratio = unclip_ratio ? unclip_ratio : 1.5;\n    this.min_size = 3;\n    this.width = shape[0];\n    this.height = shape[1];\n    this.pred = result;\n    this.segmentation = [];\n    this.pred.forEach(function (item) {\n      _this.segmentation.push(item > _this.thresh ? 255 : 0);\n    });\n  }\n  _createClass(DBPostprocess, [{\n    key: \"outputBox\",\n    value: function outputBox() {\n      var _this2 = this;\n      // eslint-disable-next-line new-cap\n      var src = new opencv_ocr.matFromArray(this.width, this.height, opencv_ocr.CV_8UC1, this.segmentation);\n      var contours = new opencv_ocr.MatVector();\n      var hierarchy = new opencv_ocr.Mat();\n      // 获取轮廓\n      opencv_ocr.findContours(src, contours, hierarchy, opencv_ocr.RETR_LIST, opencv_ocr.CHAIN_APPROX_SIMPLE);\n      var num_contours = Math.min(contours.size(), this.max_candidates);\n      var boxes = [];\n      var scores = [];\n      for (var i = 0; i < num_contours; i++) {\n        var contour = contours.get(i);\n        var minBox = this.get_mini_boxes(contour);\n        var points = minBox.points;\n        var side = minBox.side;\n        if (side < this.min_size) {\n          continue;\n        }\n        var score = this.box_score_fast(this.pred, points);\n        if (this.box_thresh > score) {\n          continue;\n        }\n        var box = this.unclip(points);\n        // eslint-disable-next-line new-cap\n        var boxMap = new opencv_ocr.matFromArray(box.length / 2, 1, opencv_ocr.CV_32SC2, box);\n        var resultObj = this.get_mini_boxes(boxMap);\n        box = resultObj.points;\n        side = resultObj.side;\n        if (side < this.min_size + 2) {\n          continue;\n        }\n        box.forEach(function (item) {\n          item[0] = clip(Math.round(item[0]), 0, _this2.width);\n          item[1] = clip(Math.round(item[1]), 0, _this2.height);\n        });\n        boxes.push(box);\n        scores.push(score);\n        boxMap[\"delete\"]();\n      }\n      src[\"delete\"]();\n      contours[\"delete\"]();\n      hierarchy[\"delete\"]();\n      return {\n        boxes: boxes,\n        scores: scores\n      };\n    }\n  }, {\n    key: \"get_mini_boxes\",\n    value: function get_mini_boxes(contour) {\n      // 生成最小外接矩形\n      var bounding_box = opencv_ocr.minAreaRect(contour);\n      var points = [];\n      var mat = new opencv_ocr.Mat();\n      // 获取矩形的四个顶点坐标\n      opencv_ocr.boxPoints(bounding_box, mat);\n      for (var i = 0; i < mat.data32F.length; i += 2) {\n        var arr = [mat.data32F[i], mat.data32F[i + 1]];\n        points.push(arr);\n      }\n      function sortNumber(a, b) {\n        return a[0] - b[0];\n      }\n      points.sort(sortNumber);\n      var index_1;\n      var index_2;\n      var index_3;\n      var index_4;\n      if (points[1][1] > points[0][1]) {\n        index_1 = 0;\n        index_4 = 1;\n      } else {\n        index_1 = 1;\n        index_4 = 0;\n      }\n      if (points[3][1] > points[2][1]) {\n        index_2 = 2;\n        index_3 = 3;\n      } else {\n        index_2 = 3;\n        index_3 = 2;\n      }\n      var box = [points[index_1], points[index_2], points[index_3], points[index_4]];\n      var side = Math.min(bounding_box.size.height, bounding_box.size.width);\n      mat[\"delete\"]();\n      return {\n        points: box,\n        side: side\n      };\n    }\n  }, {\n    key: \"box_score_fast\",\n    value: function box_score_fast(bitmap, _box) {\n      var h = this.height;\n      var w = this.width;\n      var box = JSON.parse(JSON.stringify(_box));\n      var x = [];\n      var y = [];\n      box.forEach(function (item) {\n        x.push(item[0]);\n        y.push(item[1]);\n      });\n      // clip这个函数将将数组中的元素限制在a_min, a_max之间，大于a_max的就使得它等于 a_max，小于a_min,的就使得它等于a_min。\n      var xmin = clip(Math.floor(Math.min.apply(Math, x)), 0, w - 1);\n      var xmax = clip(Math.ceil(Math.max.apply(Math, x)), 0, w - 1);\n      var ymin = clip(Math.floor(Math.min.apply(Math, y)), 0, h - 1);\n      var ymax = clip(Math.ceil(Math.max.apply(Math, y)), 0, h - 1);\n      // eslint-disable-next-line new-cap\n      var mask = new opencv_ocr.Mat.zeros(ymax - ymin + 1, xmax - xmin + 1, opencv_ocr.CV_8UC1);\n      box.forEach(function (item) {\n        item[0] = Math.max(item[0] - xmin, 0);\n        item[1] = Math.max(item[1] - ymin, 0);\n      });\n      var npts = 4;\n      var point_data = new Uint8Array(box.flat());\n      var points = opencv_ocr.matFromArray(npts, 1, opencv_ocr.CV_32SC2, point_data);\n      var pts = new opencv_ocr.MatVector();\n      pts.push_back(points);\n      var color = new opencv_ocr.Scalar(255);\n      // 多个多边形填充\n      opencv_ocr.fillPoly(mask, pts, color, 1);\n      var sliceArr = [];\n      for (var i = ymin; i < ymax + 1; i++) {\n        sliceArr.push.apply(sliceArr, _toConsumableArray(bitmap.slice(this.width * i + xmin, this.height * i + xmax + 1)));\n      }\n      var mean = this.mean(sliceArr, mask.data);\n      mask[\"delete\"]();\n      points[\"delete\"]();\n      pts[\"delete\"]();\n      return mean;\n    }\n  }, {\n    key: \"unclip\",\n    value: function unclip(box) {\n      var _ref;\n      var unclip_ratio = this.unclip_ratio;\n      var area = Math.abs(d3Polygon.polygonArea(box));\n      var length = d3Polygon.polygonLength(box);\n      var distance = area * unclip_ratio / length;\n      var tmpArr = [];\n      box.forEach(function (item) {\n        var obj = {\n          X: 0,\n          Y: 0\n        };\n        obj.X = item[0];\n        obj.Y = item[1];\n        tmpArr.push(obj);\n      });\n      var offset = new clipper.ClipperOffset();\n      offset.AddPath(tmpArr, clipper.JoinType.jtRound, clipper.EndType.etClosedPolygon);\n      var expanded = [];\n      offset.Execute(expanded, distance);\n      var expandedArr = [];\n      expanded[0] && expanded[0].forEach(function (item) {\n        expandedArr.push([item.X, item.Y]);\n      });\n      expandedArr = (_ref = []).concat.apply(_ref, _toConsumableArray(expandedArr));\n      return expandedArr;\n    }\n  }, {\n    key: \"mean\",\n    value: function mean(data, mask) {\n      var sum = 0;\n      var length = 0;\n      for (var i = 0; i < data.length; i++) {\n        if (mask[i]) {\n          sum = plus(sum, data[i]);\n          length++;\n        }\n      }\n      return divide(sum, length);\n    }\n  }]);\n  return DBPostprocess;\n}();\n\nvar character = \"'\\n疗\\n绚\\n诚\\n娇\\n溜\\n题\\n贿\\n者\\n廖\\n更\\n纳\\n加\\n奉\\n公\\n一\\n就\\n汴\\n计\\n与\\n路\\n房\\n原\\n妇\\n2\\n0\\n8\\n-\\n7\\n其\\n>\\n:\\n]\\n,\\n，\\n骑\\n刈\\n全\\n消\\n昏\\n傈\\n安\\n久\\n钟\\n嗅\\n不\\n影\\n处\\n驽\\n蜿\\n资\\n关\\n椤\\n地\\n瘸\\n专\\n问\\n忖\\n票\\n嫉\\n炎\\n韵\\n要\\n月\\n田\\n节\\n陂\\n鄙\\n捌\\n备\\n拳\\n伺\\n眼\\n网\\n盎\\n大\\n傍\\n心\\n东\\n愉\\n汇\\n蹿\\n科\\n每\\n业\\n里\\n航\\n晏\\n字\\n平\\n录\\n先\\n1\\n3\\n彤\\n鲶\\n产\\n稍\\n督\\n腴\\n有\\n象\\n岳\\n注\\n绍\\n在\\n泺\\n文\\n定\\n核\\n名\\n水\\n过\\n理\\n让\\n偷\\n率\\n等\\n这\\n发\\n”\\n为\\n含\\n肥\\n酉\\n相\\n鄱\\n七\\n编\\n猥\\n锛\\n日\\n镀\\n蒂\\n掰\\n倒\\n辆\\n栾\\n栗\\n综\\n涩\\n州\\n雌\\n滑\\n馀\\n了\\n机\\n块\\n司\\n宰\\n甙\\n兴\\n矽\\n抚\\n保\\n用\\n沧\\n秩\\n如\\n收\\n息\\n滥\\n页\\n疑\\n埠\\n!\\n！\\n姥\\n异\\n橹\\n钇\\n向\\n下\\n跄\\n的\\n椴\\n沫\\n国\\n绥\\n獠\\n报\\n开\\n民\\n蜇\\n何\\n分\\n凇\\n长\\n讥\\n藏\\n掏\\n施\\n羽\\n中\\n讲\\n派\\n嘟\\n人\\n提\\n浼\\n间\\n世\\n而\\n古\\n多\\n倪\\n唇\\n饯\\n控\\n庚\\n首\\n赛\\n蜓\\n味\\n断\\n制\\n觉\\n技\\n替\\n艰\\n溢\\n潮\\n夕\\n钺\\n外\\n摘\\n枋\\n动\\n双\\n单\\n啮\\n户\\n枇\\n确\\n锦\\n曜\\n杜\\n或\\n能\\n效\\n霜\\n盒\\n然\\n侗\\n电\\n晁\\n放\\n步\\n鹃\\n新\\n杖\\n蜂\\n吒\\n濂\\n瞬\\n评\\n总\\n隍\\n对\\n独\\n合\\n也\\n是\\n府\\n青\\n天\\n诲\\n墙\\n组\\n滴\\n级\\n邀\\n帘\\n示\\n已\\n时\\n骸\\n仄\\n泅\\n和\\n遨\\n店\\n雇\\n疫\\n持\\n巍\\n踮\\n境\\n只\\n亨\\n目\\n鉴\\n崤\\n闲\\n体\\n泄\\n杂\\n作\\n般\\n轰\\n化\\n解\\n迂\\n诿\\n蛭\\n璀\\n腾\\n告\\n版\\n服\\n省\\n师\\n小\\n规\\n程\\n线\\n海\\n办\\n引\\n二\\n桧\\n牌\\n砺\\n洄\\n裴\\n修\\n图\\n痫\\n胡\\n许\\n犊\\n事\\n郛\\n基\\n柴\\n呼\\n食\\n研\\n奶\\n律\\n蛋\\n因\\n葆\\n察\\n戏\\n褒\\n戒\\n再\\n李\\n骁\\n工\\n貂\\n油\\n鹅\\n章\\n啄\\n休\\n场\\n给\\n睡\\n纷\\n豆\\n器\\n捎\\n说\\n敏\\n学\\n会\\n浒\\n设\\n诊\\n格\\n廓\\n查\\n来\\n霓\\n室\\n溆\\n￠\\n诡\\n寥\\n焕\\n舜\\n柒\\n狐\\n回\\n戟\\n砾\\n厄\\n实\\n翩\\n尿\\n五\\n入\\n径\\n惭\\n喹\\n股\\n宇\\n篝\\n|\\n;\\n美\\n期\\n云\\n九\\n祺\\n扮\\n靠\\n锝\\n槌\\n系\\n企\\n酰\\n阊\\n暂\\n蚕\\n忻\\n豁\\n本\\n羹\\n执\\n条\\n钦\\nH\\n獒\\n限\\n进\\n季\\n楦\\n于\\n芘\\n玖\\n铋\\n茯\\n未\\n答\\n粘\\n括\\n样\\n精\\n欠\\n矢\\n甥\\n帷\\n嵩\\n扣\\n令\\n仔\\n风\\n皈\\n行\\n支\\n部\\n蓉\\n刮\\n站\\n蜡\\n救\\n钊\\n汗\\n松\\n嫌\\n成\\n可\\n.\\n鹤\\n院\\n从\\n交\\n政\\n怕\\n活\\n调\\n球\\n局\\n验\\n髌\\n第\\n韫\\n谗\\n串\\n到\\n圆\\n年\\n米\\n/\\n*\\n友\\n忿\\n检\\n区\\n看\\n自\\n敢\\n刃\\n个\\n兹\\n弄\\n流\\n留\\n同\\n没\\n齿\\n星\\n聆\\n轼\\n湖\\n什\\n三\\n建\\n蛔\\n儿\\n椋\\n汕\\n震\\n颧\\n鲤\\n跟\\n力\\n情\\n璺\\n铨\\n陪\\n务\\n指\\n族\\n训\\n滦\\n鄣\\n濮\\n扒\\n商\\n箱\\n十\\n召\\n慷\\n辗\\n所\\n莞\\n管\\n护\\n臭\\n横\\n硒\\n嗓\\n接\\n侦\\n六\\n露\\n党\\n馋\\n驾\\n剖\\n高\\n侬\\n妪\\n幂\\n猗\\n绺\\n骐\\n央\\n酐\\n孝\\n筝\\n课\\n徇\\n缰\\n门\\n男\\n西\\n项\\n句\\n谙\\n瞒\\n秃\\n篇\\n教\\n碲\\n罚\\n声\\n呐\\n景\\n前\\n富\\n嘴\\n鳌\\n稀\\n免\\n朋\\n啬\\n睐\\n去\\n赈\\n鱼\\n住\\n肩\\n愕\\n速\\n旁\\n波\\n厅\\n健\\n茼\\n厥\\n鲟\\n谅\\n投\\n攸\\n炔\\n数\\n方\\n击\\n呋\\n谈\\n绩\\n别\\n愫\\n僚\\n躬\\n鹧\\n胪\\n炳\\n招\\n喇\\n膨\\n泵\\n蹦\\n毛\\n结\\n5\\n4\\n谱\\n识\\n陕\\n粽\\n婚\\n拟\\n构\\n且\\n搜\\n任\\n潘\\n比\\n郢\\n妨\\n醪\\n陀\\n桔\\n碘\\n扎\\n选\\n哈\\n骷\\n楷\\n亿\\n明\\n缆\\n脯\\n监\\n睫\\n逻\\n婵\\n共\\n赴\\n淝\\n凡\\n惦\\n及\\n达\\n揖\\n谩\\n澹\\n减\\n焰\\n蛹\\n番\\n祁\\n柏\\n员\\n禄\\n怡\\n峤\\n龙\\n白\\n叽\\n生\\n闯\\n起\\n细\\n装\\n谕\\n竟\\n聚\\n钙\\n上\\n导\\n渊\\n按\\n艾\\n辘\\n挡\\n耒\\n盹\\n饪\\n臀\\n记\\n邮\\n蕙\\n受\\n各\\n医\\n搂\\n普\\n滇\\n朗\\n茸\\n带\\n翻\\n酚\\n(\\n光\\n堤\\n墟\\n蔷\\n万\\n幻\\n〓\\n瑙\\n辈\\n昧\\n盏\\n亘\\n蛀\\n吉\\n铰\\n请\\n子\\n假\\n闻\\n税\\n井\\n诩\\n哨\\n嫂\\n好\\n面\\n琐\\n校\\n馊\\n鬣\\n缂\\n营\\n访\\n炖\\n占\\n农\\n缀\\n否\\n经\\n钚\\n棵\\n趟\\n张\\n亟\\n吏\\n茶\\n谨\\n捻\\n论\\n迸\\n堂\\n玉\\n信\\n吧\\n瞠\\n乡\\n姬\\n寺\\n咬\\n溏\\n苄\\n皿\\n意\\n赉\\n宝\\n尔\\n钰\\n艺\\n特\\n唳\\n踉\\n都\\n荣\\n倚\\n登\\n荐\\n丧\\n奇\\n涵\\n批\\n炭\\n近\\n符\\n傩\\n感\\n道\\n着\\n菊\\n虹\\n仲\\n众\\n懈\\n濯\\n颞\\n眺\\n南\\n释\\n北\\n缝\\n标\\n既\\n茗\\n整\\n撼\\n迤\\n贲\\n挎\\n耱\\n拒\\n某\\n妍\\n卫\\n哇\\n英\\n矶\\n藩\\n治\\n他\\n元\\n领\\n膜\\n遮\\n穗\\n蛾\\n飞\\n荒\\n棺\\n劫\\n么\\n市\\n火\\n温\\n拈\\n棚\\n洼\\n转\\n果\\n奕\\n卸\\n迪\\n伸\\n泳\\n斗\\n邡\\n侄\\n涨\\n屯\\n萋\\n胭\\n氡\\n崮\\n枞\\n惧\\n冒\\n彩\\n斜\\n手\\n豚\\n随\\n旭\\n淑\\n妞\\n形\\n菌\\n吲\\n沱\\n争\\n驯\\n歹\\n挟\\n兆\\n柱\\n传\\n至\\n包\\n内\\n响\\n临\\n红\\n功\\n弩\\n衡\\n寂\\n禁\\n老\\n棍\\n耆\\n渍\\n织\\n害\\n氵\\n渑\\n布\\n载\\n靥\\n嗬\\n虽\\n苹\\n咨\\n娄\\n库\\n雉\\n榜\\n帜\\n嘲\\n套\\n瑚\\n亲\\n簸\\n欧\\n边\\n6\\n腿\\n旮\\n抛\\n吹\\n瞳\\n得\\n镓\\n梗\\n厨\\n继\\n漾\\n愣\\n憨\\n士\\n策\\n窑\\n抑\\n躯\\n襟\\n脏\\n参\\n贸\\n言\\n干\\n绸\\n鳄\\n穷\\n藜\\n音\\n折\\n详\\n)\\n举\\n悍\\n甸\\n癌\\n黎\\n谴\\n死\\n罩\\n迁\\n寒\\n驷\\n袖\\n媒\\n蒋\\n掘\\n模\\n纠\\n恣\\n观\\n祖\\n蛆\\n碍\\n位\\n稿\\n主\\n澧\\n跌\\n筏\\n京\\n锏\\n帝\\n贴\\n证\\n糠\\n才\\n黄\\n鲸\\n略\\n炯\\n饱\\n四\\n出\\n园\\n犀\\n牧\\n容\\n汉\\n杆\\n浈\\n汰\\n瑷\\n造\\n虫\\n瘩\\n怪\\n驴\\n济\\n应\\n花\\n沣\\n谔\\n夙\\n旅\\n价\\n矿\\n以\\n考\\ns\\nu\\n呦\\n晒\\n巡\\n茅\\n准\\n肟\\n瓴\\n詹\\n仟\\n褂\\n译\\n桌\\n混\\n宁\\n怦\\n郑\\n抿\\n些\\n余\\n鄂\\n饴\\n攒\\n珑\\n群\\n阖\\n岔\\n琨\\n藓\\n预\\n环\\n洮\\n岌\\n宀\\n杲\\n瀵\\n最\\n常\\n囡\\n周\\n踊\\n女\\n鼓\\n袭\\n喉\\n简\\n范\\n薯\\n遐\\n疏\\n粱\\n黜\\n禧\\n法\\n箔\\n斤\\n遥\\n汝\\n奥\\n直\\n贞\\n撑\\n置\\n绱\\n集\\n她\\n馅\\n逗\\n钧\\n橱\\n魉\\n[\\n恙\\n躁\\n唤\\n9\\n旺\\n膘\\n待\\n脾\\n惫\\n购\\n吗\\n依\\n盲\\n度\\n瘿\\n蠖\\n俾\\n之\\n镗\\n拇\\n鲵\\n厝\\n簧\\n续\\n款\\n展\\n啃\\n表\\n剔\\n品\\n钻\\n腭\\n损\\n清\\n锶\\n统\\n涌\\n寸\\n滨\\n贪\\n链\\n吠\\n冈\\n伎\\n迥\\n咏\\n吁\\n览\\n防\\n迅\\n失\\n汾\\n阔\\n逵\\n绀\\n蔑\\n列\\n川\\n凭\\n努\\n熨\\n揪\\n利\\n俱\\n绉\\n抢\\n鸨\\n我\\n即\\n责\\n膦\\n易\\n毓\\n鹊\\n刹\\n玷\\n岿\\n空\\n嘞\\n绊\\n排\\n术\\n估\\n锷\\n违\\n们\\n苟\\n铜\\n播\\n肘\\n件\\n烫\\n审\\n鲂\\n广\\n像\\n铌\\n惰\\n铟\\n巳\\n胍\\n鲍\\n康\\n憧\\n色\\n恢\\n想\\n拷\\n尤\\n疳\\n知\\nS\\nY\\nF\\nD\\nA\\n峄\\n裕\\n帮\\n握\\n搔\\n氐\\n氘\\n难\\n墒\\n沮\\n雨\\n叁\\n缥\\n悴\\n藐\\n湫\\n娟\\n苑\\n稠\\n颛\\n簇\\n后\\n阕\\n闭\\n蕤\\n缚\\n怎\\n佞\\n码\\n嘤\\n蔡\\n痊\\n舱\\n螯\\n帕\\n赫\\n昵\\n升\\n烬\\n岫\\n、\\n疵\\n蜻\\n髁\\n蕨\\n隶\\n烛\\n械\\n丑\\n盂\\n梁\\n强\\n鲛\\n由\\n拘\\n揉\\n劭\\n龟\\n撤\\n钩\\n呕\\n孛\\n费\\n妻\\n漂\\n求\\n阑\\n崖\\n秤\\n甘\\n通\\n深\\n补\\n赃\\n坎\\n床\\n啪\\n承\\n吼\\n量\\n暇\\n钼\\n烨\\n阂\\n擎\\n脱\\n逮\\n称\\nP\\n神\\n属\\n矗\\n华\\n届\\n狍\\n葑\\n汹\\n育\\n患\\n窒\\n蛰\\n佼\\n静\\n槎\\n运\\n鳗\\n庆\\n逝\\n曼\\n疱\\n克\\n代\\n官\\n此\\n麸\\n耧\\n蚌\\n晟\\n例\\n础\\n榛\\n副\\n测\\n唰\\n缢\\n迹\\n灬\\n霁\\n身\\n岁\\n赭\\n扛\\n又\\n菡\\n乜\\n雾\\n板\\n读\\n陷\\n徉\\n贯\\n郁\\n虑\\n变\\n钓\\n菜\\n圾\\n现\\n琢\\n式\\n乐\\n维\\n渔\\n浜\\n左\\n吾\\n脑\\n钡\\n警\\nT\\n啵\\n拴\\n偌\\n漱\\n湿\\n硕\\n止\\n骼\\n魄\\n积\\n燥\\n联\\n踢\\n玛\\n则\\n窿\\n见\\n振\\n畿\\n送\\n班\\n钽\\n您\\n赵\\n刨\\n印\\n讨\\n踝\\n籍\\n谡\\n舌\\n崧\\n汽\\n蔽\\n沪\\n酥\\n绒\\n怖\\n财\\n帖\\n肱\\n私\\n莎\\n勋\\n羔\\n霸\\n励\\n哼\\n帐\\n将\\n帅\\n渠\\n纪\\n婴\\n娩\\n岭\\n厘\\n滕\\n吻\\n伤\\n坝\\n冠\\n戊\\n隆\\n瘁\\n介\\n涧\\n物\\n黍\\n并\\n姗\\n奢\\n蹑\\n掣\\n垸\\n锴\\n命\\n箍\\n捉\\n病\\n辖\\n琰\\n眭\\n迩\\n艘\\n绌\\n繁\\n寅\\n若\\n毋\\n思\\n诉\\n类\\n诈\\n燮\\n轲\\n酮\\n狂\\n重\\n反\\n职\\n筱\\n县\\n委\\n磕\\n绣\\n奖\\n晋\\n濉\\n志\\n徽\\n肠\\n呈\\n獐\\n坻\\n口\\n片\\n碰\\n几\\n村\\n柿\\n劳\\n料\\n获\\n亩\\n惕\\n晕\\n厌\\n号\\n罢\\n池\\n正\\n鏖\\n煨\\n家\\n棕\\n复\\n尝\\n懋\\n蜥\\n锅\\n岛\\n扰\\n队\\n坠\\n瘾\\n钬\\n@\\n卧\\n疣\\n镇\\n譬\\n冰\\n彷\\n频\\n黯\\n据\\n垄\\n采\\n八\\n缪\\n瘫\\n型\\n熹\\n砰\\n楠\\n襁\\n箐\\n但\\n嘶\\n绳\\n啤\\n拍\\n盥\\n穆\\n傲\\n洗\\n盯\\n塘\\n怔\\n筛\\n丿\\n台\\n恒\\n喂\\n葛\\n永\\n￥\\n烟\\n酒\\n桦\\n书\\n砂\\n蚝\\n缉\\n态\\n瀚\\n袄\\n圳\\n轻\\n蛛\\n超\\n榧\\n遛\\n姒\\n奘\\n铮\\n右\\n荽\\n望\\n偻\\n卡\\n丶\\n氰\\n附\\n做\\n革\\n索\\n戚\\n坨\\n桷\\n唁\\n垅\\n榻\\n岐\\n偎\\n坛\\n莨\\n山\\n殊\\n微\\n骇\\n陈\\n爨\\n推\\n嗝\\n驹\\n澡\\n藁\\n呤\\n卤\\n嘻\\n糅\\n逛\\n侵\\n郓\\n酌\\n德\\n摇\\n※\\n鬃\\n被\\n慨\\n殡\\n羸\\n昌\\n泡\\n戛\\n鞋\\n河\\n宪\\n沿\\n玲\\n鲨\\n翅\\n哽\\n源\\n铅\\n语\\n照\\n邯\\n址\\n荃\\n佬\\n顺\\n鸳\\n町\\n霭\\n睾\\n瓢\\n夸\\n椁\\n晓\\n酿\\n痈\\n咔\\n侏\\n券\\n噎\\n湍\\n签\\n嚷\\n离\\n午\\n尚\\n社\\n锤\\n背\\n孟\\n使\\n浪\\n缦\\n潍\\n鞅\\n军\\n姹\\n驶\\n笑\\n鳟\\n鲁\\n》\\n孽\\n钜\\n绿\\n洱\\n礴\\n焯\\n椰\\n颖\\n囔\\n乌\\n孔\\n巴\\n互\\n性\\n椽\\n哞\\n聘\\n昨\\n早\\n暮\\n胶\\n炀\\n隧\\n低\\n彗\\n昝\\n铁\\n呓\\n氽\\n藉\\n喔\\n癖\\n瑗\\n姨\\n权\\n胱\\n韦\\n堑\\n蜜\\n酋\\n楝\\n砝\\n毁\\n靓\\n歙\\n锲\\n究\\n屋\\n喳\\n骨\\n辨\\n碑\\n武\\n鸠\\n宫\\n辜\\n烊\\n适\\n坡\\n殃\\n培\\n佩\\n供\\n走\\n蜈\\n迟\\n翼\\n况\\n姣\\n凛\\n浔\\n吃\\n飘\\n债\\n犟\\n金\\n促\\n苛\\n崇\\n坂\\n莳\\n畔\\n绂\\n兵\\n蠕\\n斋\\n根\\n砍\\n亢\\n欢\\n恬\\n崔\\n剁\\n餐\\n榫\\n快\\n扶\\n‖\\n濒\\n缠\\n鳜\\n当\\n彭\\n驭\\n浦\\n篮\\n昀\\n锆\\n秸\\n钳\\n弋\\n娣\\n瞑\\n夷\\n龛\\n苫\\n拱\\n致\\n%\\n嵊\\n障\\n隐\\n弑\\n初\\n娓\\n抉\\n汩\\n累\\n蓖\\n\\\"\\n唬\\n助\\n苓\\n昙\\n押\\n毙\\n破\\n城\\n郧\\n逢\\n嚏\\n獭\\n瞻\\n溱\\n婿\\n赊\\n跨\\n恼\\n璧\\n萃\\n姻\\n貉\\n灵\\n炉\\n密\\n氛\\n陶\\n砸\\n谬\\n衔\\n点\\n琛\\n沛\\n枳\\n层\\n岱\\n诺\\n脍\\n榈\\n埂\\n征\\n冷\\n裁\\n打\\n蹴\\n素\\n瘘\\n逞\\n蛐\\n聊\\n激\\n腱\\n萘\\n踵\\n飒\\n蓟\\n吆\\n取\\n咙\\n簋\\n涓\\n矩\\n曝\\n挺\\n揣\\n座\\n你\\n史\\n舵\\n焱\\n尘\\n苏\\n笈\\n脚\\n溉\\n榨\\n诵\\n樊\\n邓\\n焊\\n义\\n庶\\n儋\\n蟋\\n蒲\\n赦\\n呷\\n杞\\n诠\\n豪\\n还\\n试\\n颓\\n茉\\n太\\n除\\n紫\\n逃\\n痴\\n草\\n充\\n鳕\\n珉\\n祗\\n墨\\n渭\\n烩\\n蘸\\n慕\\n璇\\n镶\\n穴\\n嵘\\n恶\\n骂\\n险\\n绋\\n幕\\n碉\\n肺\\n戳\\n刘\\n潞\\n秣\\n纾\\n潜\\n銮\\n洛\\n须\\n罘\\n销\\n瘪\\n汞\\n兮\\n屉\\nr\\n林\\n厕\\n质\\n探\\n划\\n狸\\n殚\\n善\\n煊\\n烹\\n〒\\n锈\\n逯\\n宸\\n辍\\n泱\\n柚\\n袍\\n远\\n蹋\\n嶙\\n绝\\n峥\\n娥\\n缍\\n雀\\n徵\\n认\\n镱\\n谷\\n=\\n贩\\n勉\\n撩\\n鄯\\n斐\\n洋\\n非\\n祚\\n泾\\n诒\\n饿\\n撬\\n威\\n晷\\n搭\\n芍\\n锥\\n笺\\n蓦\\n候\\n琊\\n档\\n礁\\n沼\\n卵\\n荠\\n忑\\n朝\\n凹\\n瑞\\n头\\n仪\\n弧\\n孵\\n畏\\n铆\\n突\\n衲\\n车\\n浩\\n气\\n茂\\n悖\\n厢\\n枕\\n酝\\n戴\\n湾\\n邹\\n飚\\n攘\\n锂\\n写\\n宵\\n翁\\n岷\\n无\\n喜\\n丈\\n挑\\n嗟\\n绛\\n殉\\n议\\n槽\\n具\\n醇\\n淞\\n笃\\n郴\\n阅\\n饼\\n底\\n壕\\n砚\\n弈\\n询\\n缕\\n庹\\n翟\\n零\\n筷\\n暨\\n舟\\n闺\\n甯\\n撞\\n麂\\n茌\\n蔼\\n很\\n珲\\n捕\\n棠\\n角\\n阉\\n媛\\n娲\\n诽\\n剿\\n尉\\n爵\\n睬\\n韩\\n诰\\n匣\\n危\\n糍\\n镯\\n立\\n浏\\n阳\\n少\\n盆\\n舔\\n擘\\n匪\\n申\\n尬\\n铣\\n旯\\n抖\\n赘\\n瓯\\n居\\nˇ\\n哮\\n游\\n锭\\n茏\\n歌\\n坏\\n甚\\n秒\\n舞\\n沙\\n仗\\n劲\\n潺\\n阿\\n燧\\n郭\\n嗖\\n霏\\n忠\\n材\\n奂\\n耐\\n跺\\n砀\\n输\\n岖\\n媳\\n氟\\n极\\n摆\\n灿\\n今\\n扔\\n腻\\n枝\\n奎\\n药\\n熄\\n吨\\n话\\nq\\n额\\n慑\\n嘌\\n协\\n喀\\n壳\\n埭\\n视\\n著\\n於\\n愧\\n陲\\n翌\\n峁\\n颅\\n佛\\n腹\\n聋\\n侯\\n咎\\n叟\\n秀\\n颇\\n存\\n较\\n罪\\n哄\\n岗\\n扫\\n栏\\n钾\\n羌\\n己\\n璨\\n枭\\n霉\\n煌\\n涸\\n衿\\n键\\n镝\\n益\\n岢\\n奏\\n连\\n夯\\n睿\\n冥\\n均\\n糖\\n狞\\n蹊\\n稻\\n爸\\n刿\\n胥\\n煜\\n丽\\n肿\\n璃\\n掸\\n跚\\n灾\\n垂\\n樾\\n濑\\n乎\\n莲\\n窄\\n犹\\n撮\\n战\\n馄\\n软\\n络\\n显\\n鸢\\n胸\\n宾\\n妲\\n恕\\n埔\\n蝌\\n份\\n遇\\n巧\\n瞟\\n粒\\n恰\\n剥\\n桡\\n博\\n讯\\n凯\\n堇\\n阶\\n滤\\n卖\\n斌\\n骚\\n彬\\n兑\\n磺\\n樱\\n舷\\n两\\n娱\\n福\\n仃\\n差\\n找\\n桁\\n÷\\n净\\n把\\n阴\\n污\\n戬\\n雷\\n碓\\n蕲\\n楚\\n罡\\n焖\\n抽\\n妫\\n咒\\n仑\\n闱\\n尽\\n邑\\n菁\\n爱\\n贷\\n沥\\n鞑\\n牡\\n嗉\\n崴\\n骤\\n塌\\n嗦\\n订\\n拮\\n滓\\n捡\\n锻\\n次\\n坪\\n杩\\n臃\\n箬\\n融\\n珂\\n鹗\\n宗\\n枚\\n降\\n鸬\\n妯\\n阄\\n堰\\n盐\\n毅\\n必\\n杨\\n崃\\n俺\\n甬\\n状\\n莘\\n货\\n耸\\n菱\\n腼\\n铸\\n唏\\n痤\\n孚\\n澳\\n懒\\n溅\\n翘\\n疙\\n杷\\n淼\\n缙\\n骰\\n喊\\n悉\\n砻\\n坷\\n艇\\n赁\\n界\\n谤\\n纣\\n宴\\n晃\\n茹\\n归\\n饭\\n梢\\n铡\\n街\\n抄\\n肼\\n鬟\\n苯\\n颂\\n撷\\n戈\\n炒\\n咆\\n茭\\n瘙\\n负\\n仰\\n客\\n琉\\n铢\\n封\\n卑\\n珥\\n椿\\n镧\\n窨\\n鬲\\n寿\\n御\\n袤\\n铃\\n萎\\n砖\\n餮\\n脒\\n裳\\n肪\\n孕\\n嫣\\n馗\\n嵇\\n恳\\n氯\\n江\\n石\\n褶\\n冢\\n祸\\n阻\\n狈\\n羞\\n银\\n靳\\n透\\n咳\\n叼\\n敷\\n芷\\n啥\\n它\\n瓤\\n兰\\n痘\\n懊\\n逑\\n肌\\n往\\n捺\\n坊\\n甩\\n呻\\n〃\\n沦\\n忘\\n膻\\n祟\\n菅\\n剧\\n崆\\n智\\n坯\\n臧\\n霍\\n墅\\n攻\\n眯\\n倘\\n拢\\n骠\\n铐\\n庭\\n岙\\n瓠\\n′\\n缺\\n泥\\n迢\\n捶\\n?\\n？\\n郏\\n喙\\n掷\\n沌\\n纯\\n秘\\n种\\n听\\n绘\\n固\\n螨\\n团\\n香\\n盗\\n妒\\n埚\\n蓝\\n拖\\n旱\\n荞\\n铀\\n血\\n遏\\n汲\\n辰\\n叩\\n拽\\n幅\\n硬\\n惶\\n桀\\n漠\\n措\\n泼\\n唑\\n齐\\n肾\\n念\\n酱\\n虚\\n屁\\n耶\\n旗\\n砦\\n闵\\n婉\\n馆\\n拭\\n绅\\n韧\\n忏\\n窝\\n醋\\n葺\\n顾\\n辞\\n倜\\n堆\\n辋\\n逆\\n玟\\n贱\\n疾\\n董\\n惘\\n倌\\n锕\\n淘\\n嘀\\n莽\\n俭\\n笏\\n绑\\n鲷\\n杈\\n择\\n蟀\\n粥\\n嗯\\n驰\\n逾\\n案\\n谪\\n褓\\n胫\\n哩\\n昕\\n颚\\n鲢\\n绠\\n躺\\n鹄\\n崂\\n儒\\n俨\\n丝\\n尕\\n泌\\n啊\\n萸\\n彰\\n幺\\n吟\\n骄\\n苣\\n弦\\n脊\\n瑰\\n〈\\n诛\\n镁\\n析\\n闪\\n剪\\n侧\\n哟\\n框\\n螃\\n守\\n嬗\\n燕\\n狭\\n铈\\n缮\\n概\\n迳\\n痧\\n鲲\\n俯\\n售\\n笼\\n痣\\n扉\\n挖\\n满\\n咋\\n援\\n邱\\n扇\\n歪\\n便\\n玑\\n绦\\n峡\\n蛇\\n叨\\n〖\\n泽\\n胃\\n斓\\n喋\\n怂\\n坟\\n猪\\n该\\n蚬\\n炕\\n弥\\n赞\\n棣\\n晔\\n娠\\n挲\\n狡\\n创\\n疖\\n铕\\n镭\\n稷\\n挫\\n弭\\n啾\\n翔\\n粉\\n履\\n苘\\n哦\\n楼\\n秕\\n铂\\n土\\n锣\\n瘟\\n挣\\n栉\\n习\\n享\\n桢\\n袅\\n磨\\n桂\\n谦\\n延\\n坚\\n蔚\\n噗\\n署\\n谟\\n猬\\n钎\\n恐\\n嬉\\n雒\\n倦\\n衅\\n亏\\n璩\\n睹\\n刻\\n殿\\n王\\n算\\n雕\\n麻\\n丘\\n柯\\n骆\\n丸\\n塍\\n谚\\n添\\n鲈\\n垓\\n桎\\n蚯\\n芥\\n予\\n飕\\n镦\\n谌\\n窗\\n醚\\n菀\\n亮\\n搪\\n莺\\n蒿\\n羁\\n足\\nJ\\n真\\n轶\\n悬\\n衷\\n靛\\n翊\\n掩\\n哒\\n炅\\n掐\\n冼\\n妮\\nl\\n谐\\n稚\\n荆\\n擒\\n犯\\n陵\\n虏\\n浓\\n崽\\n刍\\n陌\\n傻\\n孜\\n千\\n靖\\n演\\n矜\\n钕\\n煽\\n杰\\n酗\\n渗\\n伞\\n栋\\n俗\\n泫\\n戍\\n罕\\n沾\\n疽\\n灏\\n煦\\n芬\\n磴\\n叱\\n阱\\n榉\\n湃\\n蜀\\n叉\\n醒\\n彪\\n租\\n郡\\n篷\\n屎\\n良\\n垢\\n隗\\n弱\\n陨\\n峪\\n砷\\n掴\\n颁\\n胎\\n雯\\n绵\\n贬\\n沐\\n撵\\n隘\\n篙\\n暖\\n曹\\n陡\\n栓\\n填\\n臼\\n彦\\n瓶\\n琪\\n潼\\n哪\\n鸡\\n摩\\n啦\\n俟\\n锋\\n域\\n耻\\n蔫\\n疯\\n纹\\n撇\\n毒\\n绶\\n痛\\n酯\\n忍\\n爪\\n赳\\n歆\\n嘹\\n辕\\n烈\\n册\\n朴\\n钱\\n吮\\n毯\\n癜\\n娃\\n谀\\n邵\\n厮\\n炽\\n璞\\n邃\\n丐\\n追\\n词\\n瓒\\n忆\\n轧\\n芫\\n谯\\n喷\\n弟\\n半\\n冕\\n裙\\n掖\\n墉\\n绮\\n寝\\n苔\\n势\\n顷\\n褥\\n切\\n衮\\n君\\n佳\\n嫒\\n蚩\\n霞\\n佚\\n洙\\n逊\\n镖\\n暹\\n唛\\n&\\n殒\\n顶\\n碗\\n獗\\n轭\\n铺\\n蛊\\n废\\n恹\\n汨\\n崩\\n珍\\n那\\n杵\\n曲\\n纺\\n夏\\n薰\\n傀\\n闳\\n淬\\n姘\\n舀\\n拧\\n卷\\n楂\\n恍\\n讪\\n厩\\n寮\\n篪\\n赓\\n乘\\n灭\\n盅\\n鞣\\n沟\\n慎\\n挂\\n饺\\n鼾\\n杳\\n树\\n缨\\n丛\\n絮\\n娌\\n臻\\n嗳\\n篡\\n侩\\n述\\n衰\\n矛\\n圈\\n蚜\\n匕\\n筹\\n匿\\n濞\\n晨\\n叶\\n骋\\n郝\\n挚\\n蚴\\n滞\\n增\\n侍\\n描\\n瓣\\n吖\\n嫦\\n蟒\\n匾\\n圣\\n赌\\n毡\\n癞\\n恺\\n百\\n曳\\n需\\n篓\\n肮\\n庖\\n帏\\n卿\\n驿\\n遗\\n蹬\\n鬓\\n骡\\n歉\\n芎\\n胳\\n屐\\n禽\\n烦\\n晌\\n寄\\n媾\\n狄\\n翡\\n苒\\n船\\n廉\\n终\\n痞\\n殇\\n々\\n畦\\n饶\\n改\\n拆\\n悻\\n萄\\n￡\\n瓿\\n乃\\n訾\\n桅\\n匮\\n溧\\n拥\\n纱\\n铍\\n骗\\n蕃\\n龋\\n缬\\n父\\n佐\\n疚\\n栎\\n醍\\n掳\\n蓄\\nx\\n惆\\n颜\\n鲆\\n榆\\n〔\\n猎\\n敌\\n暴\\n谥\\n鲫\\n贾\\n罗\\n玻\\n缄\\n扦\\n芪\\n癣\\n落\\n徒\\n臾\\n恿\\n猩\\n托\\n邴\\n肄\\n牵\\n春\\n陛\\n耀\\n刊\\n拓\\n蓓\\n邳\\n堕\\n寇\\n枉\\n淌\\n啡\\n湄\\n兽\\n酷\\n萼\\n碚\\n濠\\n萤\\n夹\\n旬\\n戮\\n梭\\n琥\\n椭\\n昔\\n勺\\n蜊\\n绐\\n晚\\n孺\\n僵\\n宣\\n摄\\n冽\\n旨\\n萌\\n忙\\n蚤\\n眉\\n噼\\n蟑\\n付\\n契\\n瓜\\n悼\\n颡\\n壁\\n曾\\n窕\\n颢\\n澎\\n仿\\n俑\\n浑\\n嵌\\n浣\\n乍\\n碌\\n褪\\n乱\\n蔟\\n隙\\n玩\\n剐\\n葫\\n箫\\n纲\\n围\\n伐\\n决\\n伙\\n漩\\n瑟\\n刑\\n肓\\n镳\\n缓\\n蹭\\n氨\\n皓\\n典\\n畲\\n坍\\n铑\\n檐\\n塑\\n洞\\n倬\\n储\\n胴\\n淳\\n戾\\n吐\\n灼\\n惺\\n妙\\n毕\\n珐\\n缈\\n虱\\n盖\\n羰\\n鸿\\n磅\\n谓\\n髅\\n娴\\n苴\\n唷\\n蚣\\n霹\\n抨\\n贤\\n唠\\n犬\\n誓\\n逍\\n庠\\n逼\\n麓\\n籼\\n釉\\n呜\\n碧\\n秧\\n氩\\n摔\\n霄\\n穸\\n纨\\n辟\\n妈\\n映\\n完\\n牛\\n缴\\n嗷\\n炊\\n恩\\n荔\\n茆\\n掉\\n紊\\n慌\\n莓\\n羟\\n阙\\n萁\\n磐\\n另\\n蕹\\n辱\\n鳐\\n湮\\n吡\\n吩\\n唐\\n睦\\n垠\\n舒\\n圜\\n冗\\n瞿\\n溺\\n芾\\n囱\\n匠\\n僳\\n汐\\n菩\\n饬\\n漓\\n黑\\n霰\\n浸\\n濡\\n窥\\n毂\\n蒡\\n兢\\n驻\\n鹉\\n芮\\n诙\\n迫\\n雳\\n厂\\n忐\\n臆\\n猴\\n鸣\\n蚪\\n栈\\n箕\\n羡\\n渐\\n莆\\n捍\\n眈\\n哓\\n趴\\n蹼\\n埕\\n嚣\\n骛\\n宏\\n淄\\n斑\\n噜\\n严\\n瑛\\n垃\\n椎\\n诱\\n压\\n庾\\n绞\\n焘\\n廿\\n抡\\n迄\\n棘\\n夫\\n纬\\n锹\\n眨\\n瞌\\n侠\\n脐\\n竞\\n瀑\\n孳\\n骧\\n遁\\n姜\\n颦\\n荪\\n滚\\n萦\\n伪\\n逸\\n粳\\n爬\\n锁\\n矣\\n役\\n趣\\n洒\\n颔\\n诏\\n逐\\n奸\\n甭\\n惠\\n攀\\n蹄\\n泛\\n尼\\n拼\\n阮\\n鹰\\n亚\\n颈\\n惑\\n勒\\n〉\\n际\\n肛\\n爷\\n刚\\n钨\\n丰\\n养\\n冶\\n鲽\\n辉\\n蔻\\n画\\n覆\\n皴\\n妊\\n麦\\n返\\n醉\\n皂\\n擀\\n〗\\n酶\\n凑\\n粹\\n悟\\n诀\\n硖\\n港\\n卜\\nz\\n杀\\n涕\\n±\\n舍\\n铠\\n抵\\n弛\\n段\\n敝\\n镐\\n奠\\n拂\\n轴\\n跛\\n袱\\ne\\nt\\n沉\\n菇\\n俎\\n薪\\n峦\\n秭\\n蟹\\n历\\n盟\\n菠\\n寡\\n液\\n肢\\n喻\\n染\\n裱\\n悱\\n抱\\n氙\\n赤\\n捅\\n猛\\n跑\\n氮\\n谣\\n仁\\n尺\\n辊\\n窍\\n烙\\n衍\\n架\\n擦\\n倏\\n璐\\n瑁\\n币\\n楞\\n胖\\n夔\\n趸\\n邛\\n惴\\n饕\\n虔\\n蝎\\n§\\n哉\\n贝\\n宽\\n辫\\n炮\\n扩\\n饲\\n籽\\n魏\\n菟\\n锰\\n伍\\n猝\\n末\\n琳\\n哚\\n蛎\\n邂\\n呀\\n姿\\n鄞\\n却\\n歧\\n仙\\n恸\\n椐\\n森\\n牒\\n寤\\n袒\\n婆\\n虢\\n雅\\n钉\\n朵\\n贼\\n欲\\n苞\\n寰\\n故\\n龚\\n坭\\n嘘\\n咫\\n礼\\n硷\\n兀\\n睢\\n汶\\n’\\n铲\\n烧\\n绕\\n诃\\n浃\\n钿\\n哺\\n柜\\n讼\\n颊\\n璁\\n腔\\n洽\\n咐\\n脲\\n簌\\n筠\\n镣\\n玮\\n鞠\\n谁\\n兼\\n姆\\n挥\\n梯\\n蝴\\n谘\\n漕\\n刷\\n躏\\n宦\\n弼\\nb\\n垌\\n劈\\n麟\\n莉\\n揭\\n笙\\n渎\\n仕\\n嗤\\n仓\\n配\\n怏\\n抬\\n错\\n泯\\n镊\\n孰\\n猿\\n邪\\n仍\\n秋\\n鼬\\n壹\\n歇\\n吵\\n炼\\n<\\n尧\\n射\\n柬\\n廷\\n胧\\n霾\\n凳\\n隋\\n肚\\n浮\\n梦\\n祥\\n株\\n堵\\n退\\nL\\n鹫\\n跎\\n凶\\n毽\\n荟\\n炫\\n栩\\n玳\\n甜\\n沂\\n鹿\\n顽\\n伯\\n爹\\n赔\\n蛴\\n徐\\n匡\\n欣\\n狰\\n缸\\n雹\\n蟆\\n疤\\n默\\n沤\\n啜\\n痂\\n衣\\n禅\\nw\\ni\\nh\\n辽\\n葳\\n黝\\n钗\\n停\\n沽\\n棒\\n馨\\n颌\\n肉\\n吴\\n硫\\n悯\\n劾\\n娈\\n马\\n啧\\n吊\\n悌\\n镑\\n峭\\n帆\\n瀣\\n涉\\n咸\\n疸\\n滋\\n泣\\n翦\\n拙\\n癸\\n钥\\n蜒\\n+\\n尾\\n庄\\n凝\\n泉\\n婢\\n渴\\n谊\\n乞\\n陆\\n锉\\n糊\\n鸦\\n淮\\nI\\nB\\nN\\n晦\\n弗\\n乔\\n庥\\n葡\\n尻\\n席\\n橡\\n傣\\n渣\\n拿\\n惩\\n麋\\n斛\\n缃\\n矮\\n蛏\\n岘\\n鸽\\n姐\\n膏\\n催\\n奔\\n镒\\n喱\\n蠡\\n摧\\n钯\\n胤\\n柠\\n拐\\n璋\\n鸥\\n卢\\n荡\\n倾\\n^\\n_\\n珀\\n逄\\n萧\\n塾\\n掇\\n贮\\n笆\\n聂\\n圃\\n冲\\n嵬\\nM\\n滔\\n笕\\n值\\n炙\\n偶\\n蜱\\n搐\\n梆\\n汪\\n蔬\\n腑\\n鸯\\n蹇\\n敞\\n绯\\n仨\\n祯\\n谆\\n梧\\n糗\\n鑫\\n啸\\n豺\\n囹\\n猾\\n巢\\n柄\\n瀛\\n筑\\n踌\\n沭\\n暗\\n苁\\n鱿\\n蹉\\n脂\\n蘖\\n牢\\n热\\n木\\n吸\\n溃\\n宠\\n序\\n泞\\n偿\\n拜\\n檩\\n厚\\n朐\\n毗\\n螳\\n吞\\n媚\\n朽\\n担\\n蝗\\n橘\\n畴\\n祈\\n糟\\n盱\\n隼\\n郜\\n惜\\n珠\\n裨\\n铵\\n焙\\n琚\\n唯\\n咚\\n噪\\n骊\\n丫\\n滢\\n勤\\n棉\\n呸\\n咣\\n淀\\n隔\\n蕾\\n窈\\n饨\\n挨\\n煅\\n短\\n匙\\n粕\\n镜\\n赣\\n撕\\n墩\\n酬\\n馁\\n豌\\n颐\\n抗\\n酣\\n氓\\n佑\\n搁\\n哭\\n递\\n耷\\n涡\\n桃\\n贻\\n碣\\n截\\n瘦\\n昭\\n镌\\n蔓\\n氚\\n甲\\n猕\\n蕴\\n蓬\\n散\\n拾\\n纛\\n狼\\n猷\\n铎\\n埋\\n旖\\n矾\\n讳\\n囊\\n糜\\n迈\\n粟\\n蚂\\n紧\\n鲳\\n瘢\\n栽\\n稼\\n羊\\n锄\\n斟\\n睁\\n桥\\n瓮\\n蹙\\n祉\\n醺\\n鼻\\n昱\\n剃\\n跳\\n篱\\n跷\\n蒜\\n翎\\n宅\\n晖\\n嗑\\n壑\\n峻\\n癫\\n屏\\n狠\\n陋\\n袜\\n途\\n憎\\n祀\\n莹\\n滟\\n佶\\n溥\\n臣\\n约\\n盛\\n峰\\n磁\\n慵\\n婪\\n拦\\n莅\\n朕\\n鹦\\n粲\\n裤\\n哎\\n疡\\n嫖\\n琵\\n窟\\n堪\\n谛\\n嘉\\n儡\\n鳝\\n斩\\n郾\\n驸\\n酊\\n妄\\n胜\\n贺\\n徙\\n傅\\n噌\\n钢\\n栅\\n庇\\n恋\\n匝\\n巯\\n邈\\n尸\\n锚\\n粗\\n佟\\n蛟\\n薹\\n纵\\n蚊\\n郅\\n绢\\n锐\\n苗\\n俞\\n篆\\n淆\\n膀\\n鲜\\n煎\\n诶\\n秽\\n寻\\n涮\\n刺\\n怀\\n噶\\n巨\\n褰\\n魅\\n灶\\n灌\\n桉\\n藕\\n谜\\n舸\\n薄\\n搀\\n恽\\n借\\n牯\\n痉\\n渥\\n愿\\n亓\\n耘\\n杠\\n柩\\n锔\\n蚶\\n钣\\n珈\\n喘\\n蹒\\n幽\\n赐\\n稗\\n晤\\n莱\\n泔\\n扯\\n肯\\n菪\\n裆\\n腩\\n豉\\n疆\\n骜\\n腐\\n倭\\n珏\\n唔\\n粮\\n亡\\n润\\n慰\\n伽\\n橄\\n玄\\n誉\\n醐\\n胆\\n龊\\n粼\\n塬\\n陇\\n彼\\n削\\n嗣\\n绾\\n芽\\n妗\\n垭\\n瘴\\n爽\\n薏\\n寨\\n龈\\n泠\\n弹\\n赢\\n漪\\n猫\\n嘧\\n涂\\n恤\\n圭\\n茧\\n烽\\n屑\\n痕\\n巾\\n赖\\n荸\\n凰\\n腮\\n畈\\n亵\\n蹲\\n偃\\n苇\\n澜\\n艮\\n换\\n骺\\n烘\\n苕\\n梓\\n颉\\n肇\\n哗\\n悄\\n氤\\n涠\\n葬\\n屠\\n鹭\\n植\\n竺\\n佯\\n诣\\n鲇\\n瘀\\n鲅\\n邦\\n移\\n滁\\n冯\\n耕\\n癔\\n戌\\n茬\\n沁\\n巩\\n悠\\n湘\\n洪\\n痹\\n锟\\n循\\n谋\\n腕\\n鳃\\n钠\\n捞\\n焉\\n迎\\n碱\\n伫\\n急\\n榷\\n奈\\n邝\\n卯\\n辄\\n皲\\n卟\\n醛\\n畹\\n忧\\n稳\\n雄\\n昼\\n缩\\n阈\\n睑\\n扌\\n耗\\n曦\\n涅\\n捏\\n瞧\\n邕\\n淖\\n漉\\n铝\\n耦\\n禹\\n湛\\n喽\\n莼\\n琅\\n诸\\n苎\\n纂\\n硅\\n始\\n嗨\\n傥\\n燃\\n臂\\n赅\\n嘈\\n呆\\n贵\\n屹\\n壮\\n肋\\n亍\\n蚀\\n卅\\n豹\\n腆\\n邬\\n迭\\n浊\\n}\\n童\\n螂\\n捐\\n圩\\n勐\\n触\\n寞\\n汊\\n壤\\n荫\\n膺\\n渌\\n芳\\n懿\\n遴\\n螈\\n泰\\n蓼\\n蛤\\n茜\\n舅\\n枫\\n朔\\n膝\\n眙\\n避\\n梅\\n判\\n鹜\\n璜\\n牍\\n缅\\n垫\\n藻\\n黔\\n侥\\n惚\\n懂\\n踩\\n腰\\n腈\\n札\\n丞\\n唾\\n慈\\n顿\\n摹\\n荻\\n琬\\n~\\n斧\\n沈\\n滂\\n胁\\n胀\\n幄\\n莜\\nZ\\n匀\\n鄄\\n掌\\n绰\\n茎\\n焚\\n赋\\n萱\\n谑\\n汁\\n铒\\n瞎\\n夺\\n蜗\\n野\\n娆\\n冀\\n弯\\n篁\\n懵\\n灞\\n隽\\n芡\\n脘\\n俐\\n辩\\n芯\\n掺\\n喏\\n膈\\n蝈\\n觐\\n悚\\n踹\\n蔗\\n熠\\n鼠\\n呵\\n抓\\n橼\\n峨\\n畜\\n缔\\n禾\\n崭\\n弃\\n熊\\n摒\\n凸\\n拗\\n穹\\n蒙\\n抒\\n祛\\n劝\\n闫\\n扳\\n阵\\n醌\\n踪\\n喵\\n侣\\n搬\\n仅\\n荧\\n赎\\n蝾\\n琦\\n买\\n婧\\n瞄\\n寓\\n皎\\n冻\\n赝\\n箩\\n莫\\n瞰\\n郊\\n笫\\n姝\\n筒\\n枪\\n遣\\n煸\\n袋\\n舆\\n痱\\n涛\\n母\\n〇\\n启\\n践\\n耙\\n绲\\n盘\\n遂\\n昊\\n搞\\n槿\\n诬\\n纰\\n泓\\n惨\\n檬\\n亻\\n越\\nC\\no\\n憩\\n熵\\n祷\\n钒\\n暧\\n塔\\n阗\\n胰\\n咄\\n娶\\n魔\\n琶\\n钞\\n邻\\n扬\\n杉\\n殴\\n咽\\n弓\\n〆\\n髻\\n】\\n吭\\n揽\\n霆\\n拄\\n殖\\n脆\\n彻\\n岩\\n芝\\n勃\\n辣\\n剌\\n钝\\n嘎\\n甄\\n佘\\n皖\\n伦\\n授\\n徕\\n憔\\n挪\\n皇\\n庞\\n稔\\n芜\\n踏\\n溴\\n兖\\n卒\\n擢\\n饥\\n鳞\\n煲\\n‰\\n账\\n颗\\n叻\\n斯\\n捧\\n鳍\\n琮\\n讹\\n蛙\\n纽\\n谭\\n酸\\n兔\\n莒\\n睇\\n伟\\n觑\\n羲\\n嗜\\n宜\\n褐\\n旎\\n辛\\n卦\\n诘\\n筋\\n鎏\\n溪\\n挛\\n熔\\n阜\\n晰\\n鳅\\n丢\\n奚\\n灸\\n呱\\n献\\n陉\\n黛\\n鸪\\n甾\\n萨\\n疮\\n拯\\n洲\\n疹\\n辑\\n叙\\n恻\\n谒\\n允\\n柔\\n烂\\n氏\\n逅\\n漆\\n拎\\n惋\\n扈\\n湟\\n纭\\n啕\\n掬\\n擞\\n哥\\n忽\\n涤\\n鸵\\n靡\\n郗\\n瓷\\n扁\\n廊\\n怨\\n雏\\n钮\\n敦\\nE\\n懦\\n憋\\n汀\\n拚\\n啉\\n腌\\n岸\\nf\\n痼\\n瞅\\n尊\\n咀\\n眩\\n飙\\n忌\\n仝\\n迦\\n熬\\n毫\\n胯\\n篑\\n茄\\n腺\\n凄\\n舛\\n碴\\n锵\\n诧\\n羯\\n後\\n漏\\n汤\\n宓\\n仞\\n蚁\\n壶\\n谰\\n皑\\n铄\\n棰\\n罔\\n辅\\n晶\\n苦\\n牟\\n闽\\n\\\\\\n烃\\n饮\\n聿\\n丙\\n蛳\\n朱\\n煤\\n涔\\n鳖\\n犁\\n罐\\n荼\\n砒\\n淦\\n妤\\n黏\\n戎\\n孑\\n婕\\n瑾\\n戢\\n钵\\n枣\\n捋\\n砥\\n衩\\n狙\\n桠\\n稣\\n阎\\n肃\\n梏\\n诫\\n孪\\n昶\\n婊\\n衫\\n嗔\\n侃\\n塞\\n蜃\\n樵\\n峒\\n貌\\n屿\\n欺\\n缫\\n阐\\n栖\\n诟\\n珞\\n荭\\n吝\\n萍\\n嗽\\n恂\\n啻\\n蜴\\n磬\\n峋\\n俸\\n豫\\n谎\\n徊\\n镍\\n韬\\n魇\\n晴\\nU\\n囟\\n猜\\n蛮\\n坐\\n囿\\n伴\\n亭\\n肝\\n佗\\n蝠\\n妃\\n胞\\n滩\\n榴\\n氖\\n垩\\n苋\\n砣\\n扪\\n馏\\n姓\\n轩\\n厉\\n夥\\n侈\\n禀\\n垒\\n岑\\n赏\\n钛\\n辐\\n痔\\n披\\n纸\\n碳\\n“\\n坞\\n蠓\\n挤\\n荥\\n沅\\n悔\\n铧\\n帼\\n蒌\\n蝇\\na\\np\\ny\\nn\\ng\\n哀\\n浆\\n瑶\\n凿\\n桶\\n馈\\n皮\\n奴\\n苜\\n佤\\n伶\\n晗\\n铱\\n炬\\n优\\n弊\\n氢\\n恃\\n甫\\n攥\\n端\\n锌\\n灰\\n稹\\n炝\\n曙\\n邋\\n亥\\n眶\\n碾\\n拉\\n萝\\n绔\\n捷\\n浍\\n腋\\n姑\\n菖\\n凌\\n涞\\n麽\\n锢\\n桨\\n潢\\n绎\\n镰\\n殆\\n锑\\n渝\\n铬\\n困\\n绽\\n觎\\n匈\\n糙\\n暑\\n裹\\n鸟\\n盔\\n肽\\n迷\\n綦\\n『\\n亳\\n佝\\n俘\\n钴\\n觇\\n骥\\n仆\\n疝\\n跪\\n婶\\n郯\\n瀹\\n唉\\n脖\\n踞\\n针\\n晾\\n忒\\n扼\\n瞩\\n叛\\n椒\\n疟\\n嗡\\n邗\\n肆\\n跆\\n玫\\n忡\\n捣\\n咧\\n唆\\n艄\\n蘑\\n潦\\n笛\\n阚\\n沸\\n泻\\n掊\\n菽\\n贫\\n斥\\n髂\\n孢\\n镂\\n赂\\n麝\\n鸾\\n屡\\n衬\\n苷\\n恪\\n叠\\n希\\n粤\\n爻\\n喝\\n茫\\n惬\\n郸\\n绻\\n庸\\n撅\\n碟\\n宄\\n妹\\n膛\\n叮\\n饵\\n崛\\n嗲\\n椅\\n冤\\n搅\\n咕\\n敛\\n尹\\n垦\\n闷\\n蝉\\n霎\\n勰\\n败\\n蓑\\n泸\\n肤\\n鹌\\n幌\\n焦\\n浠\\n鞍\\n刁\\n舰\\n乙\\n竿\\n裔\\n。\\n茵\\n函\\n伊\\n兄\\n丨\\n娜\\n匍\\n謇\\n莪\\n宥\\n似\\n蝽\\n翳\\n酪\\n翠\\n粑\\n薇\\n祢\\n骏\\n赠\\n叫\\nQ\\n噤\\n噻\\n竖\\n芗\\n莠\\n潭\\n俊\\n羿\\n耜\\nO\\n郫\\n趁\\n嗪\\n囚\\n蹶\\n芒\\n洁\\n笋\\n鹑\\n敲\\n硝\\n啶\\n堡\\n渲\\n揩\\n』\\n携\\n宿\\n遒\\n颍\\n扭\\n棱\\n割\\n萜\\n蔸\\n葵\\n琴\\n捂\\n饰\\n衙\\n耿\\n掠\\n募\\n岂\\n窖\\n涟\\n蔺\\n瘤\\n柞\\n瞪\\n怜\\n匹\\n距\\n楔\\n炜\\n哆\\n秦\\n缎\\n幼\\n茁\\n绪\\n痨\\n恨\\n楸\\n娅\\n瓦\\n桩\\n雪\\n嬴\\n伏\\n榔\\n妥\\n铿\\n拌\\n眠\\n雍\\n缇\\n‘\\n卓\\n搓\\n哌\\n觞\\n噩\\n屈\\n哧\\n髓\\n咦\\n巅\\n娑\\n侑\\n淫\\n膳\\n祝\\n勾\\n姊\\n莴\\n胄\\n疃\\n薛\\n蜷\\n胛\\n巷\\n芙\\n芋\\n熙\\n闰\\n勿\\n窃\\n狱\\n剩\\n钏\\n幢\\n陟\\n铛\\n慧\\n靴\\n耍\\nk\\n浙\\n浇\\n飨\\n惟\\n绗\\n祜\\n澈\\n啼\\n咪\\n磷\\n摞\\n诅\\n郦\\n抹\\n跃\\n壬\\n吕\\n肖\\n琏\\n颤\\n尴\\n剡\\n抠\\n凋\\n赚\\n泊\\n津\\n宕\\n殷\\n倔\\n氲\\n漫\\n邺\\n涎\\n怠\\n$\\n垮\\n荬\\n遵\\n俏\\n叹\\n噢\\n饽\\n蜘\\n孙\\n筵\\n疼\\n鞭\\n羧\\n牦\\n箭\\n潴\\nc\\n眸\\n祭\\n髯\\n啖\\n坳\\n愁\\n芩\\n驮\\n倡\\n巽\\n穰\\n沃\\n胚\\n怒\\n凤\\n槛\\n剂\\n趵\\n嫁\\nv\\n邢\\n灯\\n鄢\\n桐\\n睽\\n檗\\n锯\\n槟\\n婷\\n嵋\\n圻\\n诗\\n蕈\\n颠\\n遭\\n痢\\n芸\\n怯\\n馥\\n竭\\n锗\\n徜\\n恭\\n遍\\n籁\\n剑\\n嘱\\n苡\\n龄\\n僧\\n桑\\n潸\\n弘\\n澶\\n楹\\n悲\\n讫\\n愤\\n腥\\n悸\\n谍\\n椹\\n呢\\n桓\\n葭\\n攫\\n阀\\n翰\\n躲\\n敖\\n柑\\n郎\\n笨\\n橇\\n呃\\n魁\\n燎\\n脓\\n葩\\n磋\\n垛\\n玺\\n狮\\n沓\\n砜\\n蕊\\n锺\\n罹\\n蕉\\n翱\\n虐\\n闾\\n巫\\n旦\\n茱\\n嬷\\n枯\\n鹏\\n贡\\n芹\\n汛\\n矫\\n绁\\n拣\\n禺\\n佃\\n讣\\n舫\\n惯\\n乳\\n趋\\n疲\\n挽\\n岚\\n虾\\n衾\\n蠹\\n蹂\\n飓\\n氦\\n铖\\n孩\\n稞\\n瑜\\n壅\\n掀\\n勘\\n妓\\n畅\\n髋\\nW\\n庐\\n牲\\n蓿\\n榕\\n练\\n垣\\n唱\\n邸\\n菲\\n昆\\n婺\\n穿\\n绡\\n麒\\n蚱\\n掂\\n愚\\n泷\\n涪\\n漳\\n妩\\n娉\\n榄\\n讷\\n觅\\n旧\\n藤\\n煮\\n呛\\n柳\\n腓\\n叭\\n庵\\n烷\\n阡\\n罂\\n蜕\\n擂\\n猖\\n咿\\n媲\\n脉\\n【\\n沏\\n貅\\n黠\\n熏\\n哲\\n烁\\n坦\\n酵\\n兜\\n×\\n潇\\n撒\\n剽\\n珩\\n圹\\n乾\\n摸\\n樟\\n帽\\n嗒\\n襄\\n魂\\n轿\\n憬\\n锡\\n〕\\n喃\\n皆\\n咖\\n隅\\n脸\\n残\\n泮\\n袂\\n鹂\\n珊\\n囤\\n捆\\n咤\\n误\\n徨\\n闹\\n淙\\n芊\\n淋\\n怆\\n囗\\n拨\\n梳\\n渤\\nR\\nG\\n绨\\n蚓\\n婀\\n幡\\n狩\\n麾\\n谢\\n唢\\n裸\\n旌\\n伉\\n纶\\n裂\\n驳\\n砼\\n咛\\n澄\\n樨\\n蹈\\n宙\\n澍\\n倍\\n貔\\n操\\n勇\\n蟠\\n摈\\n砧\\n虬\\n够\\n缁\\n悦\\n藿\\n撸\\n艹\\n摁\\n淹\\n豇\\n虎\\n榭\\nˉ\\n吱\\nd\\n°\\n喧\\n荀\\n踱\\n侮\\n奋\\n偕\\n饷\\n犍\\n惮\\n坑\\n璎\\n徘\\n宛\\n妆\\n袈\\n倩\\n窦\\n昂\\n荏\\n乖\\nK\\n怅\\n撰\\n鳙\\n牙\\n袁\\n酞\\nX\\n痿\\n琼\\n闸\\n雁\\n趾\\n荚\\n虻\\n涝\\n《\\n杏\\n韭\\n偈\\n烤\\n绫\\n鞘\\n卉\\n症\\n遢\\n蓥\\n诋\\n杭\\n荨\\n匆\\n竣\\n簪\\n辙\\n敕\\n虞\\n丹\\n缭\\n咩\\n黟\\nm\\n淤\\n瑕\\n咂\\n铉\\n硼\\n茨\\n嶂\\n痒\\n畸\\n敬\\n涿\\n粪\\n窘\\n熟\\n叔\\n嫔\\n盾\\n忱\\n裘\\n憾\\n梵\\n赡\\n珙\\n咯\\n娘\\n庙\\n溯\\n胺\\n葱\\n痪\\n摊\\n荷\\n卞\\n乒\\n髦\\n寐\\n铭\\n坩\\n胗\\n枷\\n爆\\n溟\\n嚼\\n羚\\n砬\\n轨\\n惊\\n挠\\n罄\\n竽\\n菏\\n氧\\n浅\\n楣\\n盼\\n枢\\n炸\\n阆\\n杯\\n谏\\n噬\\n淇\\n渺\\n俪\\n秆\\n墓\\n泪\\n跻\\n砌\\n痰\\n垡\\n渡\\n耽\\n釜\\n讶\\n鳎\\n煞\\n呗\\n韶\\n舶\\n绷\\n鹳\\n缜\\n旷\\n铊\\n皱\\n龌\\n檀\\n霖\\n奄\\n槐\\n艳\\n蝶\\n旋\\n哝\\n赶\\n骞\\n蚧\\n腊\\n盈\\n丁\\n`\\n蜚\\n矸\\n蝙\\n睨\\n嚓\\n僻\\n鬼\\n醴\\n夜\\n彝\\n磊\\n笔\\n拔\\n栀\\n糕\\n厦\\n邰\\n纫\\n逭\\n纤\\n眦\\n膊\\n馍\\n躇\\n烯\\n蘼\\n冬\\n诤\\n暄\\n骶\\n哑\\n瘠\\n」\\n臊\\n丕\\n愈\\n咱\\n螺\\n擅\\n跋\\n搏\\n硪\\n谄\\n笠\\n淡\\n嘿\\n骅\\n谧\\n鼎\\n皋\\n姚\\n歼\\n蠢\\n驼\\n耳\\n胬\\n挝\\n涯\\n狗\\n蒽\\n孓\\n犷\\n凉\\n芦\\n箴\\n铤\\n孤\\n嘛\\n坤\\nV\\n茴\\n朦\\n挞\\n尖\\n橙\\n诞\\n搴\\n碇\\n洵\\n浚\\n帚\\n蜍\\n漯\\n柘\\n嚎\\n讽\\n芭\\n荤\\n咻\\n祠\\n秉\\n跖\\n埃\\n吓\\n糯\\n眷\\n馒\\n惹\\n娼\\n鲑\\n嫩\\n讴\\n轮\\n瞥\\n靶\\n褚\\n乏\\n缤\\n宋\\n帧\\n删\\n驱\\n碎\\n扑\\n俩\\n俄\\n偏\\n涣\\n竹\\n噱\\n皙\\n佰\\n渚\\n唧\\n斡\\n#\\n镉\\n刀\\n崎\\n筐\\n佣\\n夭\\n贰\\n肴\\n峙\\n哔\\n艿\\n匐\\n牺\\n镛\\n缘\\n仡\\n嫡\\n劣\\n枸\\n堀\\n梨\\n簿\\n鸭\\n蒸\\n亦\\n稽\\n浴\\n{\\n衢\\n束\\n槲\\nj\\n阁\\n揍\\n疥\\n棋\\n潋\\n聪\\n窜\\n乓\\n睛\\n插\\n冉\\n阪\\n苍\\n搽\\n「\\n蟾\\n螟\\n幸\\n仇\\n樽\\n撂\\n慢\\n跤\\n幔\\n俚\\n淅\\n覃\\n觊\\n溶\\n妖\\n帛\\n侨\\n曰\\n妾\\n泗\\n·\\n：\\n瀘\\n風\\nË\\n（\\n）\\n∶\\n紅\\n紗\\n瑭\\n雲\\n頭\\n鶏\\n財\\n許\\n•\\n¥\\n樂\\n焗\\n麗\\n—\\n；\\n滙\\n東\\n榮\\n繪\\n興\\n…\\n門\\n業\\nπ\\n楊\\n國\\n顧\\né\\n盤\\n寳\\nΛ\\n龍\\n鳳\\n島\\n誌\\n緣\\n結\\n銭\\n萬\\n勝\\n祎\\n璟\\n優\\n歡\\n臨\\n時\\n購\\n＝\\n★\\n藍\\n昇\\n鐵\\n觀\\n勅\\n農\\n聲\\n畫\\n兿\\n術\\n發\\n劉\\n記\\n專\\n耑\\n園\\n書\\n壴\\n種\\nΟ\\n●\\n褀\\n號\\n銀\\n匯\\n敟\\n锘\\n葉\\n橪\\n廣\\n進\\n蒄\\n鑽\\n阝\\n祙\\n貢\\n鍋\\n豊\\n夬\\n喆\\n團\\n閣\\n開\\n燁\\n賓\\n館\\n酡\\n沔\\n順\\n＋\\n硚\\n劵\\n饸\\n陽\\n車\\n湓\\n復\\n萊\\n氣\\n軒\\n華\\n堃\\n迮\\n纟\\n戶\\n馬\\n學\\n裡\\n電\\n嶽\\n獨\\nマ\\nシ\\nサ\\nジ\\n燘\\n袪\\n環\\n❤\\n臺\\n灣\\n専\\n賣\\n孖\\n聖\\n攝\\n線\\n▪\\nα\\n傢\\n俬\\n夢\\n達\\n莊\\n喬\\n貝\\n薩\\n劍\\n羅\\n壓\\n棛\\n饦\\n尃\\n璈\\n囍\\n醫\\nＧ\\nＩ\\nＡ\\n＃\\nＮ\\n鷄\\n髙\\n嬰\\n啓\\n約\\n隹\\n潔\\n賴\\n藝\\n～\\n寶\\n籣\\n麺\\n　\\n嶺\\n√\\n義\\n網\\n峩\\n長\\n∧\\n魚\\n機\\n構\\n②\\n鳯\\n偉\\nＬ\\nＢ\\n㙟\\n畵\\n鴿\\n＇\\n詩\\n溝\\n嚞\\n屌\\n藔\\n佧\\n玥\\n蘭\\n織\\n１\\n３\\n９\\n０\\n７\\n點\\n砭\\n鴨\\n鋪\\n銘\\n廳\\n弍\\n‧\\n創\\n湯\\n坶\\n℃\\n卩\\n骝\\n＆\\n烜\\n荘\\n當\\n潤\\n扞\\n係\\n懷\\n碶\\n钅\\n蚨\\n讠\\n☆\\n叢\\n爲\\n埗\\n涫\\n塗\\n→\\n楽\\n現\\n鯨\\n愛\\n瑪\\n鈺\\n忄\\n悶\\n藥\\n飾\\n樓\\n視\\n孬\\nㆍ\\n燚\\n苪\\n師\\n①\\n丼\\n锽\\n│\\n韓\\n標\\nè\\n兒\\n閏\\n匋\\n張\\n漢\\nÜ\\n髪\\n會\\n閑\\n檔\\n習\\n裝\\nの\\n峯\\n菘\\n輝\\nИ\\n雞\\n釣\\n億\\n浐\\nＫ\\nＯ\\nＲ\\n８\\nＨ\\nＥ\\nＰ\\nＴ\\nＷ\\nＤ\\nＳ\\nＣ\\nＭ\\nＦ\\n姌\\n饹\\n»\\n晞\\n廰\\nä\\n嵯\\n鷹\\n負\\n飲\\n絲\\n冚\\n楗\\n澤\\n綫\\n區\\n❋\\n←\\n質\\n靑\\n揚\\n③\\n滬\\n統\\n産\\n協\\n﹑\\n乸\\n畐\\n經\\n運\\n際\\n洺\\n岽\\n為\\n粵\\n諾\\n崋\\n豐\\n碁\\nɔ\\nＶ\\n２\\n６\\n齋\\n誠\\n訂\\n´\\n勑\\n雙\\n陳\\n無\\ní\\n泩\\n媄\\n夌\\n刂\\nｉ\\nｃ\\nｔ\\nｏ\\nｒ\\nａ\\n嘢\\n耄\\n燴\\n暃\\n壽\\n媽\\n靈\\n抻\\n體\\n唻\\nÉ\\n冮\\n甹\\n鎮\\n錦\\nʌ\\n蜛\\n蠄\\n尓\\n駕\\n戀\\n飬\\n逹\\n倫\\n貴\\n極\\nЯ\\nЙ\\n寬\\n磚\\n嶪\\n郎\\n職\\n｜\\n間\\nｎ\\nｄ\\n剎\\n伈\\n課\\n飛\\n橋\\n瘊\\n№\\n譜\\n骓\\n圗\\n滘\\n縣\\n粿\\n咅\\n養\\n濤\\n彳\\n®\\n％\\nⅡ\\n啰\\n㴪\\n見\\n矞\\n薬\\n糁\\n邨\\n鲮\\n顔\\n罱\\nЗ\\n選\\n話\\n贏\\n氪\\n俵\\n競\\n瑩\\n繡\\n枱\\nβ\\n綉\\ná\\n獅\\n爾\\n™\\n麵\\n戋\\n淩\\n徳\\n個\\n劇\\n場\\n務\\n簡\\n寵\\nｈ\\n實\\n膠\\n轱\\n圖\\n築\\n嘣\\n樹\\n㸃\\n營\\n耵\\n孫\\n饃\\n鄺\\n飯\\n麯\\n遠\\n輸\\n坫\\n孃\\n乚\\n閃\\n鏢\\n㎡\\n題\\n廠\\n關\\n↑\\n爺\\n將\\n軍\\n連\\n篦\\n覌\\n參\\n箸\\n－\\n窠\\n棽\\n寕\\n夀\\n爰\\n歐\\n呙\\n閥\\n頡\\n熱\\n雎\\n垟\\n裟\\n凬\\n勁\\n帑\\n馕\\n夆\\n疌\\n枼\\n馮\\n貨\\n蒤\\n樸\\n彧\\n旸\\n靜\\n龢\\n暢\\n㐱\\n鳥\\n珺\\n鏡\\n灡\\n爭\\n堷\\n廚\\nÓ\\n騰\\n診\\n┅\\n蘇\\n褔\\n凱\\n頂\\n豕\\n亞\\n帥\\n嘬\\n⊥\\n仺\\n桖\\n複\\n饣\\n絡\\n穂\\n顏\\n棟\\n納\\n▏\\n濟\\n親\\n設\\n計\\n攵\\n埌\\n烺\\nò\\n頤\\n燦\\n蓮\\n撻\\n節\\n講\\n濱\\n濃\\n娽\\n洳\\n朿\\n燈\\n鈴\\n護\\n膚\\n铔\\n過\\n補\\nＺ\\nＵ\\n５\\n４\\n坋\\n闿\\n䖝\\n餘\\n缐\\n铞\\n貿\\n铪\\n桼\\n趙\\n鍊\\n［\\n㐂\\n垚\\n菓\\n揸\\n捲\\n鐘\\n滏\\n𣇉\\n爍\\n輪\\n燜\\n鴻\\n鮮\\n動\\n鹞\\n鷗\\n丄\\n慶\\n鉌\\n翥\\n飮\\n腸\\n⇋\\n漁\\n覺\\n來\\n熘\\n昴\\n翏\\n鲱\\n圧\\n鄉\\n萭\\n頔\\n爐\\n嫚\\nг\\n貭\\n類\\n聯\\n幛\\n輕\\n訓\\n鑒\\n夋\\n锨\\n芃\\n珣\\n䝉\\n扙\\n嵐\\n銷\\n處\\nㄱ\\n語\\n誘\\n苝\\n歸\\n儀\\n燒\\n楿\\n內\\n粢\\n葒\\n奧\\n麥\\n礻\\n滿\\n蠔\\n穵\\n瞭\\n態\\n鱬\\n榞\\n硂\\n鄭\\n黃\\n煙\\n祐\\n奓\\n逺\\n＊\\n瑄\\n獲\\n聞\\n薦\\n讀\\n這\\n樣\\n決\\n問\\n啟\\n們\\n執\\n説\\n轉\\n單\\n隨\\n唘\\n帶\\n倉\\n庫\\n還\\n贈\\n尙\\n皺\\n■\\n餅\\n產\\n○\\n∈\\n報\\n狀\\n楓\\n賠\\n琯\\n嗮\\n禮\\n｀\\n傳\\n＞\\n≤\\n嗞\\nΦ\\n≥\\n換\\n咭\\n∣\\n↓\\n曬\\nε\\n応\\n寫\\n″\\n終\\n様\\n純\\n費\\n療\\n聨\\n凍\\n壐\\n郵\\nü\\n黒\\n∫\\n製\\n塊\\n調\\n軽\\n確\\n撃\\n級\\n馴\\nⅢ\\n涇\\n繹\\n數\\n碼\\n證\\n狒\\n処\\n劑\\n＜\\n晧\\n賀\\n衆\\n］\\n櫥\\n兩\\n陰\\n絶\\n對\\n鯉\\n憶\\n◎\\nｐ\\nｅ\\nＹ\\n蕒\\n煖\\n頓\\n測\\n試\\n鼽\\n僑\\n碩\\n妝\\n帯\\n≈\\n鐡\\n舖\\n權\\n喫\\n倆\\nˋ\\n該\\n悅\\nā\\n俫\\n．\\nｆ\\nｓ\\nｂ\\nｍ\\nｋ\\nｇ\\nｕ\\nｊ\\n貼\\n淨\\n濕\\n針\\n適\\n備\\nｌ\\n／\\n給\\n謢\\n強\\n觸\\n衛\\n與\\n⊙\\n＄\\n緯\\n變\\n⑴\\n⑵\\n⑶\\n㎏\\n殺\\n∩\\n幚\\n─\\n價\\n▲\\n離\\nú\\nó\\n飄\\n烏\\n関\\n閟\\n﹝\\n﹞\\n邏\\n輯\\n鍵\\n驗\\n訣\\n導\\n歷\\n屆\\n層\\n▼\\n儱\\n錄\\n熳\\nē\\n艦\\n吋\\n錶\\n辧\\n飼\\n顯\\n④\\n禦\\n販\\n気\\n対\\n枰\\n閩\\n紀\\n幹\\n瞓\\n貊\\n淚\\n△\\n眞\\n墊\\nΩ\\n獻\\n褲\\n縫\\n緑\\n亜\\n鉅\\n餠\\n｛\\n｝\\n◆\\n蘆\\n薈\\n█\\n◇\\n溫\\n彈\\n晳\\n粧\\n犸\\n穩\\n訊\\n崬\\n凖\\n熥\\nП\\n舊\\n條\\n紋\\n圍\\nⅣ\\n筆\\n尷\\n難\\n雜\\n錯\\n綁\\n識\\n頰\\n鎖\\n艶\\n□\\n殁\\n殼\\n⑧\\n├\\n▕\\n鵬\\nǐ\\nō\\nǒ\\n糝\\n綱\\n▎\\nμ\\n盜\\n饅\\n醬\\n籤\\n蓋\\n釀\\n鹽\\n據\\nà\\nɡ\\n辦\\n◥\\n彐\\n┌\\n婦\\n獸\\n鲩\\n伱\\nī\\n蒟\\n蒻\\n齊\\n袆\\n腦\\n寧\\n凈\\n妳\\n煥\\n詢\\n偽\\n謹\\n啫\\n鯽\\n騷\\n鱸\\n損\\n傷\\n鎻\\n髮\\n買\\n冏\\n儥\\n両\\n﹢\\n∞\\n載\\n喰\\nｚ\\n羙\\n悵\\n燙\\n曉\\n員\\n組\\n徹\\n艷\\n痠\\n鋼\\n鼙\\n縮\\n細\\n嚒\\n爯\\n≠\\n維\\n＂\\n鱻\\n壇\\n厍\\n帰\\n浥\\n犇\\n薡\\n軎\\n²\\n應\\n醜\\n刪\\n緻\\n鶴\\n賜\\n噁\\n軌\\n尨\\n镔\\n鷺\\n槗\\n彌\\n葚\\n濛\\n請\\n溇\\n緹\\n賢\\n訪\\n獴\\n瑅\\n資\\n縤\\n陣\\n蕟\\n栢\\n韻\\n祼\\n恁\\n伢\\n謝\\n劃\\n涑\\n總\\n衖\\n踺\\n砋\\n凉\\n籃\\n駿\\n苼\\n瘋\\n昽\\n紡\\n驊\\n腎\\n﹗\\n響\\n杋\\n剛\\n嚴\\n禪\\n歓\\n槍\\n傘\\n檸\\n檫\\n炣\\n勢\\n鏜\\n鎢\\n銑\\n尐\\n減\\n奪\\n惡\\nθ\\n僮\\n婭\\n臘\\nū\\nì\\n殻\\n鉄\\n∑\\n蛲\\n焼\\n緖\\n續\\n紹\\n懮\\n\";\n\nvar recPostprocess = /*#__PURE__*/function () {\n  // preds: [1, ?, 6625]\n  function recPostprocess(preds) {\n    _classCallCheck(this, recPostprocess);\n    _defineProperty(this, \"ocr_character\", void 0);\n    _defineProperty(this, \"preds_idx\", void 0);\n    _defineProperty(this, \"preds_prob\", void 0);\n    this.ocr_character = character.toString().split('\\n');\n    var preds_idx = [];\n    var preds_prob = [];\n    var pred_len = 6625;\n    for (var i = 0; i < preds.length; i += pred_len) {\n      var tmpArr = preds.slice(i, i + pred_len - 1);\n      var tmpMax = Math.max.apply(Math, _toConsumableArray(tmpArr));\n      var tmpIdx = tmpArr.indexOf(tmpMax);\n      preds_prob.push(tmpMax);\n      preds_idx.push(tmpIdx);\n    }\n    this.preds_idx = preds_idx;\n    this.preds_prob = preds_prob;\n  }\n  _createClass(recPostprocess, [{\n    key: \"decode\",\n    value: function decode(text_index, text_prob) {\n      var is_remove_duplicate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var ignored_tokens = this.get_ignored_tokens();\n      var char_list = [];\n      var conf_list = [];\n      for (var idx = 0; idx < text_index.length; idx++) {\n        if (text_index[idx] in ignored_tokens) {\n          continue;\n        }\n        if (is_remove_duplicate) {\n          if (idx > 0 && text_index[idx - 1] === text_index[idx]) {\n            continue;\n          }\n        }\n        char_list.push(this.ocr_character[text_index[idx] - 1]);\n        if (text_prob) {\n          conf_list.push(text_prob[idx]);\n        } else {\n          conf_list.push(1);\n        }\n      }\n      var text = '';\n      var mean = 0;\n      if (char_list.length) {\n        text = char_list.join('');\n        var sum = 0;\n        conf_list.forEach(function (item) {\n          sum += item;\n        });\n        mean = sum / conf_list.length;\n      }\n      return {\n        text: text,\n        mean: mean\n      };\n    }\n  }, {\n    key: \"get_ignored_tokens\",\n    value: function get_ignored_tokens() {\n      return [0];\n    }\n  }, {\n    key: \"outputResult\",\n    value: function outputResult() {\n      return this.decode(this.preds_idx, this.preds_prob, true);\n    }\n  }]);\n  return recPostprocess;\n}();\n\nvar defaultPostConfig = {\n  shape: 960,\n  thresh: 0.3,\n  box_thresh: 0.6,\n  unclip_ratio: 1.5\n};\nvar DEFAULTDETSHAPE = 960;\nvar RECWIDTH = 320;\nvar RECHEIGHT = 48;\nvar canvas_det = document.createElement('canvas');\nvar canvas_rec = document.createElement('canvas');\nvar detectRunner = null;\nvar recRunner = null;\ninitCanvas(canvas_det);\ninitCanvas(canvas_rec);\nfunction initCanvas(canvas) {\n  canvas.style.position = 'fixed';\n  canvas.style.bottom = '0';\n  canvas.style.zIndex = '-1';\n  canvas.style.opacity = '0';\n  document.body.appendChild(canvas);\n}\nfunction init() {\n  return _init.apply(this, arguments);\n}\nfunction _init() {\n  _init = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var detCustomModel,\n      recCustomModel,\n      detModelPath,\n      recModelPath,\n      detectInit,\n      recInit,\n      _args = arguments;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            detCustomModel = _args.length > 0 && _args[0] !== undefined ? _args[0] : '';\n            recCustomModel = _args.length > 1 && _args[1] !== undefined ? _args[1] : '';\n            detModelPath = 'https://js-models.bj.bcebos.com/PaddleOCR/PP-OCRv3/ch_PP-OCRv3_det_infer_js_960/model.json';\n            recModelPath = 'https://js-models.bj.bcebos.com/PaddleOCR/PP-OCRv3/ch_PP-OCRv3_rec_infer_js/model.json';\n            env.set('webgl_pack_output', true);\n            detectRunner = new Runner({\n              modelPath: detCustomModel ? detCustomModel : detModelPath,\n              fill: '#fff',\n              mean: [0.485, 0.456, 0.406],\n              std: [0.229, 0.224, 0.225],\n              bgr: true,\n              webglFeedProcess: true\n            });\n            detectInit = detectRunner.init();\n            recRunner = new Runner({\n              modelPath: recCustomModel ? recCustomModel : recModelPath,\n              fill: '#000',\n              mean: [0.5, 0.5, 0.5],\n              std: [0.5, 0.5, 0.5],\n              bgr: true,\n              webglFeedProcess: true\n            });\n            recInit = recRunner.init();\n            _context.next = 11;\n            return Promise.all([detectInit, recInit]);\n          case 11:\n            if (detectRunner.feedShape) {\n              DEFAULTDETSHAPE = detectRunner.feedShape.fw;\n            }\n            if (recRunner.feedShape) {\n              RECWIDTH = recRunner.feedShape.fw;\n              RECHEIGHT = recRunner.feedShape.fh;\n            }\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _init.apply(this, arguments);\n}\nfunction detect(_x) {\n  return _detect.apply(this, arguments);\n}\nfunction _detect() {\n  _detect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(image) {\n    var Config,\n      DETSHAPE,\n      thresh,\n      box_thresh,\n      unclip_ratio,\n      targetWidth,\n      targetHeight,\n      ctx,\n      sw,\n      sh,\n      x,\n      y,\n      shapeList,\n      outsDict,\n      postResult,\n      result,\n      points,\n      adjust,\n      _args2 = arguments;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            Config = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : defaultPostConfig;\n            // 目标尺寸\n            DETSHAPE = Config.shape ? Config.shape : DEFAULTDETSHAPE;\n            thresh = Config.thresh;\n            box_thresh = Config.box_thresh;\n            unclip_ratio = Config.unclip_ratio;\n            targetWidth = DETSHAPE;\n            targetHeight = DETSHAPE;\n            canvas_det.width = targetWidth;\n            canvas_det.height = targetHeight;\n            // 通过canvas将上传原图大小转换为目标尺寸\n            ctx = canvas_det.getContext('2d');\n            ctx.fillStyle = '#fff';\n            ctx.fillRect(0, 0, targetHeight, targetWidth);\n            // 缩放后的宽高\n            sw = targetWidth;\n            sh = targetHeight;\n            x = 0;\n            y = 0; // target的长宽比大些 就把原图的高变成target那么高\n            if (targetWidth / targetHeight * image.naturalHeight / image.naturalWidth >= 1) {\n              sw = Math.round(sh * image.naturalWidth / image.naturalHeight);\n              x = Math.floor((targetWidth - sw) / 2);\n            }\n            // target的长宽比小些 就把原图的宽变成target那么宽\n            else {\n              sh = Math.round(sw * image.naturalHeight / image.naturalWidth);\n              y = Math.floor((targetHeight - sh) / 2);\n            }\n            ctx.drawImage(image, x, y, sw, sh);\n            shapeList = [DETSHAPE, DETSHAPE];\n            _context2.next = 21;\n            return detectRunner.predict(canvas_det);\n          case 21:\n            outsDict = _context2.sent;\n            postResult = new DBPostprocess(outsDict, shapeList, thresh, box_thresh, unclip_ratio); // 获取坐标\n            result = postResult.outputBox(); // 转换原图坐标\n            points = JSON.parse(JSON.stringify(result.boxes)); // 框选调整大小\n            adjust = 8;\n            points && points.forEach(function (item) {\n              item.forEach(function (point, index) {\n                // 扩大框选区域，便于文字识别\n                point[0] = clip(Math.round(point[0] - x) * Math.max(image.naturalWidth, image.naturalHeight) / DETSHAPE + (index === 0 ? -adjust : index === 1 ? adjust : index === 2 ? adjust : -adjust), 0, image.naturalWidth);\n                point[1] = clip(Math.round(point[1] - y) * Math.max(image.naturalWidth, image.naturalHeight) / DETSHAPE + (index === 0 ? -adjust : index === 1 ? -adjust : index === 2 ? adjust : adjust), 0, image.naturalHeight);\n              });\n            });\n            return _context2.abrupt(\"return\", points);\n          case 28:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _detect.apply(this, arguments);\n}\nfunction drawBox(points, image, canvas, style) {\n  canvas.width = image.naturalWidth;\n  canvas.height = image.naturalHeight;\n  var ctx = canvas.getContext('2d');\n  ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\n  points && points.forEach(function (point) {\n    // 开始一个新的绘制路径\n    ctx.beginPath();\n    // 设置绘制线条颜色，默认为黑色\n    ctx.strokeStyle = (style === null || style === void 0 ? void 0 : style.strokeStyle) || '#000';\n    // 设置线段宽度，默认为1\n    ctx.lineWidth = (style === null || style === void 0 ? void 0 : style.lineWidth) || 1;\n    // 设置填充颜色，默认透明\n    ctx.fillStyle = (style === null || style === void 0 ? void 0 : style.fillStyle) || 'transparent';\n    // 设置路径起点坐标\n    ctx.moveTo(point[0][0], point[0][1]);\n    ctx.lineTo(point[1][0], point[1][1]);\n    ctx.lineTo(point[2][0], point[2][1]);\n    ctx.lineTo(point[3][0], point[3][1]);\n    // 进行内容填充\n    ctx.fill();\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n  });\n}\n/**\r\n * 文本识别\r\n * @param {HTMLImageElement} image 原图\r\n * @param {Object} options 绘制文本框配置参数\r\n * @param detConfig 识别相关可调参数\r\n */\nfunction recognize(_x2, _x3) {\n  return _recognize.apply(this, arguments);\n}\nfunction _recognize() {\n  _recognize = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(image, options) {\n    var detConfig,\n      point,\n      boxes,\n      text_list,\n      i,\n      tmp_box,\n      ratio,\n      width_num,\n      text_list_tmp,\n      _i,\n      output,\n      recResult,\n      text,\n      _output,\n      _recResult,\n      _text,\n      _args3 = arguments;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            detConfig = _args3.length > 2 && _args3[2] !== undefined ? _args3[2] : defaultPostConfig;\n            _context3.next = 3;\n            return detect(image, detConfig);\n          case 3:\n            point = _context3.sent;\n            // 绘制文本框\n            if (options !== null && options !== void 0 && options.canvas) {\n              drawBox(point, image, options.canvas, options.style);\n            }\n            boxes = sorted_boxes(point);\n            text_list = [];\n            i = 0;\n          case 8:\n            if (!(i < boxes.length)) {\n              _context3.next = 39;\n              break;\n            }\n            tmp_box = JSON.parse(JSON.stringify(boxes[i]));\n            get_rotate_crop_image(image, tmp_box);\n            // 默认ratio=3，3是经验值，可根据实际情况调整。\n            ratio = 3;\n            width_num = Math.ceil(canvas_det.width / RECWIDTH / ratio);\n            text_list_tmp = '';\n            /**\r\n             * 如果输入为长文本情况，即box的宽度 > ratio * RECWIDTH，按照 ratio * RECWIDTH的宽度裁剪，并将每个裁剪部分的识别结果拼接起来。\r\n             * 如果输入为短文本情况，即box的宽度 < ratio * RECWIDTH，直接预测即可。\r\n             */\n            if (!(width_num > 1)) {\n              _context3.next = 29;\n              break;\n            }\n            _i = 0;\n          case 16:\n            if (!(_i < width_num)) {\n              _context3.next = 27;\n              break;\n            }\n            resize_norm_img_splice(canvas_det, canvas_det.width, canvas_det.height, _i, ratio);\n            _context3.next = 20;\n            return recRunner.predict(canvas_rec);\n          case 20:\n            output = _context3.sent;\n            recResult = new recPostprocess(output);\n            text = recResult.outputResult();\n            text_list_tmp = text_list_tmp.concat(text.text);\n          case 24:\n            _i++;\n            _context3.next = 16;\n            break;\n          case 27:\n            _context3.next = 35;\n            break;\n          case 29:\n            _context3.next = 31;\n            return recRunner.predict(canvas_det);\n          case 31:\n            _output = _context3.sent;\n            _recResult = new recPostprocess(_output);\n            _text = _recResult.outputResult();\n            text_list_tmp = text_list_tmp.concat(_text.text);\n          case 35:\n            text_list.push(text_list_tmp);\n          case 36:\n            i++;\n            _context3.next = 8;\n            break;\n          case 39:\n            return _context3.abrupt(\"return\", {\n              text: text_list,\n              points: point\n            });\n          case 40:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _recognize.apply(this, arguments);\n}\nfunction sorted_boxes(box) {\n  function sortNumber(a, b) {\n    return a[0][1] - b[0][1];\n  }\n  var boxes = box.sort(sortNumber);\n  var num_boxes = boxes.length;\n  for (var i = 0; i < num_boxes - 1; i++) {\n    if (Math.abs(boxes[i + 1][0][1] - boxes[i][0][1]) < 10 && boxes[i + 1][0][0] < boxes[i][0][0]) {\n      var tmp = boxes[i];\n      boxes[i] = boxes[i + 1];\n      boxes[i + 1] = tmp;\n    }\n  }\n  return boxes;\n}\nfunction get_rotate_crop_image(img, points) {\n  var img_crop_width = _int(Math.max(linalg_norm(points[0], points[1]), linalg_norm(points[2], points[3])));\n  var img_crop_height = _int(Math.max(linalg_norm(points[0], points[3]), linalg_norm(points[1], points[2])));\n  var pts_std = [[0, 0], [img_crop_width, 0], [img_crop_width, img_crop_height], [0, img_crop_height]];\n  var srcTri = opencv_ocr.matFromArray(4, 1, opencv_ocr.CV_32FC2, flatten(points));\n  var dstTri = opencv_ocr.matFromArray(4, 1, opencv_ocr.CV_32FC2, flatten(pts_std));\n  // 获取到目标矩阵\n  var M = opencv_ocr.getPerspectiveTransform(srcTri, dstTri);\n  var src = opencv_ocr.imread(img);\n  var dst = new opencv_ocr.Mat();\n  var dsize = new opencv_ocr.Size(img_crop_width, img_crop_height);\n  // 透视转换\n  opencv_ocr.warpPerspective(src, dst, M, dsize, opencv_ocr.INTER_CUBIC, opencv_ocr.BORDER_REPLICATE, new opencv_ocr.Scalar());\n  var dst_img_height = dst.matSize[0];\n  var dst_img_width = dst.matSize[1];\n  var dst_rot;\n  // 图像旋转\n  if (dst_img_height / dst_img_width >= 1.5) {\n    dst_rot = new opencv_ocr.Mat();\n    var dsize_rot = new opencv_ocr.Size(dst.rows, dst.cols);\n    var center = new opencv_ocr.Point(dst.cols / 2, dst.cols / 2);\n    var _M = opencv_ocr.getRotationMatrix2D(center, 90, 1);\n    opencv_ocr.warpAffine(dst, dst_rot, _M, dsize_rot, opencv_ocr.INTER_CUBIC, opencv_ocr.BORDER_REPLICATE, new opencv_ocr.Scalar());\n  }\n  var dst_resize = new opencv_ocr.Mat();\n  var dsize_resize = new opencv_ocr.Size(0, 0);\n  var scale;\n  if (dst_rot) {\n    scale = RECHEIGHT / dst_rot.matSize[0];\n    opencv_ocr.resize(dst_rot, dst_resize, dsize_resize, scale, scale, opencv_ocr.INTER_AREA);\n    dst_rot[\"delete\"]();\n  } else {\n    scale = RECHEIGHT / dst_img_height;\n    opencv_ocr.resize(dst, dst_resize, dsize_resize, scale, scale, opencv_ocr.INTER_AREA);\n  }\n  canvas_det.width = dst_resize.matSize[1];\n  canvas_det.height = dst_resize.matSize[0];\n  opencv_ocr.imshow(canvas_det, dst_resize);\n  src[\"delete\"]();\n  dst[\"delete\"]();\n  dst_resize[\"delete\"]();\n  srcTri[\"delete\"]();\n  dstTri[\"delete\"]();\n}\nfunction linalg_norm(x, y) {\n  return Math.sqrt(Math.pow(x[0] - y[0], 2) + Math.pow(x[1] - y[1], 2));\n}\nfunction resize_norm_img_splice(image, origin_width, origin_height) {\n  var index = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  var ratio = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 3;\n  canvas_rec.width = RECWIDTH;\n  canvas_rec.height = RECHEIGHT;\n  var ctx = canvas_rec.getContext('2d');\n  ctx.fillStyle = '#fff';\n  ctx.clearRect(0, 0, canvas_rec.width, canvas_rec.height);\n  ctx.drawImage(image, -index * RECWIDTH * ratio, 0, origin_width, origin_height);\n}\n\nexport { init, recognize };\n","import * as ocr from '@paddle-js-models/ocr';"]}